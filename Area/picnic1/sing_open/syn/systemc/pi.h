// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _pi_HH_
#define _pi_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "crypto_sign_open_bkb.h"
#include "pi_tempA.h"

namespace ap_rtl {

struct pi : public sc_module {
    // Port declarations 11
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<5> > A_address0;
    sc_out< sc_logic > A_ce0;
    sc_out< sc_logic > A_we0;
    sc_out< sc_lv<64> > A_d0;
    sc_in< sc_lv<64> > A_q0;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    pi(sc_module_name name);
    SC_HAS_PROCESS(pi);

    ~pi();

    sc_trace_file* mVcdFile;

    pi_tempA* tempA_U;
    crypto_sign_open_bkb<1,12,8,4,4>* crypto_sign_open_bkb_U16;
    sc_signal< sc_lv<17> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<3> > x_fu_122_p2;
    sc_signal< sc_lv<3> > x_reg_315;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<4> > zext_ln362_1_fu_128_p1;
    sc_signal< sc_lv<4> > zext_ln362_1_reg_320;
    sc_signal< sc_lv<1> > icmp_ln361_fu_116_p2;
    sc_signal< sc_lv<3> > y_fu_138_p2;
    sc_signal< sc_lv<3> > y_reg_328;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<64> > zext_ln362_fu_171_p1;
    sc_signal< sc_lv<64> > zext_ln362_reg_333;
    sc_signal< sc_lv<1> > icmp_ln361_1_fu_132_p2;
    sc_signal< sc_lv<3> > x_5_fu_182_p2;
    sc_signal< sc_lv<3> > x_5_reg_346;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<4> > zext_ln364_2_fu_188_p1;
    sc_signal< sc_lv<4> > zext_ln364_2_reg_351;
    sc_signal< sc_lv<1> > icmp_ln363_fu_176_p2;
    sc_signal< sc_lv<8> > zext_ln364_3_fu_200_p1;
    sc_signal< sc_lv<8> > zext_ln364_3_reg_356;
    sc_signal< sc_lv<3> > y_3_fu_214_p2;
    sc_signal< sc_lv<3> > y_3_reg_364;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<4> > zext_ln364_4_fu_220_p1;
    sc_signal< sc_lv<4> > zext_ln364_4_reg_369;
    sc_signal< sc_lv<1> > icmp_ln363_1_fu_208_p2;
    sc_signal< sc_lv<5> > add_ln364_fu_241_p2;
    sc_signal< sc_lv<5> > add_ln364_reg_374;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<5> > tempA_address0;
    sc_signal< sc_logic > tempA_ce0;
    sc_signal< sc_logic > tempA_we0;
    sc_signal< sc_lv<64> > tempA_q0;
    sc_signal< sc_lv<3> > x_0_reg_72;
    sc_signal< sc_lv<3> > y_0_reg_83;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<3> > x_1_reg_94;
    sc_signal< sc_lv<3> > y_1_reg_105;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_lv<64> > zext_ln364_fu_272_p1;
    sc_signal< sc_lv<64> > zext_ln364_1_fu_307_p1;
    sc_signal< sc_lv<4> > zext_ln362_2_fu_144_p1;
    sc_signal< sc_lv<4> > add_ln362_1_fu_156_p2;
    sc_signal< sc_lv<5> > shl_ln3_fu_148_p3;
    sc_signal< sc_lv<5> > zext_ln362_3_fu_161_p1;
    sc_signal< sc_lv<5> > add_ln362_fu_165_p2;
    sc_signal< sc_lv<4> > shl_ln_fu_192_p3;
    sc_signal< sc_lv<4> > add_ln364_3_fu_232_p2;
    sc_signal< sc_lv<5> > zext_ln364_5_fu_237_p1;
    sc_signal< sc_lv<5> > shl_ln364_1_fu_224_p3;
    sc_signal< sc_lv<6> > zext_ln364_6_fu_247_p1;
    sc_signal< sc_lv<6> > zext_ln363_fu_204_p1;
    sc_signal< sc_lv<6> > sub_ln364_fu_251_p2;
    sc_signal< sc_lv<8> > sext_ln364_fu_257_p1;
    sc_signal< sc_lv<8> > grp_fu_266_p0;
    sc_signal< sc_lv<4> > grp_fu_266_p1;
    sc_signal< sc_lv<4> > grp_fu_266_p2;
    sc_signal< sc_lv<3> > trunc_ln364_1_fu_280_p1;
    sc_signal< sc_lv<4> > trunc_ln364_fu_276_p1;
    sc_signal< sc_lv<4> > add_ln364_4_fu_292_p2;
    sc_signal< sc_lv<5> > zext_ln364_7_fu_297_p1;
    sc_signal< sc_lv<5> > shl_ln364_3_fu_284_p3;
    sc_signal< sc_lv<5> > add_ln364_2_fu_301_p2;
    sc_signal< sc_logic > grp_fu_266_ap_start;
    sc_signal< sc_logic > grp_fu_266_ap_done;
    sc_signal< sc_lv<17> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<17> ap_ST_fsm_state1;
    static const sc_lv<17> ap_ST_fsm_state2;
    static const sc_lv<17> ap_ST_fsm_state3;
    static const sc_lv<17> ap_ST_fsm_state4;
    static const sc_lv<17> ap_ST_fsm_state5;
    static const sc_lv<17> ap_ST_fsm_state6;
    static const sc_lv<17> ap_ST_fsm_state7;
    static const sc_lv<17> ap_ST_fsm_state8;
    static const sc_lv<17> ap_ST_fsm_state9;
    static const sc_lv<17> ap_ST_fsm_state10;
    static const sc_lv<17> ap_ST_fsm_state11;
    static const sc_lv<17> ap_ST_fsm_state12;
    static const sc_lv<17> ap_ST_fsm_state13;
    static const sc_lv<17> ap_ST_fsm_state14;
    static const sc_lv<17> ap_ST_fsm_state15;
    static const sc_lv<17> ap_ST_fsm_state16;
    static const sc_lv<17> ap_ST_fsm_state17;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<8> ap_const_lv8_5;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_A_address0();
    void thread_A_ce0();
    void thread_A_d0();
    void thread_A_we0();
    void thread_add_ln362_1_fu_156_p2();
    void thread_add_ln362_fu_165_p2();
    void thread_add_ln364_2_fu_301_p2();
    void thread_add_ln364_3_fu_232_p2();
    void thread_add_ln364_4_fu_292_p2();
    void thread_add_ln364_fu_241_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_grp_fu_266_ap_start();
    void thread_grp_fu_266_p0();
    void thread_grp_fu_266_p1();
    void thread_icmp_ln361_1_fu_132_p2();
    void thread_icmp_ln361_fu_116_p2();
    void thread_icmp_ln363_1_fu_208_p2();
    void thread_icmp_ln363_fu_176_p2();
    void thread_sext_ln364_fu_257_p1();
    void thread_shl_ln364_1_fu_224_p3();
    void thread_shl_ln364_3_fu_284_p3();
    void thread_shl_ln3_fu_148_p3();
    void thread_shl_ln_fu_192_p3();
    void thread_sub_ln364_fu_251_p2();
    void thread_tempA_address0();
    void thread_tempA_ce0();
    void thread_tempA_we0();
    void thread_trunc_ln364_1_fu_280_p1();
    void thread_trunc_ln364_fu_276_p1();
    void thread_x_5_fu_182_p2();
    void thread_x_fu_122_p2();
    void thread_y_3_fu_214_p2();
    void thread_y_fu_138_p2();
    void thread_zext_ln362_1_fu_128_p1();
    void thread_zext_ln362_2_fu_144_p1();
    void thread_zext_ln362_3_fu_161_p1();
    void thread_zext_ln362_fu_171_p1();
    void thread_zext_ln363_fu_204_p1();
    void thread_zext_ln364_1_fu_307_p1();
    void thread_zext_ln364_2_fu_188_p1();
    void thread_zext_ln364_3_fu_200_p1();
    void thread_zext_ln364_4_fu_220_p1();
    void thread_zext_ln364_5_fu_237_p1();
    void thread_zext_ln364_6_fu_247_p1();
    void thread_zext_ln364_7_fu_297_p1();
    void thread_zext_ln364_fu_272_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
