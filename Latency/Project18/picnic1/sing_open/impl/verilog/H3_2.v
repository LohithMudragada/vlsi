// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module H3_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        circuitOutput_address0,
        circuitOutput_ce0,
        circuitOutput_q0,
        plaintext_address0,
        plaintext_ce0,
        plaintext_q0,
        as_hashes_address0,
        as_hashes_ce0,
        as_hashes_q0,
        challengeBits_address0,
        challengeBits_ce0,
        challengeBits_we0,
        challengeBits_d0,
        challengeBits_q0,
        salt_0_address0,
        salt_0_ce0,
        salt_0_q0,
        message_address0,
        message_ce0,
        message_q0,
        messageByteLength,
        viewOutputs_address0,
        viewOutputs_ce0,
        viewOutputs_q0
);

parameter    ap_ST_fsm_state1 = 34'd1;
parameter    ap_ST_fsm_state2 = 34'd2;
parameter    ap_ST_fsm_state3 = 34'd4;
parameter    ap_ST_fsm_state4 = 34'd8;
parameter    ap_ST_fsm_state5 = 34'd16;
parameter    ap_ST_fsm_state6 = 34'd32;
parameter    ap_ST_fsm_state7 = 34'd64;
parameter    ap_ST_fsm_state8 = 34'd128;
parameter    ap_ST_fsm_state9 = 34'd256;
parameter    ap_ST_fsm_state10 = 34'd512;
parameter    ap_ST_fsm_state11 = 34'd1024;
parameter    ap_ST_fsm_state12 = 34'd2048;
parameter    ap_ST_fsm_state13 = 34'd4096;
parameter    ap_ST_fsm_state14 = 34'd8192;
parameter    ap_ST_fsm_state15 = 34'd16384;
parameter    ap_ST_fsm_state16 = 34'd32768;
parameter    ap_ST_fsm_state17 = 34'd65536;
parameter    ap_ST_fsm_state18 = 34'd131072;
parameter    ap_ST_fsm_state19 = 34'd262144;
parameter    ap_ST_fsm_state20 = 34'd524288;
parameter    ap_ST_fsm_state21 = 34'd1048576;
parameter    ap_ST_fsm_state22 = 34'd2097152;
parameter    ap_ST_fsm_state23 = 34'd4194304;
parameter    ap_ST_fsm_state24 = 34'd8388608;
parameter    ap_ST_fsm_state25 = 34'd16777216;
parameter    ap_ST_fsm_state26 = 34'd33554432;
parameter    ap_ST_fsm_state27 = 34'd67108864;
parameter    ap_ST_fsm_state28 = 34'd134217728;
parameter    ap_ST_fsm_state29 = 34'd268435456;
parameter    ap_ST_fsm_state30 = 34'd536870912;
parameter    ap_ST_fsm_state31 = 34'd1073741824;
parameter    ap_ST_fsm_state32 = 34'd2147483648;
parameter    ap_ST_fsm_state33 = 34'd4294967296;
parameter    ap_ST_fsm_state34 = 34'd8589934592;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [2:0] circuitOutput_address0;
output   circuitOutput_ce0;
input  [31:0] circuitOutput_q0;
output  [2:0] plaintext_address0;
output   plaintext_ce0;
input  [31:0] plaintext_q0;
output  [14:0] as_hashes_address0;
output   as_hashes_ce0;
input  [7:0] as_hashes_q0;
output  [5:0] challengeBits_address0;
output   challengeBits_ce0;
output   challengeBits_we0;
output  [7:0] challengeBits_d0;
input  [7:0] challengeBits_q0;
output  [4:0] salt_0_address0;
output   salt_0_ce0;
input  [7:0] salt_0_q0;
output  [15:0] message_address0;
output   message_ce0;
input  [7:0] message_q0;
input  [63:0] messageByteLength;
output  [13:0] viewOutputs_address0;
output   viewOutputs_ce0;
input  [31:0] viewOutputs_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg circuitOutput_ce0;
reg plaintext_ce0;
reg[5:0] challengeBits_address0;
reg challengeBits_ce0;
reg challengeBits_we0;
reg[7:0] challengeBits_d0;
reg viewOutputs_ce0;

(* fsm_encoding = "none" *) reg   [33:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] reg_491;
wire    ap_CS_fsm_state10;
wire   [0:0] icmp_ln594_fu_716_p2;
wire    ap_CS_fsm_state11;
wire   [0:0] icmp_ln595_fu_736_p2;
wire   [31:0] grp_HashUpdate_2_fu_359_ap_return;
reg   [31:0] reg_497;
wire    ap_CS_fsm_state13;
wire    grp_HashUpdate_2_fu_359_ap_ready;
wire    grp_HashUpdate_2_fu_359_ap_done;
wire    ap_CS_fsm_state15;
reg   [31:0] reg_503;
wire    ap_CS_fsm_state21;
wire    grp_HashFinal_fu_459_ap_ready;
wire    grp_HashFinal_fu_459_ap_done;
wire    ap_CS_fsm_state32;
reg   [31:0] reg_508;
wire    ap_CS_fsm_state2;
wire    grp_HashInit_fu_447_ap_ready;
wire    grp_HashInit_fu_447_ap_done;
wire   [7:0] i_fu_528_p2;
reg   [7:0] i_reg_977;
wire    ap_CS_fsm_state3;
wire   [10:0] sub_ln589_fu_546_p2;
reg   [10:0] sub_ln589_reg_982;
wire   [0:0] icmp_ln576_fu_522_p2;
wire   [1:0] j_17_fu_567_p2;
reg   [1:0] j_17_reg_997;
wire    ap_CS_fsm_state4;
wire   [10:0] add_ln589_fu_573_p2;
reg   [10:0] add_ln589_reg_1002;
wire   [0:0] icmp_ln577_fu_561_p2;
wire   [6:0] add_ln34_fu_578_p2;
wire    ap_CS_fsm_state5;
wire   [63:0] zext_ln37_fu_595_p1;
reg   [63:0] zext_ln37_reg_1015;
wire    ap_CS_fsm_state6;
wire   [0:0] tmp_55_fu_599_p3;
wire   [3:0] trunc_ln37_fu_635_p1;
reg   [3:0] trunc_ln37_reg_1028;
wire   [4:0] loop_fu_639_p2;
reg   [4:0] loop_reg_1035;
reg   [31:0] ctx_sponge_byteIOInd_52_reg_1040;
reg   [7:0] trunc_ln8_reg_1045;
wire    ap_CS_fsm_state7;
reg   [7:0] trunc_ln9_reg_1050;
wire   [7:0] i_30_fu_722_p2;
reg   [7:0] i_30_reg_1058;
wire   [60:0] trunc_ln41_1_fu_728_p1;
reg   [60:0] trunc_ln41_1_reg_1077;
wire   [1:0] j_fu_742_p2;
reg   [1:0] j_reg_1085;
wire   [31:0] grp_KeccakWidth1600_Spon_8_fu_424_ap_return;
reg   [31:0] ctx_sponge_byteIOInd_59_reg_1090;
wire    ap_CS_fsm_state17;
wire    grp_KeccakWidth1600_Spon_8_fu_424_ap_ready;
wire    grp_KeccakWidth1600_Spon_8_fu_424_ap_done;
wire   [31:0] grp_KeccakWidth1600_Spon_14_fu_384_ap_return;
reg   [31:0] ctx_sponge_byteIOInd_60_reg_1095;
wire    ap_CS_fsm_state19;
wire    grp_KeccakWidth1600_Spon_14_fu_384_ap_ready;
wire    grp_KeccakWidth1600_Spon_14_fu_384_ap_done;
reg   [5:0] i_32_load_reg_1100;
wire    ap_CS_fsm_state24;
wire   [0:0] tmp_53_fu_761_p3;
reg   [0:0] tmp_53_reg_1105;
wire   [7:0] hash_q0;
reg   [7:0] byte_reg_1114;
wire    ap_CS_fsm_state25;
wire   [7:0] lshr_ln630_fu_787_p2;
reg   [7:0] lshr_ln630_reg_1122;
wire    ap_CS_fsm_state26;
wire   [0:0] tmp_54_fu_769_p3;
wire   [0:0] trunc_ln630_fu_792_p1;
reg   [0:0] trunc_ln630_reg_1127;
wire   [0:0] icmp_ln631_fu_800_p2;
reg   [0:0] icmp_ln631_reg_1132;
wire   [1:0] trunc_ln378_fu_809_p1;
reg   [1:0] trunc_ln378_reg_1141;
reg   [5:0] challengeBits_addr_1_reg_1146;
wire   [3:0] j_18_fu_956_p2;
wire    ap_CS_fsm_state27;
wire   [0:0] icmp_ln634_fu_945_p2;
wire   [31:0] grp_HashInit_fu_447_ap_return;
reg   [31:0] ctx_sponge_byteIOInd_62_reg_1159;
wire    ap_CS_fsm_state28;
wire   [31:0] grp_KeccakWidth1600_Spon_13_fu_436_ap_return;
reg   [31:0] ctx_sponge_byteIOInd_63_reg_1164;
wire    ap_CS_fsm_state30;
wire    grp_KeccakWidth1600_Spon_13_fu_436_ap_ready;
wire    grp_KeccakWidth1600_Spon_13_fu_436_ap_done;
reg   [6:0] temp_address0;
reg    temp_ce0;
reg    temp_we0;
reg   [7:0] temp_d0;
wire   [7:0] temp_q0;
reg   [6:0] temp_address1;
reg    temp_ce1;
reg    temp_we1;
reg   [7:0] temp_d1;
reg   [4:0] hash_address0;
reg    hash_ce0;
reg    hash_we0;
reg   [7:0] ctx_sponge_state_address0;
reg    ctx_sponge_state_ce0;
reg    ctx_sponge_state_we0;
reg   [7:0] ctx_sponge_state_d0;
wire   [7:0] ctx_sponge_state_q0;
wire    grp_HashUpdate_2_fu_359_ap_start;
wire    grp_HashUpdate_2_fu_359_ap_idle;
wire   [7:0] grp_HashUpdate_2_fu_359_ctx_sponge_state_address0;
wire    grp_HashUpdate_2_fu_359_ctx_sponge_state_ce0;
wire    grp_HashUpdate_2_fu_359_ctx_sponge_state_we0;
wire   [7:0] grp_HashUpdate_2_fu_359_ctx_sponge_state_d0;
reg   [31:0] grp_HashUpdate_2_fu_359_ctx_sponge_byteIOInd;
wire   [2:0] grp_HashUpdate_2_fu_359_data_address0;
wire    grp_HashUpdate_2_fu_359_data_ce0;
reg   [31:0] grp_HashUpdate_2_fu_359_data_q0;
wire    grp_KeccakWidth1600_Spon_2_fu_372_ap_start;
wire    grp_KeccakWidth1600_Spon_2_fu_372_ap_done;
wire    grp_KeccakWidth1600_Spon_2_fu_372_ap_idle;
wire    grp_KeccakWidth1600_Spon_2_fu_372_ap_ready;
wire   [7:0] grp_KeccakWidth1600_Spon_2_fu_372_instance_state_address0;
wire    grp_KeccakWidth1600_Spon_2_fu_372_instance_state_ce0;
wire    grp_KeccakWidth1600_Spon_2_fu_372_instance_state_we0;
wire   [7:0] grp_KeccakWidth1600_Spon_2_fu_372_instance_state_d0;
wire   [4:0] grp_KeccakWidth1600_Spon_2_fu_372_data_address0;
wire    grp_KeccakWidth1600_Spon_2_fu_372_data_ce0;
wire    grp_KeccakWidth1600_Spon_2_fu_372_data_we0;
wire   [7:0] grp_KeccakWidth1600_Spon_2_fu_372_data_d0;
wire    grp_KeccakWidth1600_Spon_14_fu_384_ap_start;
wire    grp_KeccakWidth1600_Spon_14_fu_384_ap_idle;
wire   [7:0] grp_KeccakWidth1600_Spon_14_fu_384_instance_state_address0;
wire    grp_KeccakWidth1600_Spon_14_fu_384_instance_state_ce0;
wire    grp_KeccakWidth1600_Spon_14_fu_384_instance_state_we0;
wire   [7:0] grp_KeccakWidth1600_Spon_14_fu_384_instance_state_d0;
wire   [15:0] grp_KeccakWidth1600_Spon_14_fu_384_data_address0;
wire    grp_KeccakWidth1600_Spon_14_fu_384_data_ce0;
wire    grp_KeccakWidth1600_Spon_6_fu_397_ap_start;
wire    grp_KeccakWidth1600_Spon_6_fu_397_ap_done;
wire    grp_KeccakWidth1600_Spon_6_fu_397_ap_idle;
wire    grp_KeccakWidth1600_Spon_6_fu_397_ap_ready;
wire   [7:0] grp_KeccakWidth1600_Spon_6_fu_397_instance_state_address0;
wire    grp_KeccakWidth1600_Spon_6_fu_397_instance_state_ce0;
wire    grp_KeccakWidth1600_Spon_6_fu_397_instance_state_we0;
wire   [7:0] grp_KeccakWidth1600_Spon_6_fu_397_instance_state_d0;
wire   [14:0] grp_KeccakWidth1600_Spon_6_fu_397_data_address0;
wire    grp_KeccakWidth1600_Spon_6_fu_397_data_ce0;
wire   [31:0] grp_KeccakWidth1600_Spon_6_fu_397_ap_return;
wire    grp_KeccakWidth1600_Spon_9_fu_413_ap_start;
wire    grp_KeccakWidth1600_Spon_9_fu_413_ap_done;
wire    grp_KeccakWidth1600_Spon_9_fu_413_ap_idle;
wire    grp_KeccakWidth1600_Spon_9_fu_413_ap_ready;
wire   [7:0] grp_KeccakWidth1600_Spon_9_fu_413_instance_state_address0;
wire    grp_KeccakWidth1600_Spon_9_fu_413_instance_state_ce0;
wire    grp_KeccakWidth1600_Spon_9_fu_413_instance_state_we0;
wire   [7:0] grp_KeccakWidth1600_Spon_9_fu_413_instance_state_d0;
wire   [6:0] grp_KeccakWidth1600_Spon_9_fu_413_data_address0;
wire    grp_KeccakWidth1600_Spon_9_fu_413_data_ce0;
wire   [31:0] grp_KeccakWidth1600_Spon_9_fu_413_ap_return;
wire    grp_KeccakWidth1600_Spon_8_fu_424_ap_start;
wire    grp_KeccakWidth1600_Spon_8_fu_424_ap_idle;
wire   [7:0] grp_KeccakWidth1600_Spon_8_fu_424_instance_state_address0;
wire    grp_KeccakWidth1600_Spon_8_fu_424_instance_state_ce0;
wire    grp_KeccakWidth1600_Spon_8_fu_424_instance_state_we0;
wire   [7:0] grp_KeccakWidth1600_Spon_8_fu_424_instance_state_d0;
wire   [4:0] grp_KeccakWidth1600_Spon_8_fu_424_data_0_address0;
wire    grp_KeccakWidth1600_Spon_8_fu_424_data_0_ce0;
wire    grp_KeccakWidth1600_Spon_13_fu_436_ap_start;
wire    grp_KeccakWidth1600_Spon_13_fu_436_ap_idle;
wire   [7:0] grp_KeccakWidth1600_Spon_13_fu_436_instance_state_address0;
wire    grp_KeccakWidth1600_Spon_13_fu_436_instance_state_ce0;
wire    grp_KeccakWidth1600_Spon_13_fu_436_instance_state_we0;
wire   [7:0] grp_KeccakWidth1600_Spon_13_fu_436_instance_state_d0;
wire   [4:0] grp_KeccakWidth1600_Spon_13_fu_436_data_address0;
wire    grp_KeccakWidth1600_Spon_13_fu_436_data_ce0;
wire    grp_HashInit_fu_447_ap_start;
wire    grp_HashInit_fu_447_ap_idle;
wire   [7:0] grp_HashInit_fu_447_ctx_sponge_state_address0;
wire    grp_HashInit_fu_447_ctx_sponge_state_ce0;
wire    grp_HashInit_fu_447_ctx_sponge_state_we0;
wire   [7:0] grp_HashInit_fu_447_ctx_sponge_state_d0;
wire    grp_HashFinal_fu_459_ap_start;
wire    grp_HashFinal_fu_459_ap_idle;
wire   [7:0] grp_HashFinal_fu_459_ctx_sponge_state_address0;
wire    grp_HashFinal_fu_459_ctx_sponge_state_ce0;
wire    grp_HashFinal_fu_459_ctx_sponge_state_we0;
wire   [7:0] grp_HashFinal_fu_459_ctx_sponge_state_d0;
reg   [31:0] grp_HashFinal_fu_459_ctx_sponge_byteIOInd;
wire   [31:0] grp_HashFinal_fu_459_ap_return_0;
wire   [31:0] grp_HashFinal_fu_459_ap_return_1;
reg   [7:0] i_0_reg_279;
reg   [1:0] j_0_reg_290;
wire    ap_CS_fsm_state9;
reg   [6:0] phi_ln34_reg_301;
wire   [0:0] icmp_ln34_fu_589_p2;
reg   [4:0] loop_0_i_reg_312;
wire    ap_CS_fsm_state8;
reg   [7:0] i_1_reg_323;
reg   [1:0] j_1_reg_335;
wire    ap_CS_fsm_state12;
reg   [3:0] j2_0_reg_347;
reg    grp_HashUpdate_2_fu_359_ap_start_reg;
wire    ap_CS_fsm_state14;
reg    grp_KeccakWidth1600_Spon_2_fu_372_ap_start_reg;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state34;
reg    grp_KeccakWidth1600_Spon_14_fu_384_ap_start_reg;
wire    ap_CS_fsm_state18;
reg    grp_KeccakWidth1600_Spon_6_fu_397_ap_start_reg;
reg    grp_KeccakWidth1600_Spon_9_fu_413_ap_start_reg;
reg    grp_KeccakWidth1600_Spon_8_fu_424_ap_start_reg;
wire    ap_CS_fsm_state16;
reg    grp_KeccakWidth1600_Spon_13_fu_436_ap_start_reg;
wire    ap_CS_fsm_state29;
reg    grp_HashInit_fu_447_ap_start_reg;
reg    grp_HashFinal_fu_459_ap_start_reg;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state31;
wire   [63:0] zext_ln34_fu_584_p1;
wire   [63:0] zext_ln38_fu_630_p1;
wire   [63:0] zext_ln41_fu_666_p1;
wire   [63:0] zext_ln43_fu_696_p1;
wire   [63:0] zext_ln45_fu_706_p1;
wire   [63:0] zext_ln626_fu_756_p1;
wire   [63:0] zext_ln66_fu_823_p1;
reg   [31:0] ctx_sponge_byteIOInd_fu_152;
reg   [31:0] ctx_sponge_byteIOInd_49_fu_168;
reg   [5:0] i_32_fu_172;
wire   [5:0] i_33_fu_828_p2;
reg   [63:0] round_1_fu_176;
wire   [63:0] round_fu_940_p2;
wire   [7:0] or_ln66_3_fu_933_p2;
wire   [7:0] trunc_ln39_fu_645_p1;
wire   [9:0] shl_ln_fu_534_p3;
wire   [10:0] zext_ln589_fu_542_p1;
wire   [10:0] zext_ln576_fu_518_p1;
wire   [10:0] zext_ln577_fu_557_p1;
wire   [1:0] trunc_ln_fu_607_p4;
wire   [14:0] tmp_fu_617_p4;
wire  signed [35:0] sext_ln38_fu_626_p1;
wire   [3:0] or_ln41_fu_661_p2;
wire   [3:0] or_ln43_fu_691_p2;
wire   [3:0] or_ln45_fu_701_p2;
wire   [3:0] sub_ln630_fu_777_p2;
wire  signed [7:0] sext_ln630_fu_783_p1;
wire   [1:0] bitPair_fu_796_p1;
wire   [28:0] trunc_ln10_fu_813_p4;
wire   [2:0] bitNumber_assign_fu_838_p3;
wire   [2:0] xor_ln66_fu_848_p2;
wire   [7:0] zext_ln66_3_fu_854_p1;
wire   [7:0] shl_ln66_fu_858_p2;
wire   [7:0] zext_ln378_fu_845_p1;
wire   [7:0] xor_ln66_5_fu_864_p2;
wire   [7:0] and_ln66_fu_876_p2;
wire   [7:0] shl_ln66_9_fu_870_p2;
wire   [0:0] tmp_56_fu_888_p3;
wire   [2:0] xor_ln66_6_fu_899_p2;
wire   [7:0] zext_ln66_4_fu_905_p1;
wire   [7:0] shl_ln66_10_fu_909_p2;
wire   [7:0] zext_ln379_fu_895_p1;
wire   [7:0] or_ln66_fu_882_p2;
wire   [7:0] xor_ln66_7_fu_915_p2;
wire   [7:0] and_ln66_3_fu_927_p2;
wire   [7:0] shl_ln66_11_fu_921_p2;
reg   [33:0] ap_NS_fsm;
reg    ap_block_state34_on_subcall_done;

// power-on initialization
initial begin
#0 ap_CS_fsm = 34'd1;
#0 grp_HashUpdate_2_fu_359_ap_start_reg = 1'b0;
#0 grp_KeccakWidth1600_Spon_2_fu_372_ap_start_reg = 1'b0;
#0 grp_KeccakWidth1600_Spon_14_fu_384_ap_start_reg = 1'b0;
#0 grp_KeccakWidth1600_Spon_6_fu_397_ap_start_reg = 1'b0;
#0 grp_KeccakWidth1600_Spon_9_fu_413_ap_start_reg = 1'b0;
#0 grp_KeccakWidth1600_Spon_8_fu_424_ap_start_reg = 1'b0;
#0 grp_KeccakWidth1600_Spon_13_fu_436_ap_start_reg = 1'b0;
#0 grp_HashInit_fu_447_ap_start_reg = 1'b0;
#0 grp_HashFinal_fu_459_ap_start_reg = 1'b0;
end

HashUpdate_2_1_temp #(
    .DataWidth( 8 ),
    .AddressRange( 75 ),
    .AddressWidth( 7 ))
temp_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(temp_address0),
    .ce0(temp_ce0),
    .we0(temp_we0),
    .d0(temp_d0),
    .q0(temp_q0),
    .address1(temp_address1),
    .ce1(temp_ce1),
    .we1(temp_we1),
    .d1(temp_d1)
);

H3_2_hash #(
    .DataWidth( 8 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
hash_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(hash_address0),
    .ce0(hash_ce0),
    .we0(hash_we0),
    .d0(grp_KeccakWidth1600_Spon_2_fu_372_data_d0),
    .q0(hash_q0)
);

H3_2_ctx_sponge_smb6 #(
    .DataWidth( 8 ),
    .AddressRange( 200 ),
    .AddressWidth( 8 ))
ctx_sponge_state_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ctx_sponge_state_address0),
    .ce0(ctx_sponge_state_ce0),
    .we0(ctx_sponge_state_we0),
    .d0(ctx_sponge_state_d0),
    .q0(ctx_sponge_state_q0)
);

HashUpdate_2 grp_HashUpdate_2_fu_359(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_HashUpdate_2_fu_359_ap_start),
    .ap_done(grp_HashUpdate_2_fu_359_ap_done),
    .ap_idle(grp_HashUpdate_2_fu_359_ap_idle),
    .ap_ready(grp_HashUpdate_2_fu_359_ap_ready),
    .ctx_sponge_state_address0(grp_HashUpdate_2_fu_359_ctx_sponge_state_address0),
    .ctx_sponge_state_ce0(grp_HashUpdate_2_fu_359_ctx_sponge_state_ce0),
    .ctx_sponge_state_we0(grp_HashUpdate_2_fu_359_ctx_sponge_state_we0),
    .ctx_sponge_state_d0(grp_HashUpdate_2_fu_359_ctx_sponge_state_d0),
    .ctx_sponge_state_q0(ctx_sponge_state_q0),
    .ctx_sponge_byteIOInd(grp_HashUpdate_2_fu_359_ctx_sponge_byteIOInd),
    .data_address0(grp_HashUpdate_2_fu_359_data_address0),
    .data_ce0(grp_HashUpdate_2_fu_359_data_ce0),
    .data_q0(grp_HashUpdate_2_fu_359_data_q0),
    .ap_return(grp_HashUpdate_2_fu_359_ap_return)
);

KeccakWidth1600_Spon_2 grp_KeccakWidth1600_Spon_2_fu_372(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_KeccakWidth1600_Spon_2_fu_372_ap_start),
    .ap_done(grp_KeccakWidth1600_Spon_2_fu_372_ap_done),
    .ap_idle(grp_KeccakWidth1600_Spon_2_fu_372_ap_idle),
    .ap_ready(grp_KeccakWidth1600_Spon_2_fu_372_ap_ready),
    .instance_state_address0(grp_KeccakWidth1600_Spon_2_fu_372_instance_state_address0),
    .instance_state_ce0(grp_KeccakWidth1600_Spon_2_fu_372_instance_state_ce0),
    .instance_state_we0(grp_KeccakWidth1600_Spon_2_fu_372_instance_state_we0),
    .instance_state_d0(grp_KeccakWidth1600_Spon_2_fu_372_instance_state_d0),
    .instance_state_q0(ctx_sponge_state_q0),
    .instance_byteIOIndex_read(reg_503),
    .instance_squeezing_read(reg_508),
    .data_address0(grp_KeccakWidth1600_Spon_2_fu_372_data_address0),
    .data_ce0(grp_KeccakWidth1600_Spon_2_fu_372_data_ce0),
    .data_we0(grp_KeccakWidth1600_Spon_2_fu_372_data_we0),
    .data_d0(grp_KeccakWidth1600_Spon_2_fu_372_data_d0)
);

KeccakWidth1600_Spon_14 grp_KeccakWidth1600_Spon_14_fu_384(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_KeccakWidth1600_Spon_14_fu_384_ap_start),
    .ap_done(grp_KeccakWidth1600_Spon_14_fu_384_ap_done),
    .ap_idle(grp_KeccakWidth1600_Spon_14_fu_384_ap_idle),
    .ap_ready(grp_KeccakWidth1600_Spon_14_fu_384_ap_ready),
    .instance_state_address0(grp_KeccakWidth1600_Spon_14_fu_384_instance_state_address0),
    .instance_state_ce0(grp_KeccakWidth1600_Spon_14_fu_384_instance_state_ce0),
    .instance_state_we0(grp_KeccakWidth1600_Spon_14_fu_384_instance_state_we0),
    .instance_state_d0(grp_KeccakWidth1600_Spon_14_fu_384_instance_state_d0),
    .instance_state_q0(ctx_sponge_state_q0),
    .instance_byteIOIndex_read(ctx_sponge_byteIOInd_59_reg_1090),
    .data_address0(grp_KeccakWidth1600_Spon_14_fu_384_data_address0),
    .data_ce0(grp_KeccakWidth1600_Spon_14_fu_384_data_ce0),
    .data_q0(message_q0),
    .dataByteLen(trunc_ln41_1_reg_1077),
    .ap_return(grp_KeccakWidth1600_Spon_14_fu_384_ap_return)
);

KeccakWidth1600_Spon_6 grp_KeccakWidth1600_Spon_6_fu_397(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_KeccakWidth1600_Spon_6_fu_397_ap_start),
    .ap_done(grp_KeccakWidth1600_Spon_6_fu_397_ap_done),
    .ap_idle(grp_KeccakWidth1600_Spon_6_fu_397_ap_idle),
    .ap_ready(grp_KeccakWidth1600_Spon_6_fu_397_ap_ready),
    .instance_state_address0(grp_KeccakWidth1600_Spon_6_fu_397_instance_state_address0),
    .instance_state_ce0(grp_KeccakWidth1600_Spon_6_fu_397_instance_state_ce0),
    .instance_state_we0(grp_KeccakWidth1600_Spon_6_fu_397_instance_state_we0),
    .instance_state_d0(grp_KeccakWidth1600_Spon_6_fu_397_instance_state_d0),
    .instance_state_q0(ctx_sponge_state_q0),
    .instance_byteIOIndex_read(reg_491),
    .data_address0(grp_KeccakWidth1600_Spon_6_fu_397_data_address0),
    .data_ce0(grp_KeccakWidth1600_Spon_6_fu_397_data_ce0),
    .data_q0(as_hashes_q0),
    .data_offset(i_1_reg_323),
    .data_offset1(j_1_reg_335),
    .ap_return(grp_KeccakWidth1600_Spon_6_fu_397_ap_return)
);

KeccakWidth1600_Spon_9 grp_KeccakWidth1600_Spon_9_fu_413(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_KeccakWidth1600_Spon_9_fu_413_ap_start),
    .ap_done(grp_KeccakWidth1600_Spon_9_fu_413_ap_done),
    .ap_idle(grp_KeccakWidth1600_Spon_9_fu_413_ap_idle),
    .ap_ready(grp_KeccakWidth1600_Spon_9_fu_413_ap_ready),
    .instance_state_address0(grp_KeccakWidth1600_Spon_9_fu_413_instance_state_address0),
    .instance_state_ce0(grp_KeccakWidth1600_Spon_9_fu_413_instance_state_ce0),
    .instance_state_we0(grp_KeccakWidth1600_Spon_9_fu_413_instance_state_we0),
    .instance_state_d0(grp_KeccakWidth1600_Spon_9_fu_413_instance_state_d0),
    .instance_state_q0(ctx_sponge_state_q0),
    .instance_byteIOIndex_read(ctx_sponge_byteIOInd_52_reg_1040),
    .data_address0(grp_KeccakWidth1600_Spon_9_fu_413_data_address0),
    .data_ce0(grp_KeccakWidth1600_Spon_9_fu_413_data_ce0),
    .data_q0(temp_q0),
    .ap_return(grp_KeccakWidth1600_Spon_9_fu_413_ap_return)
);

KeccakWidth1600_Spon_8 grp_KeccakWidth1600_Spon_8_fu_424(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_KeccakWidth1600_Spon_8_fu_424_ap_start),
    .ap_done(grp_KeccakWidth1600_Spon_8_fu_424_ap_done),
    .ap_idle(grp_KeccakWidth1600_Spon_8_fu_424_ap_idle),
    .ap_ready(grp_KeccakWidth1600_Spon_8_fu_424_ap_ready),
    .instance_state_address0(grp_KeccakWidth1600_Spon_8_fu_424_instance_state_address0),
    .instance_state_ce0(grp_KeccakWidth1600_Spon_8_fu_424_instance_state_ce0),
    .instance_state_we0(grp_KeccakWidth1600_Spon_8_fu_424_instance_state_we0),
    .instance_state_d0(grp_KeccakWidth1600_Spon_8_fu_424_instance_state_d0),
    .instance_state_q0(ctx_sponge_state_q0),
    .instance_byteIOIndex_read(reg_497),
    .data_0_address0(grp_KeccakWidth1600_Spon_8_fu_424_data_0_address0),
    .data_0_ce0(grp_KeccakWidth1600_Spon_8_fu_424_data_0_ce0),
    .data_0_q0(salt_0_q0),
    .ap_return(grp_KeccakWidth1600_Spon_8_fu_424_ap_return)
);

KeccakWidth1600_Spon_13 grp_KeccakWidth1600_Spon_13_fu_436(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_KeccakWidth1600_Spon_13_fu_436_ap_start),
    .ap_done(grp_KeccakWidth1600_Spon_13_fu_436_ap_done),
    .ap_idle(grp_KeccakWidth1600_Spon_13_fu_436_ap_idle),
    .ap_ready(grp_KeccakWidth1600_Spon_13_fu_436_ap_ready),
    .instance_state_address0(grp_KeccakWidth1600_Spon_13_fu_436_instance_state_address0),
    .instance_state_ce0(grp_KeccakWidth1600_Spon_13_fu_436_instance_state_ce0),
    .instance_state_we0(grp_KeccakWidth1600_Spon_13_fu_436_instance_state_we0),
    .instance_state_d0(grp_KeccakWidth1600_Spon_13_fu_436_instance_state_d0),
    .instance_state_q0(ctx_sponge_state_q0),
    .instance_byteIOIndex_read(ctx_sponge_byteIOInd_62_reg_1159),
    .data_address0(grp_KeccakWidth1600_Spon_13_fu_436_data_address0),
    .data_ce0(grp_KeccakWidth1600_Spon_13_fu_436_data_ce0),
    .data_q0(hash_q0),
    .ap_return(grp_KeccakWidth1600_Spon_13_fu_436_ap_return)
);

HashInit grp_HashInit_fu_447(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_HashInit_fu_447_ap_start),
    .ap_done(grp_HashInit_fu_447_ap_done),
    .ap_idle(grp_HashInit_fu_447_ap_idle),
    .ap_ready(grp_HashInit_fu_447_ap_ready),
    .ctx_sponge_state_address0(grp_HashInit_fu_447_ctx_sponge_state_address0),
    .ctx_sponge_state_ce0(grp_HashInit_fu_447_ctx_sponge_state_ce0),
    .ctx_sponge_state_we0(grp_HashInit_fu_447_ctx_sponge_state_we0),
    .ctx_sponge_state_d0(grp_HashInit_fu_447_ctx_sponge_state_d0),
    .ctx_sponge_state_q0(ctx_sponge_state_q0),
    .hashPrefix(4'd1),
    .ap_return(grp_HashInit_fu_447_ap_return)
);

HashFinal grp_HashFinal_fu_459(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_HashFinal_fu_459_ap_start),
    .ap_done(grp_HashFinal_fu_459_ap_done),
    .ap_idle(grp_HashFinal_fu_459_ap_idle),
    .ap_ready(grp_HashFinal_fu_459_ap_ready),
    .ctx_sponge_state_address0(grp_HashFinal_fu_459_ctx_sponge_state_address0),
    .ctx_sponge_state_ce0(grp_HashFinal_fu_459_ctx_sponge_state_ce0),
    .ctx_sponge_state_we0(grp_HashFinal_fu_459_ctx_sponge_state_we0),
    .ctx_sponge_state_d0(grp_HashFinal_fu_459_ctx_sponge_state_d0),
    .ctx_sponge_state_q0(ctx_sponge_state_q0),
    .ctx_sponge_byteIOInd(grp_HashFinal_fu_459_ctx_sponge_byteIOInd),
    .ap_return_0(grp_HashFinal_fu_459_ap_return_0),
    .ap_return_1(grp_HashFinal_fu_459_ap_return_1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_HashFinal_fu_459_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state20))) begin
            grp_HashFinal_fu_459_ap_start_reg <= 1'b1;
        end else if ((grp_HashFinal_fu_459_ap_ready == 1'b1)) begin
            grp_HashFinal_fu_459_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_HashInit_fu_447_ap_start_reg <= 1'b0;
    end else begin
        if ((((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state24) & (tmp_53_fu_761_p3 == 1'd1)))) begin
            grp_HashInit_fu_447_ap_start_reg <= 1'b1;
        end else if ((grp_HashInit_fu_447_ap_ready == 1'b1)) begin
            grp_HashInit_fu_447_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_HashUpdate_2_fu_359_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state14) | ((1'b1 == ap_CS_fsm_state10) & (icmp_ln594_fu_716_p2 == 1'd1)))) begin
            grp_HashUpdate_2_fu_359_ap_start_reg <= 1'b1;
        end else if ((grp_HashUpdate_2_fu_359_ap_ready == 1'b1)) begin
            grp_HashUpdate_2_fu_359_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_KeccakWidth1600_Spon_13_fu_436_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state29)) begin
            grp_KeccakWidth1600_Spon_13_fu_436_ap_start_reg <= 1'b1;
        end else if ((grp_KeccakWidth1600_Spon_13_fu_436_ap_ready == 1'b1)) begin
            grp_KeccakWidth1600_Spon_13_fu_436_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_KeccakWidth1600_Spon_14_fu_384_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state18)) begin
            grp_KeccakWidth1600_Spon_14_fu_384_ap_start_reg <= 1'b1;
        end else if ((grp_KeccakWidth1600_Spon_14_fu_384_ap_ready == 1'b1)) begin
            grp_KeccakWidth1600_Spon_14_fu_384_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_KeccakWidth1600_Spon_2_fu_372_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state22))) begin
            grp_KeccakWidth1600_Spon_2_fu_372_ap_start_reg <= 1'b1;
        end else if ((grp_KeccakWidth1600_Spon_2_fu_372_ap_ready == 1'b1)) begin
            grp_KeccakWidth1600_Spon_2_fu_372_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_KeccakWidth1600_Spon_6_fu_397_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln595_fu_736_p2 == 1'd0))) begin
            grp_KeccakWidth1600_Spon_6_fu_397_ap_start_reg <= 1'b1;
        end else if ((grp_KeccakWidth1600_Spon_6_fu_397_ap_ready == 1'b1)) begin
            grp_KeccakWidth1600_Spon_6_fu_397_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_KeccakWidth1600_Spon_8_fu_424_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state16)) begin
            grp_KeccakWidth1600_Spon_8_fu_424_ap_start_reg <= 1'b1;
        end else if ((grp_KeccakWidth1600_Spon_8_fu_424_ap_ready == 1'b1)) begin
            grp_KeccakWidth1600_Spon_8_fu_424_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_KeccakWidth1600_Spon_9_fu_413_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state6) & (tmp_55_fu_599_p3 == 1'd1))) begin
            grp_KeccakWidth1600_Spon_9_fu_413_ap_start_reg <= 1'b1;
        end else if ((grp_KeccakWidth1600_Spon_9_fu_413_ap_ready == 1'b1)) begin
            grp_KeccakWidth1600_Spon_9_fu_413_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((grp_KeccakWidth1600_Spon_6_fu_397_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
        ctx_sponge_byteIOInd_49_fu_168 <= grp_KeccakWidth1600_Spon_6_fu_397_ap_return;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln576_fu_522_p2 == 1'd1))) begin
        ctx_sponge_byteIOInd_49_fu_168 <= ctx_sponge_byteIOInd_fu_152;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_KeccakWidth1600_Spon_9_fu_413_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        ctx_sponge_byteIOInd_fu_152 <= grp_KeccakWidth1600_Spon_9_fu_413_ap_return;
    end else if (((1'b1 == ap_CS_fsm_state2) & (grp_HashInit_fu_447_ap_done == 1'b1))) begin
        ctx_sponge_byteIOInd_fu_152 <= grp_HashInit_fu_447_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln577_fu_561_p2 == 1'd1))) begin
        i_0_reg_279 <= i_reg_977;
    end else if (((1'b1 == ap_CS_fsm_state2) & (grp_HashInit_fu_447_ap_done == 1'b1))) begin
        i_0_reg_279 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln595_fu_736_p2 == 1'd1))) begin
        i_1_reg_323 <= i_30_reg_1058;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln576_fu_522_p2 == 1'd1))) begin
        i_1_reg_323 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) & (tmp_54_fu_769_p3 == 1'd1))) begin
        i_32_fu_172 <= i_33_fu_828_p2;
    end else if ((((1'b1 == ap_CS_fsm_state24) & (tmp_53_fu_761_p3 == 1'd1)) | ((1'b1 == ap_CS_fsm_state10) & (icmp_ln594_fu_716_p2 == 1'd1)))) begin
        i_32_fu_172 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) & ((icmp_ln634_fu_945_p2 == 1'd0) | (icmp_ln631_reg_1132 == 1'd1)))) begin
        j2_0_reg_347 <= j_18_fu_956_p2;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        j2_0_reg_347 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_KeccakWidth1600_Spon_9_fu_413_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        j_0_reg_290 <= j_17_reg_997;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln576_fu_522_p2 == 1'd0))) begin
        j_0_reg_290 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln594_fu_716_p2 == 1'd0))) begin
        j_1_reg_335 <= 2'd0;
    end else if (((grp_KeccakWidth1600_Spon_6_fu_397_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
        j_1_reg_335 <= j_reg_1085;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln34_fu_589_p2 == 1'd1))) begin
        loop_0_i_reg_312 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        loop_0_i_reg_312 <= loop_reg_1035;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln34_fu_589_p2 == 1'd0))) begin
        phi_ln34_reg_301 <= add_ln34_fu_578_p2;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln577_fu_561_p2 == 1'd0))) begin
        phi_ln34_reg_301 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) & (icmp_ln634_fu_945_p2 == 1'd0) & (icmp_ln631_reg_1132 == 1'd0))) begin
        round_1_fu_176 <= round_fu_940_p2;
    end else if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln594_fu_716_p2 == 1'd1))) begin
        round_1_fu_176 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln577_fu_561_p2 == 1'd0))) begin
        add_ln589_reg_1002 <= add_ln589_fu_573_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        byte_reg_1114 <= hash_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) & (icmp_ln631_fu_800_p2 == 1'd0) & (tmp_54_fu_769_p3 == 1'd0))) begin
        challengeBits_addr_1_reg_1146 <= zext_ln66_fu_823_p1;
        trunc_ln378_reg_1141 <= trunc_ln378_fu_809_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (tmp_55_fu_599_p3 == 1'd1))) begin
        ctx_sponge_byteIOInd_52_reg_1040 <= ctx_sponge_byteIOInd_fu_152;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_KeccakWidth1600_Spon_8_fu_424_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
        ctx_sponge_byteIOInd_59_reg_1090 <= grp_KeccakWidth1600_Spon_8_fu_424_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_KeccakWidth1600_Spon_14_fu_384_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
        ctx_sponge_byteIOInd_60_reg_1095 <= grp_KeccakWidth1600_Spon_14_fu_384_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state28) & (grp_HashInit_fu_447_ap_done == 1'b1))) begin
        ctx_sponge_byteIOInd_62_reg_1159 <= grp_HashInit_fu_447_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_KeccakWidth1600_Spon_13_fu_436_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state30))) begin
        ctx_sponge_byteIOInd_63_reg_1164 <= grp_KeccakWidth1600_Spon_13_fu_436_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        i_30_reg_1058 <= i_30_fu_722_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        i_32_load_reg_1100 <= i_32_fu_172;
        tmp_53_reg_1105 <= i_32_fu_172[32'd5];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_reg_977 <= i_fu_528_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) & (tmp_54_fu_769_p3 == 1'd0))) begin
        icmp_ln631_reg_1132 <= icmp_ln631_fu_800_p2;
        lshr_ln630_reg_1122 <= lshr_ln630_fu_787_p2;
        trunc_ln630_reg_1127 <= trunc_ln630_fu_792_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        j_17_reg_997 <= j_17_fu_567_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        j_reg_1085 <= j_fu_742_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (tmp_55_fu_599_p3 == 1'd0))) begin
        loop_reg_1035 <= loop_fu_639_p2;
        trunc_ln37_reg_1028 <= trunc_ln37_fu_635_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state11) & (icmp_ln595_fu_736_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state10) & (icmp_ln594_fu_716_p2 == 1'd1)))) begin
        reg_491 <= ctx_sponge_byteIOInd_49_fu_168;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state15) & (grp_HashUpdate_2_fu_359_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state13) & (grp_HashUpdate_2_fu_359_ap_done == 1'b1)))) begin
        reg_497 <= grp_HashUpdate_2_fu_359_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state32) & (grp_HashFinal_fu_459_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state21) & (grp_HashFinal_fu_459_ap_done == 1'b1)))) begin
        reg_503 <= grp_HashFinal_fu_459_ap_return_0;
        reg_508 <= grp_HashFinal_fu_459_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln576_fu_522_p2 == 1'd0))) begin
        sub_ln589_reg_982 <= sub_ln589_fu_546_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln594_fu_716_p2 == 1'd1))) begin
        trunc_ln41_1_reg_1077 <= trunc_ln41_1_fu_728_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        trunc_ln8_reg_1045 <= {{viewOutputs_q0[23:16]}};
        trunc_ln9_reg_1050 <= {{viewOutputs_q0[31:24]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        zext_ln37_reg_1015[4 : 0] <= zext_ln37_fu_595_p1[4 : 0];
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state27) & (icmp_ln631_reg_1132 == 1'd0) & (icmp_ln634_fu_945_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) & (icmp_ln631_reg_1132 == 1'd0) & (icmp_ln634_fu_945_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        challengeBits_address0 = challengeBits_addr_1_reg_1146;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        challengeBits_address0 = zext_ln66_fu_823_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        challengeBits_address0 = 64'd54;
    end else begin
        challengeBits_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | ((1'b1 == ap_CS_fsm_state2) & (grp_HashInit_fu_447_ap_done == 1'b1)))) begin
        challengeBits_ce0 = 1'b1;
    end else begin
        challengeBits_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        challengeBits_d0 = or_ln66_3_fu_933_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        challengeBits_d0 = 8'd0;
    end else begin
        challengeBits_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state27) & (icmp_ln631_reg_1132 == 1'd0)) | ((1'b1 == ap_CS_fsm_state2) & (grp_HashInit_fu_447_ap_done == 1'b1)))) begin
        challengeBits_we0 = 1'b1;
    end else begin
        challengeBits_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        circuitOutput_ce0 = grp_HashUpdate_2_fu_359_data_ce0;
    end else begin
        circuitOutput_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state21))) begin
        ctx_sponge_state_address0 = grp_HashFinal_fu_459_ctx_sponge_state_address0;
    end else if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state2))) begin
        ctx_sponge_state_address0 = grp_HashInit_fu_447_ctx_sponge_state_address0;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        ctx_sponge_state_address0 = grp_KeccakWidth1600_Spon_13_fu_436_instance_state_address0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        ctx_sponge_state_address0 = grp_KeccakWidth1600_Spon_8_fu_424_instance_state_address0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ctx_sponge_state_address0 = grp_KeccakWidth1600_Spon_9_fu_413_instance_state_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        ctx_sponge_state_address0 = grp_KeccakWidth1600_Spon_6_fu_397_instance_state_address0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        ctx_sponge_state_address0 = grp_KeccakWidth1600_Spon_14_fu_384_instance_state_address0;
    end else if (((1'b1 == ap_CS_fsm_state23) | ((1'b1 == ap_CS_fsm_state34) & (tmp_53_reg_1105 == 1'd1)))) begin
        ctx_sponge_state_address0 = grp_KeccakWidth1600_Spon_2_fu_372_instance_state_address0;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state13))) begin
        ctx_sponge_state_address0 = grp_HashUpdate_2_fu_359_ctx_sponge_state_address0;
    end else begin
        ctx_sponge_state_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state21))) begin
        ctx_sponge_state_ce0 = grp_HashFinal_fu_459_ctx_sponge_state_ce0;
    end else if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state2))) begin
        ctx_sponge_state_ce0 = grp_HashInit_fu_447_ctx_sponge_state_ce0;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        ctx_sponge_state_ce0 = grp_KeccakWidth1600_Spon_13_fu_436_instance_state_ce0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        ctx_sponge_state_ce0 = grp_KeccakWidth1600_Spon_8_fu_424_instance_state_ce0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ctx_sponge_state_ce0 = grp_KeccakWidth1600_Spon_9_fu_413_instance_state_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        ctx_sponge_state_ce0 = grp_KeccakWidth1600_Spon_6_fu_397_instance_state_ce0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        ctx_sponge_state_ce0 = grp_KeccakWidth1600_Spon_14_fu_384_instance_state_ce0;
    end else if (((1'b1 == ap_CS_fsm_state23) | ((1'b1 == ap_CS_fsm_state34) & (tmp_53_reg_1105 == 1'd1)))) begin
        ctx_sponge_state_ce0 = grp_KeccakWidth1600_Spon_2_fu_372_instance_state_ce0;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state13))) begin
        ctx_sponge_state_ce0 = grp_HashUpdate_2_fu_359_ctx_sponge_state_ce0;
    end else begin
        ctx_sponge_state_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state21))) begin
        ctx_sponge_state_d0 = grp_HashFinal_fu_459_ctx_sponge_state_d0;
    end else if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state2))) begin
        ctx_sponge_state_d0 = grp_HashInit_fu_447_ctx_sponge_state_d0;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        ctx_sponge_state_d0 = grp_KeccakWidth1600_Spon_13_fu_436_instance_state_d0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        ctx_sponge_state_d0 = grp_KeccakWidth1600_Spon_8_fu_424_instance_state_d0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ctx_sponge_state_d0 = grp_KeccakWidth1600_Spon_9_fu_413_instance_state_d0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        ctx_sponge_state_d0 = grp_KeccakWidth1600_Spon_6_fu_397_instance_state_d0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        ctx_sponge_state_d0 = grp_KeccakWidth1600_Spon_14_fu_384_instance_state_d0;
    end else if (((1'b1 == ap_CS_fsm_state23) | ((1'b1 == ap_CS_fsm_state34) & (tmp_53_reg_1105 == 1'd1)))) begin
        ctx_sponge_state_d0 = grp_KeccakWidth1600_Spon_2_fu_372_instance_state_d0;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state13))) begin
        ctx_sponge_state_d0 = grp_HashUpdate_2_fu_359_ctx_sponge_state_d0;
    end else begin
        ctx_sponge_state_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state21))) begin
        ctx_sponge_state_we0 = grp_HashFinal_fu_459_ctx_sponge_state_we0;
    end else if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state2))) begin
        ctx_sponge_state_we0 = grp_HashInit_fu_447_ctx_sponge_state_we0;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        ctx_sponge_state_we0 = grp_KeccakWidth1600_Spon_13_fu_436_instance_state_we0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        ctx_sponge_state_we0 = grp_KeccakWidth1600_Spon_8_fu_424_instance_state_we0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ctx_sponge_state_we0 = grp_KeccakWidth1600_Spon_9_fu_413_instance_state_we0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        ctx_sponge_state_we0 = grp_KeccakWidth1600_Spon_6_fu_397_instance_state_we0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        ctx_sponge_state_we0 = grp_KeccakWidth1600_Spon_14_fu_384_instance_state_we0;
    end else if (((1'b1 == ap_CS_fsm_state23) | ((1'b1 == ap_CS_fsm_state34) & (tmp_53_reg_1105 == 1'd1)))) begin
        ctx_sponge_state_we0 = grp_KeccakWidth1600_Spon_2_fu_372_instance_state_we0;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state13))) begin
        ctx_sponge_state_we0 = grp_HashUpdate_2_fu_359_ctx_sponge_state_we0;
    end else begin
        ctx_sponge_state_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_HashFinal_fu_459_ctx_sponge_byteIOInd = ctx_sponge_byteIOInd_63_reg_1164;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_HashFinal_fu_459_ctx_sponge_byteIOInd = ctx_sponge_byteIOInd_60_reg_1095;
    end else begin
        grp_HashFinal_fu_459_ctx_sponge_byteIOInd = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_HashUpdate_2_fu_359_ctx_sponge_byteIOInd = reg_497;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_HashUpdate_2_fu_359_ctx_sponge_byteIOInd = reg_491;
    end else begin
        grp_HashUpdate_2_fu_359_ctx_sponge_byteIOInd = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_HashUpdate_2_fu_359_data_q0 = plaintext_q0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_HashUpdate_2_fu_359_data_q0 = circuitOutput_q0;
    end else begin
        grp_HashUpdate_2_fu_359_data_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        hash_address0 = zext_ln626_fu_756_p1;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        hash_address0 = grp_KeccakWidth1600_Spon_13_fu_436_data_address0;
    end else if (((1'b1 == ap_CS_fsm_state23) | ((1'b1 == ap_CS_fsm_state34) & (tmp_53_reg_1105 == 1'd1)))) begin
        hash_address0 = grp_KeccakWidth1600_Spon_2_fu_372_data_address0;
    end else begin
        hash_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        hash_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        hash_ce0 = grp_KeccakWidth1600_Spon_13_fu_436_data_ce0;
    end else if (((1'b1 == ap_CS_fsm_state23) | ((1'b1 == ap_CS_fsm_state34) & (tmp_53_reg_1105 == 1'd1)))) begin
        hash_ce0 = grp_KeccakWidth1600_Spon_2_fu_372_data_ce0;
    end else begin
        hash_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((1'b1 == ap_CS_fsm_state34) & (tmp_53_reg_1105 == 1'd1)))) begin
        hash_we0 = grp_KeccakWidth1600_Spon_2_fu_372_data_we0;
    end else begin
        hash_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        plaintext_ce0 = grp_HashUpdate_2_fu_359_data_ce0;
    end else begin
        plaintext_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        temp_address0 = zext_ln45_fu_706_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        temp_address0 = zext_ln37_reg_1015;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        temp_address0 = zext_ln34_fu_584_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        temp_address0 = grp_KeccakWidth1600_Spon_9_fu_413_data_address0;
    end else begin
        temp_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        temp_address1 = zext_ln43_fu_696_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        temp_address1 = zext_ln41_fu_666_p1;
    end else begin
        temp_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        temp_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        temp_ce0 = grp_KeccakWidth1600_Spon_9_fu_413_data_ce0;
    end else begin
        temp_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        temp_ce1 = 1'b1;
    end else begin
        temp_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        temp_d0 = trunc_ln9_reg_1050;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        temp_d0 = trunc_ln39_fu_645_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        temp_d0 = 8'd0;
    end else begin
        temp_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        temp_d1 = trunc_ln8_reg_1045;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        temp_d1 = {{viewOutputs_q0[15:8]}};
    end else begin
        temp_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        temp_we0 = 1'b1;
    end else begin
        temp_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        temp_we1 = 1'b1;
    end else begin
        temp_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        viewOutputs_ce0 = 1'b1;
    end else begin
        viewOutputs_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (grp_HashInit_fu_447_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln576_fu_522_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln577_fu_561_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln34_fu_589_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (tmp_55_fu_599_p3 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state9 : begin
            if (((grp_KeccakWidth1600_Spon_9_fu_413_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln594_fu_716_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln595_fu_736_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((grp_KeccakWidth1600_Spon_6_fu_397_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (grp_HashUpdate_2_fu_359_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (grp_HashUpdate_2_fu_359_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            if (((grp_KeccakWidth1600_Spon_8_fu_424_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            if (((grp_KeccakWidth1600_Spon_14_fu_384_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            if (((1'b1 == ap_CS_fsm_state21) & (grp_HashFinal_fu_459_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            if (((grp_KeccakWidth1600_Spon_2_fu_372_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state24 : begin
            if (((1'b1 == ap_CS_fsm_state24) & (tmp_53_fu_761_p3 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            if (((1'b1 == ap_CS_fsm_state26) & (tmp_54_fu_769_p3 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state27 : begin
            if (((1'b1 == ap_CS_fsm_state27) & (icmp_ln631_reg_1132 == 1'd0) & (icmp_ln634_fu_945_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state28 : begin
            if (((1'b1 == ap_CS_fsm_state28) & (grp_HashInit_fu_447_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            if (((grp_KeccakWidth1600_Spon_13_fu_436_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state30))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            if (((1'b1 == ap_CS_fsm_state32) & (grp_HashFinal_fu_459_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            if (((1'b1 == ap_CS_fsm_state34) & (1'b0 == ap_block_state34_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln34_fu_578_p2 = (phi_ln34_reg_301 + 7'd1);

assign add_ln589_fu_573_p2 = (zext_ln577_fu_557_p1 + sub_ln589_reg_982);

assign and_ln66_3_fu_927_p2 = (xor_ln66_7_fu_915_p2 & or_ln66_fu_882_p2);

assign and_ln66_fu_876_p2 = (xor_ln66_5_fu_864_p2 & challengeBits_q0);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state34_on_subcall_done = ((grp_KeccakWidth1600_Spon_2_fu_372_ap_done == 1'b0) & (tmp_53_reg_1105 == 1'd1));
end

assign as_hashes_address0 = grp_KeccakWidth1600_Spon_6_fu_397_data_address0;

assign as_hashes_ce0 = grp_KeccakWidth1600_Spon_6_fu_397_data_ce0;

assign bitNumber_assign_fu_838_p3 = {{trunc_ln378_reg_1141}, {1'd0}};

assign bitPair_fu_796_p1 = lshr_ln630_fu_787_p2[1:0];

assign circuitOutput_address0 = grp_HashUpdate_2_fu_359_data_address0;

assign grp_HashFinal_fu_459_ap_start = grp_HashFinal_fu_459_ap_start_reg;

assign grp_HashInit_fu_447_ap_start = grp_HashInit_fu_447_ap_start_reg;

assign grp_HashUpdate_2_fu_359_ap_start = grp_HashUpdate_2_fu_359_ap_start_reg;

assign grp_KeccakWidth1600_Spon_13_fu_436_ap_start = grp_KeccakWidth1600_Spon_13_fu_436_ap_start_reg;

assign grp_KeccakWidth1600_Spon_14_fu_384_ap_start = grp_KeccakWidth1600_Spon_14_fu_384_ap_start_reg;

assign grp_KeccakWidth1600_Spon_2_fu_372_ap_start = grp_KeccakWidth1600_Spon_2_fu_372_ap_start_reg;

assign grp_KeccakWidth1600_Spon_6_fu_397_ap_start = grp_KeccakWidth1600_Spon_6_fu_397_ap_start_reg;

assign grp_KeccakWidth1600_Spon_8_fu_424_ap_start = grp_KeccakWidth1600_Spon_8_fu_424_ap_start_reg;

assign grp_KeccakWidth1600_Spon_9_fu_413_ap_start = grp_KeccakWidth1600_Spon_9_fu_413_ap_start_reg;

assign i_30_fu_722_p2 = (i_1_reg_323 + 8'd1);

assign i_33_fu_828_p2 = (i_32_load_reg_1100 + 6'd1);

assign i_fu_528_p2 = (i_0_reg_279 + 8'd1);

assign icmp_ln34_fu_589_p2 = ((phi_ln34_reg_301 == 7'd74) ? 1'b1 : 1'b0);

assign icmp_ln576_fu_522_p2 = ((i_0_reg_279 == 8'd219) ? 1'b1 : 1'b0);

assign icmp_ln577_fu_561_p2 = ((j_0_reg_290 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln594_fu_716_p2 = ((i_1_reg_323 == 8'd219) ? 1'b1 : 1'b0);

assign icmp_ln595_fu_736_p2 = ((j_1_reg_335 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln631_fu_800_p2 = ((bitPair_fu_796_p1 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln634_fu_945_p2 = ((round_fu_940_p2 == 64'd219) ? 1'b1 : 1'b0);

assign j_17_fu_567_p2 = (j_0_reg_290 + 2'd1);

assign j_18_fu_956_p2 = (j2_0_reg_347 + 4'd2);

assign j_fu_742_p2 = (j_1_reg_335 + 2'd1);

assign loop_fu_639_p2 = (5'd4 + loop_0_i_reg_312);

assign lshr_ln630_fu_787_p2 = byte_reg_1114 >> sext_ln630_fu_783_p1;

assign message_address0 = grp_KeccakWidth1600_Spon_14_fu_384_data_address0;

assign message_ce0 = grp_KeccakWidth1600_Spon_14_fu_384_data_ce0;

assign or_ln41_fu_661_p2 = (trunc_ln37_reg_1028 | 4'd1);

assign or_ln43_fu_691_p2 = (trunc_ln37_reg_1028 | 4'd2);

assign or_ln45_fu_701_p2 = (trunc_ln37_reg_1028 | 4'd3);

assign or_ln66_3_fu_933_p2 = (shl_ln66_11_fu_921_p2 | and_ln66_3_fu_927_p2);

assign or_ln66_fu_882_p2 = (shl_ln66_9_fu_870_p2 | and_ln66_fu_876_p2);

assign plaintext_address0 = grp_HashUpdate_2_fu_359_data_address0;

assign round_fu_940_p2 = (64'd1 + round_1_fu_176);

assign salt_0_address0 = grp_KeccakWidth1600_Spon_8_fu_424_data_0_address0;

assign salt_0_ce0 = grp_KeccakWidth1600_Spon_8_fu_424_data_0_ce0;

assign sext_ln38_fu_626_p1 = $signed(tmp_fu_617_p4);

assign sext_ln630_fu_783_p1 = $signed(sub_ln630_fu_777_p2);

assign shl_ln66_10_fu_909_p2 = 8'd1 << zext_ln66_4_fu_905_p1;

assign shl_ln66_11_fu_921_p2 = zext_ln379_fu_895_p1 << zext_ln66_4_fu_905_p1;

assign shl_ln66_9_fu_870_p2 = zext_ln378_fu_845_p1 << zext_ln66_3_fu_854_p1;

assign shl_ln66_fu_858_p2 = 8'd1 << zext_ln66_3_fu_854_p1;

assign shl_ln_fu_534_p3 = {{i_0_reg_279}, {2'd0}};

assign sub_ln589_fu_546_p2 = (zext_ln589_fu_542_p1 - zext_ln576_fu_518_p1);

assign sub_ln630_fu_777_p2 = (4'd6 - j2_0_reg_347);

assign tmp_53_fu_761_p3 = i_32_fu_172[32'd5];

assign tmp_54_fu_769_p3 = j2_0_reg_347[32'd3];

assign tmp_55_fu_599_p3 = loop_0_i_reg_312[32'd4];

assign tmp_56_fu_888_p3 = lshr_ln630_reg_1122[32'd1];

assign tmp_fu_617_p4 = {{{add_ln589_reg_1002}, {2'd0}}, {trunc_ln_fu_607_p4}};

assign trunc_ln10_fu_813_p4 = {{round_1_fu_176[30:2]}};

assign trunc_ln378_fu_809_p1 = round_1_fu_176[1:0];

assign trunc_ln37_fu_635_p1 = loop_0_i_reg_312[3:0];

assign trunc_ln39_fu_645_p1 = viewOutputs_q0[7:0];

assign trunc_ln41_1_fu_728_p1 = messageByteLength[60:0];

assign trunc_ln630_fu_792_p1 = lshr_ln630_fu_787_p2[0:0];

assign trunc_ln_fu_607_p4 = {{loop_0_i_reg_312[3:2]}};

assign viewOutputs_address0 = zext_ln38_fu_630_p1;

assign xor_ln66_5_fu_864_p2 = (shl_ln66_fu_858_p2 ^ 8'd255);

assign xor_ln66_6_fu_899_p2 = (bitNumber_assign_fu_838_p3 ^ 3'd6);

assign xor_ln66_7_fu_915_p2 = (shl_ln66_10_fu_909_p2 ^ 8'd255);

assign xor_ln66_fu_848_p2 = (bitNumber_assign_fu_838_p3 ^ 3'd7);

assign zext_ln34_fu_584_p1 = phi_ln34_reg_301;

assign zext_ln378_fu_845_p1 = trunc_ln630_reg_1127;

assign zext_ln379_fu_895_p1 = tmp_56_fu_888_p3;

assign zext_ln37_fu_595_p1 = loop_0_i_reg_312;

assign zext_ln38_fu_630_p1 = $unsigned(sext_ln38_fu_626_p1);

assign zext_ln41_fu_666_p1 = or_ln41_fu_661_p2;

assign zext_ln43_fu_696_p1 = or_ln43_fu_691_p2;

assign zext_ln45_fu_706_p1 = or_ln45_fu_701_p2;

assign zext_ln576_fu_518_p1 = i_0_reg_279;

assign zext_ln577_fu_557_p1 = j_0_reg_290;

assign zext_ln589_fu_542_p1 = shl_ln_fu_534_p3;

assign zext_ln626_fu_756_p1 = i_32_fu_172;

assign zext_ln66_3_fu_854_p1 = xor_ln66_fu_848_p2;

assign zext_ln66_4_fu_905_p1 = xor_ln66_6_fu_899_p2;

assign zext_ln66_fu_823_p1 = trunc_ln10_fu_813_p4;

always @ (posedge ap_clk) begin
    zext_ln37_reg_1015[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
end

endmodule //H3_2
