

================================================================
== Vivado HLS Report for 'H3_2'
================================================================
* Date:           Thu May  7 18:00:35 2020

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        picnic1
* Solution:       sing_open
* Product family: artix7
* Target device:  xc7a200t-fbg676-2


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 8.579 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------------+---------+---------+----------+-----------+-----------+-------+----------+
        |                          |  Latency (cycles) | Iteration|  Initiation Interval  |  Trip |          |
        |         Loop Name        |   min   |   max   |  Latency |  achieved |   target  | Count | Pipelined|
        +--------------------------+---------+---------+----------+-----------+-----------+-------+----------+
        |- Loop 1                  |        ?|        ?|         ?|          -|          -|    219|    no    |
        | + Loop 1.1               |        ?|        ?|         ?|          -|          -|      3|    no    |
        |  ++ memset_temp          |       74|       74|         1|          -|          -|     75|    no    |
        |  ++ HashUpdate_2_label2  |       12|       12|         3|          -|          -|      4|    no    |
        |- Loop 2                  |        ?|        ?|         ?|          -|          -|    219|    no    |
        | + Loop 2.1               |        ?|        ?|         ?|          -|          -|      3|    no    |
        |- Loop 3                  |        ?|        ?|         ?|          -|          -|      ?|    no    |
        | + Loop 3.1               |        2|        9|         2|          -|          -| 1 ~ 4 |    no    |
        +--------------------------+---------+---------+----------+-----------+-----------+-------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 1
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 34
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 10 
4 --> 5 3 
5 --> 5 6 
6 --> 7 9 
7 --> 8 
8 --> 6 
9 --> 4 
10 --> 13 11 
11 --> 12 10 
12 --> 11 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 28 
25 --> 26 
26 --> 27 34 
27 --> 26 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 33 
33 --> 34 
34 --> 24 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.35>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%ctx_sponge_byteIOInd = alloca i32"   --->   Operation 35 'alloca' 'ctx_sponge_byteIOInd' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%temp = alloca [75 x i8], align 16" [hash.c:34->picnic_impl.c:589]   --->   Operation 36 'alloca' 'temp' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 55> <RAM>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%hash = alloca [32 x i8], align 16" [picnic_impl.c:560]   --->   Operation 37 'alloca' 'hash' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 55> <RAM>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%ctx_sponge_state = alloca [200 x i8], align 1" [picnic_impl.c:561]   --->   Operation 38 'alloca' 'ctx_sponge_state' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [2/2] (1.35ns)   --->   "%ctx_sponge_byteIOInd_50 = call fastcc i32 @HashInit([200 x i8]* %ctx_sponge_state, i4 1)" [picnic_impl.c:573]   --->   Operation 39 'call' 'ctx_sponge_byteIOInd_50' <Predicate = true> <Delay = 1.35> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 2 <SV = 1> <Delay = 2.70>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%messageByteLength_re = call i64 @_ssdm_op_Read.ap_auto.i64(i64 %messageByteLength)"   --->   Operation 40 'read' 'messageByteLength_re' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%challengeBits_addr = getelementptr [55 x i8]* %challengeBits, i64 0, i64 54" [picnic_impl.c:570]   --->   Operation 41 'getelementptr' 'challengeBits_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (1.75ns)   --->   "store i8 0, i8* %challengeBits_addr, align 1" [picnic_impl.c:570]   --->   Operation 42 'store' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 55> <RAM>
ST_2 : Operation 43 [1/2] (1.35ns)   --->   "%ctx_sponge_byteIOInd_50 = call fastcc i32 @HashInit([200 x i8]* %ctx_sponge_state, i4 1)" [picnic_impl.c:573]   --->   Operation 43 'call' 'ctx_sponge_byteIOInd_50' <Predicate = true> <Delay = 1.35> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 44 [1/1] (1.35ns)   --->   "store i32 %ctx_sponge_byteIOInd_50, i32* %ctx_sponge_byteIOInd" [picnic_impl.c:576]   --->   Operation 44 'store' <Predicate = true> <Delay = 1.35>
ST_2 : Operation 45 [1/1] (1.35ns)   --->   "br label %.loopexit" [picnic_impl.c:576]   --->   Operation 45 'br' <Predicate = true> <Delay = 1.35>

State 3 <SV = 2> <Delay = 1.74>
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "%i_0 = phi i8 [ 0, %0 ], [ %i, %.loopexit.loopexit ]"   --->   Operation 46 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "%ctx_sponge_byteIOInd_51 = load i32* %ctx_sponge_byteIOInd"   --->   Operation 47 'load' 'ctx_sponge_byteIOInd_51' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "%zext_ln576 = zext i8 %i_0 to i11" [picnic_impl.c:576]   --->   Operation 48 'zext' 'zext_ln576' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 49 [1/1] (1.24ns)   --->   "%icmp_ln576 = icmp eq i8 %i_0, -37" [picnic_impl.c:576]   --->   Operation 49 'icmp' 'icmp_ln576' <Predicate = true> <Delay = 1.24> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 50 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 219, i64 219, i64 219)"   --->   Operation 50 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 51 [1/1] (1.71ns)   --->   "%i = add i8 %i_0, 1" [picnic_impl.c:576]   --->   Operation 51 'add' 'i' <Predicate = true> <Delay = 1.71> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.60> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 52 [1/1] (0.00ns)   --->   "br i1 %icmp_ln576, label %.preheader6.preheader, label %.preheader7.preheader" [picnic_impl.c:576]   --->   Operation 52 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "%shl_ln = call i10 @_ssdm_op_BitConcatenate.i10.i8.i2(i8 %i_0, i2 0)" [picnic_impl.c:589]   --->   Operation 53 'bitconcatenate' 'shl_ln' <Predicate = (!icmp_ln576)> <Delay = 0.00>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "%zext_ln589 = zext i10 %shl_ln to i11" [picnic_impl.c:589]   --->   Operation 54 'zext' 'zext_ln589' <Predicate = (!icmp_ln576)> <Delay = 0.00>
ST_3 : Operation 55 [1/1] (1.74ns)   --->   "%sub_ln589 = sub i11 %zext_ln589, %zext_ln576" [picnic_impl.c:589]   --->   Operation 55 'sub' 'sub_ln589' <Predicate = (!icmp_ln576)> <Delay = 1.74> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.60> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 56 [1/1] (1.35ns)   --->   "br label %.preheader7" [picnic_impl.c:577]   --->   Operation 56 'br' <Predicate = (!icmp_ln576)> <Delay = 1.35>
ST_3 : Operation 57 [1/1] (0.00ns)   --->   "%ctx_sponge_byteIOInd_49 = alloca i32"   --->   Operation 57 'alloca' 'ctx_sponge_byteIOInd_49' <Predicate = (icmp_ln576)> <Delay = 0.00>
ST_3 : Operation 58 [1/1] (1.35ns)   --->   "store i32 %ctx_sponge_byteIOInd_51, i32* %ctx_sponge_byteIOInd_49" [picnic_impl.c:594]   --->   Operation 58 'store' <Predicate = (icmp_ln576)> <Delay = 1.35>
ST_3 : Operation 59 [1/1] (1.35ns)   --->   "br label %.preheader6" [picnic_impl.c:594]   --->   Operation 59 'br' <Predicate = (icmp_ln576)> <Delay = 1.35>

State 4 <SV = 3> <Delay = 1.76>
ST_4 : Operation 60 [1/1] (0.00ns)   --->   "%j_0 = phi i2 [ 0, %.preheader7.preheader ], [ %j_17, %HashUpdate_2.2.exit ]"   --->   Operation 60 'phi' 'j_0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 61 [1/1] (0.00ns)   --->   "%zext_ln577 = zext i2 %j_0 to i11" [picnic_impl.c:577]   --->   Operation 61 'zext' 'zext_ln577' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 62 [1/1] (0.79ns)   --->   "%icmp_ln577 = icmp eq i2 %j_0, -1" [picnic_impl.c:577]   --->   Operation 62 'icmp' 'icmp_ln577' <Predicate = true> <Delay = 0.79> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 63 [1/1] (0.00ns)   --->   "%empty_420 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3)"   --->   Operation 63 'speclooptripcount' 'empty_420' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 64 [1/1] (1.20ns)   --->   "%j_17 = add i2 %j_0, 1" [picnic_impl.c:577]   --->   Operation 64 'add' 'j_17' <Predicate = true> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.60> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 65 [1/1] (0.00ns)   --->   "br i1 %icmp_ln577, label %.loopexit.loopexit, label %1" [picnic_impl.c:577]   --->   Operation 65 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 66 [1/1] (1.76ns)   --->   "%add_ln589 = add i11 %zext_ln577, %sub_ln589" [picnic_impl.c:589]   --->   Operation 66 'add' 'add_ln589' <Predicate = (!icmp_ln577)> <Delay = 1.76> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.60> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 67 [1/1] (1.35ns)   --->   "br label %meminst.i"   --->   Operation 67 'br' <Predicate = (!icmp_ln577)> <Delay = 1.35>
ST_4 : Operation 68 [1/1] (0.00ns)   --->   "br label %.loopexit"   --->   Operation 68 'br' <Predicate = (icmp_ln577)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 1.77>
ST_5 : Operation 69 [1/1] (0.00ns)   --->   "%phi_ln34 = phi i7 [ 0, %1 ], [ %add_ln34, %meminst.i ]" [hash.c:34->picnic_impl.c:589]   --->   Operation 69 'phi' 'phi_ln34' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 70 [1/1] (1.66ns)   --->   "%add_ln34 = add i7 %phi_ln34, 1" [hash.c:34->picnic_impl.c:589]   --->   Operation 70 'add' 'add_ln34' <Predicate = true> <Delay = 1.66> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.60> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 71 [1/1] (0.00ns)   --->   "%zext_ln34 = zext i7 %phi_ln34 to i64" [hash.c:34->picnic_impl.c:589]   --->   Operation 71 'zext' 'zext_ln34' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 72 [1/1] (0.00ns)   --->   "%temp_addr = getelementptr [75 x i8]* %temp, i64 0, i64 %zext_ln34" [hash.c:34->picnic_impl.c:589]   --->   Operation 72 'getelementptr' 'temp_addr' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 73 [1/1] (1.77ns)   --->   "store i8 0, i8* %temp_addr, align 1" [hash.c:34->picnic_impl.c:589]   --->   Operation 73 'store' <Predicate = true> <Delay = 1.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 55> <RAM>
ST_5 : Operation 74 [1/1] (1.23ns)   --->   "%icmp_ln34 = icmp eq i7 %phi_ln34, -54" [hash.c:34->picnic_impl.c:589]   --->   Operation 74 'icmp' 'icmp_ln34' <Predicate = true> <Delay = 1.23> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 75 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([12 x i8]* @memset_temp_str)"   --->   Operation 75 'specloopname' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 76 [1/1] (0.00ns)   --->   "%empty_421 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 75, i64 75, i64 75)"   --->   Operation 76 'speclooptripcount' 'empty_421' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 77 [1/1] (0.00ns)   --->   "br i1 %icmp_ln34, label %.preheader.i.preheader, label %meminst.i" [hash.c:34->picnic_impl.c:589]   --->   Operation 77 'br' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 78 [1/1] (1.35ns)   --->   "br label %.preheader.i" [hash.c:37->picnic_impl.c:589]   --->   Operation 78 'br' <Predicate = (icmp_ln34)> <Delay = 1.35>

State 6 <SV = 5> <Delay = 2.77>
ST_6 : Operation 79 [1/1] (0.00ns)   --->   "%loop_0_i = phi i5 [ %loop, %2 ], [ 0, %.preheader.i.preheader ]"   --->   Operation 79 'phi' 'loop_0_i' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 80 [1/1] (0.00ns)   --->   "%zext_ln37 = zext i5 %loop_0_i to i64" [hash.c:37->picnic_impl.c:589]   --->   Operation 80 'zext' 'zext_ln37' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 81 [1/1] (0.00ns)   --->   "%tmp_55 = call i1 @_ssdm_op_BitSelect.i1.i5.i32(i5 %loop_0_i, i32 4)" [hash.c:37->picnic_impl.c:589]   --->   Operation 81 'bitselect' 'tmp_55' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 82 [1/1] (0.00ns)   --->   "%empty_422 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4)"   --->   Operation 82 'speclooptripcount' 'empty_422' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 83 [1/1] (0.00ns)   --->   "br i1 %tmp_55, label %HashUpdate_2.2.exit, label %2" [hash.c:37->picnic_impl.c:589]   --->   Operation 83 'br' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 84 [1/1] (0.00ns)   --->   "%trunc_ln = call i2 @_ssdm_op_PartSelect.i2.i5.i32.i32(i5 %loop_0_i, i32 2, i32 3)" [hash.c:38->picnic_impl.c:589]   --->   Operation 84 'partselect' 'trunc_ln' <Predicate = (!tmp_55)> <Delay = 0.00>
ST_6 : Operation 85 [1/1] (0.00ns)   --->   "%tmp = call i15 @_ssdm_op_BitConcatenate.i15.i11.i2.i2(i11 %add_ln589, i2 0, i2 %trunc_ln)" [hash.c:38->picnic_impl.c:589]   --->   Operation 85 'bitconcatenate' 'tmp' <Predicate = (!tmp_55)> <Delay = 0.00>
ST_6 : Operation 86 [1/1] (0.00ns)   --->   "%sext_ln38 = sext i15 %tmp to i36" [hash.c:38->picnic_impl.c:589]   --->   Operation 86 'sext' 'sext_ln38' <Predicate = (!tmp_55)> <Delay = 0.00>
ST_6 : Operation 87 [1/1] (0.00ns)   --->   "%zext_ln38 = zext i36 %sext_ln38 to i64" [hash.c:38->picnic_impl.c:589]   --->   Operation 87 'zext' 'zext_ln38' <Predicate = (!tmp_55)> <Delay = 0.00>
ST_6 : Operation 88 [1/1] (0.00ns)   --->   "%viewOutputs_addr = getelementptr [10512 x i32]* @viewOutputs, i64 0, i64 %zext_ln38" [hash.c:38->picnic_impl.c:589]   --->   Operation 88 'getelementptr' 'viewOutputs_addr' <Predicate = (!tmp_55)> <Delay = 0.00>
ST_6 : Operation 89 [2/2] (2.77ns)   --->   "%temp2 = load i32* %viewOutputs_addr, align 4" [hash.c:38->picnic_impl.c:589]   --->   Operation 89 'load' 'temp2' <Predicate = (!tmp_55)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 55> <RAM>
ST_6 : Operation 90 [1/1] (0.00ns)   --->   "%trunc_ln37 = trunc i5 %loop_0_i to i4" [hash.c:37->picnic_impl.c:589]   --->   Operation 90 'trunc' 'trunc_ln37' <Predicate = (!tmp_55)> <Delay = 0.00>
ST_6 : Operation 91 [1/1] (1.54ns)   --->   "%loop = add i5 4, %loop_0_i" [hash.c:37->picnic_impl.c:589]   --->   Operation 91 'add' 'loop' <Predicate = (!tmp_55)> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.60> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 92 [1/1] (0.00ns)   --->   "%ctx_sponge_byteIOInd_52 = load i32* %ctx_sponge_byteIOInd" [sha3/KeccakHash.c:41->hash.c:47->picnic_impl.c:589]   --->   Operation 92 'load' 'ctx_sponge_byteIOInd_52' <Predicate = (tmp_55)> <Delay = 0.00>
ST_6 : Operation 93 [2/2] (1.45ns)   --->   "%ctx_sponge_byteIOInd_53 = call fastcc i32 @KeccakWidth1600_Spon.9([200 x i8]* %ctx_sponge_state, i32 %ctx_sponge_byteIOInd_52, [75 x i8]* %temp)" [sha3/KeccakHash.c:41->hash.c:47->picnic_impl.c:589]   --->   Operation 93 'call' 'ctx_sponge_byteIOInd_53' <Predicate = (tmp_55)> <Delay = 1.45> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 7 <SV = 6> <Delay = 4.54>
ST_7 : Operation 94 [1/2] (2.77ns)   --->   "%temp2 = load i32* %viewOutputs_addr, align 4" [hash.c:38->picnic_impl.c:589]   --->   Operation 94 'load' 'temp2' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 55> <RAM>
ST_7 : Operation 95 [1/1] (0.00ns)   --->   "%trunc_ln39 = trunc i32 %temp2 to i8" [hash.c:39->picnic_impl.c:589]   --->   Operation 95 'trunc' 'trunc_ln39' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 96 [1/1] (0.00ns)   --->   "%temp_addr_10 = getelementptr inbounds [75 x i8]* %temp, i64 0, i64 %zext_ln37" [hash.c:39->picnic_impl.c:589]   --->   Operation 96 'getelementptr' 'temp_addr_10' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 97 [1/1] (1.77ns)   --->   "store i8 %trunc_ln39, i8* %temp_addr_10, align 4" [hash.c:39->picnic_impl.c:589]   --->   Operation 97 'store' <Predicate = true> <Delay = 1.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 55> <RAM>
ST_7 : Operation 98 [1/1] (0.00ns)   --->   "%trunc_ln7 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %temp2, i32 8, i32 15)" [hash.c:41->picnic_impl.c:589]   --->   Operation 98 'partselect' 'trunc_ln7' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 99 [1/1] (0.00ns)   --->   "%or_ln41 = or i4 %trunc_ln37, 1" [hash.c:41->picnic_impl.c:589]   --->   Operation 99 'or' 'or_ln41' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 100 [1/1] (0.00ns)   --->   "%zext_ln41 = zext i4 %or_ln41 to i64" [hash.c:41->picnic_impl.c:589]   --->   Operation 100 'zext' 'zext_ln41' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 101 [1/1] (0.00ns)   --->   "%temp_addr_11 = getelementptr inbounds [75 x i8]* %temp, i64 0, i64 %zext_ln41" [hash.c:41->picnic_impl.c:589]   --->   Operation 101 'getelementptr' 'temp_addr_11' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 102 [1/1] (1.77ns)   --->   "store i8 %trunc_ln7, i8* %temp_addr_11, align 1" [hash.c:41->picnic_impl.c:589]   --->   Operation 102 'store' <Predicate = true> <Delay = 1.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 55> <RAM>
ST_7 : Operation 103 [1/1] (0.00ns)   --->   "%trunc_ln8 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %temp2, i32 16, i32 23)" [hash.c:43->picnic_impl.c:589]   --->   Operation 103 'partselect' 'trunc_ln8' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 104 [1/1] (0.00ns)   --->   "%trunc_ln9 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %temp2, i32 24, i32 31)" [hash.c:45->picnic_impl.c:589]   --->   Operation 104 'partselect' 'trunc_ln9' <Predicate = true> <Delay = 0.00>

State 8 <SV = 7> <Delay = 1.77>
ST_8 : Operation 105 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([20 x i8]* @p_str90) nounwind" [hash.c:37->picnic_impl.c:589]   --->   Operation 105 'specloopname' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 106 [1/1] (0.00ns)   --->   "%or_ln43 = or i4 %trunc_ln37, 2" [hash.c:43->picnic_impl.c:589]   --->   Operation 106 'or' 'or_ln43' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 107 [1/1] (0.00ns)   --->   "%zext_ln43 = zext i4 %or_ln43 to i64" [hash.c:43->picnic_impl.c:589]   --->   Operation 107 'zext' 'zext_ln43' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 108 [1/1] (0.00ns)   --->   "%temp_addr_12 = getelementptr inbounds [75 x i8]* %temp, i64 0, i64 %zext_ln43" [hash.c:43->picnic_impl.c:589]   --->   Operation 108 'getelementptr' 'temp_addr_12' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 109 [1/1] (1.77ns)   --->   "store i8 %trunc_ln8, i8* %temp_addr_12, align 2" [hash.c:43->picnic_impl.c:589]   --->   Operation 109 'store' <Predicate = true> <Delay = 1.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 55> <RAM>
ST_8 : Operation 110 [1/1] (0.00ns)   --->   "%or_ln45 = or i4 %trunc_ln37, 3" [hash.c:45->picnic_impl.c:589]   --->   Operation 110 'or' 'or_ln45' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 111 [1/1] (0.00ns)   --->   "%zext_ln45 = zext i4 %or_ln45 to i64" [hash.c:45->picnic_impl.c:589]   --->   Operation 111 'zext' 'zext_ln45' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 112 [1/1] (0.00ns)   --->   "%temp_addr_13 = getelementptr inbounds [75 x i8]* %temp, i64 0, i64 %zext_ln45" [hash.c:45->picnic_impl.c:589]   --->   Operation 112 'getelementptr' 'temp_addr_13' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 113 [1/1] (1.77ns)   --->   "store i8 %trunc_ln9, i8* %temp_addr_13, align 1" [hash.c:45->picnic_impl.c:589]   --->   Operation 113 'store' <Predicate = true> <Delay = 1.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 55> <RAM>
ST_8 : Operation 114 [1/1] (0.00ns)   --->   "br label %.preheader.i" [hash.c:37->picnic_impl.c:589]   --->   Operation 114 'br' <Predicate = true> <Delay = 0.00>

State 9 <SV = 6> <Delay = 1.35>
ST_9 : Operation 115 [1/2] (0.00ns)   --->   "%ctx_sponge_byteIOInd_53 = call fastcc i32 @KeccakWidth1600_Spon.9([200 x i8]* %ctx_sponge_state, i32 %ctx_sponge_byteIOInd_52, [75 x i8]* %temp)" [sha3/KeccakHash.c:41->hash.c:47->picnic_impl.c:589]   --->   Operation 115 'call' 'ctx_sponge_byteIOInd_53' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_9 : Operation 116 [1/1] (1.35ns)   --->   "store i32 %ctx_sponge_byteIOInd_53, i32* %ctx_sponge_byteIOInd" [picnic_impl.c:577]   --->   Operation 116 'store' <Predicate = true> <Delay = 1.35>
ST_9 : Operation 117 [1/1] (0.00ns)   --->   "br label %.preheader7" [picnic_impl.c:577]   --->   Operation 117 'br' <Predicate = true> <Delay = 0.00>

State 10 <SV = 3> <Delay = 1.71>
ST_10 : Operation 118 [1/1] (0.00ns)   --->   "%i_1 = phi i8 [ 0, %.preheader6.preheader ], [ %i_30, %.preheader6.loopexit ]"   --->   Operation 118 'phi' 'i_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 119 [1/1] (1.24ns)   --->   "%icmp_ln594 = icmp eq i8 %i_1, -37" [picnic_impl.c:594]   --->   Operation 119 'icmp' 'icmp_ln594' <Predicate = true> <Delay = 1.24> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 120 [1/1] (0.00ns)   --->   "%empty_423 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 219, i64 219, i64 219)"   --->   Operation 120 'speclooptripcount' 'empty_423' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 121 [1/1] (1.71ns)   --->   "%i_30 = add i8 %i_1, 1" [picnic_impl.c:594]   --->   Operation 121 'add' 'i_30' <Predicate = true> <Delay = 1.71> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.60> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 122 [1/1] (0.00ns)   --->   "br i1 %icmp_ln594, label %HashSqueeze.1.exit, label %.preheader.preheader" [picnic_impl.c:594]   --->   Operation 122 'br' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 123 [1/1] (1.35ns)   --->   "br label %.preheader" [picnic_impl.c:595]   --->   Operation 123 'br' <Predicate = (!icmp_ln594)> <Delay = 1.35>
ST_10 : Operation 124 [1/1] (0.00ns)   --->   "%i_32 = alloca i6"   --->   Operation 124 'alloca' 'i_32' <Predicate = (icmp_ln594)> <Delay = 0.00>
ST_10 : Operation 125 [1/1] (0.00ns)   --->   "%round_1 = alloca i64"   --->   Operation 125 'alloca' 'round_1' <Predicate = (icmp_ln594)> <Delay = 0.00>
ST_10 : Operation 126 [1/1] (0.00ns)   --->   "%ctx_sponge_byteIOInd_56 = load i32* %ctx_sponge_byteIOInd_49" [picnic_impl.c:613]   --->   Operation 126 'load' 'ctx_sponge_byteIOInd_56' <Predicate = (icmp_ln594)> <Delay = 0.00>
ST_10 : Operation 127 [2/2] (1.35ns)   --->   "%ctx_sponge_byteIOInd_57 = call fastcc i32 @HashUpdate_2([200 x i8]* %ctx_sponge_state, i32 %ctx_sponge_byteIOInd_56, [8 x i32]* %circuitOutput)" [picnic_impl.c:613]   --->   Operation 127 'call' 'ctx_sponge_byteIOInd_57' <Predicate = (icmp_ln594)> <Delay = 1.35> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_10 : Operation 128 [1/1] (0.00ns)   --->   "%trunc_ln41_1 = trunc i64 %messageByteLength_re to i61" [sha3/KeccakHash.c:41->hash.c:24->picnic_impl.c:618]   --->   Operation 128 'trunc' 'trunc_ln41_1' <Predicate = (icmp_ln594)> <Delay = 0.00>
ST_10 : Operation 129 [1/1] (1.35ns)   --->   "store i64 0, i64* %round_1" [picnic_impl.c:625]   --->   Operation 129 'store' <Predicate = (icmp_ln594)> <Delay = 1.35>
ST_10 : Operation 130 [1/1] (1.35ns)   --->   "store i6 0, i6* %i_32" [picnic_impl.c:625]   --->   Operation 130 'store' <Predicate = (icmp_ln594)> <Delay = 1.35>

State 11 <SV = 4> <Delay = 3.13>
ST_11 : Operation 131 [1/1] (0.00ns)   --->   "%j_1 = phi i2 [ %j, %3 ], [ 0, %.preheader.preheader ]"   --->   Operation 131 'phi' 'j_1' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 132 [1/1] (0.79ns)   --->   "%icmp_ln595 = icmp eq i2 %j_1, -1" [picnic_impl.c:595]   --->   Operation 132 'icmp' 'icmp_ln595' <Predicate = true> <Delay = 0.79> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 133 [1/1] (0.00ns)   --->   "%empty_424 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3)"   --->   Operation 133 'speclooptripcount' 'empty_424' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 134 [1/1] (1.20ns)   --->   "%j = add i2 %j_1, 1" [picnic_impl.c:595]   --->   Operation 134 'add' 'j' <Predicate = true> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.60> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 135 [1/1] (0.00ns)   --->   "br i1 %icmp_ln595, label %.preheader6.loopexit, label %3" [picnic_impl.c:595]   --->   Operation 135 'br' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 136 [1/1] (0.00ns)   --->   "%ctx_sponge_byteIOInd_54 = load i32* %ctx_sponge_byteIOInd_49" [sha3/KeccakHash.c:41->hash.c:24->picnic_impl.c:596]   --->   Operation 136 'load' 'ctx_sponge_byteIOInd_54' <Predicate = (!icmp_ln595)> <Delay = 0.00>
ST_11 : Operation 137 [2/2] (3.13ns)   --->   "%ctx_sponge_byteIOInd_55 = call fastcc i32 @KeccakWidth1600_Spon.6([200 x i8]* %ctx_sponge_state, i32 %ctx_sponge_byteIOInd_54, [21024 x i8]* %as_hashes, i8 %i_1, i2 %j_1)" [sha3/KeccakHash.c:41->hash.c:24->picnic_impl.c:596]   --->   Operation 137 'call' 'ctx_sponge_byteIOInd_55' <Predicate = (!icmp_ln595)> <Delay = 3.13> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_11 : Operation 138 [1/1] (0.00ns)   --->   "br label %.preheader6"   --->   Operation 138 'br' <Predicate = (icmp_ln595)> <Delay = 0.00>

State 12 <SV = 5> <Delay = 1.35>
ST_12 : Operation 139 [1/2] (0.00ns)   --->   "%ctx_sponge_byteIOInd_55 = call fastcc i32 @KeccakWidth1600_Spon.6([200 x i8]* %ctx_sponge_state, i32 %ctx_sponge_byteIOInd_54, [21024 x i8]* %as_hashes, i8 %i_1, i2 %j_1)" [sha3/KeccakHash.c:41->hash.c:24->picnic_impl.c:596]   --->   Operation 139 'call' 'ctx_sponge_byteIOInd_55' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_12 : Operation 140 [1/1] (1.35ns)   --->   "store i32 %ctx_sponge_byteIOInd_55, i32* %ctx_sponge_byteIOInd_49" [picnic_impl.c:595]   --->   Operation 140 'store' <Predicate = true> <Delay = 1.35>
ST_12 : Operation 141 [1/1] (0.00ns)   --->   "br label %.preheader" [picnic_impl.c:595]   --->   Operation 141 'br' <Predicate = true> <Delay = 0.00>

State 13 <SV = 4> <Delay = 0.00>
ST_13 : Operation 142 [1/2] (0.00ns)   --->   "%ctx_sponge_byteIOInd_57 = call fastcc i32 @HashUpdate_2([200 x i8]* %ctx_sponge_state, i32 %ctx_sponge_byteIOInd_56, [8 x i32]* %circuitOutput)" [picnic_impl.c:613]   --->   Operation 142 'call' 'ctx_sponge_byteIOInd_57' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 14 <SV = 5> <Delay = 1.35>
ST_14 : Operation 143 [2/2] (1.35ns)   --->   "%ctx_sponge_byteIOInd_58 = call fastcc i32 @HashUpdate_2([200 x i8]* %ctx_sponge_state, i32 %ctx_sponge_byteIOInd_57, [8 x i32]* %plaintext)" [picnic_impl.c:614]   --->   Operation 143 'call' 'ctx_sponge_byteIOInd_58' <Predicate = true> <Delay = 1.35> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 15 <SV = 6> <Delay = 0.00>
ST_15 : Operation 144 [1/2] (0.00ns)   --->   "%ctx_sponge_byteIOInd_58 = call fastcc i32 @HashUpdate_2([200 x i8]* %ctx_sponge_state, i32 %ctx_sponge_byteIOInd_57, [8 x i32]* %plaintext)" [picnic_impl.c:614]   --->   Operation 144 'call' 'ctx_sponge_byteIOInd_58' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 16 <SV = 7> <Delay = 1.45>
ST_16 : Operation 145 [2/2] (1.45ns)   --->   "%ctx_sponge_byteIOInd_59 = call fastcc i32 @KeccakWidth1600_Spon.8([200 x i8]* %ctx_sponge_state, i32 %ctx_sponge_byteIOInd_58, [32 x i8]* %salt_0)" [sha3/KeccakHash.c:41->hash.c:24->picnic_impl.c:617]   --->   Operation 145 'call' 'ctx_sponge_byteIOInd_59' <Predicate = true> <Delay = 1.45> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 17 <SV = 8> <Delay = 0.00>
ST_17 : Operation 146 [1/2] (0.00ns)   --->   "%ctx_sponge_byteIOInd_59 = call fastcc i32 @KeccakWidth1600_Spon.8([200 x i8]* %ctx_sponge_state, i32 %ctx_sponge_byteIOInd_58, [32 x i8]* %salt_0)" [sha3/KeccakHash.c:41->hash.c:24->picnic_impl.c:617]   --->   Operation 146 'call' 'ctx_sponge_byteIOInd_59' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 18 <SV = 9> <Delay = 1.45>
ST_18 : Operation 147 [2/2] (1.45ns)   --->   "%ctx_sponge_byteIOInd_60 = call fastcc i32 @KeccakWidth1600_Spon.14([200 x i8]* %ctx_sponge_state, i32 %ctx_sponge_byteIOInd_59, [37336 x i8]* %message, i61 %trunc_ln41_1)" [sha3/KeccakHash.c:41->hash.c:24->picnic_impl.c:618]   --->   Operation 147 'call' 'ctx_sponge_byteIOInd_60' <Predicate = true> <Delay = 1.45> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 19 <SV = 10> <Delay = 0.00>
ST_19 : Operation 148 [1/2] (0.00ns)   --->   "%ctx_sponge_byteIOInd_60 = call fastcc i32 @KeccakWidth1600_Spon.14([200 x i8]* %ctx_sponge_state, i32 %ctx_sponge_byteIOInd_59, [37336 x i8]* %message, i61 %trunc_ln41_1)" [sha3/KeccakHash.c:41->hash.c:24->picnic_impl.c:618]   --->   Operation 148 'call' 'ctx_sponge_byteIOInd_60' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 20 <SV = 11> <Delay = 4.12>
ST_20 : Operation 149 [2/2] (4.12ns)   --->   "%call_ret4 = call fastcc { i32, i32 } @HashFinal([200 x i8]* %ctx_sponge_state, i32 %ctx_sponge_byteIOInd_60)" [picnic_impl.c:620]   --->   Operation 149 'call' 'call_ret4' <Predicate = true> <Delay = 4.12> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 21 <SV = 12> <Delay = 0.00>
ST_21 : Operation 150 [1/2] (0.00ns)   --->   "%call_ret4 = call fastcc { i32, i32 } @HashFinal([200 x i8]* %ctx_sponge_state, i32 %ctx_sponge_byteIOInd_60)" [picnic_impl.c:620]   --->   Operation 150 'call' 'call_ret4' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_21 : Operation 151 [1/1] (0.00ns)   --->   "%ctx_sponge_byteIOInd_61 = extractvalue { i32, i32 } %call_ret4, 0" [picnic_impl.c:620]   --->   Operation 151 'extractvalue' 'ctx_sponge_byteIOInd_61' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 152 [1/1] (0.00ns)   --->   "%ctx_sponge_squeezing = extractvalue { i32, i32 } %call_ret4, 1" [picnic_impl.c:620]   --->   Operation 152 'extractvalue' 'ctx_sponge_squeezing' <Predicate = true> <Delay = 0.00>

State 22 <SV = 13> <Delay = 4.81>
ST_22 : Operation 153 [2/2] (4.81ns)   --->   "call fastcc void @KeccakWidth1600_Spon.2([200 x i8]* %ctx_sponge_state, i32 %ctx_sponge_byteIOInd_61, i32 %ctx_sponge_squeezing, [32 x i8]* %hash)" [sha3/KeccakHash.c:81->hash.c:83->picnic_impl.c:621]   --->   Operation 153 'call' <Predicate = true> <Delay = 4.81> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 23 <SV = 14> <Delay = 0.00>
ST_23 : Operation 154 [1/2] (0.00ns)   --->   "call fastcc void @KeccakWidth1600_Spon.2([200 x i8]* %ctx_sponge_state, i32 %ctx_sponge_byteIOInd_61, i32 %ctx_sponge_squeezing, [32 x i8]* %hash)" [sha3/KeccakHash.c:81->hash.c:83->picnic_impl.c:621]   --->   Operation 154 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_23 : Operation 155 [1/1] (0.00ns)   --->   "br label %.backedge" [picnic_impl.c:625]   --->   Operation 155 'br' <Predicate = true> <Delay = 0.00>

State 24 <SV = 15> <Delay = 1.75>
ST_24 : Operation 156 [1/1] (0.00ns)   --->   "%i_32_load = load i6* %i_32" [picnic_impl.c:626]   --->   Operation 156 'load' 'i_32_load' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 157 [1/1] (0.00ns)   --->   "%zext_ln626 = zext i6 %i_32_load to i64" [picnic_impl.c:626]   --->   Operation 157 'zext' 'zext_ln626' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 158 [1/1] (0.00ns)   --->   "%tmp_53 = call i1 @_ssdm_op_BitSelect.i1.i6.i32(i6 %i_32_load, i32 5)" [picnic_impl.c:626]   --->   Operation 158 'bitselect' 'tmp_53' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 159 [1/1] (0.00ns)   --->   "br i1 %tmp_53, label %HashSqueeze.1.exit18, label %4" [picnic_impl.c:626]   --->   Operation 159 'br' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 160 [1/1] (0.00ns)   --->   "%hash_addr = getelementptr inbounds [32 x i8]* %hash, i64 0, i64 %zext_ln626" [picnic_impl.c:627]   --->   Operation 160 'getelementptr' 'hash_addr' <Predicate = (!tmp_53)> <Delay = 0.00>
ST_24 : Operation 161 [2/2] (1.75ns)   --->   "%byte = load i8* %hash_addr, align 1" [picnic_impl.c:627]   --->   Operation 161 'load' 'byte' <Predicate = (!tmp_53)> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 55> <RAM>
ST_24 : Operation 162 [2/2] (1.35ns)   --->   "%ctx_sponge_byteIOInd_62 = call fastcc i32 @HashInit([200 x i8]* %ctx_sponge_state, i4 1)" [picnic_impl.c:642]   --->   Operation 162 'call' 'ctx_sponge_byteIOInd_62' <Predicate = (tmp_53)> <Delay = 1.35> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_24 : Operation 163 [1/1] (1.35ns)   --->   "store i6 0, i6* %i_32" [picnic_impl.c:646]   --->   Operation 163 'store' <Predicate = (tmp_53)> <Delay = 1.35>

State 25 <SV = 16> <Delay = 1.75>
ST_25 : Operation 164 [1/2] (1.75ns)   --->   "%byte = load i8* %hash_addr, align 1" [picnic_impl.c:627]   --->   Operation 164 'load' 'byte' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 55> <RAM>
ST_25 : Operation 165 [1/1] (1.35ns)   --->   "br label %5" [picnic_impl.c:629]   --->   Operation 165 'br' <Predicate = true> <Delay = 1.35>

State 26 <SV = 17> <Delay = 4.70>
ST_26 : Operation 166 [1/1] (0.00ns)   --->   "%j2_0 = phi i4 [ 0, %4 ], [ %j_18, %._crit_edge ]"   --->   Operation 166 'phi' 'j2_0' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 167 [1/1] (0.00ns)   --->   "%tmp_54 = call i1 @_ssdm_op_BitSelect.i1.i4.i32(i4 %j2_0, i32 3)" [picnic_impl.c:629]   --->   Operation 167 'bitselect' 'tmp_54' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 168 [1/1] (0.00ns)   --->   "%empty_425 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 4, i64 2)"   --->   Operation 168 'speclooptripcount' 'empty_425' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 169 [1/1] (0.00ns)   --->   "br i1 %tmp_54, label %8, label %6" [picnic_impl.c:629]   --->   Operation 169 'br' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 170 [1/1] (1.49ns)   --->   "%sub_ln630 = sub i4 6, %j2_0" [picnic_impl.c:630]   --->   Operation 170 'sub' 'sub_ln630' <Predicate = (!tmp_54)> <Delay = 1.49> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.60> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 171 [1/1] (0.00ns)   --->   "%sext_ln630 = sext i4 %sub_ln630 to i8" [picnic_impl.c:630]   --->   Operation 171 'sext' 'sext_ln630' <Predicate = (!tmp_54)> <Delay = 0.00>
ST_26 : Operation 172 [1/1] (2.42ns)   --->   "%lshr_ln630 = lshr i8 %byte, %sext_ln630" [picnic_impl.c:630]   --->   Operation 172 'lshr' 'lshr_ln630' <Predicate = (!tmp_54)> <Delay = 2.42> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.68> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 173 [1/1] (0.00ns)   --->   "%trunc_ln630 = trunc i8 %lshr_ln630 to i1" [picnic_impl.c:630]   --->   Operation 173 'trunc' 'trunc_ln630' <Predicate = (!tmp_54)> <Delay = 0.00>
ST_26 : Operation 174 [1/1] (0.00ns)   --->   "%bitPair = trunc i8 %lshr_ln630 to i2" [picnic_impl.c:630]   --->   Operation 174 'trunc' 'bitPair' <Predicate = (!tmp_54)> <Delay = 0.00>
ST_26 : Operation 175 [1/1] (0.79ns)   --->   "%icmp_ln631 = icmp eq i2 %bitPair, -1" [picnic_impl.c:631]   --->   Operation 175 'icmp' 'icmp_ln631' <Predicate = (!tmp_54)> <Delay = 0.79> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 176 [1/1] (0.00ns)   --->   "br i1 %icmp_ln631, label %._crit_edge, label %7" [picnic_impl.c:631]   --->   Operation 176 'br' <Predicate = (!tmp_54)> <Delay = 0.00>
ST_26 : Operation 177 [1/1] (0.00ns)   --->   "%round_1_load = load i64* %round_1" [picnic_impl.c:633]   --->   Operation 177 'load' 'round_1_load' <Predicate = (!tmp_54 & !icmp_ln631)> <Delay = 0.00>
ST_26 : Operation 178 [1/1] (0.00ns)   --->   "%trunc_ln378 = trunc i64 %round_1_load to i2" [picnic_impl.c:378->picnic_impl.c:632]   --->   Operation 178 'trunc' 'trunc_ln378' <Predicate = (!tmp_54 & !icmp_ln631)> <Delay = 0.00>
ST_26 : Operation 179 [1/1] (0.00ns)   --->   "%trunc_ln10 = call i29 @_ssdm_op_PartSelect.i29.i64.i32.i32(i64 %round_1_load, i32 2, i32 30)" [picnic_impl.c:66->picnic_impl.c:378->picnic_impl.c:632]   --->   Operation 179 'partselect' 'trunc_ln10' <Predicate = (!tmp_54 & !icmp_ln631)> <Delay = 0.00>
ST_26 : Operation 180 [1/1] (0.00ns)   --->   "%zext_ln66 = zext i29 %trunc_ln10 to i64" [picnic_impl.c:66->picnic_impl.c:378->picnic_impl.c:632]   --->   Operation 180 'zext' 'zext_ln66' <Predicate = (!tmp_54 & !icmp_ln631)> <Delay = 0.00>
ST_26 : Operation 181 [1/1] (0.00ns)   --->   "%challengeBits_addr_1 = getelementptr [55 x i8]* %challengeBits, i64 0, i64 %zext_ln66" [picnic_impl.c:66->picnic_impl.c:378->picnic_impl.c:632]   --->   Operation 181 'getelementptr' 'challengeBits_addr_1' <Predicate = (!tmp_54 & !icmp_ln631)> <Delay = 0.00>
ST_26 : Operation 182 [2/2] (1.75ns)   --->   "%challengeBits_load = load i8* %challengeBits_addr_1, align 1" [picnic_impl.c:66->picnic_impl.c:378->picnic_impl.c:632]   --->   Operation 182 'load' 'challengeBits_load' <Predicate = (!tmp_54 & !icmp_ln631)> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 55> <RAM>
ST_26 : Operation 183 [1/1] (1.60ns)   --->   "%i_33 = add i6 %i_32_load, 1" [picnic_impl.c:626]   --->   Operation 183 'add' 'i_33' <Predicate = (tmp_54)> <Delay = 1.60> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.60> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 184 [1/1] (1.35ns)   --->   "store i6 %i_33, i6* %i_32" [picnic_impl.c:626]   --->   Operation 184 'store' <Predicate = (tmp_54)> <Delay = 1.35>
ST_26 : Operation 185 [1/1] (0.00ns)   --->   "br label %.backedge.backedge" [picnic_impl.c:626]   --->   Operation 185 'br' <Predicate = (tmp_54)> <Delay = 0.00>

State 27 <SV = 18> <Delay = 6.88>
ST_27 : Operation 186 [1/1] (0.00ns)   --->   "%bitNumber_assign = call i3 @_ssdm_op_BitConcatenate.i3.i2.i1(i2 %trunc_ln378, i1 false)" [picnic_impl.c:378->picnic_impl.c:632]   --->   Operation 186 'bitconcatenate' 'bitNumber_assign' <Predicate = (!icmp_ln631)> <Delay = 0.00>
ST_27 : Operation 187 [1/1] (0.00ns) (grouped into LUT with out node and_ln66_3)   --->   "%zext_ln378 = zext i1 %trunc_ln630 to i8" [picnic_impl.c:378->picnic_impl.c:632]   --->   Operation 187 'zext' 'zext_ln378' <Predicate = (!icmp_ln631)> <Delay = 0.00>
ST_27 : Operation 188 [1/2] (1.75ns)   --->   "%challengeBits_load = load i8* %challengeBits_addr_1, align 1" [picnic_impl.c:66->picnic_impl.c:378->picnic_impl.c:632]   --->   Operation 188 'load' 'challengeBits_load' <Predicate = (!icmp_ln631)> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 55> <RAM>
ST_27 : Operation 189 [1/1] (0.80ns)   --->   "%xor_ln66 = xor i3 %bitNumber_assign, -1" [picnic_impl.c:66->picnic_impl.c:378->picnic_impl.c:632]   --->   Operation 189 'xor' 'xor_ln66' <Predicate = (!icmp_ln631)> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 190 [1/1] (0.00ns)   --->   "%zext_ln66_3 = zext i3 %xor_ln66 to i8" [picnic_impl.c:66->picnic_impl.c:378->picnic_impl.c:632]   --->   Operation 190 'zext' 'zext_ln66_3' <Predicate = (!icmp_ln631)> <Delay = 0.00>
ST_27 : Operation 191 [1/1] (0.00ns) (grouped into LUT with out node and_ln66_3)   --->   "%shl_ln66 = shl i8 1, %zext_ln66_3" [picnic_impl.c:66->picnic_impl.c:378->picnic_impl.c:632]   --->   Operation 191 'shl' 'shl_ln66' <Predicate = (!icmp_ln631)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.68> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 192 [1/1] (0.00ns) (grouped into LUT with out node and_ln66_3)   --->   "%xor_ln66_5 = xor i8 %shl_ln66, -1" [picnic_impl.c:66->picnic_impl.c:378->picnic_impl.c:632]   --->   Operation 192 'xor' 'xor_ln66_5' <Predicate = (!icmp_ln631)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 193 [1/1] (0.00ns) (grouped into LUT with out node and_ln66_3)   --->   "%shl_ln66_9 = shl i8 %zext_ln378, %zext_ln66_3" [picnic_impl.c:66->picnic_impl.c:378->picnic_impl.c:632]   --->   Operation 193 'shl' 'shl_ln66_9' <Predicate = (!icmp_ln631)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.68> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 194 [1/1] (0.00ns) (grouped into LUT with out node and_ln66_3)   --->   "%and_ln66 = and i8 %challengeBits_load, %xor_ln66_5" [picnic_impl.c:66->picnic_impl.c:378->picnic_impl.c:632]   --->   Operation 194 'and' 'and_ln66' <Predicate = (!icmp_ln631)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 195 [1/1] (0.00ns) (grouped into LUT with out node and_ln66_3)   --->   "%or_ln66 = or i8 %and_ln66, %shl_ln66_9" [picnic_impl.c:66->picnic_impl.c:378->picnic_impl.c:632]   --->   Operation 195 'or' 'or_ln66' <Predicate = (!icmp_ln631)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 196 [1/1] (0.00ns) (grouped into LUT with out node or_ln66_3)   --->   "%tmp_56 = call i1 @_ssdm_op_BitSelect.i1.i8.i32(i8 %lshr_ln630, i32 1)" [picnic_impl.c:379->picnic_impl.c:632]   --->   Operation 196 'bitselect' 'tmp_56' <Predicate = (!icmp_ln631)> <Delay = 0.00>
ST_27 : Operation 197 [1/1] (0.00ns) (grouped into LUT with out node or_ln66_3)   --->   "%zext_ln379 = zext i1 %tmp_56 to i8" [picnic_impl.c:379->picnic_impl.c:632]   --->   Operation 197 'zext' 'zext_ln379' <Predicate = (!icmp_ln631)> <Delay = 0.00>
ST_27 : Operation 198 [1/1] (0.80ns)   --->   "%xor_ln66_6 = xor i3 %bitNumber_assign, -2" [picnic_impl.c:66->picnic_impl.c:379->picnic_impl.c:632]   --->   Operation 198 'xor' 'xor_ln66_6' <Predicate = (!icmp_ln631)> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 199 [1/1] (0.00ns)   --->   "%zext_ln66_4 = zext i3 %xor_ln66_6 to i8" [picnic_impl.c:66->picnic_impl.c:379->picnic_impl.c:632]   --->   Operation 199 'zext' 'zext_ln66_4' <Predicate = (!icmp_ln631)> <Delay = 0.00>
ST_27 : Operation 200 [1/1] (0.00ns) (grouped into LUT with out node and_ln66_3)   --->   "%shl_ln66_10 = shl i8 1, %zext_ln66_4" [picnic_impl.c:66->picnic_impl.c:379->picnic_impl.c:632]   --->   Operation 200 'shl' 'shl_ln66_10' <Predicate = (!icmp_ln631)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.68> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 201 [1/1] (0.00ns) (grouped into LUT with out node and_ln66_3)   --->   "%xor_ln66_7 = xor i8 %shl_ln66_10, -1" [picnic_impl.c:66->picnic_impl.c:379->picnic_impl.c:632]   --->   Operation 201 'xor' 'xor_ln66_7' <Predicate = (!icmp_ln631)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 202 [1/1] (0.00ns) (grouped into LUT with out node or_ln66_3)   --->   "%shl_ln66_11 = shl i8 %zext_ln379, %zext_ln66_4" [picnic_impl.c:66->picnic_impl.c:379->picnic_impl.c:632]   --->   Operation 202 'shl' 'shl_ln66_11' <Predicate = (!icmp_ln631)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.68> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 203 [1/1] (1.68ns) (out node of the LUT)   --->   "%and_ln66_3 = and i8 %or_ln66, %xor_ln66_7" [picnic_impl.c:66->picnic_impl.c:379->picnic_impl.c:632]   --->   Operation 203 'and' 'and_ln66_3' <Predicate = (!icmp_ln631)> <Delay = 1.68> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 204 [1/1] (1.68ns) (out node of the LUT)   --->   "%or_ln66_3 = or i8 %and_ln66_3, %shl_ln66_11" [picnic_impl.c:66->picnic_impl.c:379->picnic_impl.c:632]   --->   Operation 204 'or' 'or_ln66_3' <Predicate = (!icmp_ln631)> <Delay = 1.68> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 205 [1/1] (1.75ns)   --->   "store i8 %or_ln66_3, i8* %challengeBits_addr_1, align 1" [picnic_impl.c:66->picnic_impl.c:379->picnic_impl.c:632]   --->   Operation 205 'store' <Predicate = (!icmp_ln631)> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 55> <RAM>
ST_27 : Operation 206 [1/1] (2.99ns)   --->   "%round = add i64 1, %round_1_load" [picnic_impl.c:633]   --->   Operation 206 'add' 'round' <Predicate = (!icmp_ln631)> <Delay = 2.99> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.60> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 207 [1/1] (2.34ns)   --->   "%icmp_ln634 = icmp eq i64 %round, 219" [picnic_impl.c:634]   --->   Operation 207 'icmp' 'icmp_ln634' <Predicate = (!icmp_ln631)> <Delay = 2.34> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 208 [1/1] (0.00ns)   --->   "br i1 %icmp_ln634, label %9, label %.._crit_edge_crit_edge" [picnic_impl.c:634]   --->   Operation 208 'br' <Predicate = (!icmp_ln631)> <Delay = 0.00>
ST_27 : Operation 209 [1/1] (1.35ns)   --->   "store i64 %round, i64* %round_1" [picnic_impl.c:634]   --->   Operation 209 'store' <Predicate = (!icmp_ln631 & !icmp_ln634)> <Delay = 1.35>
ST_27 : Operation 210 [1/1] (0.00ns)   --->   "br label %._crit_edge" [picnic_impl.c:634]   --->   Operation 210 'br' <Predicate = (!icmp_ln631 & !icmp_ln634)> <Delay = 0.00>
ST_27 : Operation 211 [1/1] (0.00ns)   --->   "ret void" [picnic_impl.c:651]   --->   Operation 211 'ret' <Predicate = (!icmp_ln631 & icmp_ln634)> <Delay = 0.00>
ST_27 : Operation 212 [1/1] (1.49ns)   --->   "%j_18 = add i4 %j2_0, 2" [picnic_impl.c:629]   --->   Operation 212 'add' 'j_18' <Predicate = (!icmp_ln634) | (icmp_ln631)> <Delay = 1.49> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.60> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 213 [1/1] (0.00ns)   --->   "br label %5" [picnic_impl.c:629]   --->   Operation 213 'br' <Predicate = (!icmp_ln634) | (icmp_ln631)> <Delay = 0.00>

State 28 <SV = 16> <Delay = 1.35>
ST_28 : Operation 214 [1/2] (1.35ns)   --->   "%ctx_sponge_byteIOInd_62 = call fastcc i32 @HashInit([200 x i8]* %ctx_sponge_state, i4 1)" [picnic_impl.c:642]   --->   Operation 214 'call' 'ctx_sponge_byteIOInd_62' <Predicate = true> <Delay = 1.35> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 29 <SV = 17> <Delay = 1.45>
ST_29 : Operation 215 [2/2] (1.45ns)   --->   "%ctx_sponge_byteIOInd_63 = call fastcc i32 @KeccakWidth1600_Spon.13([200 x i8]* %ctx_sponge_state, i32 %ctx_sponge_byteIOInd_62, [32 x i8]* %hash)" [sha3/KeccakHash.c:41->hash.c:24->picnic_impl.c:643]   --->   Operation 215 'call' 'ctx_sponge_byteIOInd_63' <Predicate = true> <Delay = 1.45> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 30 <SV = 18> <Delay = 0.00>
ST_30 : Operation 216 [1/2] (0.00ns)   --->   "%ctx_sponge_byteIOInd_63 = call fastcc i32 @KeccakWidth1600_Spon.13([200 x i8]* %ctx_sponge_state, i32 %ctx_sponge_byteIOInd_62, [32 x i8]* %hash)" [sha3/KeccakHash.c:41->hash.c:24->picnic_impl.c:643]   --->   Operation 216 'call' 'ctx_sponge_byteIOInd_63' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 31 <SV = 19> <Delay = 4.12>
ST_31 : Operation 217 [2/2] (4.12ns)   --->   "%call_ret6 = call fastcc { i32, i32 } @HashFinal([200 x i8]* %ctx_sponge_state, i32 %ctx_sponge_byteIOInd_63)" [picnic_impl.c:644]   --->   Operation 217 'call' 'call_ret6' <Predicate = true> <Delay = 4.12> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 32 <SV = 20> <Delay = 0.00>
ST_32 : Operation 218 [1/2] (0.00ns)   --->   "%call_ret6 = call fastcc { i32, i32 } @HashFinal([200 x i8]* %ctx_sponge_state, i32 %ctx_sponge_byteIOInd_63)" [picnic_impl.c:644]   --->   Operation 218 'call' 'call_ret6' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_32 : Operation 219 [1/1] (0.00ns)   --->   "%ctx_sponge_byteIOInd_64 = extractvalue { i32, i32 } %call_ret6, 0" [picnic_impl.c:644]   --->   Operation 219 'extractvalue' 'ctx_sponge_byteIOInd_64' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 220 [1/1] (0.00ns)   --->   "%ctx_sponge_squeezing_8 = extractvalue { i32, i32 } %call_ret6, 1" [picnic_impl.c:644]   --->   Operation 220 'extractvalue' 'ctx_sponge_squeezing_8' <Predicate = true> <Delay = 0.00>

State 33 <SV = 21> <Delay = 4.81>
ST_33 : Operation 221 [2/2] (4.81ns)   --->   "call fastcc void @KeccakWidth1600_Spon.2([200 x i8]* %ctx_sponge_state, i32 %ctx_sponge_byteIOInd_64, i32 %ctx_sponge_squeezing_8, [32 x i8]* %hash)" [sha3/KeccakHash.c:81->hash.c:83->picnic_impl.c:645]   --->   Operation 221 'call' <Predicate = true> <Delay = 4.81> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 34 <SV = 22> <Delay = 0.00>
ST_34 : Operation 222 [1/2] (0.00ns)   --->   "call fastcc void @KeccakWidth1600_Spon.2([200 x i8]* %ctx_sponge_state, i32 %ctx_sponge_byteIOInd_64, i32 %ctx_sponge_squeezing_8, [32 x i8]* %hash)" [sha3/KeccakHash.c:81->hash.c:83->picnic_impl.c:645]   --->   Operation 222 'call' <Predicate = (tmp_53)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_34 : Operation 223 [1/1] (0.00ns)   --->   "br label %.backedge.backedge" [picnic_impl.c:646]   --->   Operation 223 'br' <Predicate = (tmp_53)> <Delay = 0.00>
ST_34 : Operation 224 [1/1] (0.00ns)   --->   "br label %.backedge"   --->   Operation 224 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.35ns
The critical path consists of the following:
	'alloca' operation ('ctx.sponge.state', picnic_impl.c:561) [18]  (0 ns)
	'call' operation ('ctx.sponge.byteIOIndex', picnic_impl.c:573) to 'HashInit' [21]  (1.35 ns)

 <State 2>: 2.7ns
The critical path consists of the following:
	'call' operation ('ctx.sponge.byteIOIndex', picnic_impl.c:573) to 'HashInit' [21]  (1.35 ns)
	'store' operation ('store_ln576', picnic_impl.c:576) of variable 'ctx.sponge.byteIOIndex', picnic_impl.c:573 on local variable 'ctx.sponge.byteIOIndex' [22]  (1.35 ns)

 <State 3>: 1.75ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', picnic_impl.c:576) [25]  (0 ns)
	'sub' operation ('sub_ln589', picnic_impl.c:589) [35]  (1.75 ns)

 <State 4>: 1.76ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', picnic_impl.c:577) [38]  (0 ns)
	'add' operation ('add_ln589', picnic_impl.c:589) [45]  (1.76 ns)

 <State 5>: 1.77ns
The critical path consists of the following:
	'phi' operation ('phi_ln34', hash.c:34->picnic_impl.c:589) with incoming values : ('add_ln34', hash.c:34->picnic_impl.c:589) [48]  (0 ns)
	'getelementptr' operation ('temp_addr', hash.c:34->picnic_impl.c:589) [51]  (0 ns)
	'store' operation ('store_ln34', hash.c:34->picnic_impl.c:589) of constant 0 on array 'temp', hash.c:34->picnic_impl.c:589 [52]  (1.77 ns)

 <State 6>: 2.77ns
The critical path consists of the following:
	'phi' operation ('loop') with incoming values : ('loop', hash.c:37->picnic_impl.c:589) [60]  (0 ns)
	'getelementptr' operation ('viewOutputs_addr', hash.c:38->picnic_impl.c:589) [71]  (0 ns)
	'load' operation ('temp2', hash.c:38->picnic_impl.c:589) on array 'viewOutputs' [72]  (2.77 ns)

 <State 7>: 4.55ns
The critical path consists of the following:
	'load' operation ('temp2', hash.c:38->picnic_impl.c:589) on array 'viewOutputs' [72]  (2.77 ns)
	'store' operation ('store_ln39', hash.c:39->picnic_impl.c:589) of variable 'trunc_ln39', hash.c:39->picnic_impl.c:589 on array 'temp', hash.c:34->picnic_impl.c:589 [75]  (1.77 ns)

 <State 8>: 1.77ns
The critical path consists of the following:
	'or' operation ('or_ln43', hash.c:43->picnic_impl.c:589) [83]  (0 ns)
	'getelementptr' operation ('temp_addr_12', hash.c:43->picnic_impl.c:589) [85]  (0 ns)
	'store' operation ('store_ln43', hash.c:43->picnic_impl.c:589) of variable 'trunc_ln8', hash.c:43->picnic_impl.c:589 on array 'temp', hash.c:34->picnic_impl.c:589 [86]  (1.77 ns)

 <State 9>: 1.35ns
The critical path consists of the following:
	'call' operation ('instance.sponge.byteIOIndex', sha3/KeccakHash.c:41->hash.c:47->picnic_impl.c:589) to 'KeccakWidth1600_Spon.9' [96]  (0 ns)
	'store' operation ('store_ln577', picnic_impl.c:577) of variable 'instance.sponge.byteIOIndex', sha3/KeccakHash.c:41->hash.c:47->picnic_impl.c:589 on local variable 'ctx.sponge.byteIOIndex' [97]  (1.35 ns)

 <State 10>: 1.72ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', picnic_impl.c:594) [106]  (0 ns)
	'add' operation ('i', picnic_impl.c:594) [109]  (1.72 ns)

 <State 11>: 3.13ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', picnic_impl.c:595) [114]  (0 ns)
	'call' operation ('instance.sponge.byteIOIndex', sha3/KeccakHash.c:41->hash.c:24->picnic_impl.c:596) to 'KeccakWidth1600_Spon.6' [121]  (3.13 ns)

 <State 12>: 1.35ns
The critical path consists of the following:
	'call' operation ('instance.sponge.byteIOIndex', sha3/KeccakHash.c:41->hash.c:24->picnic_impl.c:596) to 'KeccakWidth1600_Spon.6' [121]  (0 ns)
	'store' operation ('store_ln595', picnic_impl.c:595) of variable 'instance.sponge.byteIOIndex', sha3/KeccakHash.c:41->hash.c:24->picnic_impl.c:596 on local variable 'instance.sponge.byteIOIndex' [122]  (1.35 ns)

 <State 13>: 0ns
The critical path consists of the following:

 <State 14>: 1.35ns
The critical path consists of the following:
	'call' operation ('ctx.sponge.byteIOIndex', picnic_impl.c:614) to 'HashUpdate_2' [131]  (1.35 ns)

 <State 15>: 0ns
The critical path consists of the following:

 <State 16>: 1.45ns
The critical path consists of the following:
	'call' operation ('instance.sponge.byteIOIndex', sha3/KeccakHash.c:41->hash.c:24->picnic_impl.c:617) to 'KeccakWidth1600_Spon.8' [132]  (1.45 ns)

 <State 17>: 0ns
The critical path consists of the following:

 <State 18>: 1.45ns
The critical path consists of the following:
	'call' operation ('instance.sponge.byteIOIndex', sha3/KeccakHash.c:41->hash.c:24->picnic_impl.c:618) to 'KeccakWidth1600_Spon.14' [134]  (1.45 ns)

 <State 19>: 0ns
The critical path consists of the following:

 <State 20>: 4.12ns
The critical path consists of the following:
	'call' operation ('call_ret4', picnic_impl.c:620) to 'HashFinal' [135]  (4.12 ns)

 <State 21>: 0ns
The critical path consists of the following:

 <State 22>: 4.81ns
The critical path consists of the following:
	'call' operation ('call_ln81', sha3/KeccakHash.c:81->hash.c:83->picnic_impl.c:621) to 'KeccakWidth1600_Spon.2' [138]  (4.81 ns)

 <State 23>: 0ns
The critical path consists of the following:

 <State 24>: 1.75ns
The critical path consists of the following:
	'load' operation ('i_32_load', picnic_impl.c:626) on local variable 'i' [143]  (0 ns)
	'getelementptr' operation ('hash_addr', picnic_impl.c:627) [148]  (0 ns)
	'load' operation ('byte', picnic_impl.c:627) on array 'hash', picnic_impl.c:560 [149]  (1.75 ns)

 <State 25>: 1.75ns
The critical path consists of the following:
	'load' operation ('byte', picnic_impl.c:627) on array 'hash', picnic_impl.c:560 [149]  (1.75 ns)

 <State 26>: 4.71ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', picnic_impl.c:629) [152]  (0 ns)
	'sub' operation ('sub_ln630', picnic_impl.c:630) [157]  (1.49 ns)
	'lshr' operation ('lshr_ln630', picnic_impl.c:630) [159]  (2.42 ns)
	'icmp' operation ('icmp_ln631', picnic_impl.c:631) [162]  (0.794 ns)

 <State 27>: 6.89ns
The critical path consists of the following:
	'load' operation ('challengeBits_load', picnic_impl.c:66->picnic_impl.c:378->picnic_impl.c:632) on array 'challengeBits' [172]  (1.75 ns)
	'and' operation ('and_ln66', picnic_impl.c:66->picnic_impl.c:378->picnic_impl.c:632) [178]  (0 ns)
	'or' operation ('or_ln66', picnic_impl.c:66->picnic_impl.c:378->picnic_impl.c:632) [179]  (0 ns)
	'and' operation ('and_ln66_3', picnic_impl.c:66->picnic_impl.c:379->picnic_impl.c:632) [187]  (1.69 ns)
	'or' operation ('or_ln66_3', picnic_impl.c:66->picnic_impl.c:379->picnic_impl.c:632) [188]  (1.69 ns)
	'store' operation ('store_ln66', picnic_impl.c:66->picnic_impl.c:379->picnic_impl.c:632) of variable 'or_ln66_3', picnic_impl.c:66->picnic_impl.c:379->picnic_impl.c:632 on array 'challengeBits' [189]  (1.75 ns)

 <State 28>: 1.35ns
The critical path consists of the following:
	'call' operation ('ctx.sponge.byteIOIndex', picnic_impl.c:642) to 'HashInit' [206]  (1.35 ns)

 <State 29>: 1.45ns
The critical path consists of the following:
	'call' operation ('instance.sponge.byteIOIndex', sha3/KeccakHash.c:41->hash.c:24->picnic_impl.c:643) to 'KeccakWidth1600_Spon.13' [207]  (1.45 ns)

 <State 30>: 0ns
The critical path consists of the following:

 <State 31>: 4.12ns
The critical path consists of the following:
	'call' operation ('call_ret6', picnic_impl.c:644) to 'HashFinal' [208]  (4.12 ns)

 <State 32>: 0ns
The critical path consists of the following:

 <State 33>: 4.81ns
The critical path consists of the following:
	'call' operation ('call_ln81', sha3/KeccakHash.c:81->hash.c:83->picnic_impl.c:645) to 'KeccakWidth1600_Spon.2' [211]  (4.81 ns)

 <State 34>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
