// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module picnic_verify (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        pk_0_params_read,
        pk_0_plaintext_address0,
        pk_0_plaintext_ce0,
        pk_0_plaintext_q0,
        pk_0_plaintext_address1,
        pk_0_plaintext_ce1,
        pk_0_plaintext_q1,
        pk_0_ciphertext_address0,
        pk_0_ciphertext_ce0,
        pk_0_ciphertext_q0,
        pk_0_ciphertext_address1,
        pk_0_ciphertext_ce1,
        pk_0_ciphertext_q1,
        message_address0,
        message_ce0,
        message_q0,
        message_address1,
        message_ce1,
        message_q1,
        message_len,
        signature_offset,
        signature_len,
        viewOutputs_address0,
        viewOutputs_ce0,
        viewOutputs_we0,
        viewOutputs_d0,
        viewOutputs_q0,
        ap_return
);

parameter    ap_ST_fsm_state1 = 9'd1;
parameter    ap_ST_fsm_state2 = 9'd2;
parameter    ap_ST_fsm_state3 = 9'd4;
parameter    ap_ST_fsm_state4 = 9'd8;
parameter    ap_ST_fsm_state5 = 9'd16;
parameter    ap_ST_fsm_state6 = 9'd32;
parameter    ap_ST_fsm_state7 = 9'd64;
parameter    ap_ST_fsm_state8 = 9'd128;
parameter    ap_ST_fsm_state9 = 9'd256;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [3:0] pk_0_params_read;
output  [4:0] pk_0_plaintext_address0;
output   pk_0_plaintext_ce0;
input  [7:0] pk_0_plaintext_q0;
output  [4:0] pk_0_plaintext_address1;
output   pk_0_plaintext_ce1;
input  [7:0] pk_0_plaintext_q1;
output  [4:0] pk_0_ciphertext_address0;
output   pk_0_ciphertext_ce0;
input  [7:0] pk_0_ciphertext_q0;
output  [4:0] pk_0_ciphertext_address1;
output   pk_0_ciphertext_ce1;
input  [7:0] pk_0_ciphertext_q1;
output  [15:0] message_address0;
output   message_ce0;
input  [7:0] message_q0;
output  [15:0] message_address1;
output   message_ce1;
input  [7:0] message_q1;
input  [63:0] message_len;
input  [63:0] signature_offset;
input  [31:0] signature_len;
output  [13:0] viewOutputs_address0;
output   viewOutputs_ce0;
output   viewOutputs_we0;
output  [31:0] viewOutputs_d0;
input  [31:0] viewOutputs_q0;
output  [0:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[4:0] pk_0_plaintext_address0;
reg pk_0_plaintext_ce0;
reg[4:0] pk_0_plaintext_address1;
reg pk_0_plaintext_ce1;
reg[4:0] pk_0_ciphertext_address0;
reg pk_0_ciphertext_ce0;
reg[4:0] pk_0_ciphertext_address1;
reg pk_0_ciphertext_ce1;
reg[15:0] message_address0;
reg message_ce0;
reg message_ce1;
reg[0:0] ap_return;

(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [1:0] paramset_transform_fu_500_p3;
reg   [1:0] paramset_transform_reg_669;
wire   [6:0] paramset_UnruhGWitho_fu_515_p3;
reg   [6:0] paramset_UnruhGWitho_reg_674;
wire    ap_CS_fsm_state2;
wire    grp_deserializeSignature_fu_364_ap_ready;
wire    grp_deserializeSignature_fu_364_ap_done;
wire   [2:0] add_ln466_fu_524_p2;
wire    ap_CS_fsm_state3;
wire   [2:0] add_ln466_1_fu_541_p2;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire   [0:0] tmp_fu_558_p3;
wire   [4:0] trunc_ln467_fu_572_p1;
reg   [4:0] trunc_ln467_reg_711;
reg   [2:0] trunc_ln468_1_reg_722;
wire   [5:0] loop_fu_598_p2;
reg   [5:0] loop_reg_737;
reg   [7:0] pk_0_ciphertext_loa_reg_742;
wire    ap_CS_fsm_state6;
reg   [7:0] pk_0_ciphertext_loa_1_reg_747;
reg   [7:0] pk_0_plaintext_load_reg_762;
reg   [7:0] pk_0_plaintext_load_1_reg_767;
wire   [0:0] icmp_ln475_fu_653_p2;
wire    ap_CS_fsm_state8;
wire    grp_verify_fu_336_ap_ready;
wire    grp_verify_fu_336_ap_done;
reg   [11:0] sig_0_proofs_seed1_address0;
reg    sig_0_proofs_seed1_ce0;
reg    sig_0_proofs_seed1_we0;
wire   [7:0] sig_0_proofs_seed1_q0;
reg   [11:0] sig_0_proofs_seed2_address0;
reg    sig_0_proofs_seed2_ce0;
reg    sig_0_proofs_seed2_we0;
wire   [7:0] sig_0_proofs_seed2_q0;
reg   [9:0] sig_0_proofs_inputS_address0;
reg    sig_0_proofs_inputS_ce0;
reg    sig_0_proofs_inputS_we0;
wire   [31:0] sig_0_proofs_inputS_q0;
reg   [14:0] sig_0_proofs_commun_address0;
reg    sig_0_proofs_commun_ce0;
reg    sig_0_proofs_commun_we0;
wire   [7:0] sig_0_proofs_commun_q0;
reg   [12:0] sig_0_proofs_view3C_address0;
reg    sig_0_proofs_view3C_ce0;
reg    sig_0_proofs_view3C_we0;
wire   [7:0] sig_0_proofs_view3C_q0;
reg   [5:0] sig_0_challengeBits_address0;
reg    sig_0_challengeBits_ce0;
reg    sig_0_challengeBits_we0;
wire   [7:0] sig_0_challengeBits_q0;
reg    sig_0_challengeBits_ce1;
wire   [7:0] sig_0_challengeBits_q1;
reg   [4:0] sig_0_salt_address0;
reg    sig_0_salt_ce0;
reg    sig_0_salt_we0;
wire   [7:0] sig_0_salt_q0;
reg   [2:0] temp_address0;
reg    temp_ce0;
reg    temp_we0;
reg   [31:0] temp_d0;
wire   [31:0] temp_q0;
reg   [2:0] temp2_address0;
reg    temp2_ce0;
reg    temp2_we0;
reg   [31:0] temp2_d0;
wire   [31:0] temp2_q0;
wire    grp_verify_fu_336_ap_start;
wire    grp_verify_fu_336_ap_idle;
wire   [11:0] grp_verify_fu_336_sig_0_proofs_seed1_address0;
wire    grp_verify_fu_336_sig_0_proofs_seed1_ce0;
wire   [11:0] grp_verify_fu_336_sig_0_proofs_seed2_address0;
wire    grp_verify_fu_336_sig_0_proofs_seed2_ce0;
wire   [9:0] grp_verify_fu_336_sig_0_proofs_inputS_address0;
wire    grp_verify_fu_336_sig_0_proofs_inputS_ce0;
wire   [14:0] grp_verify_fu_336_sig_0_proofs_commun_address0;
wire    grp_verify_fu_336_sig_0_proofs_commun_ce0;
wire   [12:0] grp_verify_fu_336_sig_0_proofs_view3C_address0;
wire    grp_verify_fu_336_sig_0_proofs_view3C_ce0;
wire   [5:0] grp_verify_fu_336_sig_0_challengeBits_address0;
wire    grp_verify_fu_336_sig_0_challengeBits_ce0;
wire   [5:0] grp_verify_fu_336_sig_0_challengeBits_address1;
wire    grp_verify_fu_336_sig_0_challengeBits_ce1;
wire   [4:0] grp_verify_fu_336_sig_0_salt_address0;
wire    grp_verify_fu_336_sig_0_salt_ce0;
wire   [2:0] grp_verify_fu_336_pubKey_address0;
wire    grp_verify_fu_336_pubKey_ce0;
wire   [2:0] grp_verify_fu_336_plaintext_address0;
wire    grp_verify_fu_336_plaintext_ce0;
wire   [15:0] grp_verify_fu_336_message_address0;
wire    grp_verify_fu_336_message_ce0;
wire   [13:0] grp_verify_fu_336_viewOutputs_address0;
wire    grp_verify_fu_336_viewOutputs_ce0;
wire    grp_verify_fu_336_viewOutputs_we0;
wire   [31:0] grp_verify_fu_336_viewOutputs_d0;
wire   [31:0] grp_verify_fu_336_ap_return;
wire    grp_deserializeSignature_fu_364_ap_start;
wire    grp_deserializeSignature_fu_364_ap_idle;
wire   [11:0] grp_deserializeSignature_fu_364_sig_0_proofs_seed1_address0;
wire    grp_deserializeSignature_fu_364_sig_0_proofs_seed1_ce0;
wire    grp_deserializeSignature_fu_364_sig_0_proofs_seed1_we0;
wire   [7:0] grp_deserializeSignature_fu_364_sig_0_proofs_seed1_d0;
wire   [11:0] grp_deserializeSignature_fu_364_sig_0_proofs_seed2_address0;
wire    grp_deserializeSignature_fu_364_sig_0_proofs_seed2_ce0;
wire    grp_deserializeSignature_fu_364_sig_0_proofs_seed2_we0;
wire   [7:0] grp_deserializeSignature_fu_364_sig_0_proofs_seed2_d0;
wire   [9:0] grp_deserializeSignature_fu_364_sig_0_proofs_inputS_address0;
wire    grp_deserializeSignature_fu_364_sig_0_proofs_inputS_ce0;
wire    grp_deserializeSignature_fu_364_sig_0_proofs_inputS_we0;
wire   [31:0] grp_deserializeSignature_fu_364_sig_0_proofs_inputS_d0;
wire   [14:0] grp_deserializeSignature_fu_364_sig_0_proofs_commun_address0;
wire    grp_deserializeSignature_fu_364_sig_0_proofs_commun_ce0;
wire    grp_deserializeSignature_fu_364_sig_0_proofs_commun_we0;
wire   [7:0] grp_deserializeSignature_fu_364_sig_0_proofs_commun_d0;
wire   [12:0] grp_deserializeSignature_fu_364_sig_0_proofs_view3C_address0;
wire    grp_deserializeSignature_fu_364_sig_0_proofs_view3C_ce0;
wire    grp_deserializeSignature_fu_364_sig_0_proofs_view3C_we0;
wire   [7:0] grp_deserializeSignature_fu_364_sig_0_proofs_view3C_d0;
wire   [5:0] grp_deserializeSignature_fu_364_sig_0_challengeBits_address0;
wire    grp_deserializeSignature_fu_364_sig_0_challengeBits_ce0;
wire    grp_deserializeSignature_fu_364_sig_0_challengeBits_we0;
wire   [7:0] grp_deserializeSignature_fu_364_sig_0_challengeBits_d0;
wire   [4:0] grp_deserializeSignature_fu_364_sig_0_salt_address0;
wire    grp_deserializeSignature_fu_364_sig_0_salt_ce0;
wire    grp_deserializeSignature_fu_364_sig_0_salt_we0;
wire   [7:0] grp_deserializeSignature_fu_364_sig_0_salt_d0;
wire   [15:0] grp_deserializeSignature_fu_364_sigBytes_address0;
wire    grp_deserializeSignature_fu_364_sigBytes_ce0;
wire   [15:0] grp_deserializeSignature_fu_364_sigBytes_address1;
wire    grp_deserializeSignature_fu_364_sigBytes_ce1;
wire   [0:0] grp_deserializeSignature_fu_364_ap_return;
reg   [2:0] phi_ln466_reg_292;
wire   [0:0] icmp_ln466_fu_535_p2;
reg   [2:0] phi_ln466_1_reg_303;
wire   [0:0] icmp_ln466_1_fu_552_p2;
reg   [5:0] loop_0_reg_314;
wire    ap_CS_fsm_state7;
reg   [0:0] UnifiedRetVal_reg_325;
reg    grp_verify_fu_336_ap_start_reg;
reg    grp_deserializeSignature_fu_364_ap_start_reg;
wire   [63:0] zext_ln466_fu_530_p1;
wire   [63:0] zext_ln466_1_fu_547_p1;
wire   [63:0] zext_ln468_fu_566_p1;
wire   [63:0] zext_ln468_1_fu_582_p1;
wire   [63:0] zext_ln468_2_fu_609_p1;
wire   [63:0] zext_ln468_3_fu_620_p1;
wire   [63:0] zext_ln468_4_fu_637_p1;
wire   [31:0] or_ln468_5_fu_626_p5;
wire   [31:0] or_ln469_2_fu_642_p5;
wire   [0:0] icmp_ln33_1_fu_396_p2;
wire   [0:0] icmp_ln33_2_fu_402_p2;
wire   [0:0] or_ln33_fu_408_p2;
wire   [0:0] icmp_ln33_fu_390_p2;
wire   [0:0] icmp_ln33_4_fu_426_p2;
wire   [0:0] icmp_ln33_5_fu_432_p2;
wire   [0:0] or_ln33_2_fu_456_p2;
wire   [0:0] icmp_ln33_3_fu_420_p2;
wire   [0:0] icmp_ln33_7_fu_444_p2;
wire   [0:0] icmp_ln33_8_fu_450_p2;
wire   [0:0] or_ln33_4_fu_468_p2;
wire   [0:0] icmp_ln33_6_fu_438_p2;
wire   [0:0] or_ln33_5_fu_474_p2;
wire   [0:0] or_ln33_3_fu_462_p2;
wire   [0:0] or_ln33_6_fu_480_p2;
wire   [0:0] or_ln33_1_fu_414_p2;
wire   [0:0] or_ln33_7_fu_494_p2;
wire   [1:0] select_ln33_fu_486_p3;
wire   [0:0] icmp_ln157_fu_509_p2;
wire   [4:0] or_ln468_fu_576_p2;
wire   [4:0] or_ln468_1_fu_604_p2;
wire   [4:0] or_ln468_2_fu_615_p2;
reg   [0:0] ap_return_preg;
wire    ap_CS_fsm_state9;
reg   [8:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 9'd1;
#0 grp_verify_fu_336_ap_start_reg = 1'b0;
#0 grp_deserializeSignature_fu_364_ap_start_reg = 1'b0;
#0 ap_return_preg = 1'd0;
end

picnic_verify_sigCeG #(
    .DataWidth( 8 ),
    .AddressRange( 3504 ),
    .AddressWidth( 12 ))
sig_0_proofs_seed1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sig_0_proofs_seed1_address0),
    .ce0(sig_0_proofs_seed1_ce0),
    .we0(sig_0_proofs_seed1_we0),
    .d0(grp_deserializeSignature_fu_364_sig_0_proofs_seed1_d0),
    .q0(sig_0_proofs_seed1_q0)
);

picnic_verify_sigCeG #(
    .DataWidth( 8 ),
    .AddressRange( 3504 ),
    .AddressWidth( 12 ))
sig_0_proofs_seed2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sig_0_proofs_seed2_address0),
    .ce0(sig_0_proofs_seed2_ce0),
    .we0(sig_0_proofs_seed2_we0),
    .d0(grp_deserializeSignature_fu_364_sig_0_proofs_seed2_d0),
    .q0(sig_0_proofs_seed2_q0)
);

picnic_verify_sigEe0 #(
    .DataWidth( 32 ),
    .AddressRange( 876 ),
    .AddressWidth( 10 ))
sig_0_proofs_inputS_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sig_0_proofs_inputS_address0),
    .ce0(sig_0_proofs_inputS_ce0),
    .we0(sig_0_proofs_inputS_we0),
    .d0(grp_deserializeSignature_fu_364_sig_0_proofs_inputS_d0),
    .q0(sig_0_proofs_inputS_q0)
);

picnic_verify_sigFfa #(
    .DataWidth( 8 ),
    .AddressRange( 16425 ),
    .AddressWidth( 15 ))
sig_0_proofs_commun_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sig_0_proofs_commun_address0),
    .ce0(sig_0_proofs_commun_ce0),
    .we0(sig_0_proofs_commun_we0),
    .d0(grp_deserializeSignature_fu_364_sig_0_proofs_commun_d0),
    .q0(sig_0_proofs_commun_q0)
);

picnic_verify_sigGfk #(
    .DataWidth( 8 ),
    .AddressRange( 7008 ),
    .AddressWidth( 13 ))
sig_0_proofs_view3C_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sig_0_proofs_view3C_address0),
    .ce0(sig_0_proofs_view3C_ce0),
    .we0(sig_0_proofs_view3C_we0),
    .d0(grp_deserializeSignature_fu_364_sig_0_proofs_view3C_d0),
    .q0(sig_0_proofs_view3C_q0)
);

picnic_verify_sigHfu #(
    .DataWidth( 8 ),
    .AddressRange( 55 ),
    .AddressWidth( 6 ))
sig_0_challengeBits_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sig_0_challengeBits_address0),
    .ce0(sig_0_challengeBits_ce0),
    .we0(sig_0_challengeBits_we0),
    .d0(grp_deserializeSignature_fu_364_sig_0_challengeBits_d0),
    .q0(sig_0_challengeBits_q0),
    .address1(grp_verify_fu_336_sig_0_challengeBits_address1),
    .ce1(sig_0_challengeBits_ce1),
    .q1(sig_0_challengeBits_q1)
);

H3_2_hash #(
    .DataWidth( 8 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
sig_0_salt_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sig_0_salt_address0),
    .ce0(sig_0_salt_ce0),
    .we0(sig_0_salt_we0),
    .d0(grp_deserializeSignature_fu_364_sig_0_salt_d0),
    .q0(sig_0_salt_q0)
);

picnic_verify_temp #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
temp_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(temp_address0),
    .ce0(temp_ce0),
    .we0(temp_we0),
    .d0(temp_d0),
    .q0(temp_q0)
);

picnic_verify_temp #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
temp2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(temp2_address0),
    .ce0(temp2_ce0),
    .we0(temp2_we0),
    .d0(temp2_d0),
    .q0(temp2_q0)
);

verify grp_verify_fu_336(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_verify_fu_336_ap_start),
    .ap_done(grp_verify_fu_336_ap_done),
    .ap_idle(grp_verify_fu_336_ap_idle),
    .ap_ready(grp_verify_fu_336_ap_ready),
    .sig_0_proofs_seed1_address0(grp_verify_fu_336_sig_0_proofs_seed1_address0),
    .sig_0_proofs_seed1_ce0(grp_verify_fu_336_sig_0_proofs_seed1_ce0),
    .sig_0_proofs_seed1_q0(sig_0_proofs_seed1_q0),
    .sig_0_proofs_seed2_address0(grp_verify_fu_336_sig_0_proofs_seed2_address0),
    .sig_0_proofs_seed2_ce0(grp_verify_fu_336_sig_0_proofs_seed2_ce0),
    .sig_0_proofs_seed2_q0(sig_0_proofs_seed2_q0),
    .sig_0_proofs_inputS_address0(grp_verify_fu_336_sig_0_proofs_inputS_address0),
    .sig_0_proofs_inputS_ce0(grp_verify_fu_336_sig_0_proofs_inputS_ce0),
    .sig_0_proofs_inputS_q0(sig_0_proofs_inputS_q0),
    .sig_0_proofs_commun_address0(grp_verify_fu_336_sig_0_proofs_commun_address0),
    .sig_0_proofs_commun_ce0(grp_verify_fu_336_sig_0_proofs_commun_ce0),
    .sig_0_proofs_commun_q0(sig_0_proofs_commun_q0),
    .sig_0_proofs_view3C_address0(grp_verify_fu_336_sig_0_proofs_view3C_address0),
    .sig_0_proofs_view3C_ce0(grp_verify_fu_336_sig_0_proofs_view3C_ce0),
    .sig_0_proofs_view3C_q0(sig_0_proofs_view3C_q0),
    .sig_0_challengeBits_address0(grp_verify_fu_336_sig_0_challengeBits_address0),
    .sig_0_challengeBits_ce0(grp_verify_fu_336_sig_0_challengeBits_ce0),
    .sig_0_challengeBits_q0(sig_0_challengeBits_q0),
    .sig_0_challengeBits_address1(grp_verify_fu_336_sig_0_challengeBits_address1),
    .sig_0_challengeBits_ce1(grp_verify_fu_336_sig_0_challengeBits_ce1),
    .sig_0_challengeBits_q1(sig_0_challengeBits_q1),
    .sig_0_salt_address0(grp_verify_fu_336_sig_0_salt_address0),
    .sig_0_salt_ce0(grp_verify_fu_336_sig_0_salt_ce0),
    .sig_0_salt_q0(sig_0_salt_q0),
    .pubKey_address0(grp_verify_fu_336_pubKey_address0),
    .pubKey_ce0(grp_verify_fu_336_pubKey_ce0),
    .pubKey_q0(temp_q0),
    .plaintext_address0(grp_verify_fu_336_plaintext_address0),
    .plaintext_ce0(grp_verify_fu_336_plaintext_ce0),
    .plaintext_q0(temp2_q0),
    .message_address0(grp_verify_fu_336_message_address0),
    .message_ce0(grp_verify_fu_336_message_ce0),
    .message_q0(message_q0),
    .messageByteLength(message_len),
    .viewOutputs_address0(grp_verify_fu_336_viewOutputs_address0),
    .viewOutputs_ce0(grp_verify_fu_336_viewOutputs_ce0),
    .viewOutputs_we0(grp_verify_fu_336_viewOutputs_we0),
    .viewOutputs_d0(grp_verify_fu_336_viewOutputs_d0),
    .viewOutputs_q0(viewOutputs_q0),
    .ap_return(grp_verify_fu_336_ap_return)
);

deserializeSignature grp_deserializeSignature_fu_364(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_deserializeSignature_fu_364_ap_start),
    .ap_done(grp_deserializeSignature_fu_364_ap_done),
    .ap_idle(grp_deserializeSignature_fu_364_ap_idle),
    .ap_ready(grp_deserializeSignature_fu_364_ap_ready),
    .sig_0_proofs_seed1_address0(grp_deserializeSignature_fu_364_sig_0_proofs_seed1_address0),
    .sig_0_proofs_seed1_ce0(grp_deserializeSignature_fu_364_sig_0_proofs_seed1_ce0),
    .sig_0_proofs_seed1_we0(grp_deserializeSignature_fu_364_sig_0_proofs_seed1_we0),
    .sig_0_proofs_seed1_d0(grp_deserializeSignature_fu_364_sig_0_proofs_seed1_d0),
    .sig_0_proofs_seed2_address0(grp_deserializeSignature_fu_364_sig_0_proofs_seed2_address0),
    .sig_0_proofs_seed2_ce0(grp_deserializeSignature_fu_364_sig_0_proofs_seed2_ce0),
    .sig_0_proofs_seed2_we0(grp_deserializeSignature_fu_364_sig_0_proofs_seed2_we0),
    .sig_0_proofs_seed2_d0(grp_deserializeSignature_fu_364_sig_0_proofs_seed2_d0),
    .sig_0_proofs_inputS_address0(grp_deserializeSignature_fu_364_sig_0_proofs_inputS_address0),
    .sig_0_proofs_inputS_ce0(grp_deserializeSignature_fu_364_sig_0_proofs_inputS_ce0),
    .sig_0_proofs_inputS_we0(grp_deserializeSignature_fu_364_sig_0_proofs_inputS_we0),
    .sig_0_proofs_inputS_d0(grp_deserializeSignature_fu_364_sig_0_proofs_inputS_d0),
    .sig_0_proofs_commun_address0(grp_deserializeSignature_fu_364_sig_0_proofs_commun_address0),
    .sig_0_proofs_commun_ce0(grp_deserializeSignature_fu_364_sig_0_proofs_commun_ce0),
    .sig_0_proofs_commun_we0(grp_deserializeSignature_fu_364_sig_0_proofs_commun_we0),
    .sig_0_proofs_commun_d0(grp_deserializeSignature_fu_364_sig_0_proofs_commun_d0),
    .sig_0_proofs_view3C_address0(grp_deserializeSignature_fu_364_sig_0_proofs_view3C_address0),
    .sig_0_proofs_view3C_ce0(grp_deserializeSignature_fu_364_sig_0_proofs_view3C_ce0),
    .sig_0_proofs_view3C_we0(grp_deserializeSignature_fu_364_sig_0_proofs_view3C_we0),
    .sig_0_proofs_view3C_d0(grp_deserializeSignature_fu_364_sig_0_proofs_view3C_d0),
    .sig_0_challengeBits_address0(grp_deserializeSignature_fu_364_sig_0_challengeBits_address0),
    .sig_0_challengeBits_ce0(grp_deserializeSignature_fu_364_sig_0_challengeBits_ce0),
    .sig_0_challengeBits_we0(grp_deserializeSignature_fu_364_sig_0_challengeBits_we0),
    .sig_0_challengeBits_d0(grp_deserializeSignature_fu_364_sig_0_challengeBits_d0),
    .sig_0_challengeBits_q0(sig_0_challengeBits_q0),
    .sig_0_salt_address0(grp_deserializeSignature_fu_364_sig_0_salt_address0),
    .sig_0_salt_ce0(grp_deserializeSignature_fu_364_sig_0_salt_ce0),
    .sig_0_salt_we0(grp_deserializeSignature_fu_364_sig_0_salt_we0),
    .sig_0_salt_d0(grp_deserializeSignature_fu_364_sig_0_salt_d0),
    .sigBytes_address0(grp_deserializeSignature_fu_364_sigBytes_address0),
    .sigBytes_ce0(grp_deserializeSignature_fu_364_sigBytes_ce0),
    .sigBytes_q0(message_q0),
    .sigBytes_address1(grp_deserializeSignature_fu_364_sigBytes_address1),
    .sigBytes_ce1(grp_deserializeSignature_fu_364_sigBytes_ce1),
    .sigBytes_q1(message_q1),
    .sigBytes_offset(signature_offset),
    .sigBytesLen(signature_len),
    .params_UnruhGWithout(paramset_UnruhGWitho_reg_674),
    .params_transform_rea(paramset_transform_reg_669),
    .ap_return(grp_deserializeSignature_fu_364_ap_return)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state9)) begin
            ap_return_preg <= UnifiedRetVal_reg_325;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_deserializeSignature_fu_364_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            grp_deserializeSignature_fu_364_ap_start_reg <= 1'b1;
        end else if ((grp_deserializeSignature_fu_364_ap_ready == 1'b1)) begin
            grp_deserializeSignature_fu_364_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_verify_fu_336_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state5) & (tmp_fu_558_p3 == 1'd1))) begin
            grp_verify_fu_336_ap_start_reg <= 1'b1;
        end else if ((grp_verify_fu_336_ap_ready == 1'b1)) begin
            grp_verify_fu_336_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((grp_deserializeSignature_fu_364_ap_done == 1'b1) & (grp_deserializeSignature_fu_364_ap_return == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        UnifiedRetVal_reg_325 <= 1'd1;
    end else if (((1'b1 == ap_CS_fsm_state8) & (grp_verify_fu_336_ap_done == 1'b1))) begin
        UnifiedRetVal_reg_325 <= icmp_ln475_fu_653_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln466_1_fu_552_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        loop_0_reg_314 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        loop_0_reg_314 <= loop_reg_737;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln466_fu_535_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        phi_ln466_1_reg_303 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln466_1_fu_552_p2 == 1'd0))) begin
        phi_ln466_1_reg_303 <= add_ln466_1_fu_541_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_deserializeSignature_fu_364_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (grp_deserializeSignature_fu_364_ap_return == 1'd0))) begin
        phi_ln466_reg_292 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln466_fu_535_p2 == 1'd0))) begin
        phi_ln466_reg_292 <= add_ln466_fu_524_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (tmp_fu_558_p3 == 1'd0))) begin
        loop_reg_737 <= loop_fu_598_p2;
        trunc_ln467_reg_711 <= trunc_ln467_fu_572_p1;
        trunc_ln468_1_reg_722 <= {{loop_0_reg_314[4:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        paramset_UnruhGWitho_reg_674[1 : 0] <= paramset_UnruhGWitho_fu_515_p3[1 : 0];
paramset_UnruhGWitho_reg_674[4 : 3] <= paramset_UnruhGWitho_fu_515_p3[4 : 3];
paramset_UnruhGWitho_reg_674[6] <= paramset_UnruhGWitho_fu_515_p3[6];
        paramset_transform_reg_669 <= paramset_transform_fu_500_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        pk_0_ciphertext_loa_1_reg_747 <= pk_0_ciphertext_q1;
        pk_0_ciphertext_loa_reg_742 <= pk_0_ciphertext_q0;
        pk_0_plaintext_load_1_reg_767 <= pk_0_plaintext_q1;
        pk_0_plaintext_load_reg_762 <= pk_0_plaintext_q0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        ap_return = UnifiedRetVal_reg_325;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        message_address0 = grp_deserializeSignature_fu_364_sigBytes_address0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        message_address0 = grp_verify_fu_336_message_address0;
    end else begin
        message_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        message_ce0 = grp_deserializeSignature_fu_364_sigBytes_ce0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        message_ce0 = grp_verify_fu_336_message_ce0;
    end else begin
        message_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        message_ce1 = grp_deserializeSignature_fu_364_sigBytes_ce1;
    end else begin
        message_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        pk_0_ciphertext_address0 = zext_ln468_2_fu_609_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        pk_0_ciphertext_address0 = zext_ln468_fu_566_p1;
    end else begin
        pk_0_ciphertext_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        pk_0_ciphertext_address1 = zext_ln468_3_fu_620_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        pk_0_ciphertext_address1 = zext_ln468_1_fu_582_p1;
    end else begin
        pk_0_ciphertext_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        pk_0_ciphertext_ce0 = 1'b1;
    end else begin
        pk_0_ciphertext_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        pk_0_ciphertext_ce1 = 1'b1;
    end else begin
        pk_0_ciphertext_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        pk_0_plaintext_address0 = zext_ln468_2_fu_609_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        pk_0_plaintext_address0 = zext_ln468_fu_566_p1;
    end else begin
        pk_0_plaintext_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        pk_0_plaintext_address1 = zext_ln468_3_fu_620_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        pk_0_plaintext_address1 = zext_ln468_1_fu_582_p1;
    end else begin
        pk_0_plaintext_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        pk_0_plaintext_ce0 = 1'b1;
    end else begin
        pk_0_plaintext_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        pk_0_plaintext_ce1 = 1'b1;
    end else begin
        pk_0_plaintext_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        sig_0_challengeBits_address0 = grp_deserializeSignature_fu_364_sig_0_challengeBits_address0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sig_0_challengeBits_address0 = grp_verify_fu_336_sig_0_challengeBits_address0;
    end else begin
        sig_0_challengeBits_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        sig_0_challengeBits_ce0 = grp_deserializeSignature_fu_364_sig_0_challengeBits_ce0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sig_0_challengeBits_ce0 = grp_verify_fu_336_sig_0_challengeBits_ce0;
    end else begin
        sig_0_challengeBits_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        sig_0_challengeBits_ce1 = grp_verify_fu_336_sig_0_challengeBits_ce1;
    end else begin
        sig_0_challengeBits_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        sig_0_challengeBits_we0 = grp_deserializeSignature_fu_364_sig_0_challengeBits_we0;
    end else begin
        sig_0_challengeBits_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        sig_0_proofs_commun_address0 = grp_deserializeSignature_fu_364_sig_0_proofs_commun_address0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sig_0_proofs_commun_address0 = grp_verify_fu_336_sig_0_proofs_commun_address0;
    end else begin
        sig_0_proofs_commun_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        sig_0_proofs_commun_ce0 = grp_deserializeSignature_fu_364_sig_0_proofs_commun_ce0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sig_0_proofs_commun_ce0 = grp_verify_fu_336_sig_0_proofs_commun_ce0;
    end else begin
        sig_0_proofs_commun_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        sig_0_proofs_commun_we0 = grp_deserializeSignature_fu_364_sig_0_proofs_commun_we0;
    end else begin
        sig_0_proofs_commun_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        sig_0_proofs_inputS_address0 = grp_deserializeSignature_fu_364_sig_0_proofs_inputS_address0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sig_0_proofs_inputS_address0 = grp_verify_fu_336_sig_0_proofs_inputS_address0;
    end else begin
        sig_0_proofs_inputS_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        sig_0_proofs_inputS_ce0 = grp_deserializeSignature_fu_364_sig_0_proofs_inputS_ce0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sig_0_proofs_inputS_ce0 = grp_verify_fu_336_sig_0_proofs_inputS_ce0;
    end else begin
        sig_0_proofs_inputS_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        sig_0_proofs_inputS_we0 = grp_deserializeSignature_fu_364_sig_0_proofs_inputS_we0;
    end else begin
        sig_0_proofs_inputS_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        sig_0_proofs_seed1_address0 = grp_deserializeSignature_fu_364_sig_0_proofs_seed1_address0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sig_0_proofs_seed1_address0 = grp_verify_fu_336_sig_0_proofs_seed1_address0;
    end else begin
        sig_0_proofs_seed1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        sig_0_proofs_seed1_ce0 = grp_deserializeSignature_fu_364_sig_0_proofs_seed1_ce0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sig_0_proofs_seed1_ce0 = grp_verify_fu_336_sig_0_proofs_seed1_ce0;
    end else begin
        sig_0_proofs_seed1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        sig_0_proofs_seed1_we0 = grp_deserializeSignature_fu_364_sig_0_proofs_seed1_we0;
    end else begin
        sig_0_proofs_seed1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        sig_0_proofs_seed2_address0 = grp_deserializeSignature_fu_364_sig_0_proofs_seed2_address0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sig_0_proofs_seed2_address0 = grp_verify_fu_336_sig_0_proofs_seed2_address0;
    end else begin
        sig_0_proofs_seed2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        sig_0_proofs_seed2_ce0 = grp_deserializeSignature_fu_364_sig_0_proofs_seed2_ce0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sig_0_proofs_seed2_ce0 = grp_verify_fu_336_sig_0_proofs_seed2_ce0;
    end else begin
        sig_0_proofs_seed2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        sig_0_proofs_seed2_we0 = grp_deserializeSignature_fu_364_sig_0_proofs_seed2_we0;
    end else begin
        sig_0_proofs_seed2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        sig_0_proofs_view3C_address0 = grp_deserializeSignature_fu_364_sig_0_proofs_view3C_address0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sig_0_proofs_view3C_address0 = grp_verify_fu_336_sig_0_proofs_view3C_address0;
    end else begin
        sig_0_proofs_view3C_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        sig_0_proofs_view3C_ce0 = grp_deserializeSignature_fu_364_sig_0_proofs_view3C_ce0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sig_0_proofs_view3C_ce0 = grp_verify_fu_336_sig_0_proofs_view3C_ce0;
    end else begin
        sig_0_proofs_view3C_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        sig_0_proofs_view3C_we0 = grp_deserializeSignature_fu_364_sig_0_proofs_view3C_we0;
    end else begin
        sig_0_proofs_view3C_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        sig_0_salt_address0 = grp_deserializeSignature_fu_364_sig_0_salt_address0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sig_0_salt_address0 = grp_verify_fu_336_sig_0_salt_address0;
    end else begin
        sig_0_salt_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        sig_0_salt_ce0 = grp_deserializeSignature_fu_364_sig_0_salt_ce0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sig_0_salt_ce0 = grp_verify_fu_336_sig_0_salt_ce0;
    end else begin
        sig_0_salt_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        sig_0_salt_we0 = grp_deserializeSignature_fu_364_sig_0_salt_we0;
    end else begin
        sig_0_salt_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        temp2_address0 = zext_ln468_4_fu_637_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        temp2_address0 = zext_ln466_1_fu_547_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        temp2_address0 = grp_verify_fu_336_plaintext_address0;
    end else begin
        temp2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state4))) begin
        temp2_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        temp2_ce0 = grp_verify_fu_336_plaintext_ce0;
    end else begin
        temp2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        temp2_d0 = or_ln469_2_fu_642_p5;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        temp2_d0 = 32'd0;
    end else begin
        temp2_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state4))) begin
        temp2_we0 = 1'b1;
    end else begin
        temp2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        temp_address0 = zext_ln468_4_fu_637_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        temp_address0 = zext_ln466_fu_530_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        temp_address0 = grp_verify_fu_336_pubKey_address0;
    end else begin
        temp_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state7))) begin
        temp_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        temp_ce0 = grp_verify_fu_336_pubKey_ce0;
    end else begin
        temp_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        temp_d0 = or_ln468_5_fu_626_p5;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        temp_d0 = 32'd0;
    end else begin
        temp_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state7))) begin
        temp_we0 = 1'b1;
    end else begin
        temp_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_deserializeSignature_fu_364_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (grp_deserializeSignature_fu_364_ap_return == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if (((grp_deserializeSignature_fu_364_ap_done == 1'b1) & (grp_deserializeSignature_fu_364_ap_return == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln466_fu_535_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln466_1_fu_552_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (tmp_fu_558_p3 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (grp_verify_fu_336_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln466_1_fu_541_p2 = (phi_ln466_1_reg_303 + 3'd1);

assign add_ln466_fu_524_p2 = (phi_ln466_reg_292 + 3'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign grp_deserializeSignature_fu_364_ap_start = grp_deserializeSignature_fu_364_ap_start_reg;

assign grp_verify_fu_336_ap_start = grp_verify_fu_336_ap_start_reg;

assign icmp_ln157_fu_509_p2 = ((paramset_transform_fu_500_p3 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln33_1_fu_396_p2 = ((pk_0_params_read == 4'd4) ? 1'b1 : 1'b0);

assign icmp_ln33_2_fu_402_p2 = ((pk_0_params_read == 4'd6) ? 1'b1 : 1'b0);

assign icmp_ln33_3_fu_420_p2 = ((pk_0_params_read == 4'd1) ? 1'b1 : 1'b0);

assign icmp_ln33_4_fu_426_p2 = ((pk_0_params_read == 4'd3) ? 1'b1 : 1'b0);

assign icmp_ln33_5_fu_432_p2 = ((pk_0_params_read == 4'd5) ? 1'b1 : 1'b0);

assign icmp_ln33_6_fu_438_p2 = ((pk_0_params_read == 4'd7) ? 1'b1 : 1'b0);

assign icmp_ln33_7_fu_444_p2 = ((pk_0_params_read == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln33_8_fu_450_p2 = ((pk_0_params_read == 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln33_fu_390_p2 = ((pk_0_params_read == 4'd2) ? 1'b1 : 1'b0);

assign icmp_ln466_1_fu_552_p2 = ((phi_ln466_1_reg_303 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln466_fu_535_p2 = ((phi_ln466_reg_292 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln475_fu_653_p2 = ((grp_verify_fu_336_ap_return != 32'd0) ? 1'b1 : 1'b0);

assign loop_fu_598_p2 = (6'd4 + loop_0_reg_314);

assign message_address1 = grp_deserializeSignature_fu_364_sigBytes_address1;

assign or_ln33_1_fu_414_p2 = (or_ln33_fu_408_p2 | icmp_ln33_fu_390_p2);

assign or_ln33_2_fu_456_p2 = (icmp_ln33_5_fu_432_p2 | icmp_ln33_4_fu_426_p2);

assign or_ln33_3_fu_462_p2 = (or_ln33_2_fu_456_p2 | icmp_ln33_3_fu_420_p2);

assign or_ln33_4_fu_468_p2 = (icmp_ln33_8_fu_450_p2 | icmp_ln33_7_fu_444_p2);

assign or_ln33_5_fu_474_p2 = (or_ln33_4_fu_468_p2 | icmp_ln33_6_fu_438_p2);

assign or_ln33_6_fu_480_p2 = (or_ln33_5_fu_474_p2 | or_ln33_3_fu_462_p2);

assign or_ln33_7_fu_494_p2 = (or_ln33_6_fu_480_p2 | or_ln33_1_fu_414_p2);

assign or_ln33_fu_408_p2 = (icmp_ln33_2_fu_402_p2 | icmp_ln33_1_fu_396_p2);

assign or_ln468_1_fu_604_p2 = (trunc_ln467_reg_711 | 5'd2);

assign or_ln468_2_fu_615_p2 = (trunc_ln467_reg_711 | 5'd3);

assign or_ln468_5_fu_626_p5 = {{{{pk_0_ciphertext_q1}, {pk_0_ciphertext_q0}}, {pk_0_ciphertext_loa_1_reg_747}}, {pk_0_ciphertext_loa_reg_742}};

assign or_ln468_fu_576_p2 = (trunc_ln467_fu_572_p1 | 5'd1);

assign or_ln469_2_fu_642_p5 = {{{{pk_0_plaintext_q1}, {pk_0_plaintext_q0}}, {pk_0_plaintext_load_1_reg_767}}, {pk_0_plaintext_load_reg_762}};

assign paramset_UnruhGWitho_fu_515_p3 = ((icmp_ln157_fu_509_p2[0:0] === 1'b1) ? 7'd91 : 7'd0);

assign paramset_transform_fu_500_p3 = ((or_ln33_7_fu_494_p2[0:0] === 1'b1) ? select_ln33_fu_486_p3 : 2'd3);

assign select_ln33_fu_486_p3 = ((or_ln33_6_fu_480_p2[0:0] === 1'b1) ? 2'd0 : 2'd1);

assign tmp_fu_558_p3 = loop_0_reg_314[32'd5];

assign trunc_ln467_fu_572_p1 = loop_0_reg_314[4:0];

assign viewOutputs_address0 = grp_verify_fu_336_viewOutputs_address0;

assign viewOutputs_ce0 = grp_verify_fu_336_viewOutputs_ce0;

assign viewOutputs_d0 = grp_verify_fu_336_viewOutputs_d0;

assign viewOutputs_we0 = grp_verify_fu_336_viewOutputs_we0;

assign zext_ln466_1_fu_547_p1 = phi_ln466_1_reg_303;

assign zext_ln466_fu_530_p1 = phi_ln466_reg_292;

assign zext_ln468_1_fu_582_p1 = or_ln468_fu_576_p2;

assign zext_ln468_2_fu_609_p1 = or_ln468_1_fu_604_p2;

assign zext_ln468_3_fu_620_p1 = or_ln468_2_fu_615_p2;

assign zext_ln468_4_fu_637_p1 = trunc_ln468_1_reg_722;

assign zext_ln468_fu_566_p1 = loop_0_reg_314;

always @ (posedge ap_clk) begin
    paramset_UnruhGWitho_reg_674[2] <= 1'b0;
    paramset_UnruhGWitho_reg_674[5] <= 1'b0;
end

endmodule //picnic_verify
