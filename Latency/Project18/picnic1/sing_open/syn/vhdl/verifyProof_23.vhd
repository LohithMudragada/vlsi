-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity verifyProof_23 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    proof_0_seed1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    proof_0_seed1_ce0 : OUT STD_LOGIC;
    proof_0_seed1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    proof_seed1_offset1 : IN STD_LOGIC_VECTOR (7 downto 0);
    proof_0_seed2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    proof_0_seed2_ce0 : OUT STD_LOGIC;
    proof_0_seed2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    proof_0_inputShare_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    proof_0_inputShare_ce0 : OUT STD_LOGIC;
    proof_0_inputShare_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    proof_0_communicatedBits_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
    proof_0_communicatedBits_ce0 : OUT STD_LOGIC;
    proof_0_communicatedBits_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    view1_inputShare_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    view1_inputShare_ce0 : OUT STD_LOGIC;
    view1_inputShare_we0 : OUT STD_LOGIC;
    view1_inputShare_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    view1_inputShare_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    view1_communicatedBits_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
    view1_communicatedBits_ce0 : OUT STD_LOGIC;
    view1_communicatedBits_we0 : OUT STD_LOGIC;
    view1_communicatedBits_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    view1_communicatedBits_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    view1_outputShare_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    view1_outputShare_ce0 : OUT STD_LOGIC;
    view1_outputShare_we0 : OUT STD_LOGIC;
    view1_outputShare_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    view2_inputShare_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    view2_inputShare_ce0 : OUT STD_LOGIC;
    view2_inputShare_we0 : OUT STD_LOGIC;
    view2_inputShare_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    view2_inputShare_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    view2_communicatedBits_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
    view2_communicatedBits_ce0 : OUT STD_LOGIC;
    view2_communicatedBits_we0 : OUT STD_LOGIC;
    view2_communicatedBits_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    view2_communicatedBits_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    view2_outputShare_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    view2_outputShare_ce0 : OUT STD_LOGIC;
    view2_outputShare_we0 : OUT STD_LOGIC;
    view2_outputShare_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    challenge : IN STD_LOGIC_VECTOR (1 downto 0);
    salt_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    salt_0_ce0 : OUT STD_LOGIC;
    salt_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    roundNumber : IN STD_LOGIC_VECTOR (7 downto 0);
    tmp_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    tmp_ce0 : OUT STD_LOGIC;
    tmp_we0 : OUT STD_LOGIC;
    tmp_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    tmp_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    plaintext_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    plaintext_ce0 : OUT STD_LOGIC;
    plaintext_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    tape_0_tape_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    tape_0_tape_ce0 : OUT STD_LOGIC;
    tape_0_tape_we0 : OUT STD_LOGIC;
    tape_0_tape_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    tape_0_tape_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    tape_0_tape_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    tape_0_tape_ce1 : OUT STD_LOGIC;
    tape_0_tape_q1 : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of verifyProof_23 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (77 downto 0) := "000000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (77 downto 0) := "000000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (77 downto 0) := "000000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (77 downto 0) := "000000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (77 downto 0) := "000000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (77 downto 0) := "000000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (77 downto 0) := "000001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (77 downto 0) := "000010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (77 downto 0) := "000100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (77 downto 0) := "001000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (77 downto 0) := "010000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state78 : STD_LOGIC_VECTOR (77 downto 0) := "100000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_lv32_4C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001100";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv8_5F : STD_LOGIC_VECTOR (7 downto 0) := "01011111";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_4A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001010";
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";
    constant ap_const_lv32_4D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001101";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv8_20 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_const_lv8_4B : STD_LOGIC_VECTOR (7 downto 0) := "01001011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv15_4B : STD_LOGIC_VECTOR (14 downto 0) := "000000001001011";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv7_4B : STD_LOGIC_VECTOR (6 downto 0) := "1001011";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv7_10 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_const_lv8_A6 : STD_LOGIC_VECTOR (7 downto 0) := "10100110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv7_60 : STD_LOGIC_VECTOR (6 downto 0) := "1100000";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal grp_HashInit_fu_811_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_885 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal grp_HashInit_fu_811_ap_ready : STD_LOGIC;
    signal grp_HashInit_fu_811_ap_done : STD_LOGIC;
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal ap_CS_fsm_state48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal grp_KeccakWidth1600_Spon_4_fu_757_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_891 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal grp_KeccakWidth1600_Spon_4_fu_757_ap_ready : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_4_fu_757_ap_done : STD_LOGIC;
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal reg_896 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal grp_HashFinal_fu_823_ap_ready : STD_LOGIC;
    signal grp_HashFinal_fu_823_ap_done : STD_LOGIC;
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal ap_CS_fsm_state60 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state60 : signal is "none";
    signal reg_901 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_KeccakWidth1600_Spon_7_fu_771_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_906 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal grp_KeccakWidth1600_Spon_7_fu_771_ap_ready : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_7_fu_771_ap_done : STD_LOGIC;
    signal ap_CS_fsm_state50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal grp_KeccakWidth1600_Spon_8_fu_786_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_911 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal grp_KeccakWidth1600_Spon_8_fu_786_ap_ready : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_8_fu_786_ap_done : STD_LOGIC;
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal grp_KeccakWidth1600_Spon_10_fu_798_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_916 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal grp_KeccakWidth1600_Spon_10_fu_798_ap_ready : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_10_fu_798_ap_done : STD_LOGIC;
    signal grp_createRandomTape13_fu_689_ap_ready : STD_LOGIC;
    signal grp_createRandomTape13_fu_689_ap_done : STD_LOGIC;
    signal ap_block_state19_on_subcall_done : BOOLEAN;
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_CS_fsm_state54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal ap_CS_fsm_state56 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state56 : signal is "none";
    signal ap_CS_fsm_state58 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state58 : signal is "none";
    signal challenge_read_read_fu_194_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln1010_1_fu_934_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1010_1_reg_1628 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln1010_fu_938_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln1010_reg_1642 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln1007_fu_944_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal loop_fu_967_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal loop_reg_1658 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal zext_ln1010_3_fu_982_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1010_3_reg_1663 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln1009_fu_961_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal loop_5_fu_993_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal loop_5_reg_1676 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal zext_ln1077_1_fu_1008_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1077_1_reg_1681 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln1076_fu_987_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1084_fu_1029_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1084_reg_1694 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal tmp_8_fu_1017_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal view2_inputShare_add_4_reg_1698 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1083_fu_1091_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal loop_17_fu_1103_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal loop_17_reg_1721 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal icmp_ln1091_fu_1097_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal loop_16_fu_1126_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal loop_16_reg_1734 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln1066_1_fu_1141_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1066_1_reg_1739 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln1065_fu_1120_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1051_fu_1177_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1051_reg_1752 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal tmp_2_fu_1165_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal view1_inputShare_add_3_reg_1756 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1050_fu_1239_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal loop_14_fu_1251_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal loop_14_reg_1779 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal icmp_ln1058_fu_1245_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1020_fu_1289_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1020_reg_1792 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state64 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state64 : signal is "none";
    signal tmp_1_fu_1277_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal view1_inputShare_add_1_reg_1796 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1019_fu_1351_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state65 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state65 : signal is "none";
    signal loop_13_fu_1363_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal loop_13_reg_1819 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state66 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state66 : signal is "none";
    signal icmp_ln1026_fu_1357_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1034_fu_1401_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1034_reg_1832 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state69 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state69 : signal is "none";
    signal tmp_9_fu_1389_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal view2_inputShare_add_1_reg_1836 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1033_fu_1463_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state70 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state70 : signal is "none";
    signal loop_18_fu_1475_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal loop_18_reg_1859 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state71 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state71 : signal is "none";
    signal icmp_ln1040_fu_1469_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_addr_1_reg_1872 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state74 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state74 : signal is "none";
    signal tmp_14_fu_1511_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal loop_19_fu_1539_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal loop_19_reg_1882 : STD_LOGIC_VECTOR (7 downto 0);
    signal loop_20_fu_1564_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal loop_20_reg_1890 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state77 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state77 : signal is "none";
    signal temp_addr_2_reg_1895 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln1108_fu_1558_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ctx_sponge_state_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal ctx_sponge_state_1_ce0 : STD_LOGIC;
    signal ctx_sponge_state_1_we0 : STD_LOGIC;
    signal ctx_sponge_state_1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal ctx_sponge_state_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal ctx_sponge_state_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal ctx_sponge_state_ce0 : STD_LOGIC;
    signal ctx_sponge_state_we0 : STD_LOGIC;
    signal ctx_sponge_state_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal ctx_sponge_state_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal temp_ce0 : STD_LOGIC;
    signal temp_we0 : STD_LOGIC_VECTOR (3 downto 0);
    signal temp_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_ce1 : STD_LOGIC;
    signal temp_we1 : STD_LOGIC_VECTOR (3 downto 0);
    signal temp_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_createRandomTape13_fu_689_ap_start : STD_LOGIC;
    signal grp_createRandomTape13_fu_689_ap_idle : STD_LOGIC;
    signal grp_createRandomTape13_fu_689_seed_0_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_createRandomTape13_fu_689_seed_0_ce0 : STD_LOGIC;
    signal grp_createRandomTape13_fu_689_seed_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_createRandomTape13_fu_689_salt_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_createRandomTape13_fu_689_salt_0_ce0 : STD_LOGIC;
    signal grp_createRandomTape13_fu_689_playerNumber : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_createRandomTape13_fu_689_tape_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_createRandomTape13_fu_689_tape_ce0 : STD_LOGIC;
    signal grp_createRandomTape13_fu_689_tape_we0 : STD_LOGIC;
    signal grp_createRandomTape13_fu_689_tape_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_mpc_LowMC_verify_2_fu_709_ap_start : STD_LOGIC;
    signal grp_mpc_LowMC_verify_2_fu_709_ap_done : STD_LOGIC;
    signal grp_mpc_LowMC_verify_2_fu_709_ap_idle : STD_LOGIC;
    signal grp_mpc_LowMC_verify_2_fu_709_ap_ready : STD_LOGIC;
    signal grp_mpc_LowMC_verify_2_fu_709_view1_inputShare_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_mpc_LowMC_verify_2_fu_709_view1_inputShare_ce0 : STD_LOGIC;
    signal grp_mpc_LowMC_verify_2_fu_709_view1_communicatedBi_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_mpc_LowMC_verify_2_fu_709_view1_communicatedBi_ce0 : STD_LOGIC;
    signal grp_mpc_LowMC_verify_2_fu_709_view1_communicatedBi_we0 : STD_LOGIC;
    signal grp_mpc_LowMC_verify_2_fu_709_view1_communicatedBi_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_mpc_LowMC_verify_2_fu_709_view1_outputShare_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_mpc_LowMC_verify_2_fu_709_view1_outputShare_ce0 : STD_LOGIC;
    signal grp_mpc_LowMC_verify_2_fu_709_view1_outputShare_we0 : STD_LOGIC;
    signal grp_mpc_LowMC_verify_2_fu_709_view1_outputShare_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mpc_LowMC_verify_2_fu_709_view2_inputShare_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_mpc_LowMC_verify_2_fu_709_view2_inputShare_ce0 : STD_LOGIC;
    signal grp_mpc_LowMC_verify_2_fu_709_view2_communicatedBi_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_mpc_LowMC_verify_2_fu_709_view2_communicatedBi_ce0 : STD_LOGIC;
    signal grp_mpc_LowMC_verify_2_fu_709_view2_outputShare_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_mpc_LowMC_verify_2_fu_709_view2_outputShare_ce0 : STD_LOGIC;
    signal grp_mpc_LowMC_verify_2_fu_709_view2_outputShare_we0 : STD_LOGIC;
    signal grp_mpc_LowMC_verify_2_fu_709_view2_outputShare_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mpc_LowMC_verify_2_fu_709_tapes_0_tape_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_mpc_LowMC_verify_2_fu_709_tapes_0_tape_ce0 : STD_LOGIC;
    signal grp_mpc_LowMC_verify_2_fu_709_tapes_0_tape_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_mpc_LowMC_verify_2_fu_709_tapes_0_tape_ce1 : STD_LOGIC;
    signal grp_mpc_LowMC_verify_2_fu_709_tmp_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mpc_LowMC_verify_2_fu_709_tmp_ce0 : STD_LOGIC;
    signal grp_mpc_LowMC_verify_2_fu_709_tmp_we0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mpc_LowMC_verify_2_fu_709_tmp_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mpc_LowMC_verify_2_fu_709_tmp_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mpc_LowMC_verify_2_fu_709_tmp_ce1 : STD_LOGIC;
    signal grp_mpc_LowMC_verify_2_fu_709_tmp_we1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mpc_LowMC_verify_2_fu_709_tmp_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mpc_LowMC_verify_2_fu_709_plaintext_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_mpc_LowMC_verify_2_fu_709_plaintext_ce0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_1_fu_738_ap_start : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_1_fu_738_ap_done : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_1_fu_738_ap_idle : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_1_fu_738_ap_ready : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_1_fu_738_instance_state_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakWidth1600_Spon_1_fu_738_instance_state_ce0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_1_fu_738_instance_state_we0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_1_fu_738_instance_state_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakWidth1600_Spon_1_fu_738_instance_state_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakWidth1600_Spon_1_fu_738_data_0_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_KeccakWidth1600_Spon_1_fu_738_data_0_ce0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_1_fu_738_data_0_we0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_1_fu_738_data_0_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakWidth1600_Spon_1_fu_738_data_offset1 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_KeccakWidth1600_Spon_1_fu_738_dataByteLen : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakWidth1600_Spon_4_fu_757_ap_start : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_4_fu_757_ap_idle : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_4_fu_757_instance_state_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakWidth1600_Spon_4_fu_757_instance_state_ce0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_4_fu_757_instance_state_we0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_4_fu_757_instance_state_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakWidth1600_Spon_4_fu_757_instance_state_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakWidth1600_Spon_4_fu_757_data_0_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_KeccakWidth1600_Spon_4_fu_757_data_0_ce0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_4_fu_757_data_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakWidth1600_Spon_7_fu_771_ap_start : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_7_fu_771_ap_idle : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_7_fu_771_instance_state_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakWidth1600_Spon_7_fu_771_instance_state_ce0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_7_fu_771_instance_state_we0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_7_fu_771_instance_state_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakWidth1600_Spon_7_fu_771_instance_state_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakWidth1600_Spon_7_fu_771_data_0_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_KeccakWidth1600_Spon_7_fu_771_data_0_ce0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_7_fu_771_data_offset1 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_KeccakWidth1600_Spon_8_fu_786_ap_start : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_8_fu_786_ap_idle : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_8_fu_786_instance_state_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakWidth1600_Spon_8_fu_786_instance_state_ce0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_8_fu_786_instance_state_we0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_8_fu_786_instance_state_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakWidth1600_Spon_8_fu_786_instance_state_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakWidth1600_Spon_8_fu_786_data_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_KeccakWidth1600_Spon_8_fu_786_data_0_ce0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_10_fu_798_ap_start : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_10_fu_798_ap_idle : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_10_fu_798_instance_state_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakWidth1600_Spon_10_fu_798_instance_state_ce0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_10_fu_798_instance_state_we0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_10_fu_798_instance_state_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakWidth1600_Spon_10_fu_798_instance_state_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakWidth1600_Spon_10_fu_798_instance_byteIOIndex_read : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_KeccakWidth1600_Spon_10_fu_798_data_0_read : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_HashInit_fu_811_ap_start : STD_LOGIC;
    signal grp_HashInit_fu_811_ap_idle : STD_LOGIC;
    signal grp_HashInit_fu_811_ctx_sponge_state_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_HashInit_fu_811_ctx_sponge_state_ce0 : STD_LOGIC;
    signal grp_HashInit_fu_811_ctx_sponge_state_we0 : STD_LOGIC;
    signal grp_HashInit_fu_811_ctx_sponge_state_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_HashInit_fu_811_ctx_sponge_state_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_HashInit_fu_811_hashPrefix : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_HashFinal_fu_823_ap_start : STD_LOGIC;
    signal grp_HashFinal_fu_823_ap_idle : STD_LOGIC;
    signal grp_HashFinal_fu_823_ctx_sponge_state_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_HashFinal_fu_823_ctx_sponge_state_ce0 : STD_LOGIC;
    signal grp_HashFinal_fu_823_ctx_sponge_state_we0 : STD_LOGIC;
    signal grp_HashFinal_fu_823_ctx_sponge_state_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_HashFinal_fu_823_ctx_sponge_state_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_HashFinal_fu_823_ctx_sponge_byteIOInd : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_HashFinal_fu_823_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_HashFinal_fu_823_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal phi_ln1007_reg_526 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln1007_fu_955_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal loop_0_reg_537 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal loop_8_reg_548 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal ap_phi_mux_loop_9_phi_fu_563_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal loop_9_reg_559 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal loop_10_reg_571 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal loop_7_reg_583 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state63 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state63 : signal is "none";
    signal ap_CS_fsm_state62 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state62 : signal is "none";
    signal ap_phi_mux_loop_3_phi_fu_598_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal loop_3_reg_594 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal ap_block_state35_on_subcall_done : BOOLEAN;
    signal loop_6_reg_606 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal ap_phi_mux_loop_1_phi_fu_622_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal loop_1_reg_618 : STD_LOGIC_VECTOR (4 downto 0);
    signal loop_2_reg_630 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state67 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state67 : signal is "none";
    signal ap_phi_mux_loop_15_phi_fu_646_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal loop_15_reg_642 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state68 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state68 : signal is "none";
    signal loop_4_reg_654 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state72 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state72 : signal is "none";
    signal loop_11_reg_666 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state73 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state73 : signal is "none";
    signal ap_CS_fsm_state75 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state75 : signal is "none";
    signal loop_12_reg_677 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state76 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state76 : signal is "none";
    signal ap_CS_fsm_state78 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state78 : signal is "none";
    signal grp_createRandomTape13_fu_689_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal grp_mpc_LowMC_verify_2_fu_709_ap_start_reg : STD_LOGIC := '0';
    signal grp_KeccakWidth1600_Spon_1_fu_738_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal ap_CS_fsm_state61 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state61 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal grp_KeccakWidth1600_Spon_4_fu_757_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal grp_KeccakWidth1600_Spon_7_fu_771_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state49 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal grp_KeccakWidth1600_Spon_8_fu_786_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal grp_KeccakWidth1600_Spon_10_fu_798_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal ap_CS_fsm_state57 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal grp_HashInit_fu_811_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal grp_HashFinal_fu_823_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal ap_CS_fsm_state59 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state59 : signal is "none";
    signal zext_ln1007_fu_950_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1087_2_fu_1044_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1087_1_fu_1049_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1085_1_fu_1054_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1085_3_fu_1086_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1092_fu_1115_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1092_2_fu_1156_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1054_2_fu_1192_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1054_1_fu_1197_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1052_1_fu_1202_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1052_3_fu_1234_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1059_fu_1263_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1059_1_fu_1268_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1023_2_fu_1304_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1023_1_fu_1309_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1021_1_fu_1314_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1021_3_fu_1346_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1027_fu_1375_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1027_1_fu_1380_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1037_2_fu_1416_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1037_1_fu_1421_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1035_1_fu_1426_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1035_3_fu_1458_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1041_fu_1487_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1041_2_fu_1502_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1105_fu_1529_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1105_1_fu_1534_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1109_fu_1580_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1109_1_fu_1590_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln4_fu_1549_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1110_fu_1605_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln1_fu_1211_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1052_fu_1220_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln_fu_1323_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1021_fu_1332_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln3_fu_1063_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1085_fu_1072_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln2_fu_1435_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1035_fu_1444_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1109_fu_1585_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_841_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_852_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_863_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_874_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_3_fu_926_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln1010_fu_938_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1010_2_fu_973_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln1010_fu_977_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln1077_fu_999_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1077_fu_1003_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln1083_fu_1025_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_841_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln1087_fu_1035_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1087_fu_1039_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1083_fu_1013_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1087_fu_1059_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln1085_2_fu_1077_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1085_fu_1081_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1092_fu_1109_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1066_fu_1132_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1066_fu_1136_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1092_1_fu_1146_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln1092_1_fu_1150_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1050_fu_1173_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_852_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln1054_fu_1183_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1054_fu_1187_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1050_fu_1161_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1054_fu_1207_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln1052_2_fu_1225_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1052_fu_1229_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1059_fu_1257_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln1019_fu_1285_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_863_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln1023_fu_1295_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1023_fu_1299_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1019_fu_1273_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1023_fu_1319_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln1021_2_fu_1337_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1021_fu_1341_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1027_fu_1369_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln1033_fu_1397_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_874_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln1037_fu_1407_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1037_fu_1411_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1033_fu_1385_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1037_fu_1431_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln1035_2_fu_1449_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1035_fu_1453_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1041_fu_1481_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1041_1_fu_1492_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln1041_1_fu_1496_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1105_3_fu_1519_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln1104_fu_1507_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1105_fu_1545_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln1109_1_fu_1570_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal lshr_ln_fu_1595_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (77 downto 0);
    signal mul_ln1010_fu_938_p00 : STD_LOGIC_VECTOR (14 downto 0);

    component createRandomTape13 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        seed_0_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        seed_0_ce0 : OUT STD_LOGIC;
        seed_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        seed_offset1 : IN STD_LOGIC_VECTOR (7 downto 0);
        salt_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        salt_0_ce0 : OUT STD_LOGIC;
        salt_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        roundNumber : IN STD_LOGIC_VECTOR (7 downto 0);
        playerNumber : IN STD_LOGIC_VECTOR (0 downto 0);
        tape_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        tape_ce0 : OUT STD_LOGIC;
        tape_we0 : OUT STD_LOGIC;
        tape_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        tape_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component mpc_LowMC_verify_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        view1_inputShare_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        view1_inputShare_ce0 : OUT STD_LOGIC;
        view1_inputShare_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        view1_inputShare_offset : IN STD_LOGIC_VECTOR (7 downto 0);
        view1_communicatedBi_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        view1_communicatedBi_ce0 : OUT STD_LOGIC;
        view1_communicatedBi_we0 : OUT STD_LOGIC;
        view1_communicatedBi_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        view1_communicatedBi_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        view1_outputShare_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        view1_outputShare_ce0 : OUT STD_LOGIC;
        view1_outputShare_we0 : OUT STD_LOGIC;
        view1_outputShare_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        view2_inputShare_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        view2_inputShare_ce0 : OUT STD_LOGIC;
        view2_inputShare_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        view2_communicatedBi_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        view2_communicatedBi_ce0 : OUT STD_LOGIC;
        view2_communicatedBi_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        view2_outputShare_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        view2_outputShare_ce0 : OUT STD_LOGIC;
        view2_outputShare_we0 : OUT STD_LOGIC;
        view2_outputShare_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        tapes_0_tape_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        tapes_0_tape_ce0 : OUT STD_LOGIC;
        tapes_0_tape_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        tapes_0_tape_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        tapes_0_tape_ce1 : OUT STD_LOGIC;
        tapes_0_tape_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        tmp_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        tmp_ce0 : OUT STD_LOGIC;
        tmp_we0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        tmp_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        tmp_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        tmp_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        tmp_ce1 : OUT STD_LOGIC;
        tmp_we1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        tmp_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        tmp_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        plaintext_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        plaintext_ce0 : OUT STD_LOGIC;
        plaintext_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        challenge : IN STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component KeccakWidth1600_Spon_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        instance_state_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        instance_state_ce0 : OUT STD_LOGIC;
        instance_state_we0 : OUT STD_LOGIC;
        instance_state_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        instance_state_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        instance_byteIOIndex_read : IN STD_LOGIC_VECTOR (31 downto 0);
        instance_squeezing_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_0_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        data_0_ce0 : OUT STD_LOGIC;
        data_0_we0 : OUT STD_LOGIC;
        data_0_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        data_offset1 : IN STD_LOGIC_VECTOR (0 downto 0);
        dataByteLen : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component KeccakWidth1600_Spon_4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        instance_state_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        instance_state_ce0 : OUT STD_LOGIC;
        instance_state_we0 : OUT STD_LOGIC;
        instance_state_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        instance_state_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        instance_byteIOIndex_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_0_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        data_0_ce0 : OUT STD_LOGIC;
        data_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        data_offset1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component KeccakWidth1600_Spon_7 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        instance_state_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        instance_state_ce0 : OUT STD_LOGIC;
        instance_state_we0 : OUT STD_LOGIC;
        instance_state_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        instance_state_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        instance_byteIOIndex_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_0_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        data_0_ce0 : OUT STD_LOGIC;
        data_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        data_offset1 : IN STD_LOGIC_VECTOR (0 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component KeccakWidth1600_Spon_8 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        instance_state_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        instance_state_ce0 : OUT STD_LOGIC;
        instance_state_we0 : OUT STD_LOGIC;
        instance_state_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        instance_state_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        instance_byteIOIndex_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        data_0_ce0 : OUT STD_LOGIC;
        data_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component KeccakWidth1600_Spon_10 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        instance_state_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        instance_state_ce0 : OUT STD_LOGIC;
        instance_state_we0 : OUT STD_LOGIC;
        instance_state_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        instance_state_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        instance_byteIOIndex_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_0_read : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component HashInit IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ctx_sponge_state_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ctx_sponge_state_ce0 : OUT STD_LOGIC;
        ctx_sponge_state_we0 : OUT STD_LOGIC;
        ctx_sponge_state_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ctx_sponge_state_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        hashPrefix : IN STD_LOGIC_VECTOR (3 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component HashFinal IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ctx_sponge_state_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ctx_sponge_state_ce0 : OUT STD_LOGIC;
        ctx_sponge_state_we0 : OUT STD_LOGIC;
        ctx_sponge_state_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ctx_sponge_state_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ctx_sponge_byteIOInd : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component verifyProof_23_ctkbM IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component verifyProof_23_temp IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC_VECTOR (3 downto 0);
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC_VECTOR (3 downto 0);
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    ctx_sponge_state_1_U : component verifyProof_23_ctkbM
    generic map (
        DataWidth => 8,
        AddressRange => 200,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ctx_sponge_state_1_address0,
        ce0 => ctx_sponge_state_1_ce0,
        we0 => ctx_sponge_state_1_we0,
        d0 => ctx_sponge_state_1_d0,
        q0 => ctx_sponge_state_1_q0);

    ctx_sponge_state_U : component verifyProof_23_ctkbM
    generic map (
        DataWidth => 8,
        AddressRange => 200,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ctx_sponge_state_address0,
        ce0 => ctx_sponge_state_ce0,
        we0 => ctx_sponge_state_we0,
        d0 => ctx_sponge_state_d0,
        q0 => ctx_sponge_state_q0);

    temp_U : component verifyProof_23_temp
    generic map (
        DataWidth => 32,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => temp_address0,
        ce0 => temp_ce0,
        we0 => temp_we0,
        d0 => temp_d0,
        q0 => temp_q0,
        address1 => grp_mpc_LowMC_verify_2_fu_709_tmp_address1,
        ce1 => temp_ce1,
        we1 => temp_we1,
        d1 => grp_mpc_LowMC_verify_2_fu_709_tmp_d1,
        q1 => temp_q1);

    grp_createRandomTape13_fu_689 : component createRandomTape13
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_createRandomTape13_fu_689_ap_start,
        ap_done => grp_createRandomTape13_fu_689_ap_done,
        ap_idle => grp_createRandomTape13_fu_689_ap_idle,
        ap_ready => grp_createRandomTape13_fu_689_ap_ready,
        seed_0_address0 => grp_createRandomTape13_fu_689_seed_0_address0,
        seed_0_ce0 => grp_createRandomTape13_fu_689_seed_0_ce0,
        seed_0_q0 => grp_createRandomTape13_fu_689_seed_0_q0,
        seed_offset1 => proof_seed1_offset1,
        salt_0_address0 => grp_createRandomTape13_fu_689_salt_0_address0,
        salt_0_ce0 => grp_createRandomTape13_fu_689_salt_0_ce0,
        salt_0_q0 => salt_0_q0,
        roundNumber => roundNumber,
        playerNumber => grp_createRandomTape13_fu_689_playerNumber,
        tape_address0 => grp_createRandomTape13_fu_689_tape_address0,
        tape_ce0 => grp_createRandomTape13_fu_689_tape_ce0,
        tape_we0 => grp_createRandomTape13_fu_689_tape_we0,
        tape_d0 => grp_createRandomTape13_fu_689_tape_d0,
        tape_q0 => tmp_q0);

    grp_mpc_LowMC_verify_2_fu_709 : component mpc_LowMC_verify_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_mpc_LowMC_verify_2_fu_709_ap_start,
        ap_done => grp_mpc_LowMC_verify_2_fu_709_ap_done,
        ap_idle => grp_mpc_LowMC_verify_2_fu_709_ap_idle,
        ap_ready => grp_mpc_LowMC_verify_2_fu_709_ap_ready,
        view1_inputShare_address0 => grp_mpc_LowMC_verify_2_fu_709_view1_inputShare_address0,
        view1_inputShare_ce0 => grp_mpc_LowMC_verify_2_fu_709_view1_inputShare_ce0,
        view1_inputShare_q0 => view1_inputShare_q0,
        view1_inputShare_offset => proof_seed1_offset1,
        view1_communicatedBi_address0 => grp_mpc_LowMC_verify_2_fu_709_view1_communicatedBi_address0,
        view1_communicatedBi_ce0 => grp_mpc_LowMC_verify_2_fu_709_view1_communicatedBi_ce0,
        view1_communicatedBi_we0 => grp_mpc_LowMC_verify_2_fu_709_view1_communicatedBi_we0,
        view1_communicatedBi_d0 => grp_mpc_LowMC_verify_2_fu_709_view1_communicatedBi_d0,
        view1_communicatedBi_q0 => view1_communicatedBits_q0,
        view1_outputShare_address0 => grp_mpc_LowMC_verify_2_fu_709_view1_outputShare_address0,
        view1_outputShare_ce0 => grp_mpc_LowMC_verify_2_fu_709_view1_outputShare_ce0,
        view1_outputShare_we0 => grp_mpc_LowMC_verify_2_fu_709_view1_outputShare_we0,
        view1_outputShare_d0 => grp_mpc_LowMC_verify_2_fu_709_view1_outputShare_d0,
        view2_inputShare_address0 => grp_mpc_LowMC_verify_2_fu_709_view2_inputShare_address0,
        view2_inputShare_ce0 => grp_mpc_LowMC_verify_2_fu_709_view2_inputShare_ce0,
        view2_inputShare_q0 => view2_inputShare_q0,
        view2_communicatedBi_address0 => grp_mpc_LowMC_verify_2_fu_709_view2_communicatedBi_address0,
        view2_communicatedBi_ce0 => grp_mpc_LowMC_verify_2_fu_709_view2_communicatedBi_ce0,
        view2_communicatedBi_q0 => view2_communicatedBits_q0,
        view2_outputShare_address0 => grp_mpc_LowMC_verify_2_fu_709_view2_outputShare_address0,
        view2_outputShare_ce0 => grp_mpc_LowMC_verify_2_fu_709_view2_outputShare_ce0,
        view2_outputShare_we0 => grp_mpc_LowMC_verify_2_fu_709_view2_outputShare_we0,
        view2_outputShare_d0 => grp_mpc_LowMC_verify_2_fu_709_view2_outputShare_d0,
        tapes_0_tape_address0 => grp_mpc_LowMC_verify_2_fu_709_tapes_0_tape_address0,
        tapes_0_tape_ce0 => grp_mpc_LowMC_verify_2_fu_709_tapes_0_tape_ce0,
        tapes_0_tape_q0 => tape_0_tape_q0,
        tapes_0_tape_address1 => grp_mpc_LowMC_verify_2_fu_709_tapes_0_tape_address1,
        tapes_0_tape_ce1 => grp_mpc_LowMC_verify_2_fu_709_tapes_0_tape_ce1,
        tapes_0_tape_q1 => tape_0_tape_q1,
        tmp_address0 => grp_mpc_LowMC_verify_2_fu_709_tmp_address0,
        tmp_ce0 => grp_mpc_LowMC_verify_2_fu_709_tmp_ce0,
        tmp_we0 => grp_mpc_LowMC_verify_2_fu_709_tmp_we0,
        tmp_d0 => grp_mpc_LowMC_verify_2_fu_709_tmp_d0,
        tmp_q0 => temp_q0,
        tmp_address1 => grp_mpc_LowMC_verify_2_fu_709_tmp_address1,
        tmp_ce1 => grp_mpc_LowMC_verify_2_fu_709_tmp_ce1,
        tmp_we1 => grp_mpc_LowMC_verify_2_fu_709_tmp_we1,
        tmp_d1 => grp_mpc_LowMC_verify_2_fu_709_tmp_d1,
        tmp_q1 => temp_q1,
        plaintext_address0 => grp_mpc_LowMC_verify_2_fu_709_plaintext_address0,
        plaintext_ce0 => grp_mpc_LowMC_verify_2_fu_709_plaintext_ce0,
        plaintext_q0 => plaintext_q0,
        challenge => challenge);

    grp_KeccakWidth1600_Spon_1_fu_738 : component KeccakWidth1600_Spon_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_KeccakWidth1600_Spon_1_fu_738_ap_start,
        ap_done => grp_KeccakWidth1600_Spon_1_fu_738_ap_done,
        ap_idle => grp_KeccakWidth1600_Spon_1_fu_738_ap_idle,
        ap_ready => grp_KeccakWidth1600_Spon_1_fu_738_ap_ready,
        instance_state_address0 => grp_KeccakWidth1600_Spon_1_fu_738_instance_state_address0,
        instance_state_ce0 => grp_KeccakWidth1600_Spon_1_fu_738_instance_state_ce0,
        instance_state_we0 => grp_KeccakWidth1600_Spon_1_fu_738_instance_state_we0,
        instance_state_d0 => grp_KeccakWidth1600_Spon_1_fu_738_instance_state_d0,
        instance_state_q0 => grp_KeccakWidth1600_Spon_1_fu_738_instance_state_q0,
        instance_byteIOIndex_read => reg_896,
        instance_squeezing_read => reg_901,
        data_0_address0 => grp_KeccakWidth1600_Spon_1_fu_738_data_0_address0,
        data_0_ce0 => grp_KeccakWidth1600_Spon_1_fu_738_data_0_ce0,
        data_0_we0 => grp_KeccakWidth1600_Spon_1_fu_738_data_0_we0,
        data_0_d0 => grp_KeccakWidth1600_Spon_1_fu_738_data_0_d0,
        data_offset1 => grp_KeccakWidth1600_Spon_1_fu_738_data_offset1,
        dataByteLen => grp_KeccakWidth1600_Spon_1_fu_738_dataByteLen);

    grp_KeccakWidth1600_Spon_4_fu_757 : component KeccakWidth1600_Spon_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_KeccakWidth1600_Spon_4_fu_757_ap_start,
        ap_done => grp_KeccakWidth1600_Spon_4_fu_757_ap_done,
        ap_idle => grp_KeccakWidth1600_Spon_4_fu_757_ap_idle,
        ap_ready => grp_KeccakWidth1600_Spon_4_fu_757_ap_ready,
        instance_state_address0 => grp_KeccakWidth1600_Spon_4_fu_757_instance_state_address0,
        instance_state_ce0 => grp_KeccakWidth1600_Spon_4_fu_757_instance_state_ce0,
        instance_state_we0 => grp_KeccakWidth1600_Spon_4_fu_757_instance_state_we0,
        instance_state_d0 => grp_KeccakWidth1600_Spon_4_fu_757_instance_state_d0,
        instance_state_q0 => grp_KeccakWidth1600_Spon_4_fu_757_instance_state_q0,
        instance_byteIOIndex_read => reg_885,
        data_0_address0 => grp_KeccakWidth1600_Spon_4_fu_757_data_0_address0,
        data_0_ce0 => grp_KeccakWidth1600_Spon_4_fu_757_data_0_ce0,
        data_0_q0 => grp_KeccakWidth1600_Spon_4_fu_757_data_0_q0,
        data_offset1 => proof_seed1_offset1,
        ap_return => grp_KeccakWidth1600_Spon_4_fu_757_ap_return);

    grp_KeccakWidth1600_Spon_7_fu_771 : component KeccakWidth1600_Spon_7
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_KeccakWidth1600_Spon_7_fu_771_ap_start,
        ap_done => grp_KeccakWidth1600_Spon_7_fu_771_ap_done,
        ap_idle => grp_KeccakWidth1600_Spon_7_fu_771_ap_idle,
        ap_ready => grp_KeccakWidth1600_Spon_7_fu_771_ap_ready,
        instance_state_address0 => grp_KeccakWidth1600_Spon_7_fu_771_instance_state_address0,
        instance_state_ce0 => grp_KeccakWidth1600_Spon_7_fu_771_instance_state_ce0,
        instance_state_we0 => grp_KeccakWidth1600_Spon_7_fu_771_instance_state_we0,
        instance_state_d0 => grp_KeccakWidth1600_Spon_7_fu_771_instance_state_d0,
        instance_state_q0 => grp_KeccakWidth1600_Spon_7_fu_771_instance_state_q0,
        instance_byteIOIndex_read => reg_885,
        data_0_address0 => grp_KeccakWidth1600_Spon_7_fu_771_data_0_address0,
        data_0_ce0 => grp_KeccakWidth1600_Spon_7_fu_771_data_0_ce0,
        data_0_q0 => tape_0_tape_q0,
        data_offset1 => grp_KeccakWidth1600_Spon_7_fu_771_data_offset1,
        ap_return => grp_KeccakWidth1600_Spon_7_fu_771_ap_return);

    grp_KeccakWidth1600_Spon_8_fu_786 : component KeccakWidth1600_Spon_8
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_KeccakWidth1600_Spon_8_fu_786_ap_start,
        ap_done => grp_KeccakWidth1600_Spon_8_fu_786_ap_done,
        ap_idle => grp_KeccakWidth1600_Spon_8_fu_786_ap_idle,
        ap_ready => grp_KeccakWidth1600_Spon_8_fu_786_ap_ready,
        instance_state_address0 => grp_KeccakWidth1600_Spon_8_fu_786_instance_state_address0,
        instance_state_ce0 => grp_KeccakWidth1600_Spon_8_fu_786_instance_state_ce0,
        instance_state_we0 => grp_KeccakWidth1600_Spon_8_fu_786_instance_state_we0,
        instance_state_d0 => grp_KeccakWidth1600_Spon_8_fu_786_instance_state_d0,
        instance_state_q0 => grp_KeccakWidth1600_Spon_8_fu_786_instance_state_q0,
        instance_byteIOIndex_read => reg_906,
        data_0_address0 => grp_KeccakWidth1600_Spon_8_fu_786_data_0_address0,
        data_0_ce0 => grp_KeccakWidth1600_Spon_8_fu_786_data_0_ce0,
        data_0_q0 => salt_0_q0,
        ap_return => grp_KeccakWidth1600_Spon_8_fu_786_ap_return);

    grp_KeccakWidth1600_Spon_10_fu_798 : component KeccakWidth1600_Spon_10
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_KeccakWidth1600_Spon_10_fu_798_ap_start,
        ap_done => grp_KeccakWidth1600_Spon_10_fu_798_ap_done,
        ap_idle => grp_KeccakWidth1600_Spon_10_fu_798_ap_idle,
        ap_ready => grp_KeccakWidth1600_Spon_10_fu_798_ap_ready,
        instance_state_address0 => grp_KeccakWidth1600_Spon_10_fu_798_instance_state_address0,
        instance_state_ce0 => grp_KeccakWidth1600_Spon_10_fu_798_instance_state_ce0,
        instance_state_we0 => grp_KeccakWidth1600_Spon_10_fu_798_instance_state_we0,
        instance_state_d0 => grp_KeccakWidth1600_Spon_10_fu_798_instance_state_d0,
        instance_state_q0 => grp_KeccakWidth1600_Spon_10_fu_798_instance_state_q0,
        instance_byteIOIndex_read => grp_KeccakWidth1600_Spon_10_fu_798_instance_byteIOIndex_read,
        data_0_read => grp_KeccakWidth1600_Spon_10_fu_798_data_0_read,
        ap_return => grp_KeccakWidth1600_Spon_10_fu_798_ap_return);

    grp_HashInit_fu_811 : component HashInit
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_HashInit_fu_811_ap_start,
        ap_done => grp_HashInit_fu_811_ap_done,
        ap_idle => grp_HashInit_fu_811_ap_idle,
        ap_ready => grp_HashInit_fu_811_ap_ready,
        ctx_sponge_state_address0 => grp_HashInit_fu_811_ctx_sponge_state_address0,
        ctx_sponge_state_ce0 => grp_HashInit_fu_811_ctx_sponge_state_ce0,
        ctx_sponge_state_we0 => grp_HashInit_fu_811_ctx_sponge_state_we0,
        ctx_sponge_state_d0 => grp_HashInit_fu_811_ctx_sponge_state_d0,
        ctx_sponge_state_q0 => grp_HashInit_fu_811_ctx_sponge_state_q0,
        hashPrefix => grp_HashInit_fu_811_hashPrefix,
        ap_return => grp_HashInit_fu_811_ap_return);

    grp_HashFinal_fu_823 : component HashFinal
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_HashFinal_fu_823_ap_start,
        ap_done => grp_HashFinal_fu_823_ap_done,
        ap_idle => grp_HashFinal_fu_823_ap_idle,
        ap_ready => grp_HashFinal_fu_823_ap_ready,
        ctx_sponge_state_address0 => grp_HashFinal_fu_823_ctx_sponge_state_address0,
        ctx_sponge_state_ce0 => grp_HashFinal_fu_823_ctx_sponge_state_ce0,
        ctx_sponge_state_we0 => grp_HashFinal_fu_823_ctx_sponge_state_we0,
        ctx_sponge_state_d0 => grp_HashFinal_fu_823_ctx_sponge_state_d0,
        ctx_sponge_state_q0 => grp_HashFinal_fu_823_ctx_sponge_state_q0,
        ctx_sponge_byteIOInd => grp_HashFinal_fu_823_ctx_sponge_byteIOInd,
        ap_return_0 => grp_HashFinal_fu_823_ap_return_0,
        ap_return_1 => grp_HashFinal_fu_823_ap_return_1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_HashFinal_fu_823_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_HashFinal_fu_823_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                    grp_HashFinal_fu_823_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_HashFinal_fu_823_ap_ready = ap_const_logic_1)) then 
                    grp_HashFinal_fu_823_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_HashInit_fu_811_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_HashInit_fu_811_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state12) or ((icmp_ln1058_fu_1245_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state38)) or ((icmp_ln1009_fu_961_p2 = ap_const_lv1_1) and (challenge_read_read_fu_194_p2 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
                    grp_HashInit_fu_811_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_HashInit_fu_811_ap_ready = ap_const_logic_1)) then 
                    grp_HashInit_fu_811_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_KeccakWidth1600_Spon_10_fu_798_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_KeccakWidth1600_Spon_10_fu_798_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state57) or (ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                    grp_KeccakWidth1600_Spon_10_fu_798_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_KeccakWidth1600_Spon_10_fu_798_ap_ready = ap_const_logic_1)) then 
                    grp_KeccakWidth1600_Spon_10_fu_798_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_KeccakWidth1600_Spon_1_fu_738_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_KeccakWidth1600_Spon_1_fu_738_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                    grp_KeccakWidth1600_Spon_1_fu_738_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_KeccakWidth1600_Spon_1_fu_738_ap_ready = ap_const_logic_1)) then 
                    grp_KeccakWidth1600_Spon_1_fu_738_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_KeccakWidth1600_Spon_4_fu_757_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_KeccakWidth1600_Spon_4_fu_757_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                    grp_KeccakWidth1600_Spon_4_fu_757_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_KeccakWidth1600_Spon_4_fu_757_ap_ready = ap_const_logic_1)) then 
                    grp_KeccakWidth1600_Spon_4_fu_757_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_KeccakWidth1600_Spon_7_fu_771_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_KeccakWidth1600_Spon_7_fu_771_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
                    grp_KeccakWidth1600_Spon_7_fu_771_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_KeccakWidth1600_Spon_7_fu_771_ap_ready = ap_const_logic_1)) then 
                    grp_KeccakWidth1600_Spon_7_fu_771_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_KeccakWidth1600_Spon_8_fu_786_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_KeccakWidth1600_Spon_8_fu_786_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                    grp_KeccakWidth1600_Spon_8_fu_786_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_KeccakWidth1600_Spon_8_fu_786_ap_ready = ap_const_logic_1)) then 
                    grp_KeccakWidth1600_Spon_8_fu_786_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_createRandomTape13_fu_689_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_createRandomTape13_fu_689_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state18) or ((icmp_ln1026_fu_1357_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state66)) or ((icmp_ln1076_fu_987_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((icmp_ln1009_fu_961_p2 = ap_const_lv1_1) and (challenge = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((icmp_ln1009_fu_961_p2 = ap_const_lv1_1) and (challenge = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
                    grp_createRandomTape13_fu_689_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_createRandomTape13_fu_689_ap_ready = ap_const_logic_1)) then 
                    grp_createRandomTape13_fu_689_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_mpc_LowMC_verify_2_fu_709_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_mpc_LowMC_verify_2_fu_709_ap_start_reg <= ap_const_logic_0;
            else
                if (((tmp_14_fu_1511_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state74))) then 
                    grp_mpc_LowMC_verify_2_fu_709_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_mpc_LowMC_verify_2_fu_709_ap_ready = ap_const_logic_1)) then 
                    grp_mpc_LowMC_verify_2_fu_709_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    loop_0_reg_537_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1007_fu_955_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                loop_0_reg_537 <= ap_const_lv7_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                loop_0_reg_537 <= loop_reg_1658;
            end if; 
        end if;
    end process;

    loop_10_reg_571_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_8_fu_1017_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then 
                loop_10_reg_571 <= ap_const_lv7_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
                loop_10_reg_571 <= loop_17_reg_1721;
            end if; 
        end if;
    end process;

    loop_11_reg_666_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
                loop_11_reg_666 <= loop_19_reg_1882;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
                loop_11_reg_666 <= ap_const_lv8_5F;
            end if; 
        end if;
    end process;

    loop_12_reg_677_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state78)) then 
                loop_12_reg_677 <= loop_20_reg_1890;
            elsif (((grp_mpc_LowMC_verify_2_fu_709_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state76))) then 
                loop_12_reg_677 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    loop_15_reg_642_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
                loop_15_reg_642 <= add_ln1033_fu_1463_p2;
            elsif (((grp_createRandomTape13_fu_689_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state68))) then 
                loop_15_reg_642 <= ap_const_lv5_F;
            end if; 
        end if;
    end process;

    loop_1_reg_618_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
                loop_1_reg_618 <= add_ln1019_fu_1351_p2;
            elsif (((ap_const_boolean_0 = ap_block_state35_on_subcall_done) and (challenge = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
                loop_1_reg_618 <= ap_const_lv5_F;
            end if; 
        end if;
    end process;

    loop_2_reg_630_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_1_fu_1277_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state64))) then 
                loop_2_reg_630 <= ap_const_lv7_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
                loop_2_reg_630 <= loop_13_reg_1819;
            end if; 
        end if;
    end process;

    loop_3_reg_594_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
                loop_3_reg_594 <= add_ln1050_fu_1239_p2;
            elsif (((ap_const_boolean_0 = ap_block_state35_on_subcall_done) and (challenge = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
                loop_3_reg_594 <= ap_const_lv5_F;
            end if; 
        end if;
    end process;

    loop_4_reg_654_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_9_fu_1389_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state69))) then 
                loop_4_reg_654 <= ap_const_lv7_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
                loop_4_reg_654 <= loop_18_reg_1859;
            end if; 
        end if;
    end process;

    loop_6_reg_606_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_2_fu_1165_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state36))) then 
                loop_6_reg_606 <= ap_const_lv7_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
                loop_6_reg_606 <= loop_14_reg_1779;
            end if; 
        end if;
    end process;

    loop_7_reg_583_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_KeccakWidth1600_Spon_1_fu_738_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state62))) then 
                loop_7_reg_583 <= ap_const_lv3_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
                loop_7_reg_583 <= loop_16_reg_1734;
            end if; 
        end if;
    end process;

    loop_8_reg_548_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
                loop_8_reg_548 <= loop_5_reg_1676;
            elsif (((grp_KeccakWidth1600_Spon_1_fu_738_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
                loop_8_reg_548 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    loop_9_reg_559_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
                loop_9_reg_559 <= add_ln1083_fu_1091_p2;
            elsif (((grp_createRandomTape13_fu_689_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state30))) then 
                loop_9_reg_559 <= ap_const_lv5_F;
            end if; 
        end if;
    end process;

    phi_ln1007_reg_526_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1007_fu_955_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                phi_ln1007_reg_526 <= add_ln1007_fu_944_p2;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                phi_ln1007_reg_526 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_1_fu_1277_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state64))) then
                icmp_ln1020_reg_1792 <= icmp_ln1020_fu_1289_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_9_fu_1389_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state69))) then
                icmp_ln1034_reg_1832 <= icmp_ln1034_fu_1401_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_2_fu_1165_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state36))) then
                icmp_ln1051_reg_1752 <= icmp_ln1051_fu_1177_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_8_fu_1017_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state31))) then
                icmp_ln1084_reg_1694 <= icmp_ln1084_fu_1029_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state66)) then
                loop_13_reg_1819 <= loop_13_fu_1363_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state38)) then
                loop_14_reg_1779 <= loop_14_fu_1251_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((challenge = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state33))) then
                loop_16_reg_1734 <= loop_16_fu_1126_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((challenge_read_read_fu_194_p2 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state33))) then
                loop_17_reg_1721 <= loop_17_fu_1103_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state71)) then
                loop_18_reg_1859 <= loop_18_fu_1475_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_14_fu_1511_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state74))) then
                loop_19_reg_1882 <= loop_19_fu_1539_p2;
                temp_addr_1_reg_1872 <= zext_ln1105_fu_1529_p1(5 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state77)) then
                loop_20_reg_1890 <= loop_20_fu_1564_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state28)) then
                loop_5_reg_1676 <= loop_5_fu_993_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                loop_reg_1658 <= loop_fu_967_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                mul_ln1010_reg_1642 <= mul_ln1010_fu_938_p2;
                    zext_ln1010_1_reg_1628(9 downto 2) <= zext_ln1010_1_fu_934_p1(9 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((grp_HashInit_fu_811_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state48)) or ((grp_HashInit_fu_811_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state40)) or ((grp_HashInit_fu_811_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((grp_HashInit_fu_811_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then
                reg_885 <= grp_HashInit_fu_811_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((grp_KeccakWidth1600_Spon_4_fu_757_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((grp_KeccakWidth1600_Spon_4_fu_757_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then
                reg_891 <= grp_KeccakWidth1600_Spon_4_fu_757_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((grp_HashFinal_fu_823_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state60)) or ((grp_HashFinal_fu_823_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state44)) or ((grp_HashFinal_fu_823_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((grp_HashFinal_fu_823_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9)))) then
                reg_896 <= grp_HashFinal_fu_823_ap_return_0;
                reg_901 <= grp_HashFinal_fu_823_ap_return_1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((grp_KeccakWidth1600_Spon_7_fu_771_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state50)) or ((grp_KeccakWidth1600_Spon_7_fu_771_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then
                reg_906 <= grp_KeccakWidth1600_Spon_7_fu_771_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((grp_KeccakWidth1600_Spon_8_fu_786_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state52)) or ((grp_KeccakWidth1600_Spon_8_fu_786_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then
                reg_911 <= grp_KeccakWidth1600_Spon_8_fu_786_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((grp_KeccakWidth1600_Spon_10_fu_798_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state58)) or ((grp_KeccakWidth1600_Spon_10_fu_798_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state56)) or ((grp_KeccakWidth1600_Spon_10_fu_798_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state54)) or ((grp_KeccakWidth1600_Spon_10_fu_798_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23)) or ((grp_KeccakWidth1600_Spon_10_fu_798_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21)) or ((ap_const_boolean_0 = ap_block_state19_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state19)))) then
                reg_916 <= grp_KeccakWidth1600_Spon_10_fu_798_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1108_fu_1558_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state77))) then
                temp_addr_2_reg_1895 <= zext_ln1109_fu_1580_p1(5 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_1_fu_1277_p3 = ap_const_lv1_0) and (icmp_ln1020_fu_1289_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state64))) then
                view1_inputShare_add_1_reg_1796 <= zext_ln1023_2_fu_1304_p1(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_2_fu_1165_p3 = ap_const_lv1_0) and (icmp_ln1051_fu_1177_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state36))) then
                view1_inputShare_add_3_reg_1756 <= zext_ln1054_2_fu_1192_p1(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_9_fu_1389_p3 = ap_const_lv1_0) and (icmp_ln1034_fu_1401_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state69))) then
                view2_inputShare_add_1_reg_1836 <= zext_ln1037_2_fu_1416_p1(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_8_fu_1017_p3 = ap_const_lv1_0) and (icmp_ln1084_fu_1029_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state31))) then
                view2_inputShare_add_4_reg_1698 <= zext_ln1087_2_fu_1044_p1(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1009_fu_961_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    zext_ln1010_3_reg_1663(14 downto 0) <= zext_ln1010_3_fu_982_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1065_fu_1120_p2 = ap_const_lv1_0) and (challenge = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state33))) then
                    zext_ln1066_1_reg_1739(10 downto 0) <= zext_ln1066_1_fu_1141_p1(10 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1076_fu_987_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state28))) then
                    zext_ln1077_1_reg_1681(10 downto 0) <= zext_ln1077_1_fu_1008_p1(10 downto 0);
            end if;
        end if;
    end process;
    zext_ln1010_1_reg_1628(1 downto 0) <= "00";
    zext_ln1010_1_reg_1628(10) <= '0';
    zext_ln1010_3_reg_1663(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    zext_ln1077_1_reg_1681(63 downto 11) <= "00000000000000000000000000000000000000000000000000000";
    zext_ln1066_1_reg_1739(63 downto 11) <= "00000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, challenge, ap_CS_fsm_state5, grp_HashInit_fu_811_ap_done, ap_CS_fsm_state13, ap_CS_fsm_state40, ap_CS_fsm_state48, ap_CS_fsm_state7, grp_KeccakWidth1600_Spon_4_fu_757_ap_done, ap_CS_fsm_state42, ap_CS_fsm_state9, grp_HashFinal_fu_823_ap_done, ap_CS_fsm_state25, ap_CS_fsm_state44, ap_CS_fsm_state60, ap_CS_fsm_state15, grp_KeccakWidth1600_Spon_7_fu_771_ap_done, ap_CS_fsm_state50, ap_CS_fsm_state17, grp_KeccakWidth1600_Spon_8_fu_786_ap_done, ap_CS_fsm_state52, ap_CS_fsm_state19, grp_KeccakWidth1600_Spon_10_fu_798_ap_done, grp_createRandomTape13_fu_689_ap_done, ap_block_state19_on_subcall_done, ap_CS_fsm_state21, ap_CS_fsm_state23, ap_CS_fsm_state54, ap_CS_fsm_state56, ap_CS_fsm_state58, challenge_read_read_fu_194_p2, ap_CS_fsm_state2, ap_CS_fsm_state3, icmp_ln1009_fu_961_p2, ap_CS_fsm_state28, icmp_ln1076_fu_987_p2, ap_CS_fsm_state31, tmp_8_fu_1017_p3, ap_CS_fsm_state33, icmp_ln1091_fu_1097_p2, icmp_ln1065_fu_1120_p2, ap_CS_fsm_state36, tmp_2_fu_1165_p3, ap_CS_fsm_state38, icmp_ln1058_fu_1245_p2, ap_CS_fsm_state64, tmp_1_fu_1277_p3, ap_CS_fsm_state66, icmp_ln1026_fu_1357_p2, ap_CS_fsm_state69, tmp_9_fu_1389_p3, ap_CS_fsm_state71, icmp_ln1040_fu_1469_p2, ap_CS_fsm_state74, tmp_14_fu_1511_p3, ap_CS_fsm_state77, icmp_ln1108_fu_1558_p2, grp_mpc_LowMC_verify_2_fu_709_ap_done, grp_KeccakWidth1600_Spon_1_fu_738_ap_done, icmp_ln1007_fu_955_p2, ap_CS_fsm_state27, ap_CS_fsm_state30, ap_CS_fsm_state62, ap_CS_fsm_state35, ap_block_state35_on_subcall_done, ap_CS_fsm_state68, ap_CS_fsm_state76, ap_CS_fsm_state11, ap_CS_fsm_state46)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln1007_fu_955_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln1009_fu_961_p2 = ap_const_lv1_1) and (challenge_read_read_fu_194_p2 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state73;
                elsif ((not((challenge_read_read_fu_194_p2 = ap_const_lv2_2)) and not((challenge_read_read_fu_194_p2 = ap_const_lv2_3)) and (icmp_ln1009_fu_961_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state35;
                elsif (((icmp_ln1009_fu_961_p2 = ap_const_lv1_1) and (challenge_read_read_fu_194_p2 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state5 => 
                if (((grp_HashInit_fu_811_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((grp_KeccakWidth1600_Spon_4_fu_757_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((grp_HashFinal_fu_823_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((grp_KeccakWidth1600_Spon_1_fu_738_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                if (((grp_HashInit_fu_811_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if (((grp_KeccakWidth1600_Spon_7_fu_771_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                if (((grp_KeccakWidth1600_Spon_8_fu_786_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                if (((ap_const_boolean_0 = ap_block_state19_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                if (((grp_KeccakWidth1600_Spon_10_fu_798_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                if (((grp_KeccakWidth1600_Spon_10_fu_798_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_state23;
                end if;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                if (((grp_HashFinal_fu_823_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_state25;
                end if;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                if (((grp_KeccakWidth1600_Spon_1_fu_738_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state28 => 
                if (((icmp_ln1076_fu_987_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state28))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state30 => 
                if (((grp_createRandomTape13_fu_689_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state30))) then
                    ap_NS_fsm <= ap_ST_fsm_state31;
                else
                    ap_NS_fsm <= ap_ST_fsm_state30;
                end if;
            when ap_ST_fsm_state31 => 
                if (((tmp_8_fu_1017_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                else
                    ap_NS_fsm <= ap_ST_fsm_state32;
                end if;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state33 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state33) and ((challenge = ap_const_lv2_0) or (((icmp_ln1065_fu_1120_p2 = ap_const_lv1_1) and (challenge = ap_const_lv2_1)) or (not((challenge = ap_const_lv2_1)) and (icmp_ln1091_fu_1097_p2 = ap_const_lv1_1) and (challenge_read_read_fu_194_p2 = ap_const_lv2_2)))))) then
                    ap_NS_fsm <= ap_ST_fsm_state73;
                elsif (((icmp_ln1065_fu_1120_p2 = ap_const_lv1_0) and (challenge = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state33))) then
                    ap_NS_fsm <= ap_ST_fsm_state63;
                else
                    ap_NS_fsm <= ap_ST_fsm_state34;
                end if;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state35 => 
                if (((ap_const_boolean_0 = ap_block_state35_on_subcall_done) and (challenge = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state35))) then
                    ap_NS_fsm <= ap_ST_fsm_state64;
                elsif (((ap_const_boolean_0 = ap_block_state35_on_subcall_done) and (challenge = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state35))) then
                    ap_NS_fsm <= ap_ST_fsm_state36;
                else
                    ap_NS_fsm <= ap_ST_fsm_state35;
                end if;
            when ap_ST_fsm_state36 => 
                if (((tmp_2_fu_1165_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state36))) then
                    ap_NS_fsm <= ap_ST_fsm_state38;
                else
                    ap_NS_fsm <= ap_ST_fsm_state37;
                end if;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state38 => 
                if (((icmp_ln1058_fu_1245_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state38))) then
                    ap_NS_fsm <= ap_ST_fsm_state40;
                else
                    ap_NS_fsm <= ap_ST_fsm_state39;
                end if;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state40 => 
                if (((grp_HashInit_fu_811_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state40))) then
                    ap_NS_fsm <= ap_ST_fsm_state41;
                else
                    ap_NS_fsm <= ap_ST_fsm_state40;
                end if;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                if (((grp_KeccakWidth1600_Spon_4_fu_757_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state42))) then
                    ap_NS_fsm <= ap_ST_fsm_state43;
                else
                    ap_NS_fsm <= ap_ST_fsm_state42;
                end if;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                if (((grp_HashFinal_fu_823_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state44))) then
                    ap_NS_fsm <= ap_ST_fsm_state45;
                else
                    ap_NS_fsm <= ap_ST_fsm_state44;
                end if;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                if (((grp_KeccakWidth1600_Spon_1_fu_738_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state46))) then
                    ap_NS_fsm <= ap_ST_fsm_state47;
                else
                    ap_NS_fsm <= ap_ST_fsm_state46;
                end if;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                if (((grp_HashInit_fu_811_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state48))) then
                    ap_NS_fsm <= ap_ST_fsm_state49;
                else
                    ap_NS_fsm <= ap_ST_fsm_state48;
                end if;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                if (((grp_KeccakWidth1600_Spon_7_fu_771_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state50))) then
                    ap_NS_fsm <= ap_ST_fsm_state51;
                else
                    ap_NS_fsm <= ap_ST_fsm_state50;
                end if;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                if (((grp_KeccakWidth1600_Spon_8_fu_786_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state52))) then
                    ap_NS_fsm <= ap_ST_fsm_state53;
                else
                    ap_NS_fsm <= ap_ST_fsm_state52;
                end if;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                if (((grp_KeccakWidth1600_Spon_10_fu_798_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state54))) then
                    ap_NS_fsm <= ap_ST_fsm_state55;
                else
                    ap_NS_fsm <= ap_ST_fsm_state54;
                end if;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                if (((grp_KeccakWidth1600_Spon_10_fu_798_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state56))) then
                    ap_NS_fsm <= ap_ST_fsm_state57;
                else
                    ap_NS_fsm <= ap_ST_fsm_state56;
                end if;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                if (((grp_KeccakWidth1600_Spon_10_fu_798_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state58))) then
                    ap_NS_fsm <= ap_ST_fsm_state59;
                else
                    ap_NS_fsm <= ap_ST_fsm_state58;
                end if;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                if (((grp_HashFinal_fu_823_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state60))) then
                    ap_NS_fsm <= ap_ST_fsm_state61;
                else
                    ap_NS_fsm <= ap_ST_fsm_state60;
                end if;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                if (((grp_KeccakWidth1600_Spon_1_fu_738_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state62))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                else
                    ap_NS_fsm <= ap_ST_fsm_state62;
                end if;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state64 => 
                if (((tmp_1_fu_1277_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state64))) then
                    ap_NS_fsm <= ap_ST_fsm_state66;
                else
                    ap_NS_fsm <= ap_ST_fsm_state65;
                end if;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state66 => 
                if (((icmp_ln1026_fu_1357_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state66))) then
                    ap_NS_fsm <= ap_ST_fsm_state68;
                else
                    ap_NS_fsm <= ap_ST_fsm_state67;
                end if;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state68 => 
                if (((grp_createRandomTape13_fu_689_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state68))) then
                    ap_NS_fsm <= ap_ST_fsm_state69;
                else
                    ap_NS_fsm <= ap_ST_fsm_state68;
                end if;
            when ap_ST_fsm_state69 => 
                if (((tmp_9_fu_1389_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state69))) then
                    ap_NS_fsm <= ap_ST_fsm_state71;
                else
                    ap_NS_fsm <= ap_ST_fsm_state70;
                end if;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state69;
            when ap_ST_fsm_state71 => 
                if (((icmp_ln1040_fu_1469_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state71))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                else
                    ap_NS_fsm <= ap_ST_fsm_state72;
                end if;
            when ap_ST_fsm_state72 => 
                ap_NS_fsm <= ap_ST_fsm_state71;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state74 => 
                if (((tmp_14_fu_1511_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state74))) then
                    ap_NS_fsm <= ap_ST_fsm_state76;
                else
                    ap_NS_fsm <= ap_ST_fsm_state75;
                end if;
            when ap_ST_fsm_state75 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state76 => 
                if (((grp_mpc_LowMC_verify_2_fu_709_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state76))) then
                    ap_NS_fsm <= ap_ST_fsm_state77;
                else
                    ap_NS_fsm <= ap_ST_fsm_state76;
                end if;
            when ap_ST_fsm_state77 => 
                if (((icmp_ln1108_fu_1558_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state77))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state78;
                end if;
            when ap_ST_fsm_state78 => 
                ap_NS_fsm <= ap_ST_fsm_state77;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln1007_fu_944_p2 <= std_logic_vector(unsigned(phi_ln1007_reg_526) + unsigned(ap_const_lv5_1));
    add_ln1010_fu_977_p2 <= std_logic_vector(unsigned(mul_ln1010_reg_1642) + unsigned(zext_ln1010_2_fu_973_p1));
    add_ln1019_fu_1351_p2 <= std_logic_vector(signed(loop_1_reg_618) + signed(ap_const_lv5_1F));
    add_ln1021_fu_1341_p2 <= std_logic_vector(unsigned(zext_ln1010_1_reg_1628) + unsigned(zext_ln1021_2_fu_1337_p1));
    add_ln1023_fu_1299_p2 <= std_logic_vector(unsigned(zext_ln1023_fu_1295_p1) + unsigned(zext_ln1010_1_reg_1628));
    add_ln1027_fu_1369_p2 <= std_logic_vector(unsigned(loop_2_reg_630) + unsigned(ap_const_lv7_10));
    add_ln1033_fu_1463_p2 <= std_logic_vector(signed(loop_15_reg_642) + signed(ap_const_lv5_1F));
    add_ln1035_fu_1453_p2 <= std_logic_vector(unsigned(zext_ln1010_1_reg_1628) + unsigned(zext_ln1035_2_fu_1449_p1));
    add_ln1037_fu_1411_p2 <= std_logic_vector(unsigned(zext_ln1037_fu_1407_p1) + unsigned(zext_ln1010_1_reg_1628));
    add_ln1041_1_fu_1496_p2 <= std_logic_vector(unsigned(zext_ln1041_1_fu_1492_p1) + unsigned(ap_const_lv8_A6));
    add_ln1041_fu_1481_p2 <= std_logic_vector(unsigned(loop_4_reg_654) + unsigned(ap_const_lv7_10));
    add_ln1050_fu_1239_p2 <= std_logic_vector(signed(loop_3_reg_594) + signed(ap_const_lv5_1F));
    add_ln1052_fu_1229_p2 <= std_logic_vector(unsigned(zext_ln1010_1_reg_1628) + unsigned(zext_ln1052_2_fu_1225_p1));
    add_ln1054_fu_1187_p2 <= std_logic_vector(unsigned(zext_ln1054_fu_1183_p1) + unsigned(zext_ln1010_1_reg_1628));
    add_ln1059_fu_1257_p2 <= std_logic_vector(unsigned(loop_6_reg_606) + unsigned(ap_const_lv7_10));
    add_ln1066_fu_1136_p2 <= std_logic_vector(unsigned(zext_ln1010_1_reg_1628) + unsigned(zext_ln1066_fu_1132_p1));
    add_ln1077_fu_1003_p2 <= std_logic_vector(unsigned(zext_ln1010_1_reg_1628) + unsigned(zext_ln1077_fu_999_p1));
    add_ln1083_fu_1091_p2 <= std_logic_vector(signed(loop_9_reg_559) + signed(ap_const_lv5_1F));
    add_ln1085_fu_1081_p2 <= std_logic_vector(unsigned(zext_ln1010_1_reg_1628) + unsigned(zext_ln1085_2_fu_1077_p1));
    add_ln1087_fu_1039_p2 <= std_logic_vector(unsigned(zext_ln1087_fu_1035_p1) + unsigned(zext_ln1010_1_reg_1628));
    add_ln1092_1_fu_1150_p2 <= std_logic_vector(unsigned(zext_ln1092_1_fu_1146_p1) + unsigned(ap_const_lv8_A6));
    add_ln1092_fu_1109_p2 <= std_logic_vector(unsigned(loop_10_reg_571) + unsigned(ap_const_lv7_10));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40);
    ap_CS_fsm_state42 <= ap_CS_fsm(41);
    ap_CS_fsm_state43 <= ap_CS_fsm(42);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_CS_fsm_state45 <= ap_CS_fsm(44);
    ap_CS_fsm_state46 <= ap_CS_fsm(45);
    ap_CS_fsm_state47 <= ap_CS_fsm(46);
    ap_CS_fsm_state48 <= ap_CS_fsm(47);
    ap_CS_fsm_state49 <= ap_CS_fsm(48);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state50 <= ap_CS_fsm(49);
    ap_CS_fsm_state51 <= ap_CS_fsm(50);
    ap_CS_fsm_state52 <= ap_CS_fsm(51);
    ap_CS_fsm_state53 <= ap_CS_fsm(52);
    ap_CS_fsm_state54 <= ap_CS_fsm(53);
    ap_CS_fsm_state55 <= ap_CS_fsm(54);
    ap_CS_fsm_state56 <= ap_CS_fsm(55);
    ap_CS_fsm_state57 <= ap_CS_fsm(56);
    ap_CS_fsm_state58 <= ap_CS_fsm(57);
    ap_CS_fsm_state59 <= ap_CS_fsm(58);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state60 <= ap_CS_fsm(59);
    ap_CS_fsm_state61 <= ap_CS_fsm(60);
    ap_CS_fsm_state62 <= ap_CS_fsm(61);
    ap_CS_fsm_state63 <= ap_CS_fsm(62);
    ap_CS_fsm_state64 <= ap_CS_fsm(63);
    ap_CS_fsm_state65 <= ap_CS_fsm(64);
    ap_CS_fsm_state66 <= ap_CS_fsm(65);
    ap_CS_fsm_state67 <= ap_CS_fsm(66);
    ap_CS_fsm_state68 <= ap_CS_fsm(67);
    ap_CS_fsm_state69 <= ap_CS_fsm(68);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state70 <= ap_CS_fsm(69);
    ap_CS_fsm_state71 <= ap_CS_fsm(70);
    ap_CS_fsm_state72 <= ap_CS_fsm(71);
    ap_CS_fsm_state73 <= ap_CS_fsm(72);
    ap_CS_fsm_state74 <= ap_CS_fsm(73);
    ap_CS_fsm_state75 <= ap_CS_fsm(74);
    ap_CS_fsm_state76 <= ap_CS_fsm(75);
    ap_CS_fsm_state77 <= ap_CS_fsm(76);
    ap_CS_fsm_state78 <= ap_CS_fsm(77);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state19_on_subcall_done_assign_proc : process(grp_KeccakWidth1600_Spon_10_fu_798_ap_done, grp_createRandomTape13_fu_689_ap_done)
    begin
                ap_block_state19_on_subcall_done <= ((grp_createRandomTape13_fu_689_ap_done = ap_const_logic_0) or (grp_KeccakWidth1600_Spon_10_fu_798_ap_done = ap_const_logic_0));
    end process;


    ap_block_state35_on_subcall_done_assign_proc : process(challenge, grp_createRandomTape13_fu_689_ap_done)
    begin
                ap_block_state35_on_subcall_done <= (((challenge = ap_const_lv2_0) and (grp_createRandomTape13_fu_689_ap_done = ap_const_logic_0)) or ((challenge = ap_const_lv2_1) and (grp_createRandomTape13_fu_689_ap_done = ap_const_logic_0)));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state77, icmp_ln1108_fu_1558_p2)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((icmp_ln1108_fu_1558_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state77)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_mux_loop_15_phi_fu_646_p4 <= loop_15_reg_642;
    ap_phi_mux_loop_1_phi_fu_622_p4 <= loop_1_reg_618;
    ap_phi_mux_loop_3_phi_fu_598_p4 <= loop_3_reg_594;
    ap_phi_mux_loop_9_phi_fu_563_p4 <= loop_9_reg_559;

    ap_ready_assign_proc : process(ap_CS_fsm_state77, icmp_ln1108_fu_1558_p2)
    begin
        if (((icmp_ln1108_fu_1558_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state77))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    challenge_read_read_fu_194_p2 <= challenge;

    ctx_sponge_state_1_address0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state13, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state25, ap_CS_fsm_state15, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state21, ap_CS_fsm_state23, grp_KeccakWidth1600_Spon_1_fu_738_instance_state_address0, grp_KeccakWidth1600_Spon_4_fu_757_instance_state_address0, grp_KeccakWidth1600_Spon_7_fu_771_instance_state_address0, grp_KeccakWidth1600_Spon_8_fu_786_instance_state_address0, grp_KeccakWidth1600_Spon_10_fu_798_instance_state_address0, grp_HashInit_fu_811_ctx_sponge_state_address0, grp_HashFinal_fu_823_ctx_sponge_state_address0, ap_CS_fsm_state27, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            ctx_sponge_state_1_address0 <= grp_HashFinal_fu_823_ctx_sponge_state_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ctx_sponge_state_1_address0 <= grp_HashInit_fu_811_ctx_sponge_state_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            ctx_sponge_state_1_address0 <= grp_KeccakWidth1600_Spon_10_fu_798_instance_state_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            ctx_sponge_state_1_address0 <= grp_KeccakWidth1600_Spon_8_fu_786_instance_state_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            ctx_sponge_state_1_address0 <= grp_KeccakWidth1600_Spon_7_fu_771_instance_state_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ctx_sponge_state_1_address0 <= grp_KeccakWidth1600_Spon_4_fu_757_instance_state_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            ctx_sponge_state_1_address0 <= grp_KeccakWidth1600_Spon_1_fu_738_instance_state_address0;
        else 
            ctx_sponge_state_1_address0 <= "XXXXXXXX";
        end if; 
    end process;


    ctx_sponge_state_1_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state13, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state25, ap_CS_fsm_state15, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state21, ap_CS_fsm_state23, grp_KeccakWidth1600_Spon_1_fu_738_instance_state_ce0, grp_KeccakWidth1600_Spon_4_fu_757_instance_state_ce0, grp_KeccakWidth1600_Spon_7_fu_771_instance_state_ce0, grp_KeccakWidth1600_Spon_8_fu_786_instance_state_ce0, grp_KeccakWidth1600_Spon_10_fu_798_instance_state_ce0, grp_HashInit_fu_811_ctx_sponge_state_ce0, grp_HashFinal_fu_823_ctx_sponge_state_ce0, ap_CS_fsm_state27, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            ctx_sponge_state_1_ce0 <= grp_HashFinal_fu_823_ctx_sponge_state_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ctx_sponge_state_1_ce0 <= grp_HashInit_fu_811_ctx_sponge_state_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            ctx_sponge_state_1_ce0 <= grp_KeccakWidth1600_Spon_10_fu_798_instance_state_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            ctx_sponge_state_1_ce0 <= grp_KeccakWidth1600_Spon_8_fu_786_instance_state_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            ctx_sponge_state_1_ce0 <= grp_KeccakWidth1600_Spon_7_fu_771_instance_state_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ctx_sponge_state_1_ce0 <= grp_KeccakWidth1600_Spon_4_fu_757_instance_state_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            ctx_sponge_state_1_ce0 <= grp_KeccakWidth1600_Spon_1_fu_738_instance_state_ce0;
        else 
            ctx_sponge_state_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ctx_sponge_state_1_d0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state13, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state25, ap_CS_fsm_state15, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state21, ap_CS_fsm_state23, grp_KeccakWidth1600_Spon_1_fu_738_instance_state_d0, grp_KeccakWidth1600_Spon_4_fu_757_instance_state_d0, grp_KeccakWidth1600_Spon_7_fu_771_instance_state_d0, grp_KeccakWidth1600_Spon_8_fu_786_instance_state_d0, grp_KeccakWidth1600_Spon_10_fu_798_instance_state_d0, grp_HashInit_fu_811_ctx_sponge_state_d0, grp_HashFinal_fu_823_ctx_sponge_state_d0, ap_CS_fsm_state27, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            ctx_sponge_state_1_d0 <= grp_HashFinal_fu_823_ctx_sponge_state_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ctx_sponge_state_1_d0 <= grp_HashInit_fu_811_ctx_sponge_state_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            ctx_sponge_state_1_d0 <= grp_KeccakWidth1600_Spon_10_fu_798_instance_state_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            ctx_sponge_state_1_d0 <= grp_KeccakWidth1600_Spon_8_fu_786_instance_state_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            ctx_sponge_state_1_d0 <= grp_KeccakWidth1600_Spon_7_fu_771_instance_state_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ctx_sponge_state_1_d0 <= grp_KeccakWidth1600_Spon_4_fu_757_instance_state_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            ctx_sponge_state_1_d0 <= grp_KeccakWidth1600_Spon_1_fu_738_instance_state_d0;
        else 
            ctx_sponge_state_1_d0 <= "XXXXXXXX";
        end if; 
    end process;


    ctx_sponge_state_1_we0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state13, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state25, ap_CS_fsm_state15, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state21, ap_CS_fsm_state23, grp_KeccakWidth1600_Spon_1_fu_738_instance_state_we0, grp_KeccakWidth1600_Spon_4_fu_757_instance_state_we0, grp_KeccakWidth1600_Spon_7_fu_771_instance_state_we0, grp_KeccakWidth1600_Spon_8_fu_786_instance_state_we0, grp_KeccakWidth1600_Spon_10_fu_798_instance_state_we0, grp_HashInit_fu_811_ctx_sponge_state_we0, grp_HashFinal_fu_823_ctx_sponge_state_we0, ap_CS_fsm_state27, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            ctx_sponge_state_1_we0 <= grp_HashFinal_fu_823_ctx_sponge_state_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ctx_sponge_state_1_we0 <= grp_HashInit_fu_811_ctx_sponge_state_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            ctx_sponge_state_1_we0 <= grp_KeccakWidth1600_Spon_10_fu_798_instance_state_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            ctx_sponge_state_1_we0 <= grp_KeccakWidth1600_Spon_8_fu_786_instance_state_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            ctx_sponge_state_1_we0 <= grp_KeccakWidth1600_Spon_7_fu_771_instance_state_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ctx_sponge_state_1_we0 <= grp_KeccakWidth1600_Spon_4_fu_757_instance_state_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            ctx_sponge_state_1_we0 <= grp_KeccakWidth1600_Spon_1_fu_738_instance_state_we0;
        else 
            ctx_sponge_state_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ctx_sponge_state_address0_assign_proc : process(ap_CS_fsm_state40, ap_CS_fsm_state48, ap_CS_fsm_state42, ap_CS_fsm_state44, ap_CS_fsm_state60, ap_CS_fsm_state50, ap_CS_fsm_state52, ap_CS_fsm_state54, ap_CS_fsm_state56, ap_CS_fsm_state58, grp_KeccakWidth1600_Spon_1_fu_738_instance_state_address0, grp_KeccakWidth1600_Spon_4_fu_757_instance_state_address0, grp_KeccakWidth1600_Spon_7_fu_771_instance_state_address0, grp_KeccakWidth1600_Spon_8_fu_786_instance_state_address0, grp_KeccakWidth1600_Spon_10_fu_798_instance_state_address0, grp_HashInit_fu_811_ctx_sponge_state_address0, grp_HashFinal_fu_823_ctx_sponge_state_address0, ap_CS_fsm_state62, ap_CS_fsm_state46)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state44))) then 
            ctx_sponge_state_address0 <= grp_HashFinal_fu_823_ctx_sponge_state_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state40))) then 
            ctx_sponge_state_address0 <= grp_HashInit_fu_811_ctx_sponge_state_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state54))) then 
            ctx_sponge_state_address0 <= grp_KeccakWidth1600_Spon_10_fu_798_instance_state_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            ctx_sponge_state_address0 <= grp_KeccakWidth1600_Spon_8_fu_786_instance_state_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            ctx_sponge_state_address0 <= grp_KeccakWidth1600_Spon_7_fu_771_instance_state_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            ctx_sponge_state_address0 <= grp_KeccakWidth1600_Spon_4_fu_757_instance_state_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            ctx_sponge_state_address0 <= grp_KeccakWidth1600_Spon_1_fu_738_instance_state_address0;
        else 
            ctx_sponge_state_address0 <= "XXXXXXXX";
        end if; 
    end process;


    ctx_sponge_state_ce0_assign_proc : process(ap_CS_fsm_state40, ap_CS_fsm_state48, ap_CS_fsm_state42, ap_CS_fsm_state44, ap_CS_fsm_state60, ap_CS_fsm_state50, ap_CS_fsm_state52, ap_CS_fsm_state54, ap_CS_fsm_state56, ap_CS_fsm_state58, grp_KeccakWidth1600_Spon_1_fu_738_instance_state_ce0, grp_KeccakWidth1600_Spon_4_fu_757_instance_state_ce0, grp_KeccakWidth1600_Spon_7_fu_771_instance_state_ce0, grp_KeccakWidth1600_Spon_8_fu_786_instance_state_ce0, grp_KeccakWidth1600_Spon_10_fu_798_instance_state_ce0, grp_HashInit_fu_811_ctx_sponge_state_ce0, grp_HashFinal_fu_823_ctx_sponge_state_ce0, ap_CS_fsm_state62, ap_CS_fsm_state46)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state44))) then 
            ctx_sponge_state_ce0 <= grp_HashFinal_fu_823_ctx_sponge_state_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state40))) then 
            ctx_sponge_state_ce0 <= grp_HashInit_fu_811_ctx_sponge_state_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state54))) then 
            ctx_sponge_state_ce0 <= grp_KeccakWidth1600_Spon_10_fu_798_instance_state_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            ctx_sponge_state_ce0 <= grp_KeccakWidth1600_Spon_8_fu_786_instance_state_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            ctx_sponge_state_ce0 <= grp_KeccakWidth1600_Spon_7_fu_771_instance_state_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            ctx_sponge_state_ce0 <= grp_KeccakWidth1600_Spon_4_fu_757_instance_state_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            ctx_sponge_state_ce0 <= grp_KeccakWidth1600_Spon_1_fu_738_instance_state_ce0;
        else 
            ctx_sponge_state_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ctx_sponge_state_d0_assign_proc : process(ap_CS_fsm_state40, ap_CS_fsm_state48, ap_CS_fsm_state42, ap_CS_fsm_state44, ap_CS_fsm_state60, ap_CS_fsm_state50, ap_CS_fsm_state52, ap_CS_fsm_state54, ap_CS_fsm_state56, ap_CS_fsm_state58, grp_KeccakWidth1600_Spon_1_fu_738_instance_state_d0, grp_KeccakWidth1600_Spon_4_fu_757_instance_state_d0, grp_KeccakWidth1600_Spon_7_fu_771_instance_state_d0, grp_KeccakWidth1600_Spon_8_fu_786_instance_state_d0, grp_KeccakWidth1600_Spon_10_fu_798_instance_state_d0, grp_HashInit_fu_811_ctx_sponge_state_d0, grp_HashFinal_fu_823_ctx_sponge_state_d0, ap_CS_fsm_state62, ap_CS_fsm_state46)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state44))) then 
            ctx_sponge_state_d0 <= grp_HashFinal_fu_823_ctx_sponge_state_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state40))) then 
            ctx_sponge_state_d0 <= grp_HashInit_fu_811_ctx_sponge_state_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state54))) then 
            ctx_sponge_state_d0 <= grp_KeccakWidth1600_Spon_10_fu_798_instance_state_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            ctx_sponge_state_d0 <= grp_KeccakWidth1600_Spon_8_fu_786_instance_state_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            ctx_sponge_state_d0 <= grp_KeccakWidth1600_Spon_7_fu_771_instance_state_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            ctx_sponge_state_d0 <= grp_KeccakWidth1600_Spon_4_fu_757_instance_state_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            ctx_sponge_state_d0 <= grp_KeccakWidth1600_Spon_1_fu_738_instance_state_d0;
        else 
            ctx_sponge_state_d0 <= "XXXXXXXX";
        end if; 
    end process;


    ctx_sponge_state_we0_assign_proc : process(ap_CS_fsm_state40, ap_CS_fsm_state48, ap_CS_fsm_state42, ap_CS_fsm_state44, ap_CS_fsm_state60, ap_CS_fsm_state50, ap_CS_fsm_state52, ap_CS_fsm_state54, ap_CS_fsm_state56, ap_CS_fsm_state58, grp_KeccakWidth1600_Spon_1_fu_738_instance_state_we0, grp_KeccakWidth1600_Spon_4_fu_757_instance_state_we0, grp_KeccakWidth1600_Spon_7_fu_771_instance_state_we0, grp_KeccakWidth1600_Spon_8_fu_786_instance_state_we0, grp_KeccakWidth1600_Spon_10_fu_798_instance_state_we0, grp_HashInit_fu_811_ctx_sponge_state_we0, grp_HashFinal_fu_823_ctx_sponge_state_we0, ap_CS_fsm_state62, ap_CS_fsm_state46)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state44))) then 
            ctx_sponge_state_we0 <= grp_HashFinal_fu_823_ctx_sponge_state_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state40))) then 
            ctx_sponge_state_we0 <= grp_HashInit_fu_811_ctx_sponge_state_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state54))) then 
            ctx_sponge_state_we0 <= grp_KeccakWidth1600_Spon_10_fu_798_instance_state_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            ctx_sponge_state_we0 <= grp_KeccakWidth1600_Spon_8_fu_786_instance_state_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            ctx_sponge_state_we0 <= grp_KeccakWidth1600_Spon_7_fu_771_instance_state_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            ctx_sponge_state_we0 <= grp_KeccakWidth1600_Spon_4_fu_757_instance_state_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            ctx_sponge_state_we0 <= grp_KeccakWidth1600_Spon_1_fu_738_instance_state_we0;
        else 
            ctx_sponge_state_we0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_HashFinal_fu_823_ap_start <= grp_HashFinal_fu_823_ap_start_reg;

    grp_HashFinal_fu_823_ctx_sponge_byteIOInd_assign_proc : process(reg_891, ap_CS_fsm_state9, ap_CS_fsm_state25, ap_CS_fsm_state44, ap_CS_fsm_state60, reg_916)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            grp_HashFinal_fu_823_ctx_sponge_byteIOInd <= reg_916;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            grp_HashFinal_fu_823_ctx_sponge_byteIOInd <= reg_891;
        else 
            grp_HashFinal_fu_823_ctx_sponge_byteIOInd <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_HashFinal_fu_823_ctx_sponge_state_q0_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state25, ap_CS_fsm_state44, ap_CS_fsm_state60, ctx_sponge_state_1_q0, ctx_sponge_state_q0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state44))) then 
            grp_HashFinal_fu_823_ctx_sponge_state_q0 <= ctx_sponge_state_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            grp_HashFinal_fu_823_ctx_sponge_state_q0 <= ctx_sponge_state_1_q0;
        else 
            grp_HashFinal_fu_823_ctx_sponge_state_q0 <= "XXXXXXXX";
        end if; 
    end process;

    grp_HashInit_fu_811_ap_start <= grp_HashInit_fu_811_ap_start_reg;

    grp_HashInit_fu_811_ctx_sponge_state_q0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state13, ap_CS_fsm_state40, ap_CS_fsm_state48, ctx_sponge_state_1_q0, ctx_sponge_state_q0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state40))) then 
            grp_HashInit_fu_811_ctx_sponge_state_q0 <= ctx_sponge_state_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            grp_HashInit_fu_811_ctx_sponge_state_q0 <= ctx_sponge_state_1_q0;
        else 
            grp_HashInit_fu_811_ctx_sponge_state_q0 <= "XXXXXXXX";
        end if; 
    end process;


    grp_HashInit_fu_811_hashPrefix_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state13, ap_CS_fsm_state40, ap_CS_fsm_state48)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_HashInit_fu_811_hashPrefix <= ap_const_lv4_F;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            grp_HashInit_fu_811_hashPrefix <= ap_const_lv4_2;
        else 
            grp_HashInit_fu_811_hashPrefix <= "XXXX";
        end if; 
    end process;

    grp_KeccakWidth1600_Spon_10_fu_798_ap_start <= grp_KeccakWidth1600_Spon_10_fu_798_ap_start_reg;

    grp_KeccakWidth1600_Spon_10_fu_798_data_0_read_assign_proc : process(roundNumber, ap_CS_fsm_state19, ap_CS_fsm_state21, ap_CS_fsm_state23, ap_CS_fsm_state54, ap_CS_fsm_state56, ap_CS_fsm_state58)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            grp_KeccakWidth1600_Spon_10_fu_798_data_0_read <= ap_const_lv8_4B;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            grp_KeccakWidth1600_Spon_10_fu_798_data_0_read <= ap_const_lv8_2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            grp_KeccakWidth1600_Spon_10_fu_798_data_0_read <= roundNumber;
        else 
            grp_KeccakWidth1600_Spon_10_fu_798_data_0_read <= "XXXXXXXX";
        end if; 
    end process;


    grp_KeccakWidth1600_Spon_10_fu_798_instance_byteIOIndex_read_assign_proc : process(reg_911, reg_916, ap_CS_fsm_state19, ap_CS_fsm_state21, ap_CS_fsm_state23, ap_CS_fsm_state54, ap_CS_fsm_state56, ap_CS_fsm_state58)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            grp_KeccakWidth1600_Spon_10_fu_798_instance_byteIOIndex_read <= reg_916;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            grp_KeccakWidth1600_Spon_10_fu_798_instance_byteIOIndex_read <= reg_911;
        else 
            grp_KeccakWidth1600_Spon_10_fu_798_instance_byteIOIndex_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_KeccakWidth1600_Spon_10_fu_798_instance_state_q0_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state21, ap_CS_fsm_state23, ap_CS_fsm_state54, ap_CS_fsm_state56, ap_CS_fsm_state58, ctx_sponge_state_1_q0, ctx_sponge_state_q0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state54))) then 
            grp_KeccakWidth1600_Spon_10_fu_798_instance_state_q0 <= ctx_sponge_state_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            grp_KeccakWidth1600_Spon_10_fu_798_instance_state_q0 <= ctx_sponge_state_1_q0;
        else 
            grp_KeccakWidth1600_Spon_10_fu_798_instance_state_q0 <= "XXXXXXXX";
        end if; 
    end process;

    grp_KeccakWidth1600_Spon_1_fu_738_ap_start <= grp_KeccakWidth1600_Spon_1_fu_738_ap_start_reg;

    grp_KeccakWidth1600_Spon_1_fu_738_dataByteLen_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state62, ap_CS_fsm_state11, ap_CS_fsm_state46)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            grp_KeccakWidth1600_Spon_1_fu_738_dataByteLen <= ap_const_lv8_4B;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            grp_KeccakWidth1600_Spon_1_fu_738_dataByteLen <= ap_const_lv8_20;
        else 
            grp_KeccakWidth1600_Spon_1_fu_738_dataByteLen <= "XXXXXXXX";
        end if; 
    end process;


    grp_KeccakWidth1600_Spon_1_fu_738_data_offset1_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state62, ap_CS_fsm_state11, ap_CS_fsm_state46)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            grp_KeccakWidth1600_Spon_1_fu_738_data_offset1 <= ap_const_lv1_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            grp_KeccakWidth1600_Spon_1_fu_738_data_offset1 <= ap_const_lv1_0;
        else 
            grp_KeccakWidth1600_Spon_1_fu_738_data_offset1 <= "X";
        end if; 
    end process;


    grp_KeccakWidth1600_Spon_1_fu_738_instance_state_q0_assign_proc : process(ctx_sponge_state_1_q0, ctx_sponge_state_q0, ap_CS_fsm_state27, ap_CS_fsm_state62, ap_CS_fsm_state11, ap_CS_fsm_state46)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            grp_KeccakWidth1600_Spon_1_fu_738_instance_state_q0 <= ctx_sponge_state_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            grp_KeccakWidth1600_Spon_1_fu_738_instance_state_q0 <= ctx_sponge_state_1_q0;
        else 
            grp_KeccakWidth1600_Spon_1_fu_738_instance_state_q0 <= "XXXXXXXX";
        end if; 
    end process;

    grp_KeccakWidth1600_Spon_4_fu_757_ap_start <= grp_KeccakWidth1600_Spon_4_fu_757_ap_start_reg;

    grp_KeccakWidth1600_Spon_4_fu_757_data_0_q0_assign_proc : process(proof_0_seed1_q0, proof_0_seed2_q0, ap_CS_fsm_state7, ap_CS_fsm_state42)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_KeccakWidth1600_Spon_4_fu_757_data_0_q0 <= proof_0_seed2_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_KeccakWidth1600_Spon_4_fu_757_data_0_q0 <= proof_0_seed1_q0;
        else 
            grp_KeccakWidth1600_Spon_4_fu_757_data_0_q0 <= "XXXXXXXX";
        end if; 
    end process;


    grp_KeccakWidth1600_Spon_4_fu_757_instance_state_q0_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state42, ctx_sponge_state_1_q0, ctx_sponge_state_q0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_KeccakWidth1600_Spon_4_fu_757_instance_state_q0 <= ctx_sponge_state_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_KeccakWidth1600_Spon_4_fu_757_instance_state_q0 <= ctx_sponge_state_1_q0;
        else 
            grp_KeccakWidth1600_Spon_4_fu_757_instance_state_q0 <= "XXXXXXXX";
        end if; 
    end process;

    grp_KeccakWidth1600_Spon_7_fu_771_ap_start <= grp_KeccakWidth1600_Spon_7_fu_771_ap_start_reg;

    grp_KeccakWidth1600_Spon_7_fu_771_data_offset1_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state50)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            grp_KeccakWidth1600_Spon_7_fu_771_data_offset1 <= ap_const_lv1_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_KeccakWidth1600_Spon_7_fu_771_data_offset1 <= ap_const_lv1_0;
        else 
            grp_KeccakWidth1600_Spon_7_fu_771_data_offset1 <= "X";
        end if; 
    end process;


    grp_KeccakWidth1600_Spon_7_fu_771_instance_state_q0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state50, ctx_sponge_state_1_q0, ctx_sponge_state_q0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            grp_KeccakWidth1600_Spon_7_fu_771_instance_state_q0 <= ctx_sponge_state_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_KeccakWidth1600_Spon_7_fu_771_instance_state_q0 <= ctx_sponge_state_1_q0;
        else 
            grp_KeccakWidth1600_Spon_7_fu_771_instance_state_q0 <= "XXXXXXXX";
        end if; 
    end process;

    grp_KeccakWidth1600_Spon_8_fu_786_ap_start <= grp_KeccakWidth1600_Spon_8_fu_786_ap_start_reg;

    grp_KeccakWidth1600_Spon_8_fu_786_instance_state_q0_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state52, ctx_sponge_state_1_q0, ctx_sponge_state_q0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            grp_KeccakWidth1600_Spon_8_fu_786_instance_state_q0 <= ctx_sponge_state_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_KeccakWidth1600_Spon_8_fu_786_instance_state_q0 <= ctx_sponge_state_1_q0;
        else 
            grp_KeccakWidth1600_Spon_8_fu_786_instance_state_q0 <= "XXXXXXXX";
        end if; 
    end process;

    grp_createRandomTape13_fu_689_ap_start <= grp_createRandomTape13_fu_689_ap_start_reg;

    grp_createRandomTape13_fu_689_playerNumber_assign_proc : process(challenge, ap_CS_fsm_state19, ap_CS_fsm_state30, ap_CS_fsm_state35, ap_CS_fsm_state68)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state19) or ((challenge = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state35)))) then 
            grp_createRandomTape13_fu_689_playerNumber <= ap_const_lv1_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state68) or ((challenge = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state35)))) then 
            grp_createRandomTape13_fu_689_playerNumber <= ap_const_lv1_1;
        else 
            grp_createRandomTape13_fu_689_playerNumber <= "X";
        end if; 
    end process;


    grp_createRandomTape13_fu_689_seed_0_q0_assign_proc : process(proof_0_seed1_q0, proof_0_seed2_q0, challenge, ap_CS_fsm_state19, ap_CS_fsm_state30, ap_CS_fsm_state35, ap_CS_fsm_state68)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            grp_createRandomTape13_fu_689_seed_0_q0 <= proof_0_seed2_q0;
        elsif ((((challenge = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state35)) or ((challenge = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state35)))) then 
            grp_createRandomTape13_fu_689_seed_0_q0 <= proof_0_seed1_q0;
        else 
            grp_createRandomTape13_fu_689_seed_0_q0 <= "XXXXXXXX";
        end if; 
    end process;


    grp_fu_841_p1_assign_proc : process(ap_CS_fsm_state31, ap_CS_fsm_state32, ap_phi_mux_loop_9_phi_fu_563_p4, loop_9_reg_559)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            grp_fu_841_p1 <= loop_9_reg_559;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            grp_fu_841_p1 <= ap_phi_mux_loop_9_phi_fu_563_p4;
        else 
            grp_fu_841_p1 <= "XXXXX";
        end if; 
    end process;

    grp_fu_841_p4 <= grp_fu_841_p1(4 downto 2);

    grp_fu_852_p1_assign_proc : process(ap_CS_fsm_state36, ap_CS_fsm_state37, ap_phi_mux_loop_3_phi_fu_598_p4, loop_3_reg_594)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            grp_fu_852_p1 <= loop_3_reg_594;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            grp_fu_852_p1 <= ap_phi_mux_loop_3_phi_fu_598_p4;
        else 
            grp_fu_852_p1 <= "XXXXX";
        end if; 
    end process;

    grp_fu_852_p4 <= grp_fu_852_p1(4 downto 2);

    grp_fu_863_p1_assign_proc : process(ap_CS_fsm_state64, ap_CS_fsm_state65, ap_phi_mux_loop_1_phi_fu_622_p4, loop_1_reg_618)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            grp_fu_863_p1 <= loop_1_reg_618;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            grp_fu_863_p1 <= ap_phi_mux_loop_1_phi_fu_622_p4;
        else 
            grp_fu_863_p1 <= "XXXXX";
        end if; 
    end process;

    grp_fu_863_p4 <= grp_fu_863_p1(4 downto 2);

    grp_fu_874_p1_assign_proc : process(ap_CS_fsm_state69, ap_CS_fsm_state70, ap_phi_mux_loop_15_phi_fu_646_p4, loop_15_reg_642)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
            grp_fu_874_p1 <= loop_15_reg_642;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            grp_fu_874_p1 <= ap_phi_mux_loop_15_phi_fu_646_p4;
        else 
            grp_fu_874_p1 <= "XXXXX";
        end if; 
    end process;

    grp_fu_874_p4 <= grp_fu_874_p1(4 downto 2);
    grp_mpc_LowMC_verify_2_fu_709_ap_start <= grp_mpc_LowMC_verify_2_fu_709_ap_start_reg;
    icmp_ln1007_fu_955_p2 <= "1" when (phi_ln1007_reg_526 = ap_const_lv5_17) else "0";
    icmp_ln1009_fu_961_p2 <= "1" when (loop_0_reg_537 = ap_const_lv7_4B) else "0";
    icmp_ln1020_fu_1289_p2 <= "1" when (trunc_ln1019_fu_1285_p1 = ap_const_lv2_3) else "0";
    icmp_ln1026_fu_1357_p2 <= "1" when (loop_2_reg_630 = ap_const_lv7_4B) else "0";
    icmp_ln1034_fu_1401_p2 <= "1" when (trunc_ln1033_fu_1397_p1 = ap_const_lv2_3) else "0";
    icmp_ln1040_fu_1469_p2 <= "1" when (loop_4_reg_654 = ap_const_lv7_4B) else "0";
    icmp_ln1051_fu_1177_p2 <= "1" when (trunc_ln1050_fu_1173_p1 = ap_const_lv2_3) else "0";
    icmp_ln1058_fu_1245_p2 <= "1" when (loop_6_reg_606 = ap_const_lv7_4B) else "0";
    icmp_ln1065_fu_1120_p2 <= "1" when (loop_7_reg_583 = ap_const_lv3_4) else "0";
    icmp_ln1076_fu_987_p2 <= "1" when (loop_8_reg_548 = ap_const_lv3_4) else "0";
    icmp_ln1084_fu_1029_p2 <= "1" when (trunc_ln1083_fu_1025_p1 = ap_const_lv2_3) else "0";
    icmp_ln1091_fu_1097_p2 <= "1" when (loop_10_reg_571 = ap_const_lv7_4B) else "0";
    icmp_ln1108_fu_1558_p2 <= "1" when (loop_12_reg_677 = ap_const_lv7_60) else "0";
    loop_13_fu_1363_p2 <= std_logic_vector(unsigned(loop_2_reg_630) + unsigned(ap_const_lv7_1));
    loop_14_fu_1251_p2 <= std_logic_vector(unsigned(loop_6_reg_606) + unsigned(ap_const_lv7_1));
    loop_16_fu_1126_p2 <= std_logic_vector(unsigned(loop_7_reg_583) + unsigned(ap_const_lv3_1));
    loop_17_fu_1103_p2 <= std_logic_vector(unsigned(loop_10_reg_571) + unsigned(ap_const_lv7_1));
    loop_18_fu_1475_p2 <= std_logic_vector(unsigned(loop_4_reg_654) + unsigned(ap_const_lv7_1));
    loop_19_fu_1539_p2 <= std_logic_vector(signed(loop_11_reg_666) + signed(ap_const_lv8_FF));
    loop_20_fu_1564_p2 <= std_logic_vector(unsigned(loop_12_reg_677) + unsigned(ap_const_lv7_1));
    loop_5_fu_993_p2 <= std_logic_vector(unsigned(loop_8_reg_548) + unsigned(ap_const_lv3_1));
    loop_fu_967_p2 <= std_logic_vector(unsigned(loop_0_reg_537) + unsigned(ap_const_lv7_1));
    lshr_ln_fu_1595_p4 <= temp_q0(31 downto 8);
    mul_ln1010_fu_938_p0 <= mul_ln1010_fu_938_p00(8 - 1 downto 0);
    mul_ln1010_fu_938_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(proof_seed1_offset1),15));
    mul_ln1010_fu_938_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln1010_fu_938_p0) * unsigned(ap_const_lv15_4B), 15));
    or_ln1_fu_1211_p3 <= (trunc_ln1054_fu_1207_p1 & tmp_q0);
    or_ln2_fu_1435_p3 <= (trunc_ln1037_fu_1431_p1 & tmp_q0);
    or_ln3_fu_1063_p3 <= (trunc_ln1087_fu_1059_p1 & tmp_q0);
    or_ln4_fu_1549_p3 <= (trunc_ln1105_fu_1545_p1 & tmp_q0);
    or_ln_fu_1323_p3 <= (trunc_ln1023_fu_1319_p1 & tmp_q0);
    plaintext_address0 <= grp_mpc_LowMC_verify_2_fu_709_plaintext_address0;
    plaintext_ce0 <= grp_mpc_LowMC_verify_2_fu_709_plaintext_ce0;
    proof_0_communicatedBits_address0 <= zext_ln1010_3_fu_982_p1(15 - 1 downto 0);

    proof_0_communicatedBits_ce0_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            proof_0_communicatedBits_ce0 <= ap_const_logic_1;
        else 
            proof_0_communicatedBits_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    proof_0_inputShare_address0_assign_proc : process(ap_CS_fsm_state28, zext_ln1077_1_fu_1008_p1, ap_CS_fsm_state33, zext_ln1066_1_fu_1141_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            proof_0_inputShare_address0 <= zext_ln1066_1_fu_1141_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            proof_0_inputShare_address0 <= zext_ln1077_1_fu_1008_p1(10 - 1 downto 0);
        else 
            proof_0_inputShare_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    proof_0_inputShare_ce0_assign_proc : process(ap_CS_fsm_state28, ap_CS_fsm_state33)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            proof_0_inputShare_ce0 <= ap_const_logic_1;
        else 
            proof_0_inputShare_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    proof_0_seed1_address0_assign_proc : process(challenge, ap_CS_fsm_state7, grp_createRandomTape13_fu_689_seed_0_address0, grp_KeccakWidth1600_Spon_4_fu_757_data_0_address0, ap_CS_fsm_state35)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            proof_0_seed1_address0 <= grp_KeccakWidth1600_Spon_4_fu_757_data_0_address0;
        elsif ((((challenge = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state35)) or ((challenge = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state35)))) then 
            proof_0_seed1_address0 <= grp_createRandomTape13_fu_689_seed_0_address0;
        else 
            proof_0_seed1_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    proof_0_seed1_ce0_assign_proc : process(challenge, ap_CS_fsm_state7, grp_createRandomTape13_fu_689_seed_0_ce0, grp_KeccakWidth1600_Spon_4_fu_757_data_0_ce0, ap_CS_fsm_state35)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            proof_0_seed1_ce0 <= grp_KeccakWidth1600_Spon_4_fu_757_data_0_ce0;
        elsif ((((challenge = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state35)) or ((challenge = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state35)))) then 
            proof_0_seed1_ce0 <= grp_createRandomTape13_fu_689_seed_0_ce0;
        else 
            proof_0_seed1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    proof_0_seed2_address0_assign_proc : process(ap_CS_fsm_state42, ap_CS_fsm_state19, grp_createRandomTape13_fu_689_seed_0_address0, grp_KeccakWidth1600_Spon_4_fu_757_data_0_address0, ap_CS_fsm_state30, ap_CS_fsm_state68)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            proof_0_seed2_address0 <= grp_KeccakWidth1600_Spon_4_fu_757_data_0_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            proof_0_seed2_address0 <= grp_createRandomTape13_fu_689_seed_0_address0;
        else 
            proof_0_seed2_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    proof_0_seed2_ce0_assign_proc : process(ap_CS_fsm_state42, ap_CS_fsm_state19, grp_createRandomTape13_fu_689_seed_0_ce0, grp_KeccakWidth1600_Spon_4_fu_757_data_0_ce0, ap_CS_fsm_state30, ap_CS_fsm_state68)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            proof_0_seed2_ce0 <= grp_KeccakWidth1600_Spon_4_fu_757_data_0_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            proof_0_seed2_ce0 <= grp_createRandomTape13_fu_689_seed_0_ce0;
        else 
            proof_0_seed2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    salt_0_address0_assign_proc : process(challenge, ap_CS_fsm_state17, ap_CS_fsm_state52, ap_CS_fsm_state19, grp_createRandomTape13_fu_689_salt_0_address0, grp_KeccakWidth1600_Spon_8_fu_786_data_0_address0, ap_CS_fsm_state30, ap_CS_fsm_state35, ap_CS_fsm_state68)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            salt_0_address0 <= grp_KeccakWidth1600_Spon_8_fu_786_data_0_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state19) or ((challenge = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state35)) or ((challenge = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state35)))) then 
            salt_0_address0 <= grp_createRandomTape13_fu_689_salt_0_address0;
        else 
            salt_0_address0 <= "XXXXX";
        end if; 
    end process;


    salt_0_ce0_assign_proc : process(challenge, ap_CS_fsm_state17, ap_CS_fsm_state52, ap_CS_fsm_state19, grp_createRandomTape13_fu_689_salt_0_ce0, grp_KeccakWidth1600_Spon_8_fu_786_data_0_ce0, ap_CS_fsm_state30, ap_CS_fsm_state35, ap_CS_fsm_state68)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            salt_0_ce0 <= grp_KeccakWidth1600_Spon_8_fu_786_data_0_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state19) or ((challenge = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state35)) or ((challenge = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state35)))) then 
            salt_0_ce0 <= grp_createRandomTape13_fu_689_salt_0_ce0;
        else 
            salt_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

        sext_ln1019_fu_1273_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(loop_1_reg_618),32));

        sext_ln1033_fu_1385_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(loop_15_reg_642),32));

        sext_ln1050_fu_1161_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(loop_3_reg_594),32));

        sext_ln1083_fu_1013_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(loop_9_reg_559),32));

        sext_ln1104_fu_1507_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(loop_11_reg_666),32));


    tape_0_tape_address0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state50, grp_mpc_LowMC_verify_2_fu_709_tapes_0_tape_address0, grp_KeccakWidth1600_Spon_1_fu_738_data_0_address0, grp_KeccakWidth1600_Spon_7_fu_771_data_0_address0, ap_CS_fsm_state27, ap_CS_fsm_state34, ap_CS_fsm_state62, ap_CS_fsm_state39, ap_CS_fsm_state67, ap_CS_fsm_state72, ap_CS_fsm_state76, ap_CS_fsm_state11, ap_CS_fsm_state46, zext_ln1092_2_fu_1156_p1, zext_ln1059_1_fu_1268_p1, zext_ln1027_1_fu_1380_p1, zext_ln1041_2_fu_1502_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            tape_0_tape_address0 <= zext_ln1041_2_fu_1502_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            tape_0_tape_address0 <= zext_ln1027_1_fu_1380_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            tape_0_tape_address0 <= zext_ln1059_1_fu_1268_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            tape_0_tape_address0 <= zext_ln1092_2_fu_1156_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            tape_0_tape_address0 <= grp_KeccakWidth1600_Spon_7_fu_771_data_0_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            tape_0_tape_address0 <= grp_KeccakWidth1600_Spon_1_fu_738_data_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            tape_0_tape_address0 <= grp_mpc_LowMC_verify_2_fu_709_tapes_0_tape_address0;
        else 
            tape_0_tape_address0 <= "XXXXXXXXX";
        end if; 
    end process;

    tape_0_tape_address1 <= grp_mpc_LowMC_verify_2_fu_709_tapes_0_tape_address1;

    tape_0_tape_ce0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state50, grp_mpc_LowMC_verify_2_fu_709_tapes_0_tape_ce0, grp_KeccakWidth1600_Spon_1_fu_738_data_0_ce0, grp_KeccakWidth1600_Spon_7_fu_771_data_0_ce0, ap_CS_fsm_state27, ap_CS_fsm_state34, ap_CS_fsm_state62, ap_CS_fsm_state39, ap_CS_fsm_state67, ap_CS_fsm_state72, ap_CS_fsm_state76, ap_CS_fsm_state11, ap_CS_fsm_state46)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state67) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state34))) then 
            tape_0_tape_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            tape_0_tape_ce0 <= grp_KeccakWidth1600_Spon_7_fu_771_data_0_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            tape_0_tape_ce0 <= grp_KeccakWidth1600_Spon_1_fu_738_data_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            tape_0_tape_ce0 <= grp_mpc_LowMC_verify_2_fu_709_tapes_0_tape_ce0;
        else 
            tape_0_tape_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tape_0_tape_ce1_assign_proc : process(grp_mpc_LowMC_verify_2_fu_709_tapes_0_tape_ce1, ap_CS_fsm_state76)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            tape_0_tape_ce1 <= grp_mpc_LowMC_verify_2_fu_709_tapes_0_tape_ce1;
        else 
            tape_0_tape_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    tape_0_tape_d0_assign_proc : process(tmp_q0, grp_KeccakWidth1600_Spon_1_fu_738_data_0_d0, ap_CS_fsm_state27, ap_CS_fsm_state34, ap_CS_fsm_state62, ap_CS_fsm_state39, ap_CS_fsm_state67, ap_CS_fsm_state72, ap_CS_fsm_state11, ap_CS_fsm_state46)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state67) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state34))) then 
            tape_0_tape_d0 <= tmp_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            tape_0_tape_d0 <= grp_KeccakWidth1600_Spon_1_fu_738_data_0_d0;
        else 
            tape_0_tape_d0 <= "XXXXXXXX";
        end if; 
    end process;


    tape_0_tape_we0_assign_proc : process(grp_KeccakWidth1600_Spon_1_fu_738_data_0_we0, ap_CS_fsm_state27, ap_CS_fsm_state34, ap_CS_fsm_state62, ap_CS_fsm_state39, ap_CS_fsm_state67, ap_CS_fsm_state72, ap_CS_fsm_state11, ap_CS_fsm_state46)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state67) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state34))) then 
            tape_0_tape_we0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            tape_0_tape_we0 <= grp_KeccakWidth1600_Spon_1_fu_738_data_0_we0;
        else 
            tape_0_tape_we0 <= ap_const_logic_0;
        end if; 
    end process;


    temp_address0_assign_proc : process(ap_CS_fsm_state2, temp_addr_1_reg_1872, ap_CS_fsm_state74, tmp_14_fu_1511_p3, ap_CS_fsm_state77, temp_addr_2_reg_1895, grp_mpc_LowMC_verify_2_fu_709_tmp_address0, ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state78, zext_ln1007_fu_950_p1, zext_ln1105_fu_1529_p1, zext_ln1109_fu_1580_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state78)) then 
            temp_address0 <= temp_addr_2_reg_1895;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            temp_address0 <= zext_ln1109_fu_1580_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            temp_address0 <= temp_addr_1_reg_1872;
        elsif (((tmp_14_fu_1511_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state74))) then 
            temp_address0 <= zext_ln1105_fu_1529_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            temp_address0 <= zext_ln1007_fu_950_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            temp_address0 <= grp_mpc_LowMC_verify_2_fu_709_tmp_address0;
        else 
            temp_address0 <= "XXXXX";
        end if; 
    end process;


    temp_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state74, tmp_14_fu_1511_p3, ap_CS_fsm_state77, grp_mpc_LowMC_verify_2_fu_709_tmp_ce0, ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state78)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state75) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((tmp_14_fu_1511_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state74)))) then 
            temp_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            temp_ce0 <= grp_mpc_LowMC_verify_2_fu_709_tmp_ce0;
        else 
            temp_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    temp_ce1_assign_proc : process(grp_mpc_LowMC_verify_2_fu_709_tmp_ce1, ap_CS_fsm_state76)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            temp_ce1 <= grp_mpc_LowMC_verify_2_fu_709_tmp_ce1;
        else 
            temp_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    temp_d0_assign_proc : process(ap_CS_fsm_state2, grp_mpc_LowMC_verify_2_fu_709_tmp_d0, ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state78, or_ln4_fu_1549_p3, zext_ln1110_fu_1605_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state78)) then 
            temp_d0 <= zext_ln1110_fu_1605_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            temp_d0 <= or_ln4_fu_1549_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            temp_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            temp_d0 <= grp_mpc_LowMC_verify_2_fu_709_tmp_d0;
        else 
            temp_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    temp_we0_assign_proc : process(ap_CS_fsm_state2, grp_mpc_LowMC_verify_2_fu_709_tmp_we0, ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state78)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state75) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            temp_we0 <= ap_const_lv4_F;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            temp_we0 <= grp_mpc_LowMC_verify_2_fu_709_tmp_we0;
        else 
            temp_we0 <= ap_const_lv4_0;
        end if; 
    end process;


    temp_we1_assign_proc : process(grp_mpc_LowMC_verify_2_fu_709_tmp_we1, ap_CS_fsm_state76)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            temp_we1 <= grp_mpc_LowMC_verify_2_fu_709_tmp_we1;
        else 
            temp_we1 <= (0=>ap_const_logic_0, others=>'-');
        end if; 
    end process;

    tmp_14_fu_1511_p3 <= loop_11_reg_666(7 downto 7);
    tmp_1_fu_1277_p3 <= loop_1_reg_618(4 downto 4);
    tmp_2_fu_1165_p3 <= loop_3_reg_594(4 downto 4);
    tmp_3_fu_926_p3 <= (proof_seed1_offset1 & ap_const_lv2_0);
    tmp_8_fu_1017_p3 <= loop_9_reg_559(4 downto 4);
    tmp_9_fu_1389_p3 <= loop_15_reg_642(4 downto 4);

    tmp_address0_assign_proc : process(challenge, ap_CS_fsm_state19, icmp_ln1084_fu_1029_p2, ap_CS_fsm_state31, tmp_8_fu_1017_p3, ap_CS_fsm_state33, icmp_ln1051_fu_1177_p2, ap_CS_fsm_state36, tmp_2_fu_1165_p3, ap_CS_fsm_state38, icmp_ln1020_fu_1289_p2, ap_CS_fsm_state64, tmp_1_fu_1277_p3, ap_CS_fsm_state66, icmp_ln1026_fu_1357_p2, icmp_ln1034_fu_1401_p2, ap_CS_fsm_state69, tmp_9_fu_1389_p3, ap_CS_fsm_state71, ap_CS_fsm_state74, grp_createRandomTape13_fu_689_tape_address0, ap_CS_fsm_state30, ap_CS_fsm_state35, ap_CS_fsm_state68, ap_CS_fsm_state78, zext_ln1087_1_fu_1049_p1, zext_ln1085_1_fu_1054_p1, zext_ln1092_fu_1115_p1, zext_ln1054_1_fu_1197_p1, zext_ln1052_1_fu_1202_p1, zext_ln1059_fu_1263_p1, zext_ln1023_1_fu_1309_p1, zext_ln1021_1_fu_1314_p1, zext_ln1027_fu_1375_p1, zext_ln1037_1_fu_1421_p1, zext_ln1035_1_fu_1426_p1, zext_ln1041_fu_1487_p1, zext_ln1105_1_fu_1534_p1, zext_ln1109_1_fu_1590_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state78)) then 
            tmp_address0 <= zext_ln1109_1_fu_1590_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            tmp_address0 <= zext_ln1105_1_fu_1534_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
            tmp_address0 <= zext_ln1041_fu_1487_p1(7 - 1 downto 0);
        elsif (((icmp_ln1034_fu_1401_p2 = ap_const_lv1_1) and (tmp_9_fu_1389_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state69))) then 
            tmp_address0 <= zext_ln1035_1_fu_1426_p1(7 - 1 downto 0);
        elsif (((tmp_9_fu_1389_p3 = ap_const_lv1_0) and (icmp_ln1034_fu_1401_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state69))) then 
            tmp_address0 <= zext_ln1037_1_fu_1421_p1(7 - 1 downto 0);
        elsif (((icmp_ln1026_fu_1357_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state66))) then 
            tmp_address0 <= zext_ln1027_fu_1375_p1(7 - 1 downto 0);
        elsif (((icmp_ln1020_fu_1289_p2 = ap_const_lv1_1) and (tmp_1_fu_1277_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state64))) then 
            tmp_address0 <= zext_ln1021_1_fu_1314_p1(7 - 1 downto 0);
        elsif (((tmp_1_fu_1277_p3 = ap_const_lv1_0) and (icmp_ln1020_fu_1289_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state64))) then 
            tmp_address0 <= zext_ln1023_1_fu_1309_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            tmp_address0 <= zext_ln1059_fu_1263_p1(7 - 1 downto 0);
        elsif (((icmp_ln1051_fu_1177_p2 = ap_const_lv1_1) and (tmp_2_fu_1165_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state36))) then 
            tmp_address0 <= zext_ln1052_1_fu_1202_p1(7 - 1 downto 0);
        elsif (((tmp_2_fu_1165_p3 = ap_const_lv1_0) and (icmp_ln1051_fu_1177_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state36))) then 
            tmp_address0 <= zext_ln1054_1_fu_1197_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            tmp_address0 <= zext_ln1092_fu_1115_p1(7 - 1 downto 0);
        elsif (((icmp_ln1084_fu_1029_p2 = ap_const_lv1_1) and (tmp_8_fu_1017_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state31))) then 
            tmp_address0 <= zext_ln1085_1_fu_1054_p1(7 - 1 downto 0);
        elsif (((tmp_8_fu_1017_p3 = ap_const_lv1_0) and (icmp_ln1084_fu_1029_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state31))) then 
            tmp_address0 <= zext_ln1087_1_fu_1049_p1(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state19) or ((challenge = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state35)) or ((challenge = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state35)))) then 
            tmp_address0 <= grp_createRandomTape13_fu_689_tape_address0;
        else 
            tmp_address0 <= "XXXXXXX";
        end if; 
    end process;


    tmp_ce0_assign_proc : process(challenge, ap_CS_fsm_state19, icmp_ln1084_fu_1029_p2, ap_CS_fsm_state31, tmp_8_fu_1017_p3, ap_CS_fsm_state33, icmp_ln1051_fu_1177_p2, ap_CS_fsm_state36, tmp_2_fu_1165_p3, ap_CS_fsm_state38, icmp_ln1020_fu_1289_p2, ap_CS_fsm_state64, tmp_1_fu_1277_p3, ap_CS_fsm_state66, icmp_ln1026_fu_1357_p2, icmp_ln1034_fu_1401_p2, ap_CS_fsm_state69, tmp_9_fu_1389_p3, ap_CS_fsm_state71, ap_CS_fsm_state74, grp_createRandomTape13_fu_689_tape_ce0, ap_CS_fsm_state30, ap_CS_fsm_state35, ap_CS_fsm_state68, ap_CS_fsm_state78)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state74) or (ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state33) or ((icmp_ln1034_fu_1401_p2 = ap_const_lv1_1) and (tmp_9_fu_1389_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state69)) or ((tmp_9_fu_1389_p3 = ap_const_lv1_0) and (icmp_ln1034_fu_1401_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state69)) or ((icmp_ln1026_fu_1357_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state66)) or ((icmp_ln1020_fu_1289_p2 = ap_const_lv1_1) and (tmp_1_fu_1277_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state64)) or ((tmp_1_fu_1277_p3 = ap_const_lv1_0) and (icmp_ln1020_fu_1289_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state64)) or ((icmp_ln1051_fu_1177_p2 = ap_const_lv1_1) and (tmp_2_fu_1165_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((tmp_2_fu_1165_p3 = ap_const_lv1_0) and (icmp_ln1051_fu_1177_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((icmp_ln1084_fu_1029_p2 = ap_const_lv1_1) and (tmp_8_fu_1017_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state31)) or ((tmp_8_fu_1017_p3 = ap_const_lv1_0) and (icmp_ln1084_fu_1029_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state31)))) then 
            tmp_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state19) or ((challenge = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state35)) or ((challenge = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state35)))) then 
            tmp_ce0 <= grp_createRandomTape13_fu_689_tape_ce0;
        else 
            tmp_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_d0_assign_proc : process(challenge, ap_CS_fsm_state19, grp_createRandomTape13_fu_689_tape_d0, ap_CS_fsm_state30, ap_CS_fsm_state35, ap_CS_fsm_state68, ap_CS_fsm_state78, trunc_ln1109_fu_1585_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state78)) then 
            tmp_d0 <= trunc_ln1109_fu_1585_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state19) or ((challenge = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state35)) or ((challenge = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state35)))) then 
            tmp_d0 <= grp_createRandomTape13_fu_689_tape_d0;
        else 
            tmp_d0 <= "XXXXXXXX";
        end if; 
    end process;


    tmp_we0_assign_proc : process(challenge, ap_CS_fsm_state19, grp_createRandomTape13_fu_689_tape_we0, ap_CS_fsm_state30, ap_CS_fsm_state35, ap_CS_fsm_state68, ap_CS_fsm_state78)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state78)) then 
            tmp_we0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state19) or ((challenge = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state35)) or ((challenge = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state35)))) then 
            tmp_we0 <= grp_createRandomTape13_fu_689_tape_we0;
        else 
            tmp_we0 <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln1019_fu_1285_p1 <= loop_1_reg_618(2 - 1 downto 0);
    trunc_ln1023_fu_1319_p1 <= view1_inputShare_q0(24 - 1 downto 0);
    trunc_ln1033_fu_1397_p1 <= loop_15_reg_642(2 - 1 downto 0);
    trunc_ln1037_fu_1431_p1 <= view2_inputShare_q0(24 - 1 downto 0);
    trunc_ln1050_fu_1173_p1 <= loop_3_reg_594(2 - 1 downto 0);
    trunc_ln1054_fu_1207_p1 <= view1_inputShare_q0(24 - 1 downto 0);
    trunc_ln1083_fu_1025_p1 <= loop_9_reg_559(2 - 1 downto 0);
    trunc_ln1087_fu_1059_p1 <= view2_inputShare_q0(24 - 1 downto 0);
    trunc_ln1105_3_fu_1519_p4 <= loop_11_reg_666(6 downto 2);
    trunc_ln1105_fu_1545_p1 <= temp_q0(24 - 1 downto 0);
    trunc_ln1109_1_fu_1570_p4 <= loop_12_reg_677(6 downto 2);
    trunc_ln1109_fu_1585_p1 <= temp_q0(8 - 1 downto 0);
    view1_communicatedBits_address0 <= grp_mpc_LowMC_verify_2_fu_709_view1_communicatedBi_address0;
    view1_communicatedBits_ce0 <= grp_mpc_LowMC_verify_2_fu_709_view1_communicatedBi_ce0;
    view1_communicatedBits_d0 <= grp_mpc_LowMC_verify_2_fu_709_view1_communicatedBi_d0;
    view1_communicatedBits_we0 <= grp_mpc_LowMC_verify_2_fu_709_view1_communicatedBi_we0;

    view1_inputShare_address0_assign_proc : process(zext_ln1077_1_reg_1681, icmp_ln1051_reg_1752, ap_CS_fsm_state36, view1_inputShare_add_3_reg_1756, ap_CS_fsm_state37, icmp_ln1020_reg_1792, ap_CS_fsm_state64, view1_inputShare_add_1_reg_1796, ap_CS_fsm_state65, grp_mpc_LowMC_verify_2_fu_709_view1_inputShare_address0, ap_CS_fsm_state29, ap_CS_fsm_state76, zext_ln1054_2_fu_1192_p1, zext_ln1052_3_fu_1234_p1, zext_ln1023_2_fu_1304_p1, zext_ln1021_3_fu_1346_p1)
    begin
        if (((icmp_ln1020_reg_1792 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state65))) then 
            view1_inputShare_address0 <= zext_ln1021_3_fu_1346_p1(10 - 1 downto 0);
        elsif (((icmp_ln1020_reg_1792 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state65))) then 
            view1_inputShare_address0 <= view1_inputShare_add_1_reg_1796;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            view1_inputShare_address0 <= zext_ln1023_2_fu_1304_p1(10 - 1 downto 0);
        elsif (((icmp_ln1051_reg_1752 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state37))) then 
            view1_inputShare_address0 <= zext_ln1052_3_fu_1234_p1(10 - 1 downto 0);
        elsif (((icmp_ln1051_reg_1752 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state37))) then 
            view1_inputShare_address0 <= view1_inputShare_add_3_reg_1756;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            view1_inputShare_address0 <= zext_ln1054_2_fu_1192_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            view1_inputShare_address0 <= zext_ln1077_1_reg_1681(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            view1_inputShare_address0 <= grp_mpc_LowMC_verify_2_fu_709_view1_inputShare_address0;
        else 
            view1_inputShare_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    view1_inputShare_ce0_assign_proc : process(icmp_ln1051_reg_1752, ap_CS_fsm_state36, ap_CS_fsm_state37, icmp_ln1020_reg_1792, ap_CS_fsm_state64, ap_CS_fsm_state65, grp_mpc_LowMC_verify_2_fu_709_view1_inputShare_ce0, ap_CS_fsm_state29, ap_CS_fsm_state76)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state64) or (ap_const_logic_1 = ap_CS_fsm_state36) or ((icmp_ln1020_reg_1792 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state65)) or ((icmp_ln1020_reg_1792 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state65)) or ((icmp_ln1051_reg_1752 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state37)) or ((icmp_ln1051_reg_1752 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state37)))) then 
            view1_inputShare_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            view1_inputShare_ce0 <= grp_mpc_LowMC_verify_2_fu_709_view1_inputShare_ce0;
        else 
            view1_inputShare_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    view1_inputShare_d0_assign_proc : process(proof_0_inputShare_q0, icmp_ln1051_reg_1752, ap_CS_fsm_state37, icmp_ln1020_reg_1792, ap_CS_fsm_state65, ap_CS_fsm_state29, or_ln1_fu_1211_p3, zext_ln1052_fu_1220_p1, or_ln_fu_1323_p3, zext_ln1021_fu_1332_p1)
    begin
        if (((icmp_ln1020_reg_1792 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state65))) then 
            view1_inputShare_d0 <= zext_ln1021_fu_1332_p1;
        elsif (((icmp_ln1020_reg_1792 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state65))) then 
            view1_inputShare_d0 <= or_ln_fu_1323_p3;
        elsif (((icmp_ln1051_reg_1752 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state37))) then 
            view1_inputShare_d0 <= zext_ln1052_fu_1220_p1;
        elsif (((icmp_ln1051_reg_1752 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state37))) then 
            view1_inputShare_d0 <= or_ln1_fu_1211_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            view1_inputShare_d0 <= proof_0_inputShare_q0;
        else 
            view1_inputShare_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    view1_inputShare_we0_assign_proc : process(icmp_ln1051_reg_1752, ap_CS_fsm_state37, icmp_ln1020_reg_1792, ap_CS_fsm_state65, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or ((icmp_ln1020_reg_1792 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state65)) or ((icmp_ln1020_reg_1792 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state65)) or ((icmp_ln1051_reg_1752 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state37)) or ((icmp_ln1051_reg_1752 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state37)))) then 
            view1_inputShare_we0 <= ap_const_logic_1;
        else 
            view1_inputShare_we0 <= ap_const_logic_0;
        end if; 
    end process;

    view1_outputShare_address0 <= grp_mpc_LowMC_verify_2_fu_709_view1_outputShare_address0;
    view1_outputShare_ce0 <= grp_mpc_LowMC_verify_2_fu_709_view1_outputShare_ce0;
    view1_outputShare_d0 <= grp_mpc_LowMC_verify_2_fu_709_view1_outputShare_d0;
    view1_outputShare_we0 <= grp_mpc_LowMC_verify_2_fu_709_view1_outputShare_we0;

    view2_communicatedBits_address0_assign_proc : process(zext_ln1010_3_reg_1663, grp_mpc_LowMC_verify_2_fu_709_view2_communicatedBi_address0, ap_CS_fsm_state4, ap_CS_fsm_state76)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            view2_communicatedBits_address0 <= zext_ln1010_3_reg_1663(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            view2_communicatedBits_address0 <= grp_mpc_LowMC_verify_2_fu_709_view2_communicatedBi_address0;
        else 
            view2_communicatedBits_address0 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    view2_communicatedBits_ce0_assign_proc : process(grp_mpc_LowMC_verify_2_fu_709_view2_communicatedBi_ce0, ap_CS_fsm_state4, ap_CS_fsm_state76)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            view2_communicatedBits_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            view2_communicatedBits_ce0 <= grp_mpc_LowMC_verify_2_fu_709_view2_communicatedBi_ce0;
        else 
            view2_communicatedBits_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    view2_communicatedBits_d0 <= proof_0_communicatedBits_q0;

    view2_communicatedBits_we0_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            view2_communicatedBits_we0 <= ap_const_logic_1;
        else 
            view2_communicatedBits_we0 <= ap_const_logic_0;
        end if; 
    end process;


    view2_inputShare_address0_assign_proc : process(icmp_ln1084_reg_1694, ap_CS_fsm_state31, view2_inputShare_add_4_reg_1698, ap_CS_fsm_state32, zext_ln1066_1_reg_1739, icmp_ln1034_reg_1832, ap_CS_fsm_state69, view2_inputShare_add_1_reg_1836, ap_CS_fsm_state70, grp_mpc_LowMC_verify_2_fu_709_view2_inputShare_address0, ap_CS_fsm_state63, ap_CS_fsm_state76, zext_ln1087_2_fu_1044_p1, zext_ln1085_3_fu_1086_p1, zext_ln1037_2_fu_1416_p1, zext_ln1035_3_fu_1458_p1)
    begin
        if (((icmp_ln1034_reg_1832 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state70))) then 
            view2_inputShare_address0 <= zext_ln1035_3_fu_1458_p1(10 - 1 downto 0);
        elsif (((icmp_ln1034_reg_1832 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state70))) then 
            view2_inputShare_address0 <= view2_inputShare_add_1_reg_1836;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            view2_inputShare_address0 <= zext_ln1037_2_fu_1416_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            view2_inputShare_address0 <= zext_ln1066_1_reg_1739(10 - 1 downto 0);
        elsif (((icmp_ln1084_reg_1694 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state32))) then 
            view2_inputShare_address0 <= zext_ln1085_3_fu_1086_p1(10 - 1 downto 0);
        elsif (((icmp_ln1084_reg_1694 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state32))) then 
            view2_inputShare_address0 <= view2_inputShare_add_4_reg_1698;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            view2_inputShare_address0 <= zext_ln1087_2_fu_1044_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            view2_inputShare_address0 <= grp_mpc_LowMC_verify_2_fu_709_view2_inputShare_address0;
        else 
            view2_inputShare_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    view2_inputShare_ce0_assign_proc : process(icmp_ln1084_reg_1694, ap_CS_fsm_state31, ap_CS_fsm_state32, icmp_ln1034_reg_1832, ap_CS_fsm_state69, ap_CS_fsm_state70, grp_mpc_LowMC_verify_2_fu_709_view2_inputShare_ce0, ap_CS_fsm_state63, ap_CS_fsm_state76)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state63) or (ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state31) or ((icmp_ln1034_reg_1832 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state70)) or ((icmp_ln1034_reg_1832 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state70)) or ((icmp_ln1084_reg_1694 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((icmp_ln1084_reg_1694 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state32)))) then 
            view2_inputShare_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            view2_inputShare_ce0 <= grp_mpc_LowMC_verify_2_fu_709_view2_inputShare_ce0;
        else 
            view2_inputShare_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    view2_inputShare_d0_assign_proc : process(proof_0_inputShare_q0, icmp_ln1084_reg_1694, ap_CS_fsm_state32, icmp_ln1034_reg_1832, ap_CS_fsm_state70, ap_CS_fsm_state63, or_ln3_fu_1063_p3, zext_ln1085_fu_1072_p1, or_ln2_fu_1435_p3, zext_ln1035_fu_1444_p1)
    begin
        if (((icmp_ln1034_reg_1832 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state70))) then 
            view2_inputShare_d0 <= zext_ln1035_fu_1444_p1;
        elsif (((icmp_ln1034_reg_1832 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state70))) then 
            view2_inputShare_d0 <= or_ln2_fu_1435_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            view2_inputShare_d0 <= proof_0_inputShare_q0;
        elsif (((icmp_ln1084_reg_1694 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state32))) then 
            view2_inputShare_d0 <= zext_ln1085_fu_1072_p1;
        elsif (((icmp_ln1084_reg_1694 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state32))) then 
            view2_inputShare_d0 <= or_ln3_fu_1063_p3;
        else 
            view2_inputShare_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    view2_inputShare_we0_assign_proc : process(icmp_ln1084_reg_1694, ap_CS_fsm_state32, icmp_ln1034_reg_1832, ap_CS_fsm_state70, ap_CS_fsm_state63)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state63) or ((icmp_ln1034_reg_1832 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state70)) or ((icmp_ln1034_reg_1832 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state70)) or ((icmp_ln1084_reg_1694 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((icmp_ln1084_reg_1694 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state32)))) then 
            view2_inputShare_we0 <= ap_const_logic_1;
        else 
            view2_inputShare_we0 <= ap_const_logic_0;
        end if; 
    end process;

    view2_outputShare_address0 <= grp_mpc_LowMC_verify_2_fu_709_view2_outputShare_address0;
    view2_outputShare_ce0 <= grp_mpc_LowMC_verify_2_fu_709_view2_outputShare_ce0;
    view2_outputShare_d0 <= grp_mpc_LowMC_verify_2_fu_709_view2_outputShare_d0;
    view2_outputShare_we0 <= grp_mpc_LowMC_verify_2_fu_709_view2_outputShare_we0;
    zext_ln1007_fu_950_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(phi_ln1007_reg_526),64));
    zext_ln1010_1_fu_934_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_926_p3),11));
    zext_ln1010_2_fu_973_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loop_0_reg_537),15));
    zext_ln1010_3_fu_982_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1010_fu_977_p2),64));
    zext_ln1021_1_fu_1314_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1019_fu_1273_p1),64));
    zext_ln1021_2_fu_1337_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_863_p4),11));
    zext_ln1021_3_fu_1346_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1021_fu_1341_p2),64));
    zext_ln1021_fu_1332_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_q0),32));
    zext_ln1023_1_fu_1309_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1019_fu_1273_p1),64));
    zext_ln1023_2_fu_1304_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1023_fu_1299_p2),64));
    zext_ln1023_fu_1295_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_863_p4),11));
    zext_ln1027_1_fu_1380_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loop_2_reg_630),64));
    zext_ln1027_fu_1375_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1027_fu_1369_p2),64));
    zext_ln1035_1_fu_1426_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1033_fu_1385_p1),64));
    zext_ln1035_2_fu_1449_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_874_p4),11));
    zext_ln1035_3_fu_1458_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1035_fu_1453_p2),64));
    zext_ln1035_fu_1444_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_q0),32));
    zext_ln1037_1_fu_1421_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1033_fu_1385_p1),64));
    zext_ln1037_2_fu_1416_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1037_fu_1411_p2),64));
    zext_ln1037_fu_1407_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_874_p4),11));
    zext_ln1041_1_fu_1492_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loop_4_reg_654),8));
    zext_ln1041_2_fu_1502_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1041_1_fu_1496_p2),64));
    zext_ln1041_fu_1487_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1041_fu_1481_p2),64));
    zext_ln1052_1_fu_1202_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1050_fu_1161_p1),64));
    zext_ln1052_2_fu_1225_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_852_p4),11));
    zext_ln1052_3_fu_1234_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1052_fu_1229_p2),64));
    zext_ln1052_fu_1220_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_q0),32));
    zext_ln1054_1_fu_1197_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1050_fu_1161_p1),64));
    zext_ln1054_2_fu_1192_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1054_fu_1187_p2),64));
    zext_ln1054_fu_1183_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_852_p4),11));
    zext_ln1059_1_fu_1268_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loop_6_reg_606),64));
    zext_ln1059_fu_1263_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1059_fu_1257_p2),64));
    zext_ln1066_1_fu_1141_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1066_fu_1136_p2),64));
    zext_ln1066_fu_1132_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loop_7_reg_583),11));
    zext_ln1077_1_fu_1008_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1077_fu_1003_p2),64));
    zext_ln1077_fu_999_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loop_8_reg_548),11));
    zext_ln1085_1_fu_1054_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1083_fu_1013_p1),64));
    zext_ln1085_2_fu_1077_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_841_p4),11));
    zext_ln1085_3_fu_1086_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1085_fu_1081_p2),64));
    zext_ln1085_fu_1072_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_q0),32));
    zext_ln1087_1_fu_1049_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1083_fu_1013_p1),64));
    zext_ln1087_2_fu_1044_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1087_fu_1039_p2),64));
    zext_ln1087_fu_1035_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_841_p4),11));
    zext_ln1092_1_fu_1146_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loop_10_reg_571),8));
    zext_ln1092_2_fu_1156_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1092_1_fu_1150_p2),64));
    zext_ln1092_fu_1115_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1092_fu_1109_p2),64));
    zext_ln1105_1_fu_1534_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1104_fu_1507_p1),64));
    zext_ln1105_fu_1529_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1105_3_fu_1519_p4),64));
    zext_ln1109_1_fu_1590_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loop_12_reg_677),64));
    zext_ln1109_fu_1580_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1109_1_fu_1570_p4),64));
    zext_ln1110_fu_1605_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_fu_1595_p4),32));
end behav;
