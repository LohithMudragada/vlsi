// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "pi.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic pi::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic pi::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<17> pi::ap_ST_fsm_state1 = "1";
const sc_lv<17> pi::ap_ST_fsm_state2 = "10";
const sc_lv<17> pi::ap_ST_fsm_state3 = "100";
const sc_lv<17> pi::ap_ST_fsm_state4 = "1000";
const sc_lv<17> pi::ap_ST_fsm_state5 = "10000";
const sc_lv<17> pi::ap_ST_fsm_state6 = "100000";
const sc_lv<17> pi::ap_ST_fsm_state7 = "1000000";
const sc_lv<17> pi::ap_ST_fsm_state8 = "10000000";
const sc_lv<17> pi::ap_ST_fsm_state9 = "100000000";
const sc_lv<17> pi::ap_ST_fsm_state10 = "1000000000";
const sc_lv<17> pi::ap_ST_fsm_state11 = "10000000000";
const sc_lv<17> pi::ap_ST_fsm_state12 = "100000000000";
const sc_lv<17> pi::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<17> pi::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<17> pi::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<17> pi::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<17> pi::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<32> pi::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> pi::ap_const_lv32_1 = "1";
const sc_lv<1> pi::ap_const_lv1_0 = "0";
const sc_lv<32> pi::ap_const_lv32_2 = "10";
const sc_lv<32> pi::ap_const_lv32_4 = "100";
const sc_lv<32> pi::ap_const_lv32_5 = "101";
const sc_lv<32> pi::ap_const_lv32_F = "1111";
const sc_lv<3> pi::ap_const_lv3_0 = "000";
const sc_lv<1> pi::ap_const_lv1_1 = "1";
const sc_lv<32> pi::ap_const_lv32_3 = "11";
const sc_lv<32> pi::ap_const_lv32_10 = "10000";
const sc_lv<3> pi::ap_const_lv3_5 = "101";
const sc_lv<3> pi::ap_const_lv3_1 = "1";
const sc_lv<2> pi::ap_const_lv2_0 = "00";
const sc_lv<8> pi::ap_const_lv8_5 = "101";
const bool pi::ap_const_boolean_1 = true;

pi::pi(sc_module_name name) : sc_module(name), mVcdFile(0) {
    tempA_U = new pi_tempA("tempA_U");
    tempA_U->clk(ap_clk);
    tempA_U->reset(ap_rst);
    tempA_U->address0(tempA_address0);
    tempA_U->ce0(tempA_ce0);
    tempA_U->we0(tempA_we0);
    tempA_U->d0(A_q0);
    tempA_U->q0(tempA_q0);
    crypto_sign_open_bkb_U16 = new crypto_sign_open_bkb<1,12,8,4,4>("crypto_sign_open_bkb_U16");
    crypto_sign_open_bkb_U16->clk(ap_clk);
    crypto_sign_open_bkb_U16->reset(ap_rst);
    crypto_sign_open_bkb_U16->start(grp_fu_266_ap_start);
    crypto_sign_open_bkb_U16->done(grp_fu_266_ap_done);
    crypto_sign_open_bkb_U16->din0(grp_fu_266_p0);
    crypto_sign_open_bkb_U16->din1(grp_fu_266_p1);
    crypto_sign_open_bkb_U16->ce(ap_var_for_const0);
    crypto_sign_open_bkb_U16->dout(grp_fu_266_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_A_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln362_fu_171_p1 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( zext_ln364_1_fu_307_p1 );

    SC_METHOD(thread_A_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_A_d0);
    sensitive << ( tempA_q0 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_A_we0);
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_add_ln362_1_fu_156_p2);
    sensitive << ( zext_ln362_1_reg_320 );
    sensitive << ( zext_ln362_2_fu_144_p1 );

    SC_METHOD(thread_add_ln362_fu_165_p2);
    sensitive << ( shl_ln2_fu_148_p3 );
    sensitive << ( zext_ln362_3_fu_161_p1 );

    SC_METHOD(thread_add_ln364_2_fu_301_p2);
    sensitive << ( zext_ln364_7_fu_297_p1 );
    sensitive << ( shl_ln364_3_fu_284_p3 );

    SC_METHOD(thread_add_ln364_3_fu_232_p2);
    sensitive << ( zext_ln364_2_reg_351 );
    sensitive << ( zext_ln364_4_fu_220_p1 );

    SC_METHOD(thread_add_ln364_4_fu_292_p2);
    sensitive << ( zext_ln364_4_reg_369 );
    sensitive << ( trunc_ln364_fu_276_p1 );

    SC_METHOD(thread_add_ln364_fu_241_p2);
    sensitive << ( zext_ln364_5_fu_237_p1 );
    sensitive << ( shl_ln364_1_fu_224_p3 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln363_fu_176_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln363_fu_176_p2 );

    SC_METHOD(thread_grp_fu_266_ap_start);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln363_1_fu_208_p2 );

    SC_METHOD(thread_grp_fu_266_p0);
    sensitive << ( zext_ln364_3_reg_356 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( sext_ln364_fu_257_p1 );

    SC_METHOD(thread_grp_fu_266_p1);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_icmp_ln361_1_fu_132_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( y_0_reg_83 );

    SC_METHOD(thread_icmp_ln361_fu_116_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( x_0_reg_72 );

    SC_METHOD(thread_icmp_ln363_1_fu_208_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( y_1_reg_105 );

    SC_METHOD(thread_icmp_ln363_fu_176_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( x_1_reg_94 );

    SC_METHOD(thread_sext_ln364_fu_257_p1);
    sensitive << ( sub_ln364_fu_251_p2 );

    SC_METHOD(thread_shl_ln2_fu_148_p3);
    sensitive << ( y_0_reg_83 );

    SC_METHOD(thread_shl_ln364_1_fu_224_p3);
    sensitive << ( y_1_reg_105 );

    SC_METHOD(thread_shl_ln364_3_fu_284_p3);
    sensitive << ( trunc_ln364_1_fu_280_p1 );

    SC_METHOD(thread_shl_ln_fu_192_p3);
    sensitive << ( x_1_reg_94 );

    SC_METHOD(thread_sub_ln364_fu_251_p2);
    sensitive << ( zext_ln364_6_fu_247_p1 );
    sensitive << ( zext_ln363_fu_204_p1 );

    SC_METHOD(thread_tempA_address0);
    sensitive << ( zext_ln362_reg_333 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln364_fu_272_p1 );

    SC_METHOD(thread_tempA_ce0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_tempA_we0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_trunc_ln364_1_fu_280_p1);
    sensitive << ( grp_fu_266_p2 );

    SC_METHOD(thread_trunc_ln364_fu_276_p1);
    sensitive << ( grp_fu_266_p2 );

    SC_METHOD(thread_x_5_fu_182_p2);
    sensitive << ( x_1_reg_94 );

    SC_METHOD(thread_x_fu_122_p2);
    sensitive << ( x_0_reg_72 );

    SC_METHOD(thread_y_3_fu_214_p2);
    sensitive << ( y_1_reg_105 );

    SC_METHOD(thread_y_fu_138_p2);
    sensitive << ( y_0_reg_83 );

    SC_METHOD(thread_zext_ln362_1_fu_128_p1);
    sensitive << ( x_0_reg_72 );

    SC_METHOD(thread_zext_ln362_2_fu_144_p1);
    sensitive << ( y_0_reg_83 );

    SC_METHOD(thread_zext_ln362_3_fu_161_p1);
    sensitive << ( add_ln362_1_fu_156_p2 );

    SC_METHOD(thread_zext_ln362_fu_171_p1);
    sensitive << ( add_ln362_fu_165_p2 );

    SC_METHOD(thread_zext_ln363_fu_204_p1);
    sensitive << ( y_1_reg_105 );

    SC_METHOD(thread_zext_ln364_1_fu_307_p1);
    sensitive << ( add_ln364_2_fu_301_p2 );

    SC_METHOD(thread_zext_ln364_2_fu_188_p1);
    sensitive << ( x_1_reg_94 );

    SC_METHOD(thread_zext_ln364_3_fu_200_p1);
    sensitive << ( shl_ln_fu_192_p3 );

    SC_METHOD(thread_zext_ln364_4_fu_220_p1);
    sensitive << ( y_1_reg_105 );

    SC_METHOD(thread_zext_ln364_5_fu_237_p1);
    sensitive << ( add_ln364_3_fu_232_p2 );

    SC_METHOD(thread_zext_ln364_6_fu_247_p1);
    sensitive << ( shl_ln364_1_fu_224_p3 );

    SC_METHOD(thread_zext_ln364_7_fu_297_p1);
    sensitive << ( add_ln364_4_fu_292_p2 );

    SC_METHOD(thread_zext_ln364_fu_272_p1);
    sensitive << ( add_ln364_reg_374 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln361_fu_116_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln361_1_fu_132_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln363_fu_176_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln363_1_fu_208_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "pi_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, A_address0, "(port)A_address0");
    sc_trace(mVcdFile, A_ce0, "(port)A_ce0");
    sc_trace(mVcdFile, A_we0, "(port)A_we0");
    sc_trace(mVcdFile, A_d0, "(port)A_d0");
    sc_trace(mVcdFile, A_q0, "(port)A_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, x_fu_122_p2, "x_fu_122_p2");
    sc_trace(mVcdFile, x_reg_315, "x_reg_315");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, zext_ln362_1_fu_128_p1, "zext_ln362_1_fu_128_p1");
    sc_trace(mVcdFile, zext_ln362_1_reg_320, "zext_ln362_1_reg_320");
    sc_trace(mVcdFile, icmp_ln361_fu_116_p2, "icmp_ln361_fu_116_p2");
    sc_trace(mVcdFile, y_fu_138_p2, "y_fu_138_p2");
    sc_trace(mVcdFile, y_reg_328, "y_reg_328");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, zext_ln362_fu_171_p1, "zext_ln362_fu_171_p1");
    sc_trace(mVcdFile, zext_ln362_reg_333, "zext_ln362_reg_333");
    sc_trace(mVcdFile, icmp_ln361_1_fu_132_p2, "icmp_ln361_1_fu_132_p2");
    sc_trace(mVcdFile, x_5_fu_182_p2, "x_5_fu_182_p2");
    sc_trace(mVcdFile, x_5_reg_346, "x_5_reg_346");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, zext_ln364_2_fu_188_p1, "zext_ln364_2_fu_188_p1");
    sc_trace(mVcdFile, zext_ln364_2_reg_351, "zext_ln364_2_reg_351");
    sc_trace(mVcdFile, icmp_ln363_fu_176_p2, "icmp_ln363_fu_176_p2");
    sc_trace(mVcdFile, zext_ln364_3_fu_200_p1, "zext_ln364_3_fu_200_p1");
    sc_trace(mVcdFile, zext_ln364_3_reg_356, "zext_ln364_3_reg_356");
    sc_trace(mVcdFile, y_3_fu_214_p2, "y_3_fu_214_p2");
    sc_trace(mVcdFile, y_3_reg_364, "y_3_reg_364");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, zext_ln364_4_fu_220_p1, "zext_ln364_4_fu_220_p1");
    sc_trace(mVcdFile, zext_ln364_4_reg_369, "zext_ln364_4_reg_369");
    sc_trace(mVcdFile, icmp_ln363_1_fu_208_p2, "icmp_ln363_1_fu_208_p2");
    sc_trace(mVcdFile, add_ln364_fu_241_p2, "add_ln364_fu_241_p2");
    sc_trace(mVcdFile, add_ln364_reg_374, "add_ln364_reg_374");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, tempA_address0, "tempA_address0");
    sc_trace(mVcdFile, tempA_ce0, "tempA_ce0");
    sc_trace(mVcdFile, tempA_we0, "tempA_we0");
    sc_trace(mVcdFile, tempA_q0, "tempA_q0");
    sc_trace(mVcdFile, x_0_reg_72, "x_0_reg_72");
    sc_trace(mVcdFile, y_0_reg_83, "y_0_reg_83");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, x_1_reg_94, "x_1_reg_94");
    sc_trace(mVcdFile, y_1_reg_105, "y_1_reg_105");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, zext_ln364_fu_272_p1, "zext_ln364_fu_272_p1");
    sc_trace(mVcdFile, zext_ln364_1_fu_307_p1, "zext_ln364_1_fu_307_p1");
    sc_trace(mVcdFile, zext_ln362_2_fu_144_p1, "zext_ln362_2_fu_144_p1");
    sc_trace(mVcdFile, add_ln362_1_fu_156_p2, "add_ln362_1_fu_156_p2");
    sc_trace(mVcdFile, shl_ln2_fu_148_p3, "shl_ln2_fu_148_p3");
    sc_trace(mVcdFile, zext_ln362_3_fu_161_p1, "zext_ln362_3_fu_161_p1");
    sc_trace(mVcdFile, add_ln362_fu_165_p2, "add_ln362_fu_165_p2");
    sc_trace(mVcdFile, shl_ln_fu_192_p3, "shl_ln_fu_192_p3");
    sc_trace(mVcdFile, add_ln364_3_fu_232_p2, "add_ln364_3_fu_232_p2");
    sc_trace(mVcdFile, zext_ln364_5_fu_237_p1, "zext_ln364_5_fu_237_p1");
    sc_trace(mVcdFile, shl_ln364_1_fu_224_p3, "shl_ln364_1_fu_224_p3");
    sc_trace(mVcdFile, zext_ln364_6_fu_247_p1, "zext_ln364_6_fu_247_p1");
    sc_trace(mVcdFile, zext_ln363_fu_204_p1, "zext_ln363_fu_204_p1");
    sc_trace(mVcdFile, sub_ln364_fu_251_p2, "sub_ln364_fu_251_p2");
    sc_trace(mVcdFile, sext_ln364_fu_257_p1, "sext_ln364_fu_257_p1");
    sc_trace(mVcdFile, grp_fu_266_p0, "grp_fu_266_p0");
    sc_trace(mVcdFile, grp_fu_266_p1, "grp_fu_266_p1");
    sc_trace(mVcdFile, grp_fu_266_p2, "grp_fu_266_p2");
    sc_trace(mVcdFile, trunc_ln364_1_fu_280_p1, "trunc_ln364_1_fu_280_p1");
    sc_trace(mVcdFile, trunc_ln364_fu_276_p1, "trunc_ln364_fu_276_p1");
    sc_trace(mVcdFile, add_ln364_4_fu_292_p2, "add_ln364_4_fu_292_p2");
    sc_trace(mVcdFile, zext_ln364_7_fu_297_p1, "zext_ln364_7_fu_297_p1");
    sc_trace(mVcdFile, shl_ln364_3_fu_284_p3, "shl_ln364_3_fu_284_p3");
    sc_trace(mVcdFile, add_ln364_2_fu_301_p2, "add_ln364_2_fu_301_p2");
    sc_trace(mVcdFile, grp_fu_266_ap_start, "grp_fu_266_ap_start");
    sc_trace(mVcdFile, grp_fu_266_ap_done, "grp_fu_266_ap_done");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

pi::~pi() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete tempA_U;
    delete crypto_sign_open_bkb_U16;
}

void pi::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void pi::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln361_1_fu_132_p2.read(), ap_const_lv1_1))) {
        x_0_reg_72 = x_reg_315.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        x_0_reg_72 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln361_fu_116_p2.read(), ap_const_lv1_1))) {
        x_1_reg_94 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(icmp_ln363_1_fu_208_p2.read(), ap_const_lv1_1))) {
        x_1_reg_94 = x_5_reg_346.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln361_fu_116_p2.read(), ap_const_lv1_0))) {
        y_0_reg_83 = ap_const_lv3_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        y_0_reg_83 = y_reg_328.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln363_fu_176_p2.read()))) {
        y_1_reg_105 = ap_const_lv3_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        y_1_reg_105 = y_3_reg_364.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln363_1_fu_208_p2.read()))) {
        add_ln364_reg_374 = add_ln364_fu_241_p2.read();
        zext_ln364_4_reg_369 = zext_ln364_4_fu_220_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        x_5_reg_346 = x_5_fu_182_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        x_reg_315 = x_fu_122_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        y_3_reg_364 = y_3_fu_214_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        y_reg_328 = y_fu_138_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln361_fu_116_p2.read(), ap_const_lv1_0))) {
        zext_ln362_1_reg_320 = zext_ln362_1_fu_128_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln361_1_fu_132_p2.read()))) {
        zext_ln362_reg_333 = zext_ln362_fu_171_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln363_fu_176_p2.read()))) {
        zext_ln364_2_reg_351 = zext_ln364_2_fu_188_p1.read();
        zext_ln364_3_reg_356 = zext_ln364_3_fu_200_p1.read();
    }
}

void pi::thread_A_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        A_address0 =  (sc_lv<5>) (zext_ln364_1_fu_307_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        A_address0 =  (sc_lv<5>) (zext_ln362_fu_171_p1.read());
    } else {
        A_address0 = "XXXXX";
    }
}

void pi::thread_A_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        A_ce0 = ap_const_logic_1;
    } else {
        A_ce0 = ap_const_logic_0;
    }
}

void pi::thread_A_d0() {
    A_d0 = tempA_q0.read();
}

void pi::thread_A_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        A_we0 = ap_const_logic_1;
    } else {
        A_we0 = ap_const_logic_0;
    }
}

void pi::thread_add_ln362_1_fu_156_p2() {
    add_ln362_1_fu_156_p2 = (!zext_ln362_1_reg_320.read().is_01() || !zext_ln362_2_fu_144_p1.read().is_01())? sc_lv<4>(): (sc_biguint<4>(zext_ln362_1_reg_320.read()) + sc_biguint<4>(zext_ln362_2_fu_144_p1.read()));
}

void pi::thread_add_ln362_fu_165_p2() {
    add_ln362_fu_165_p2 = (!shl_ln2_fu_148_p3.read().is_01() || !zext_ln362_3_fu_161_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(shl_ln2_fu_148_p3.read()) + sc_biguint<5>(zext_ln362_3_fu_161_p1.read()));
}

void pi::thread_add_ln364_2_fu_301_p2() {
    add_ln364_2_fu_301_p2 = (!zext_ln364_7_fu_297_p1.read().is_01() || !shl_ln364_3_fu_284_p3.read().is_01())? sc_lv<5>(): (sc_biguint<5>(zext_ln364_7_fu_297_p1.read()) + sc_biguint<5>(shl_ln364_3_fu_284_p3.read()));
}

void pi::thread_add_ln364_3_fu_232_p2() {
    add_ln364_3_fu_232_p2 = (!zext_ln364_4_fu_220_p1.read().is_01() || !zext_ln364_2_reg_351.read().is_01())? sc_lv<4>(): (sc_biguint<4>(zext_ln364_4_fu_220_p1.read()) + sc_biguint<4>(zext_ln364_2_reg_351.read()));
}

void pi::thread_add_ln364_4_fu_292_p2() {
    add_ln364_4_fu_292_p2 = (!trunc_ln364_fu_276_p1.read().is_01() || !zext_ln364_4_reg_369.read().is_01())? sc_lv<4>(): (sc_biguint<4>(trunc_ln364_fu_276_p1.read()) + sc_biguint<4>(zext_ln364_4_reg_369.read()));
}

void pi::thread_add_ln364_fu_241_p2() {
    add_ln364_fu_241_p2 = (!zext_ln364_5_fu_237_p1.read().is_01() || !shl_ln364_1_fu_224_p3.read().is_01())? sc_lv<5>(): (sc_biguint<5>(zext_ln364_5_fu_237_p1.read()) + sc_biguint<5>(shl_ln364_1_fu_224_p3.read()));
}

void pi::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void pi::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void pi::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void pi::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void pi::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void pi::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void pi::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void pi::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void pi::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(icmp_ln363_fu_176_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void pi::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void pi::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(icmp_ln363_fu_176_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void pi::thread_grp_fu_266_ap_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln363_1_fu_208_p2.read()))) {
        grp_fu_266_ap_start = ap_const_logic_1;
    } else {
        grp_fu_266_ap_start = ap_const_logic_0;
    }
}

void pi::thread_grp_fu_266_p0() {
    grp_fu_266_p0 = (!zext_ln364_3_reg_356.read().is_01() || !sext_ln364_fu_257_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(zext_ln364_3_reg_356.read()) + sc_bigint<8>(sext_ln364_fu_257_p1.read()));
}

void pi::thread_grp_fu_266_p1() {
    grp_fu_266_p1 =  (sc_lv<4>) (ap_const_lv8_5);
}

void pi::thread_icmp_ln361_1_fu_132_p2() {
    icmp_ln361_1_fu_132_p2 = (!y_0_reg_83.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(y_0_reg_83.read() == ap_const_lv3_5);
}

void pi::thread_icmp_ln361_fu_116_p2() {
    icmp_ln361_fu_116_p2 = (!x_0_reg_72.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(x_0_reg_72.read() == ap_const_lv3_5);
}

void pi::thread_icmp_ln363_1_fu_208_p2() {
    icmp_ln363_1_fu_208_p2 = (!y_1_reg_105.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(y_1_reg_105.read() == ap_const_lv3_5);
}

void pi::thread_icmp_ln363_fu_176_p2() {
    icmp_ln363_fu_176_p2 = (!x_1_reg_94.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(x_1_reg_94.read() == ap_const_lv3_5);
}

void pi::thread_sext_ln364_fu_257_p1() {
    sext_ln364_fu_257_p1 = esl_sext<8,6>(sub_ln364_fu_251_p2.read());
}

void pi::thread_shl_ln2_fu_148_p3() {
    shl_ln2_fu_148_p3 = esl_concat<3,2>(y_0_reg_83.read(), ap_const_lv2_0);
}

void pi::thread_shl_ln364_1_fu_224_p3() {
    shl_ln364_1_fu_224_p3 = esl_concat<3,2>(y_1_reg_105.read(), ap_const_lv2_0);
}

void pi::thread_shl_ln364_3_fu_284_p3() {
    shl_ln364_3_fu_284_p3 = esl_concat<3,2>(trunc_ln364_1_fu_280_p1.read(), ap_const_lv2_0);
}

void pi::thread_shl_ln_fu_192_p3() {
    shl_ln_fu_192_p3 = esl_concat<3,1>(x_1_reg_94.read(), ap_const_lv1_0);
}

void pi::thread_sub_ln364_fu_251_p2() {
    sub_ln364_fu_251_p2 = (!zext_ln364_6_fu_247_p1.read().is_01() || !zext_ln363_fu_204_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(zext_ln364_6_fu_247_p1.read()) - sc_biguint<6>(zext_ln363_fu_204_p1.read()));
}

void pi::thread_tempA_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        tempA_address0 =  (sc_lv<5>) (zext_ln364_fu_272_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        tempA_address0 =  (sc_lv<5>) (zext_ln362_reg_333.read());
    } else {
        tempA_address0 = "XXXXX";
    }
}

void pi::thread_tempA_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        tempA_ce0 = ap_const_logic_1;
    } else {
        tempA_ce0 = ap_const_logic_0;
    }
}

void pi::thread_tempA_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        tempA_we0 = ap_const_logic_1;
    } else {
        tempA_we0 = ap_const_logic_0;
    }
}

void pi::thread_trunc_ln364_1_fu_280_p1() {
    trunc_ln364_1_fu_280_p1 = grp_fu_266_p2.read().range(3-1, 0);
}

void pi::thread_trunc_ln364_fu_276_p1() {
    trunc_ln364_fu_276_p1 = grp_fu_266_p2.read().range(4-1, 0);
}

void pi::thread_x_5_fu_182_p2() {
    x_5_fu_182_p2 = (!x_1_reg_94.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(x_1_reg_94.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void pi::thread_x_fu_122_p2() {
    x_fu_122_p2 = (!x_0_reg_72.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(x_0_reg_72.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void pi::thread_y_3_fu_214_p2() {
    y_3_fu_214_p2 = (!y_1_reg_105.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(y_1_reg_105.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void pi::thread_y_fu_138_p2() {
    y_fu_138_p2 = (!y_0_reg_83.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(y_0_reg_83.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void pi::thread_zext_ln362_1_fu_128_p1() {
    zext_ln362_1_fu_128_p1 = esl_zext<4,3>(x_0_reg_72.read());
}

void pi::thread_zext_ln362_2_fu_144_p1() {
    zext_ln362_2_fu_144_p1 = esl_zext<4,3>(y_0_reg_83.read());
}

void pi::thread_zext_ln362_3_fu_161_p1() {
    zext_ln362_3_fu_161_p1 = esl_zext<5,4>(add_ln362_1_fu_156_p2.read());
}

void pi::thread_zext_ln362_fu_171_p1() {
    zext_ln362_fu_171_p1 = esl_zext<64,5>(add_ln362_fu_165_p2.read());
}

void pi::thread_zext_ln363_fu_204_p1() {
    zext_ln363_fu_204_p1 = esl_zext<6,3>(y_1_reg_105.read());
}

void pi::thread_zext_ln364_1_fu_307_p1() {
    zext_ln364_1_fu_307_p1 = esl_zext<64,5>(add_ln364_2_fu_301_p2.read());
}

void pi::thread_zext_ln364_2_fu_188_p1() {
    zext_ln364_2_fu_188_p1 = esl_zext<4,3>(x_1_reg_94.read());
}

void pi::thread_zext_ln364_3_fu_200_p1() {
    zext_ln364_3_fu_200_p1 = esl_zext<8,4>(shl_ln_fu_192_p3.read());
}

void pi::thread_zext_ln364_4_fu_220_p1() {
    zext_ln364_4_fu_220_p1 = esl_zext<4,3>(y_1_reg_105.read());
}

void pi::thread_zext_ln364_5_fu_237_p1() {
    zext_ln364_5_fu_237_p1 = esl_zext<5,4>(add_ln364_3_fu_232_p2.read());
}

void pi::thread_zext_ln364_6_fu_247_p1() {
    zext_ln364_6_fu_247_p1 = esl_zext<6,5>(shl_ln364_1_fu_224_p3.read());
}

void pi::thread_zext_ln364_7_fu_297_p1() {
    zext_ln364_7_fu_297_p1 = esl_zext<5,4>(add_ln364_4_fu_292_p2.read());
}

void pi::thread_zext_ln364_fu_272_p1() {
    zext_ln364_fu_272_p1 = esl_zext<64,5>(add_ln364_reg_374.read());
}

void pi::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln361_fu_116_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln361_1_fu_132_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(icmp_ln363_fu_176_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(icmp_ln363_1_fu_208_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<17>) ("XXXXXXXXXXXXXXXXX");
            break;
    }
}

}

