// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "picnic_verify.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic picnic_verify::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic picnic_verify::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<9> picnic_verify::ap_ST_fsm_state1 = "1";
const sc_lv<9> picnic_verify::ap_ST_fsm_state2 = "10";
const sc_lv<9> picnic_verify::ap_ST_fsm_state3 = "100";
const sc_lv<9> picnic_verify::ap_ST_fsm_state4 = "1000";
const sc_lv<9> picnic_verify::ap_ST_fsm_state5 = "10000";
const sc_lv<9> picnic_verify::ap_ST_fsm_state6 = "100000";
const sc_lv<9> picnic_verify::ap_ST_fsm_state7 = "1000000";
const sc_lv<9> picnic_verify::ap_ST_fsm_state8 = "10000000";
const sc_lv<9> picnic_verify::ap_ST_fsm_state9 = "100000000";
const sc_lv<32> picnic_verify::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> picnic_verify::ap_const_lv32_1 = "1";
const sc_lv<32> picnic_verify::ap_const_lv32_2 = "10";
const sc_lv<32> picnic_verify::ap_const_lv32_3 = "11";
const sc_lv<32> picnic_verify::ap_const_lv32_4 = "100";
const sc_lv<1> picnic_verify::ap_const_lv1_0 = "0";
const sc_lv<32> picnic_verify::ap_const_lv32_5 = "101";
const sc_lv<32> picnic_verify::ap_const_lv32_7 = "111";
const sc_lv<3> picnic_verify::ap_const_lv3_0 = "000";
const sc_lv<1> picnic_verify::ap_const_lv1_1 = "1";
const sc_lv<32> picnic_verify::ap_const_lv32_6 = "110";
const sc_lv<6> picnic_verify::ap_const_lv6_0 = "000000";
const sc_lv<4> picnic_verify::ap_const_lv4_2 = "10";
const sc_lv<4> picnic_verify::ap_const_lv4_4 = "100";
const sc_lv<4> picnic_verify::ap_const_lv4_6 = "110";
const sc_lv<4> picnic_verify::ap_const_lv4_1 = "1";
const sc_lv<4> picnic_verify::ap_const_lv4_3 = "11";
const sc_lv<4> picnic_verify::ap_const_lv4_5 = "101";
const sc_lv<4> picnic_verify::ap_const_lv4_7 = "111";
const sc_lv<4> picnic_verify::ap_const_lv4_8 = "1000";
const sc_lv<4> picnic_verify::ap_const_lv4_9 = "1001";
const sc_lv<2> picnic_verify::ap_const_lv2_0 = "00";
const sc_lv<2> picnic_verify::ap_const_lv2_1 = "1";
const sc_lv<2> picnic_verify::ap_const_lv2_3 = "11";
const sc_lv<7> picnic_verify::ap_const_lv7_5B = "1011011";
const sc_lv<7> picnic_verify::ap_const_lv7_0 = "0000000";
const sc_lv<3> picnic_verify::ap_const_lv3_1 = "1";
const sc_lv<3> picnic_verify::ap_const_lv3_7 = "111";
const sc_lv<5> picnic_verify::ap_const_lv5_1 = "1";
const sc_lv<6> picnic_verify::ap_const_lv6_4 = "100";
const sc_lv<5> picnic_verify::ap_const_lv5_2 = "10";
const sc_lv<5> picnic_verify::ap_const_lv5_3 = "11";
const sc_lv<32> picnic_verify::ap_const_lv32_8 = "1000";
const bool picnic_verify::ap_const_boolean_1 = true;

picnic_verify::picnic_verify(sc_module_name name) : sc_module(name), mVcdFile(0) {
    sig_0_proofs_seed1_U = new picnic_verify_sigCeG("sig_0_proofs_seed1_U");
    sig_0_proofs_seed1_U->clk(ap_clk);
    sig_0_proofs_seed1_U->reset(ap_rst);
    sig_0_proofs_seed1_U->address0(sig_0_proofs_seed1_address0);
    sig_0_proofs_seed1_U->ce0(sig_0_proofs_seed1_ce0);
    sig_0_proofs_seed1_U->we0(sig_0_proofs_seed1_we0);
    sig_0_proofs_seed1_U->d0(grp_deserializeSignature_fu_364_sig_0_proofs_seed1_d0);
    sig_0_proofs_seed1_U->q0(sig_0_proofs_seed1_q0);
    sig_0_proofs_seed2_U = new picnic_verify_sigCeG("sig_0_proofs_seed2_U");
    sig_0_proofs_seed2_U->clk(ap_clk);
    sig_0_proofs_seed2_U->reset(ap_rst);
    sig_0_proofs_seed2_U->address0(sig_0_proofs_seed2_address0);
    sig_0_proofs_seed2_U->ce0(sig_0_proofs_seed2_ce0);
    sig_0_proofs_seed2_U->we0(sig_0_proofs_seed2_we0);
    sig_0_proofs_seed2_U->d0(grp_deserializeSignature_fu_364_sig_0_proofs_seed2_d0);
    sig_0_proofs_seed2_U->q0(sig_0_proofs_seed2_q0);
    sig_0_proofs_inputS_U = new picnic_verify_sigEe0("sig_0_proofs_inputS_U");
    sig_0_proofs_inputS_U->clk(ap_clk);
    sig_0_proofs_inputS_U->reset(ap_rst);
    sig_0_proofs_inputS_U->address0(sig_0_proofs_inputS_address0);
    sig_0_proofs_inputS_U->ce0(sig_0_proofs_inputS_ce0);
    sig_0_proofs_inputS_U->we0(sig_0_proofs_inputS_we0);
    sig_0_proofs_inputS_U->d0(grp_deserializeSignature_fu_364_sig_0_proofs_inputS_d0);
    sig_0_proofs_inputS_U->q0(sig_0_proofs_inputS_q0);
    sig_0_proofs_commun_U = new picnic_verify_sigFfa("sig_0_proofs_commun_U");
    sig_0_proofs_commun_U->clk(ap_clk);
    sig_0_proofs_commun_U->reset(ap_rst);
    sig_0_proofs_commun_U->address0(sig_0_proofs_commun_address0);
    sig_0_proofs_commun_U->ce0(sig_0_proofs_commun_ce0);
    sig_0_proofs_commun_U->we0(sig_0_proofs_commun_we0);
    sig_0_proofs_commun_U->d0(grp_deserializeSignature_fu_364_sig_0_proofs_commun_d0);
    sig_0_proofs_commun_U->q0(sig_0_proofs_commun_q0);
    sig_0_proofs_view3C_U = new picnic_verify_sigGfk("sig_0_proofs_view3C_U");
    sig_0_proofs_view3C_U->clk(ap_clk);
    sig_0_proofs_view3C_U->reset(ap_rst);
    sig_0_proofs_view3C_U->address0(sig_0_proofs_view3C_address0);
    sig_0_proofs_view3C_U->ce0(sig_0_proofs_view3C_ce0);
    sig_0_proofs_view3C_U->we0(sig_0_proofs_view3C_we0);
    sig_0_proofs_view3C_U->d0(grp_deserializeSignature_fu_364_sig_0_proofs_view3C_d0);
    sig_0_proofs_view3C_U->q0(sig_0_proofs_view3C_q0);
    sig_0_challengeBits_U = new picnic_verify_sigHfu("sig_0_challengeBits_U");
    sig_0_challengeBits_U->clk(ap_clk);
    sig_0_challengeBits_U->reset(ap_rst);
    sig_0_challengeBits_U->address0(sig_0_challengeBits_address0);
    sig_0_challengeBits_U->ce0(sig_0_challengeBits_ce0);
    sig_0_challengeBits_U->we0(sig_0_challengeBits_we0);
    sig_0_challengeBits_U->d0(grp_deserializeSignature_fu_364_sig_0_challengeBits_d0);
    sig_0_challengeBits_U->q0(sig_0_challengeBits_q0);
    sig_0_challengeBits_U->address1(grp_verify_fu_336_sig_0_challengeBits_address1);
    sig_0_challengeBits_U->ce1(sig_0_challengeBits_ce1);
    sig_0_challengeBits_U->q1(sig_0_challengeBits_q1);
    sig_0_salt_U = new H3_2_hash("sig_0_salt_U");
    sig_0_salt_U->clk(ap_clk);
    sig_0_salt_U->reset(ap_rst);
    sig_0_salt_U->address0(sig_0_salt_address0);
    sig_0_salt_U->ce0(sig_0_salt_ce0);
    sig_0_salt_U->we0(sig_0_salt_we0);
    sig_0_salt_U->d0(grp_deserializeSignature_fu_364_sig_0_salt_d0);
    sig_0_salt_U->q0(sig_0_salt_q0);
    temp_U = new picnic_verify_temp("temp_U");
    temp_U->clk(ap_clk);
    temp_U->reset(ap_rst);
    temp_U->address0(temp_address0);
    temp_U->ce0(temp_ce0);
    temp_U->we0(temp_we0);
    temp_U->d0(temp_d0);
    temp_U->q0(temp_q0);
    temp2_U = new picnic_verify_temp("temp2_U");
    temp2_U->clk(ap_clk);
    temp2_U->reset(ap_rst);
    temp2_U->address0(temp2_address0);
    temp2_U->ce0(temp2_ce0);
    temp2_U->we0(temp2_we0);
    temp2_U->d0(temp2_d0);
    temp2_U->q0(temp2_q0);
    grp_verify_fu_336 = new verify("grp_verify_fu_336");
    grp_verify_fu_336->ap_clk(ap_clk);
    grp_verify_fu_336->ap_rst(ap_rst);
    grp_verify_fu_336->ap_start(grp_verify_fu_336_ap_start);
    grp_verify_fu_336->ap_done(grp_verify_fu_336_ap_done);
    grp_verify_fu_336->ap_idle(grp_verify_fu_336_ap_idle);
    grp_verify_fu_336->ap_ready(grp_verify_fu_336_ap_ready);
    grp_verify_fu_336->sig_0_proofs_seed1_address0(grp_verify_fu_336_sig_0_proofs_seed1_address0);
    grp_verify_fu_336->sig_0_proofs_seed1_ce0(grp_verify_fu_336_sig_0_proofs_seed1_ce0);
    grp_verify_fu_336->sig_0_proofs_seed1_q0(sig_0_proofs_seed1_q0);
    grp_verify_fu_336->sig_0_proofs_seed2_address0(grp_verify_fu_336_sig_0_proofs_seed2_address0);
    grp_verify_fu_336->sig_0_proofs_seed2_ce0(grp_verify_fu_336_sig_0_proofs_seed2_ce0);
    grp_verify_fu_336->sig_0_proofs_seed2_q0(sig_0_proofs_seed2_q0);
    grp_verify_fu_336->sig_0_proofs_inputS_address0(grp_verify_fu_336_sig_0_proofs_inputS_address0);
    grp_verify_fu_336->sig_0_proofs_inputS_ce0(grp_verify_fu_336_sig_0_proofs_inputS_ce0);
    grp_verify_fu_336->sig_0_proofs_inputS_q0(sig_0_proofs_inputS_q0);
    grp_verify_fu_336->sig_0_proofs_commun_address0(grp_verify_fu_336_sig_0_proofs_commun_address0);
    grp_verify_fu_336->sig_0_proofs_commun_ce0(grp_verify_fu_336_sig_0_proofs_commun_ce0);
    grp_verify_fu_336->sig_0_proofs_commun_q0(sig_0_proofs_commun_q0);
    grp_verify_fu_336->sig_0_proofs_view3C_address0(grp_verify_fu_336_sig_0_proofs_view3C_address0);
    grp_verify_fu_336->sig_0_proofs_view3C_ce0(grp_verify_fu_336_sig_0_proofs_view3C_ce0);
    grp_verify_fu_336->sig_0_proofs_view3C_q0(sig_0_proofs_view3C_q0);
    grp_verify_fu_336->sig_0_challengeBits_address0(grp_verify_fu_336_sig_0_challengeBits_address0);
    grp_verify_fu_336->sig_0_challengeBits_ce0(grp_verify_fu_336_sig_0_challengeBits_ce0);
    grp_verify_fu_336->sig_0_challengeBits_q0(sig_0_challengeBits_q0);
    grp_verify_fu_336->sig_0_challengeBits_address1(grp_verify_fu_336_sig_0_challengeBits_address1);
    grp_verify_fu_336->sig_0_challengeBits_ce1(grp_verify_fu_336_sig_0_challengeBits_ce1);
    grp_verify_fu_336->sig_0_challengeBits_q1(sig_0_challengeBits_q1);
    grp_verify_fu_336->sig_0_salt_address0(grp_verify_fu_336_sig_0_salt_address0);
    grp_verify_fu_336->sig_0_salt_ce0(grp_verify_fu_336_sig_0_salt_ce0);
    grp_verify_fu_336->sig_0_salt_q0(sig_0_salt_q0);
    grp_verify_fu_336->pubKey_address0(grp_verify_fu_336_pubKey_address0);
    grp_verify_fu_336->pubKey_ce0(grp_verify_fu_336_pubKey_ce0);
    grp_verify_fu_336->pubKey_q0(temp_q0);
    grp_verify_fu_336->plaintext_address0(grp_verify_fu_336_plaintext_address0);
    grp_verify_fu_336->plaintext_ce0(grp_verify_fu_336_plaintext_ce0);
    grp_verify_fu_336->plaintext_q0(temp2_q0);
    grp_verify_fu_336->message_address0(grp_verify_fu_336_message_address0);
    grp_verify_fu_336->message_ce0(grp_verify_fu_336_message_ce0);
    grp_verify_fu_336->message_q0(message_q0);
    grp_verify_fu_336->messageByteLength(message_len);
    grp_verify_fu_336->viewOutputs_address0(grp_verify_fu_336_viewOutputs_address0);
    grp_verify_fu_336->viewOutputs_ce0(grp_verify_fu_336_viewOutputs_ce0);
    grp_verify_fu_336->viewOutputs_we0(grp_verify_fu_336_viewOutputs_we0);
    grp_verify_fu_336->viewOutputs_d0(grp_verify_fu_336_viewOutputs_d0);
    grp_verify_fu_336->viewOutputs_q0(viewOutputs_q0);
    grp_verify_fu_336->ap_return(grp_verify_fu_336_ap_return);
    grp_deserializeSignature_fu_364 = new deserializeSignature("grp_deserializeSignature_fu_364");
    grp_deserializeSignature_fu_364->ap_clk(ap_clk);
    grp_deserializeSignature_fu_364->ap_rst(ap_rst);
    grp_deserializeSignature_fu_364->ap_start(grp_deserializeSignature_fu_364_ap_start);
    grp_deserializeSignature_fu_364->ap_done(grp_deserializeSignature_fu_364_ap_done);
    grp_deserializeSignature_fu_364->ap_idle(grp_deserializeSignature_fu_364_ap_idle);
    grp_deserializeSignature_fu_364->ap_ready(grp_deserializeSignature_fu_364_ap_ready);
    grp_deserializeSignature_fu_364->sig_0_proofs_seed1_address0(grp_deserializeSignature_fu_364_sig_0_proofs_seed1_address0);
    grp_deserializeSignature_fu_364->sig_0_proofs_seed1_ce0(grp_deserializeSignature_fu_364_sig_0_proofs_seed1_ce0);
    grp_deserializeSignature_fu_364->sig_0_proofs_seed1_we0(grp_deserializeSignature_fu_364_sig_0_proofs_seed1_we0);
    grp_deserializeSignature_fu_364->sig_0_proofs_seed1_d0(grp_deserializeSignature_fu_364_sig_0_proofs_seed1_d0);
    grp_deserializeSignature_fu_364->sig_0_proofs_seed2_address0(grp_deserializeSignature_fu_364_sig_0_proofs_seed2_address0);
    grp_deserializeSignature_fu_364->sig_0_proofs_seed2_ce0(grp_deserializeSignature_fu_364_sig_0_proofs_seed2_ce0);
    grp_deserializeSignature_fu_364->sig_0_proofs_seed2_we0(grp_deserializeSignature_fu_364_sig_0_proofs_seed2_we0);
    grp_deserializeSignature_fu_364->sig_0_proofs_seed2_d0(grp_deserializeSignature_fu_364_sig_0_proofs_seed2_d0);
    grp_deserializeSignature_fu_364->sig_0_proofs_inputS_address0(grp_deserializeSignature_fu_364_sig_0_proofs_inputS_address0);
    grp_deserializeSignature_fu_364->sig_0_proofs_inputS_ce0(grp_deserializeSignature_fu_364_sig_0_proofs_inputS_ce0);
    grp_deserializeSignature_fu_364->sig_0_proofs_inputS_we0(grp_deserializeSignature_fu_364_sig_0_proofs_inputS_we0);
    grp_deserializeSignature_fu_364->sig_0_proofs_inputS_d0(grp_deserializeSignature_fu_364_sig_0_proofs_inputS_d0);
    grp_deserializeSignature_fu_364->sig_0_proofs_commun_address0(grp_deserializeSignature_fu_364_sig_0_proofs_commun_address0);
    grp_deserializeSignature_fu_364->sig_0_proofs_commun_ce0(grp_deserializeSignature_fu_364_sig_0_proofs_commun_ce0);
    grp_deserializeSignature_fu_364->sig_0_proofs_commun_we0(grp_deserializeSignature_fu_364_sig_0_proofs_commun_we0);
    grp_deserializeSignature_fu_364->sig_0_proofs_commun_d0(grp_deserializeSignature_fu_364_sig_0_proofs_commun_d0);
    grp_deserializeSignature_fu_364->sig_0_proofs_view3C_address0(grp_deserializeSignature_fu_364_sig_0_proofs_view3C_address0);
    grp_deserializeSignature_fu_364->sig_0_proofs_view3C_ce0(grp_deserializeSignature_fu_364_sig_0_proofs_view3C_ce0);
    grp_deserializeSignature_fu_364->sig_0_proofs_view3C_we0(grp_deserializeSignature_fu_364_sig_0_proofs_view3C_we0);
    grp_deserializeSignature_fu_364->sig_0_proofs_view3C_d0(grp_deserializeSignature_fu_364_sig_0_proofs_view3C_d0);
    grp_deserializeSignature_fu_364->sig_0_challengeBits_address0(grp_deserializeSignature_fu_364_sig_0_challengeBits_address0);
    grp_deserializeSignature_fu_364->sig_0_challengeBits_ce0(grp_deserializeSignature_fu_364_sig_0_challengeBits_ce0);
    grp_deserializeSignature_fu_364->sig_0_challengeBits_we0(grp_deserializeSignature_fu_364_sig_0_challengeBits_we0);
    grp_deserializeSignature_fu_364->sig_0_challengeBits_d0(grp_deserializeSignature_fu_364_sig_0_challengeBits_d0);
    grp_deserializeSignature_fu_364->sig_0_challengeBits_q0(sig_0_challengeBits_q0);
    grp_deserializeSignature_fu_364->sig_0_salt_address0(grp_deserializeSignature_fu_364_sig_0_salt_address0);
    grp_deserializeSignature_fu_364->sig_0_salt_ce0(grp_deserializeSignature_fu_364_sig_0_salt_ce0);
    grp_deserializeSignature_fu_364->sig_0_salt_we0(grp_deserializeSignature_fu_364_sig_0_salt_we0);
    grp_deserializeSignature_fu_364->sig_0_salt_d0(grp_deserializeSignature_fu_364_sig_0_salt_d0);
    grp_deserializeSignature_fu_364->sigBytes_address0(grp_deserializeSignature_fu_364_sigBytes_address0);
    grp_deserializeSignature_fu_364->sigBytes_ce0(grp_deserializeSignature_fu_364_sigBytes_ce0);
    grp_deserializeSignature_fu_364->sigBytes_q0(message_q0);
    grp_deserializeSignature_fu_364->sigBytes_address1(grp_deserializeSignature_fu_364_sigBytes_address1);
    grp_deserializeSignature_fu_364->sigBytes_ce1(grp_deserializeSignature_fu_364_sigBytes_ce1);
    grp_deserializeSignature_fu_364->sigBytes_q1(message_q1);
    grp_deserializeSignature_fu_364->sigBytes_offset(signature_offset);
    grp_deserializeSignature_fu_364->sigBytesLen(signature_len);
    grp_deserializeSignature_fu_364->params_UnruhGWithout(paramset_UnruhGWitho_reg_674);
    grp_deserializeSignature_fu_364->params_transform_rea(paramset_transform_reg_669);
    grp_deserializeSignature_fu_364->ap_return(grp_deserializeSignature_fu_364_ap_return);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln466_1_fu_541_p2);
    sensitive << ( phi_ln466_1_reg_303 );

    SC_METHOD(thread_add_ln466_fu_524_p2);
    sensitive << ( phi_ln466_reg_292 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_ap_return);
    sensitive << ( UnifiedRetVal_reg_325 );
    sensitive << ( ap_return_preg );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_grp_deserializeSignature_fu_364_ap_start);
    sensitive << ( grp_deserializeSignature_fu_364_ap_start_reg );

    SC_METHOD(thread_grp_verify_fu_336_ap_start);
    sensitive << ( grp_verify_fu_336_ap_start_reg );

    SC_METHOD(thread_icmp_ln157_fu_509_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( paramset_transform_fu_500_p3 );

    SC_METHOD(thread_icmp_ln33_1_fu_396_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( pk_0_params_read );

    SC_METHOD(thread_icmp_ln33_2_fu_402_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( pk_0_params_read );

    SC_METHOD(thread_icmp_ln33_3_fu_420_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( pk_0_params_read );

    SC_METHOD(thread_icmp_ln33_4_fu_426_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( pk_0_params_read );

    SC_METHOD(thread_icmp_ln33_5_fu_432_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( pk_0_params_read );

    SC_METHOD(thread_icmp_ln33_6_fu_438_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( pk_0_params_read );

    SC_METHOD(thread_icmp_ln33_7_fu_444_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( pk_0_params_read );

    SC_METHOD(thread_icmp_ln33_8_fu_450_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( pk_0_params_read );

    SC_METHOD(thread_icmp_ln33_fu_390_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( pk_0_params_read );

    SC_METHOD(thread_icmp_ln466_1_fu_552_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( phi_ln466_1_reg_303 );

    SC_METHOD(thread_icmp_ln466_fu_535_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( phi_ln466_reg_292 );

    SC_METHOD(thread_icmp_ln475_fu_653_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_verify_fu_336_ap_done );
    sensitive << ( grp_verify_fu_336_ap_return );

    SC_METHOD(thread_loop_fu_598_p2);
    sensitive << ( loop_0_reg_314 );

    SC_METHOD(thread_message_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_verify_fu_336_message_address0 );
    sensitive << ( grp_deserializeSignature_fu_364_sigBytes_address0 );

    SC_METHOD(thread_message_address1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_deserializeSignature_fu_364_sigBytes_address1 );

    SC_METHOD(thread_message_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_verify_fu_336_message_ce0 );
    sensitive << ( grp_deserializeSignature_fu_364_sigBytes_ce0 );

    SC_METHOD(thread_message_ce1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_deserializeSignature_fu_364_sigBytes_ce1 );

    SC_METHOD(thread_or_ln33_1_fu_414_p2);
    sensitive << ( or_ln33_fu_408_p2 );
    sensitive << ( icmp_ln33_fu_390_p2 );

    SC_METHOD(thread_or_ln33_2_fu_456_p2);
    sensitive << ( icmp_ln33_4_fu_426_p2 );
    sensitive << ( icmp_ln33_5_fu_432_p2 );

    SC_METHOD(thread_or_ln33_3_fu_462_p2);
    sensitive << ( or_ln33_2_fu_456_p2 );
    sensitive << ( icmp_ln33_3_fu_420_p2 );

    SC_METHOD(thread_or_ln33_4_fu_468_p2);
    sensitive << ( icmp_ln33_7_fu_444_p2 );
    sensitive << ( icmp_ln33_8_fu_450_p2 );

    SC_METHOD(thread_or_ln33_5_fu_474_p2);
    sensitive << ( or_ln33_4_fu_468_p2 );
    sensitive << ( icmp_ln33_6_fu_438_p2 );

    SC_METHOD(thread_or_ln33_6_fu_480_p2);
    sensitive << ( or_ln33_5_fu_474_p2 );
    sensitive << ( or_ln33_3_fu_462_p2 );

    SC_METHOD(thread_or_ln33_7_fu_494_p2);
    sensitive << ( or_ln33_6_fu_480_p2 );
    sensitive << ( or_ln33_1_fu_414_p2 );

    SC_METHOD(thread_or_ln33_fu_408_p2);
    sensitive << ( icmp_ln33_1_fu_396_p2 );
    sensitive << ( icmp_ln33_2_fu_402_p2 );

    SC_METHOD(thread_or_ln468_1_fu_604_p2);
    sensitive << ( trunc_ln467_reg_711 );

    SC_METHOD(thread_or_ln468_2_fu_615_p2);
    sensitive << ( trunc_ln467_reg_711 );

    SC_METHOD(thread_or_ln468_5_fu_626_p5);
    sensitive << ( pk_0_ciphertext_q0 );
    sensitive << ( pk_0_ciphertext_q1 );
    sensitive << ( pk_0_ciphertext_loa_reg_742 );
    sensitive << ( pk_0_ciphertext_loa_1_reg_747 );

    SC_METHOD(thread_or_ln468_fu_576_p2);
    sensitive << ( trunc_ln467_fu_572_p1 );

    SC_METHOD(thread_or_ln469_2_fu_642_p5);
    sensitive << ( pk_0_plaintext_q0 );
    sensitive << ( pk_0_plaintext_q1 );
    sensitive << ( pk_0_plaintext_load_reg_762 );
    sensitive << ( pk_0_plaintext_load_1_reg_767 );

    SC_METHOD(thread_paramset_UnruhGWitho_fu_515_p3);
    sensitive << ( icmp_ln157_fu_509_p2 );

    SC_METHOD(thread_paramset_transform_fu_500_p3);
    sensitive << ( or_ln33_7_fu_494_p2 );
    sensitive << ( select_ln33_fu_486_p3 );

    SC_METHOD(thread_pk_0_ciphertext_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln468_fu_566_p1 );
    sensitive << ( zext_ln468_2_fu_609_p1 );

    SC_METHOD(thread_pk_0_ciphertext_address1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln468_1_fu_582_p1 );
    sensitive << ( zext_ln468_3_fu_620_p1 );

    SC_METHOD(thread_pk_0_ciphertext_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_pk_0_ciphertext_ce1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_pk_0_plaintext_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln468_fu_566_p1 );
    sensitive << ( zext_ln468_2_fu_609_p1 );

    SC_METHOD(thread_pk_0_plaintext_address1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln468_1_fu_582_p1 );
    sensitive << ( zext_ln468_3_fu_620_p1 );

    SC_METHOD(thread_pk_0_plaintext_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_pk_0_plaintext_ce1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_select_ln33_fu_486_p3);
    sensitive << ( or_ln33_6_fu_480_p2 );

    SC_METHOD(thread_sig_0_challengeBits_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_verify_fu_336_sig_0_challengeBits_address0 );
    sensitive << ( grp_deserializeSignature_fu_364_sig_0_challengeBits_address0 );

    SC_METHOD(thread_sig_0_challengeBits_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_verify_fu_336_sig_0_challengeBits_ce0 );
    sensitive << ( grp_deserializeSignature_fu_364_sig_0_challengeBits_ce0 );

    SC_METHOD(thread_sig_0_challengeBits_ce1);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_verify_fu_336_sig_0_challengeBits_ce1 );

    SC_METHOD(thread_sig_0_challengeBits_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_deserializeSignature_fu_364_sig_0_challengeBits_we0 );

    SC_METHOD(thread_sig_0_proofs_commun_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_verify_fu_336_sig_0_proofs_commun_address0 );
    sensitive << ( grp_deserializeSignature_fu_364_sig_0_proofs_commun_address0 );

    SC_METHOD(thread_sig_0_proofs_commun_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_verify_fu_336_sig_0_proofs_commun_ce0 );
    sensitive << ( grp_deserializeSignature_fu_364_sig_0_proofs_commun_ce0 );

    SC_METHOD(thread_sig_0_proofs_commun_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_deserializeSignature_fu_364_sig_0_proofs_commun_we0 );

    SC_METHOD(thread_sig_0_proofs_inputS_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_verify_fu_336_sig_0_proofs_inputS_address0 );
    sensitive << ( grp_deserializeSignature_fu_364_sig_0_proofs_inputS_address0 );

    SC_METHOD(thread_sig_0_proofs_inputS_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_verify_fu_336_sig_0_proofs_inputS_ce0 );
    sensitive << ( grp_deserializeSignature_fu_364_sig_0_proofs_inputS_ce0 );

    SC_METHOD(thread_sig_0_proofs_inputS_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_deserializeSignature_fu_364_sig_0_proofs_inputS_we0 );

    SC_METHOD(thread_sig_0_proofs_seed1_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_verify_fu_336_sig_0_proofs_seed1_address0 );
    sensitive << ( grp_deserializeSignature_fu_364_sig_0_proofs_seed1_address0 );

    SC_METHOD(thread_sig_0_proofs_seed1_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_verify_fu_336_sig_0_proofs_seed1_ce0 );
    sensitive << ( grp_deserializeSignature_fu_364_sig_0_proofs_seed1_ce0 );

    SC_METHOD(thread_sig_0_proofs_seed1_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_deserializeSignature_fu_364_sig_0_proofs_seed1_we0 );

    SC_METHOD(thread_sig_0_proofs_seed2_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_verify_fu_336_sig_0_proofs_seed2_address0 );
    sensitive << ( grp_deserializeSignature_fu_364_sig_0_proofs_seed2_address0 );

    SC_METHOD(thread_sig_0_proofs_seed2_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_verify_fu_336_sig_0_proofs_seed2_ce0 );
    sensitive << ( grp_deserializeSignature_fu_364_sig_0_proofs_seed2_ce0 );

    SC_METHOD(thread_sig_0_proofs_seed2_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_deserializeSignature_fu_364_sig_0_proofs_seed2_we0 );

    SC_METHOD(thread_sig_0_proofs_view3C_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_verify_fu_336_sig_0_proofs_view3C_address0 );
    sensitive << ( grp_deserializeSignature_fu_364_sig_0_proofs_view3C_address0 );

    SC_METHOD(thread_sig_0_proofs_view3C_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_verify_fu_336_sig_0_proofs_view3C_ce0 );
    sensitive << ( grp_deserializeSignature_fu_364_sig_0_proofs_view3C_ce0 );

    SC_METHOD(thread_sig_0_proofs_view3C_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_deserializeSignature_fu_364_sig_0_proofs_view3C_we0 );

    SC_METHOD(thread_sig_0_salt_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_verify_fu_336_sig_0_salt_address0 );
    sensitive << ( grp_deserializeSignature_fu_364_sig_0_salt_address0 );

    SC_METHOD(thread_sig_0_salt_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_verify_fu_336_sig_0_salt_ce0 );
    sensitive << ( grp_deserializeSignature_fu_364_sig_0_salt_ce0 );

    SC_METHOD(thread_sig_0_salt_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_deserializeSignature_fu_364_sig_0_salt_we0 );

    SC_METHOD(thread_temp2_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_verify_fu_336_plaintext_address0 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( zext_ln466_1_fu_547_p1 );
    sensitive << ( zext_ln468_4_fu_637_p1 );

    SC_METHOD(thread_temp2_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_verify_fu_336_plaintext_ce0 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_temp2_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( or_ln469_2_fu_642_p5 );

    SC_METHOD(thread_temp2_we0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_temp_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_verify_fu_336_pubKey_address0 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( zext_ln466_fu_530_p1 );
    sensitive << ( zext_ln468_4_fu_637_p1 );

    SC_METHOD(thread_temp_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_verify_fu_336_pubKey_ce0 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_temp_d0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( or_ln468_5_fu_626_p5 );

    SC_METHOD(thread_temp_we0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_tmp_fu_558_p3);
    sensitive << ( loop_0_reg_314 );

    SC_METHOD(thread_trunc_ln467_fu_572_p1);
    sensitive << ( loop_0_reg_314 );

    SC_METHOD(thread_viewOutputs_address0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_verify_fu_336_viewOutputs_address0 );

    SC_METHOD(thread_viewOutputs_ce0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_verify_fu_336_viewOutputs_ce0 );

    SC_METHOD(thread_viewOutputs_d0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_verify_fu_336_viewOutputs_d0 );

    SC_METHOD(thread_viewOutputs_we0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_verify_fu_336_viewOutputs_we0 );

    SC_METHOD(thread_zext_ln466_1_fu_547_p1);
    sensitive << ( phi_ln466_1_reg_303 );

    SC_METHOD(thread_zext_ln466_fu_530_p1);
    sensitive << ( phi_ln466_reg_292 );

    SC_METHOD(thread_zext_ln468_1_fu_582_p1);
    sensitive << ( or_ln468_fu_576_p2 );

    SC_METHOD(thread_zext_ln468_2_fu_609_p1);
    sensitive << ( or_ln468_1_fu_604_p2 );

    SC_METHOD(thread_zext_ln468_3_fu_620_p1);
    sensitive << ( or_ln468_2_fu_615_p2 );

    SC_METHOD(thread_zext_ln468_4_fu_637_p1);
    sensitive << ( trunc_ln468_1_reg_722 );

    SC_METHOD(thread_zext_ln468_fu_566_p1);
    sensitive << ( loop_0_reg_314 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_deserializeSignature_fu_364_ap_done );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_fu_558_p3 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_verify_fu_336_ap_done );
    sensitive << ( grp_deserializeSignature_fu_364_ap_return );
    sensitive << ( icmp_ln466_fu_535_p2 );
    sensitive << ( icmp_ln466_1_fu_552_p2 );

    ap_CS_fsm = "000000001";
    grp_verify_fu_336_ap_start_reg = SC_LOGIC_0;
    grp_deserializeSignature_fu_364_ap_start_reg = SC_LOGIC_0;
    ap_return_preg = "0";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "picnic_verify_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, pk_0_params_read, "(port)pk_0_params_read");
    sc_trace(mVcdFile, pk_0_plaintext_address0, "(port)pk_0_plaintext_address0");
    sc_trace(mVcdFile, pk_0_plaintext_ce0, "(port)pk_0_plaintext_ce0");
    sc_trace(mVcdFile, pk_0_plaintext_q0, "(port)pk_0_plaintext_q0");
    sc_trace(mVcdFile, pk_0_plaintext_address1, "(port)pk_0_plaintext_address1");
    sc_trace(mVcdFile, pk_0_plaintext_ce1, "(port)pk_0_plaintext_ce1");
    sc_trace(mVcdFile, pk_0_plaintext_q1, "(port)pk_0_plaintext_q1");
    sc_trace(mVcdFile, pk_0_ciphertext_address0, "(port)pk_0_ciphertext_address0");
    sc_trace(mVcdFile, pk_0_ciphertext_ce0, "(port)pk_0_ciphertext_ce0");
    sc_trace(mVcdFile, pk_0_ciphertext_q0, "(port)pk_0_ciphertext_q0");
    sc_trace(mVcdFile, pk_0_ciphertext_address1, "(port)pk_0_ciphertext_address1");
    sc_trace(mVcdFile, pk_0_ciphertext_ce1, "(port)pk_0_ciphertext_ce1");
    sc_trace(mVcdFile, pk_0_ciphertext_q1, "(port)pk_0_ciphertext_q1");
    sc_trace(mVcdFile, message_address0, "(port)message_address0");
    sc_trace(mVcdFile, message_ce0, "(port)message_ce0");
    sc_trace(mVcdFile, message_q0, "(port)message_q0");
    sc_trace(mVcdFile, message_address1, "(port)message_address1");
    sc_trace(mVcdFile, message_ce1, "(port)message_ce1");
    sc_trace(mVcdFile, message_q1, "(port)message_q1");
    sc_trace(mVcdFile, message_len, "(port)message_len");
    sc_trace(mVcdFile, signature_offset, "(port)signature_offset");
    sc_trace(mVcdFile, signature_len, "(port)signature_len");
    sc_trace(mVcdFile, viewOutputs_address0, "(port)viewOutputs_address0");
    sc_trace(mVcdFile, viewOutputs_ce0, "(port)viewOutputs_ce0");
    sc_trace(mVcdFile, viewOutputs_we0, "(port)viewOutputs_we0");
    sc_trace(mVcdFile, viewOutputs_d0, "(port)viewOutputs_d0");
    sc_trace(mVcdFile, viewOutputs_q0, "(port)viewOutputs_q0");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, paramset_transform_fu_500_p3, "paramset_transform_fu_500_p3");
    sc_trace(mVcdFile, paramset_transform_reg_669, "paramset_transform_reg_669");
    sc_trace(mVcdFile, paramset_UnruhGWitho_fu_515_p3, "paramset_UnruhGWitho_fu_515_p3");
    sc_trace(mVcdFile, paramset_UnruhGWitho_reg_674, "paramset_UnruhGWitho_reg_674");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, grp_deserializeSignature_fu_364_ap_ready, "grp_deserializeSignature_fu_364_ap_ready");
    sc_trace(mVcdFile, grp_deserializeSignature_fu_364_ap_done, "grp_deserializeSignature_fu_364_ap_done");
    sc_trace(mVcdFile, add_ln466_fu_524_p2, "add_ln466_fu_524_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, add_ln466_1_fu_541_p2, "add_ln466_1_fu_541_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_fu_558_p3, "tmp_fu_558_p3");
    sc_trace(mVcdFile, trunc_ln467_fu_572_p1, "trunc_ln467_fu_572_p1");
    sc_trace(mVcdFile, trunc_ln467_reg_711, "trunc_ln467_reg_711");
    sc_trace(mVcdFile, trunc_ln468_1_reg_722, "trunc_ln468_1_reg_722");
    sc_trace(mVcdFile, loop_fu_598_p2, "loop_fu_598_p2");
    sc_trace(mVcdFile, loop_reg_737, "loop_reg_737");
    sc_trace(mVcdFile, pk_0_ciphertext_loa_reg_742, "pk_0_ciphertext_loa_reg_742");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, pk_0_ciphertext_loa_1_reg_747, "pk_0_ciphertext_loa_1_reg_747");
    sc_trace(mVcdFile, pk_0_plaintext_load_reg_762, "pk_0_plaintext_load_reg_762");
    sc_trace(mVcdFile, pk_0_plaintext_load_1_reg_767, "pk_0_plaintext_load_1_reg_767");
    sc_trace(mVcdFile, icmp_ln475_fu_653_p2, "icmp_ln475_fu_653_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, grp_verify_fu_336_ap_ready, "grp_verify_fu_336_ap_ready");
    sc_trace(mVcdFile, grp_verify_fu_336_ap_done, "grp_verify_fu_336_ap_done");
    sc_trace(mVcdFile, sig_0_proofs_seed1_address0, "sig_0_proofs_seed1_address0");
    sc_trace(mVcdFile, sig_0_proofs_seed1_ce0, "sig_0_proofs_seed1_ce0");
    sc_trace(mVcdFile, sig_0_proofs_seed1_we0, "sig_0_proofs_seed1_we0");
    sc_trace(mVcdFile, sig_0_proofs_seed1_q0, "sig_0_proofs_seed1_q0");
    sc_trace(mVcdFile, sig_0_proofs_seed2_address0, "sig_0_proofs_seed2_address0");
    sc_trace(mVcdFile, sig_0_proofs_seed2_ce0, "sig_0_proofs_seed2_ce0");
    sc_trace(mVcdFile, sig_0_proofs_seed2_we0, "sig_0_proofs_seed2_we0");
    sc_trace(mVcdFile, sig_0_proofs_seed2_q0, "sig_0_proofs_seed2_q0");
    sc_trace(mVcdFile, sig_0_proofs_inputS_address0, "sig_0_proofs_inputS_address0");
    sc_trace(mVcdFile, sig_0_proofs_inputS_ce0, "sig_0_proofs_inputS_ce0");
    sc_trace(mVcdFile, sig_0_proofs_inputS_we0, "sig_0_proofs_inputS_we0");
    sc_trace(mVcdFile, sig_0_proofs_inputS_q0, "sig_0_proofs_inputS_q0");
    sc_trace(mVcdFile, sig_0_proofs_commun_address0, "sig_0_proofs_commun_address0");
    sc_trace(mVcdFile, sig_0_proofs_commun_ce0, "sig_0_proofs_commun_ce0");
    sc_trace(mVcdFile, sig_0_proofs_commun_we0, "sig_0_proofs_commun_we0");
    sc_trace(mVcdFile, sig_0_proofs_commun_q0, "sig_0_proofs_commun_q0");
    sc_trace(mVcdFile, sig_0_proofs_view3C_address0, "sig_0_proofs_view3C_address0");
    sc_trace(mVcdFile, sig_0_proofs_view3C_ce0, "sig_0_proofs_view3C_ce0");
    sc_trace(mVcdFile, sig_0_proofs_view3C_we0, "sig_0_proofs_view3C_we0");
    sc_trace(mVcdFile, sig_0_proofs_view3C_q0, "sig_0_proofs_view3C_q0");
    sc_trace(mVcdFile, sig_0_challengeBits_address0, "sig_0_challengeBits_address0");
    sc_trace(mVcdFile, sig_0_challengeBits_ce0, "sig_0_challengeBits_ce0");
    sc_trace(mVcdFile, sig_0_challengeBits_we0, "sig_0_challengeBits_we0");
    sc_trace(mVcdFile, sig_0_challengeBits_q0, "sig_0_challengeBits_q0");
    sc_trace(mVcdFile, sig_0_challengeBits_ce1, "sig_0_challengeBits_ce1");
    sc_trace(mVcdFile, sig_0_challengeBits_q1, "sig_0_challengeBits_q1");
    sc_trace(mVcdFile, sig_0_salt_address0, "sig_0_salt_address0");
    sc_trace(mVcdFile, sig_0_salt_ce0, "sig_0_salt_ce0");
    sc_trace(mVcdFile, sig_0_salt_we0, "sig_0_salt_we0");
    sc_trace(mVcdFile, sig_0_salt_q0, "sig_0_salt_q0");
    sc_trace(mVcdFile, temp_address0, "temp_address0");
    sc_trace(mVcdFile, temp_ce0, "temp_ce0");
    sc_trace(mVcdFile, temp_we0, "temp_we0");
    sc_trace(mVcdFile, temp_d0, "temp_d0");
    sc_trace(mVcdFile, temp_q0, "temp_q0");
    sc_trace(mVcdFile, temp2_address0, "temp2_address0");
    sc_trace(mVcdFile, temp2_ce0, "temp2_ce0");
    sc_trace(mVcdFile, temp2_we0, "temp2_we0");
    sc_trace(mVcdFile, temp2_d0, "temp2_d0");
    sc_trace(mVcdFile, temp2_q0, "temp2_q0");
    sc_trace(mVcdFile, grp_verify_fu_336_ap_start, "grp_verify_fu_336_ap_start");
    sc_trace(mVcdFile, grp_verify_fu_336_ap_idle, "grp_verify_fu_336_ap_idle");
    sc_trace(mVcdFile, grp_verify_fu_336_sig_0_proofs_seed1_address0, "grp_verify_fu_336_sig_0_proofs_seed1_address0");
    sc_trace(mVcdFile, grp_verify_fu_336_sig_0_proofs_seed1_ce0, "grp_verify_fu_336_sig_0_proofs_seed1_ce0");
    sc_trace(mVcdFile, grp_verify_fu_336_sig_0_proofs_seed2_address0, "grp_verify_fu_336_sig_0_proofs_seed2_address0");
    sc_trace(mVcdFile, grp_verify_fu_336_sig_0_proofs_seed2_ce0, "grp_verify_fu_336_sig_0_proofs_seed2_ce0");
    sc_trace(mVcdFile, grp_verify_fu_336_sig_0_proofs_inputS_address0, "grp_verify_fu_336_sig_0_proofs_inputS_address0");
    sc_trace(mVcdFile, grp_verify_fu_336_sig_0_proofs_inputS_ce0, "grp_verify_fu_336_sig_0_proofs_inputS_ce0");
    sc_trace(mVcdFile, grp_verify_fu_336_sig_0_proofs_commun_address0, "grp_verify_fu_336_sig_0_proofs_commun_address0");
    sc_trace(mVcdFile, grp_verify_fu_336_sig_0_proofs_commun_ce0, "grp_verify_fu_336_sig_0_proofs_commun_ce0");
    sc_trace(mVcdFile, grp_verify_fu_336_sig_0_proofs_view3C_address0, "grp_verify_fu_336_sig_0_proofs_view3C_address0");
    sc_trace(mVcdFile, grp_verify_fu_336_sig_0_proofs_view3C_ce0, "grp_verify_fu_336_sig_0_proofs_view3C_ce0");
    sc_trace(mVcdFile, grp_verify_fu_336_sig_0_challengeBits_address0, "grp_verify_fu_336_sig_0_challengeBits_address0");
    sc_trace(mVcdFile, grp_verify_fu_336_sig_0_challengeBits_ce0, "grp_verify_fu_336_sig_0_challengeBits_ce0");
    sc_trace(mVcdFile, grp_verify_fu_336_sig_0_challengeBits_address1, "grp_verify_fu_336_sig_0_challengeBits_address1");
    sc_trace(mVcdFile, grp_verify_fu_336_sig_0_challengeBits_ce1, "grp_verify_fu_336_sig_0_challengeBits_ce1");
    sc_trace(mVcdFile, grp_verify_fu_336_sig_0_salt_address0, "grp_verify_fu_336_sig_0_salt_address0");
    sc_trace(mVcdFile, grp_verify_fu_336_sig_0_salt_ce0, "grp_verify_fu_336_sig_0_salt_ce0");
    sc_trace(mVcdFile, grp_verify_fu_336_pubKey_address0, "grp_verify_fu_336_pubKey_address0");
    sc_trace(mVcdFile, grp_verify_fu_336_pubKey_ce0, "grp_verify_fu_336_pubKey_ce0");
    sc_trace(mVcdFile, grp_verify_fu_336_plaintext_address0, "grp_verify_fu_336_plaintext_address0");
    sc_trace(mVcdFile, grp_verify_fu_336_plaintext_ce0, "grp_verify_fu_336_plaintext_ce0");
    sc_trace(mVcdFile, grp_verify_fu_336_message_address0, "grp_verify_fu_336_message_address0");
    sc_trace(mVcdFile, grp_verify_fu_336_message_ce0, "grp_verify_fu_336_message_ce0");
    sc_trace(mVcdFile, grp_verify_fu_336_viewOutputs_address0, "grp_verify_fu_336_viewOutputs_address0");
    sc_trace(mVcdFile, grp_verify_fu_336_viewOutputs_ce0, "grp_verify_fu_336_viewOutputs_ce0");
    sc_trace(mVcdFile, grp_verify_fu_336_viewOutputs_we0, "grp_verify_fu_336_viewOutputs_we0");
    sc_trace(mVcdFile, grp_verify_fu_336_viewOutputs_d0, "grp_verify_fu_336_viewOutputs_d0");
    sc_trace(mVcdFile, grp_verify_fu_336_ap_return, "grp_verify_fu_336_ap_return");
    sc_trace(mVcdFile, grp_deserializeSignature_fu_364_ap_start, "grp_deserializeSignature_fu_364_ap_start");
    sc_trace(mVcdFile, grp_deserializeSignature_fu_364_ap_idle, "grp_deserializeSignature_fu_364_ap_idle");
    sc_trace(mVcdFile, grp_deserializeSignature_fu_364_sig_0_proofs_seed1_address0, "grp_deserializeSignature_fu_364_sig_0_proofs_seed1_address0");
    sc_trace(mVcdFile, grp_deserializeSignature_fu_364_sig_0_proofs_seed1_ce0, "grp_deserializeSignature_fu_364_sig_0_proofs_seed1_ce0");
    sc_trace(mVcdFile, grp_deserializeSignature_fu_364_sig_0_proofs_seed1_we0, "grp_deserializeSignature_fu_364_sig_0_proofs_seed1_we0");
    sc_trace(mVcdFile, grp_deserializeSignature_fu_364_sig_0_proofs_seed1_d0, "grp_deserializeSignature_fu_364_sig_0_proofs_seed1_d0");
    sc_trace(mVcdFile, grp_deserializeSignature_fu_364_sig_0_proofs_seed2_address0, "grp_deserializeSignature_fu_364_sig_0_proofs_seed2_address0");
    sc_trace(mVcdFile, grp_deserializeSignature_fu_364_sig_0_proofs_seed2_ce0, "grp_deserializeSignature_fu_364_sig_0_proofs_seed2_ce0");
    sc_trace(mVcdFile, grp_deserializeSignature_fu_364_sig_0_proofs_seed2_we0, "grp_deserializeSignature_fu_364_sig_0_proofs_seed2_we0");
    sc_trace(mVcdFile, grp_deserializeSignature_fu_364_sig_0_proofs_seed2_d0, "grp_deserializeSignature_fu_364_sig_0_proofs_seed2_d0");
    sc_trace(mVcdFile, grp_deserializeSignature_fu_364_sig_0_proofs_inputS_address0, "grp_deserializeSignature_fu_364_sig_0_proofs_inputS_address0");
    sc_trace(mVcdFile, grp_deserializeSignature_fu_364_sig_0_proofs_inputS_ce0, "grp_deserializeSignature_fu_364_sig_0_proofs_inputS_ce0");
    sc_trace(mVcdFile, grp_deserializeSignature_fu_364_sig_0_proofs_inputS_we0, "grp_deserializeSignature_fu_364_sig_0_proofs_inputS_we0");
    sc_trace(mVcdFile, grp_deserializeSignature_fu_364_sig_0_proofs_inputS_d0, "grp_deserializeSignature_fu_364_sig_0_proofs_inputS_d0");
    sc_trace(mVcdFile, grp_deserializeSignature_fu_364_sig_0_proofs_commun_address0, "grp_deserializeSignature_fu_364_sig_0_proofs_commun_address0");
    sc_trace(mVcdFile, grp_deserializeSignature_fu_364_sig_0_proofs_commun_ce0, "grp_deserializeSignature_fu_364_sig_0_proofs_commun_ce0");
    sc_trace(mVcdFile, grp_deserializeSignature_fu_364_sig_0_proofs_commun_we0, "grp_deserializeSignature_fu_364_sig_0_proofs_commun_we0");
    sc_trace(mVcdFile, grp_deserializeSignature_fu_364_sig_0_proofs_commun_d0, "grp_deserializeSignature_fu_364_sig_0_proofs_commun_d0");
    sc_trace(mVcdFile, grp_deserializeSignature_fu_364_sig_0_proofs_view3C_address0, "grp_deserializeSignature_fu_364_sig_0_proofs_view3C_address0");
    sc_trace(mVcdFile, grp_deserializeSignature_fu_364_sig_0_proofs_view3C_ce0, "grp_deserializeSignature_fu_364_sig_0_proofs_view3C_ce0");
    sc_trace(mVcdFile, grp_deserializeSignature_fu_364_sig_0_proofs_view3C_we0, "grp_deserializeSignature_fu_364_sig_0_proofs_view3C_we0");
    sc_trace(mVcdFile, grp_deserializeSignature_fu_364_sig_0_proofs_view3C_d0, "grp_deserializeSignature_fu_364_sig_0_proofs_view3C_d0");
    sc_trace(mVcdFile, grp_deserializeSignature_fu_364_sig_0_challengeBits_address0, "grp_deserializeSignature_fu_364_sig_0_challengeBits_address0");
    sc_trace(mVcdFile, grp_deserializeSignature_fu_364_sig_0_challengeBits_ce0, "grp_deserializeSignature_fu_364_sig_0_challengeBits_ce0");
    sc_trace(mVcdFile, grp_deserializeSignature_fu_364_sig_0_challengeBits_we0, "grp_deserializeSignature_fu_364_sig_0_challengeBits_we0");
    sc_trace(mVcdFile, grp_deserializeSignature_fu_364_sig_0_challengeBits_d0, "grp_deserializeSignature_fu_364_sig_0_challengeBits_d0");
    sc_trace(mVcdFile, grp_deserializeSignature_fu_364_sig_0_salt_address0, "grp_deserializeSignature_fu_364_sig_0_salt_address0");
    sc_trace(mVcdFile, grp_deserializeSignature_fu_364_sig_0_salt_ce0, "grp_deserializeSignature_fu_364_sig_0_salt_ce0");
    sc_trace(mVcdFile, grp_deserializeSignature_fu_364_sig_0_salt_we0, "grp_deserializeSignature_fu_364_sig_0_salt_we0");
    sc_trace(mVcdFile, grp_deserializeSignature_fu_364_sig_0_salt_d0, "grp_deserializeSignature_fu_364_sig_0_salt_d0");
    sc_trace(mVcdFile, grp_deserializeSignature_fu_364_sigBytes_address0, "grp_deserializeSignature_fu_364_sigBytes_address0");
    sc_trace(mVcdFile, grp_deserializeSignature_fu_364_sigBytes_ce0, "grp_deserializeSignature_fu_364_sigBytes_ce0");
    sc_trace(mVcdFile, grp_deserializeSignature_fu_364_sigBytes_address1, "grp_deserializeSignature_fu_364_sigBytes_address1");
    sc_trace(mVcdFile, grp_deserializeSignature_fu_364_sigBytes_ce1, "grp_deserializeSignature_fu_364_sigBytes_ce1");
    sc_trace(mVcdFile, grp_deserializeSignature_fu_364_ap_return, "grp_deserializeSignature_fu_364_ap_return");
    sc_trace(mVcdFile, phi_ln466_reg_292, "phi_ln466_reg_292");
    sc_trace(mVcdFile, icmp_ln466_fu_535_p2, "icmp_ln466_fu_535_p2");
    sc_trace(mVcdFile, phi_ln466_1_reg_303, "phi_ln466_1_reg_303");
    sc_trace(mVcdFile, icmp_ln466_1_fu_552_p2, "icmp_ln466_1_fu_552_p2");
    sc_trace(mVcdFile, loop_0_reg_314, "loop_0_reg_314");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, UnifiedRetVal_reg_325, "UnifiedRetVal_reg_325");
    sc_trace(mVcdFile, grp_verify_fu_336_ap_start_reg, "grp_verify_fu_336_ap_start_reg");
    sc_trace(mVcdFile, grp_deserializeSignature_fu_364_ap_start_reg, "grp_deserializeSignature_fu_364_ap_start_reg");
    sc_trace(mVcdFile, zext_ln466_fu_530_p1, "zext_ln466_fu_530_p1");
    sc_trace(mVcdFile, zext_ln466_1_fu_547_p1, "zext_ln466_1_fu_547_p1");
    sc_trace(mVcdFile, zext_ln468_fu_566_p1, "zext_ln468_fu_566_p1");
    sc_trace(mVcdFile, zext_ln468_1_fu_582_p1, "zext_ln468_1_fu_582_p1");
    sc_trace(mVcdFile, zext_ln468_2_fu_609_p1, "zext_ln468_2_fu_609_p1");
    sc_trace(mVcdFile, zext_ln468_3_fu_620_p1, "zext_ln468_3_fu_620_p1");
    sc_trace(mVcdFile, zext_ln468_4_fu_637_p1, "zext_ln468_4_fu_637_p1");
    sc_trace(mVcdFile, or_ln468_5_fu_626_p5, "or_ln468_5_fu_626_p5");
    sc_trace(mVcdFile, or_ln469_2_fu_642_p5, "or_ln469_2_fu_642_p5");
    sc_trace(mVcdFile, icmp_ln33_1_fu_396_p2, "icmp_ln33_1_fu_396_p2");
    sc_trace(mVcdFile, icmp_ln33_2_fu_402_p2, "icmp_ln33_2_fu_402_p2");
    sc_trace(mVcdFile, or_ln33_fu_408_p2, "or_ln33_fu_408_p2");
    sc_trace(mVcdFile, icmp_ln33_fu_390_p2, "icmp_ln33_fu_390_p2");
    sc_trace(mVcdFile, icmp_ln33_4_fu_426_p2, "icmp_ln33_4_fu_426_p2");
    sc_trace(mVcdFile, icmp_ln33_5_fu_432_p2, "icmp_ln33_5_fu_432_p2");
    sc_trace(mVcdFile, or_ln33_2_fu_456_p2, "or_ln33_2_fu_456_p2");
    sc_trace(mVcdFile, icmp_ln33_3_fu_420_p2, "icmp_ln33_3_fu_420_p2");
    sc_trace(mVcdFile, icmp_ln33_7_fu_444_p2, "icmp_ln33_7_fu_444_p2");
    sc_trace(mVcdFile, icmp_ln33_8_fu_450_p2, "icmp_ln33_8_fu_450_p2");
    sc_trace(mVcdFile, or_ln33_4_fu_468_p2, "or_ln33_4_fu_468_p2");
    sc_trace(mVcdFile, icmp_ln33_6_fu_438_p2, "icmp_ln33_6_fu_438_p2");
    sc_trace(mVcdFile, or_ln33_5_fu_474_p2, "or_ln33_5_fu_474_p2");
    sc_trace(mVcdFile, or_ln33_3_fu_462_p2, "or_ln33_3_fu_462_p2");
    sc_trace(mVcdFile, or_ln33_6_fu_480_p2, "or_ln33_6_fu_480_p2");
    sc_trace(mVcdFile, or_ln33_1_fu_414_p2, "or_ln33_1_fu_414_p2");
    sc_trace(mVcdFile, or_ln33_7_fu_494_p2, "or_ln33_7_fu_494_p2");
    sc_trace(mVcdFile, select_ln33_fu_486_p3, "select_ln33_fu_486_p3");
    sc_trace(mVcdFile, icmp_ln157_fu_509_p2, "icmp_ln157_fu_509_p2");
    sc_trace(mVcdFile, or_ln468_fu_576_p2, "or_ln468_fu_576_p2");
    sc_trace(mVcdFile, or_ln468_1_fu_604_p2, "or_ln468_1_fu_604_p2");
    sc_trace(mVcdFile, or_ln468_2_fu_615_p2, "or_ln468_2_fu_615_p2");
    sc_trace(mVcdFile, ap_return_preg, "ap_return_preg");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

picnic_verify::~picnic_verify() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete sig_0_proofs_seed1_U;
    delete sig_0_proofs_seed2_U;
    delete sig_0_proofs_inputS_U;
    delete sig_0_proofs_commun_U;
    delete sig_0_proofs_view3C_U;
    delete sig_0_challengeBits_U;
    delete sig_0_salt_U;
    delete temp_U;
    delete temp2_U;
    delete grp_verify_fu_336;
    delete grp_deserializeSignature_fu_364;
}

void picnic_verify::thread_ap_clk_no_reset_() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(grp_deserializeSignature_fu_364_ap_done.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(grp_deserializeSignature_fu_364_ap_return.read(), ap_const_lv1_1))) {
        UnifiedRetVal_reg_325 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(grp_verify_fu_336_ap_done.read(), ap_const_logic_1))) {
        UnifiedRetVal_reg_325 = icmp_ln475_fu_653_p2.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_preg = ap_const_lv1_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
            ap_return_preg = UnifiedRetVal_reg_325.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_deserializeSignature_fu_364_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            grp_deserializeSignature_fu_364_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_deserializeSignature_fu_364_ap_ready.read())) {
            grp_deserializeSignature_fu_364_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_verify_fu_336_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
             esl_seteq<1,1,1>(tmp_fu_558_p3.read(), ap_const_lv1_1))) {
            grp_verify_fu_336_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_verify_fu_336_ap_ready.read())) {
            grp_verify_fu_336_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln466_1_fu_552_p2.read(), ap_const_lv1_1))) {
        loop_0_reg_314 = ap_const_lv6_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        loop_0_reg_314 = loop_reg_737.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln466_fu_535_p2.read(), ap_const_lv1_1))) {
        phi_ln466_1_reg_303 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln466_1_fu_552_p2.read()))) {
        phi_ln466_1_reg_303 = add_ln466_1_fu_541_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(grp_deserializeSignature_fu_364_ap_done.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, grp_deserializeSignature_fu_364_ap_return.read()))) {
        phi_ln466_reg_292 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln466_fu_535_p2.read()))) {
        phi_ln466_reg_292 = add_ln466_fu_524_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(tmp_fu_558_p3.read(), ap_const_lv1_0))) {
        loop_reg_737 = loop_fu_598_p2.read();
        trunc_ln467_reg_711 = trunc_ln467_fu_572_p1.read();
        trunc_ln468_1_reg_722 = loop_0_reg_314.read().range(4, 2);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        paramset_UnruhGWitho_reg_674 = paramset_UnruhGWitho_fu_515_p3.read();
        paramset_transform_reg_669 = paramset_transform_fu_500_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        pk_0_ciphertext_loa_1_reg_747 = pk_0_ciphertext_q1.read();
        pk_0_ciphertext_loa_reg_742 = pk_0_ciphertext_q0.read();
        pk_0_plaintext_load_1_reg_767 = pk_0_plaintext_q1.read();
        pk_0_plaintext_load_reg_762 = pk_0_plaintext_q0.read();
    }
}

void picnic_verify::thread_add_ln466_1_fu_541_p2() {
    add_ln466_1_fu_541_p2 = (!phi_ln466_1_reg_303.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(phi_ln466_1_reg_303.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void picnic_verify::thread_add_ln466_fu_524_p2() {
    add_ln466_fu_524_p2 = (!phi_ln466_reg_292.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(phi_ln466_reg_292.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void picnic_verify::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void picnic_verify::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void picnic_verify::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void picnic_verify::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void picnic_verify::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void picnic_verify::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void picnic_verify::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void picnic_verify::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void picnic_verify::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void picnic_verify::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void picnic_verify::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void picnic_verify::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void picnic_verify::thread_ap_return() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        ap_return = UnifiedRetVal_reg_325.read();
    } else {
        ap_return = ap_return_preg.read();
    }
}

void picnic_verify::thread_grp_deserializeSignature_fu_364_ap_start() {
    grp_deserializeSignature_fu_364_ap_start = grp_deserializeSignature_fu_364_ap_start_reg.read();
}

void picnic_verify::thread_grp_verify_fu_336_ap_start() {
    grp_verify_fu_336_ap_start = grp_verify_fu_336_ap_start_reg.read();
}

void picnic_verify::thread_icmp_ln157_fu_509_p2() {
    icmp_ln157_fu_509_p2 = (!paramset_transform_fu_500_p3.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(paramset_transform_fu_500_p3.read() == ap_const_lv2_1);
}

void picnic_verify::thread_icmp_ln33_1_fu_396_p2() {
    icmp_ln33_1_fu_396_p2 = (!pk_0_params_read.read().is_01() || !ap_const_lv4_4.is_01())? sc_lv<1>(): sc_lv<1>(pk_0_params_read.read() == ap_const_lv4_4);
}

void picnic_verify::thread_icmp_ln33_2_fu_402_p2() {
    icmp_ln33_2_fu_402_p2 = (!pk_0_params_read.read().is_01() || !ap_const_lv4_6.is_01())? sc_lv<1>(): sc_lv<1>(pk_0_params_read.read() == ap_const_lv4_6);
}

void picnic_verify::thread_icmp_ln33_3_fu_420_p2() {
    icmp_ln33_3_fu_420_p2 = (!pk_0_params_read.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<1>(): sc_lv<1>(pk_0_params_read.read() == ap_const_lv4_1);
}

void picnic_verify::thread_icmp_ln33_4_fu_426_p2() {
    icmp_ln33_4_fu_426_p2 = (!pk_0_params_read.read().is_01() || !ap_const_lv4_3.is_01())? sc_lv<1>(): sc_lv<1>(pk_0_params_read.read() == ap_const_lv4_3);
}

void picnic_verify::thread_icmp_ln33_5_fu_432_p2() {
    icmp_ln33_5_fu_432_p2 = (!pk_0_params_read.read().is_01() || !ap_const_lv4_5.is_01())? sc_lv<1>(): sc_lv<1>(pk_0_params_read.read() == ap_const_lv4_5);
}

void picnic_verify::thread_icmp_ln33_6_fu_438_p2() {
    icmp_ln33_6_fu_438_p2 = (!pk_0_params_read.read().is_01() || !ap_const_lv4_7.is_01())? sc_lv<1>(): sc_lv<1>(pk_0_params_read.read() == ap_const_lv4_7);
}

void picnic_verify::thread_icmp_ln33_7_fu_444_p2() {
    icmp_ln33_7_fu_444_p2 = (!pk_0_params_read.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(pk_0_params_read.read() == ap_const_lv4_8);
}

void picnic_verify::thread_icmp_ln33_8_fu_450_p2() {
    icmp_ln33_8_fu_450_p2 = (!pk_0_params_read.read().is_01() || !ap_const_lv4_9.is_01())? sc_lv<1>(): sc_lv<1>(pk_0_params_read.read() == ap_const_lv4_9);
}

void picnic_verify::thread_icmp_ln33_fu_390_p2() {
    icmp_ln33_fu_390_p2 = (!pk_0_params_read.read().is_01() || !ap_const_lv4_2.is_01())? sc_lv<1>(): sc_lv<1>(pk_0_params_read.read() == ap_const_lv4_2);
}

void picnic_verify::thread_icmp_ln466_1_fu_552_p2() {
    icmp_ln466_1_fu_552_p2 = (!phi_ln466_1_reg_303.read().is_01() || !ap_const_lv3_7.is_01())? sc_lv<1>(): sc_lv<1>(phi_ln466_1_reg_303.read() == ap_const_lv3_7);
}

void picnic_verify::thread_icmp_ln466_fu_535_p2() {
    icmp_ln466_fu_535_p2 = (!phi_ln466_reg_292.read().is_01() || !ap_const_lv3_7.is_01())? sc_lv<1>(): sc_lv<1>(phi_ln466_reg_292.read() == ap_const_lv3_7);
}

void picnic_verify::thread_icmp_ln475_fu_653_p2() {
    icmp_ln475_fu_653_p2 = (!grp_verify_fu_336_ap_return.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): sc_lv<1>(grp_verify_fu_336_ap_return.read() != ap_const_lv32_0);
}

void picnic_verify::thread_loop_fu_598_p2() {
    loop_fu_598_p2 = (!ap_const_lv6_4.is_01() || !loop_0_reg_314.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_4) + sc_biguint<6>(loop_0_reg_314.read()));
}

void picnic_verify::thread_message_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        message_address0 = grp_deserializeSignature_fu_364_sigBytes_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        message_address0 = grp_verify_fu_336_message_address0.read();
    } else {
        message_address0 = "XXXXXXXXXXXXXXXX";
    }
}

void picnic_verify::thread_message_address1() {
    message_address1 = grp_deserializeSignature_fu_364_sigBytes_address1.read();
}

void picnic_verify::thread_message_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        message_ce0 = grp_deserializeSignature_fu_364_sigBytes_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        message_ce0 = grp_verify_fu_336_message_ce0.read();
    } else {
        message_ce0 = ap_const_logic_0;
    }
}

void picnic_verify::thread_message_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        message_ce1 = grp_deserializeSignature_fu_364_sigBytes_ce1.read();
    } else {
        message_ce1 = ap_const_logic_0;
    }
}

void picnic_verify::thread_or_ln33_1_fu_414_p2() {
    or_ln33_1_fu_414_p2 = (or_ln33_fu_408_p2.read() | icmp_ln33_fu_390_p2.read());
}

void picnic_verify::thread_or_ln33_2_fu_456_p2() {
    or_ln33_2_fu_456_p2 = (icmp_ln33_4_fu_426_p2.read() | icmp_ln33_5_fu_432_p2.read());
}

void picnic_verify::thread_or_ln33_3_fu_462_p2() {
    or_ln33_3_fu_462_p2 = (or_ln33_2_fu_456_p2.read() | icmp_ln33_3_fu_420_p2.read());
}

void picnic_verify::thread_or_ln33_4_fu_468_p2() {
    or_ln33_4_fu_468_p2 = (icmp_ln33_7_fu_444_p2.read() | icmp_ln33_8_fu_450_p2.read());
}

void picnic_verify::thread_or_ln33_5_fu_474_p2() {
    or_ln33_5_fu_474_p2 = (or_ln33_4_fu_468_p2.read() | icmp_ln33_6_fu_438_p2.read());
}

void picnic_verify::thread_or_ln33_6_fu_480_p2() {
    or_ln33_6_fu_480_p2 = (or_ln33_5_fu_474_p2.read() | or_ln33_3_fu_462_p2.read());
}

void picnic_verify::thread_or_ln33_7_fu_494_p2() {
    or_ln33_7_fu_494_p2 = (or_ln33_6_fu_480_p2.read() | or_ln33_1_fu_414_p2.read());
}

void picnic_verify::thread_or_ln33_fu_408_p2() {
    or_ln33_fu_408_p2 = (icmp_ln33_1_fu_396_p2.read() | icmp_ln33_2_fu_402_p2.read());
}

void picnic_verify::thread_or_ln468_1_fu_604_p2() {
    or_ln468_1_fu_604_p2 = (trunc_ln467_reg_711.read() | ap_const_lv5_2);
}

void picnic_verify::thread_or_ln468_2_fu_615_p2() {
    or_ln468_2_fu_615_p2 = (trunc_ln467_reg_711.read() | ap_const_lv5_3);
}

void picnic_verify::thread_or_ln468_5_fu_626_p5() {
    or_ln468_5_fu_626_p5 = esl_concat<24,8>(esl_concat<16,8>(esl_concat<8,8>(pk_0_ciphertext_q1.read(), pk_0_ciphertext_q0.read()), pk_0_ciphertext_loa_1_reg_747.read()), pk_0_ciphertext_loa_reg_742.read());
}

void picnic_verify::thread_or_ln468_fu_576_p2() {
    or_ln468_fu_576_p2 = (trunc_ln467_fu_572_p1.read() | ap_const_lv5_1);
}

void picnic_verify::thread_or_ln469_2_fu_642_p5() {
    or_ln469_2_fu_642_p5 = esl_concat<24,8>(esl_concat<16,8>(esl_concat<8,8>(pk_0_plaintext_q1.read(), pk_0_plaintext_q0.read()), pk_0_plaintext_load_1_reg_767.read()), pk_0_plaintext_load_reg_762.read());
}

void picnic_verify::thread_paramset_UnruhGWitho_fu_515_p3() {
    paramset_UnruhGWitho_fu_515_p3 = (!icmp_ln157_fu_509_p2.read()[0].is_01())? sc_lv<7>(): ((icmp_ln157_fu_509_p2.read()[0].to_bool())? ap_const_lv7_5B: ap_const_lv7_0);
}

void picnic_verify::thread_paramset_transform_fu_500_p3() {
    paramset_transform_fu_500_p3 = (!or_ln33_7_fu_494_p2.read()[0].is_01())? sc_lv<2>(): ((or_ln33_7_fu_494_p2.read()[0].to_bool())? select_ln33_fu_486_p3.read(): ap_const_lv2_3);
}

void picnic_verify::thread_pk_0_ciphertext_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        pk_0_ciphertext_address0 =  (sc_lv<5>) (zext_ln468_2_fu_609_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        pk_0_ciphertext_address0 =  (sc_lv<5>) (zext_ln468_fu_566_p1.read());
    } else {
        pk_0_ciphertext_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void picnic_verify::thread_pk_0_ciphertext_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        pk_0_ciphertext_address1 =  (sc_lv<5>) (zext_ln468_3_fu_620_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        pk_0_ciphertext_address1 =  (sc_lv<5>) (zext_ln468_1_fu_582_p1.read());
    } else {
        pk_0_ciphertext_address1 =  (sc_lv<5>) ("XXXXX");
    }
}

void picnic_verify::thread_pk_0_ciphertext_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        pk_0_ciphertext_ce0 = ap_const_logic_1;
    } else {
        pk_0_ciphertext_ce0 = ap_const_logic_0;
    }
}

void picnic_verify::thread_pk_0_ciphertext_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        pk_0_ciphertext_ce1 = ap_const_logic_1;
    } else {
        pk_0_ciphertext_ce1 = ap_const_logic_0;
    }
}

void picnic_verify::thread_pk_0_plaintext_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        pk_0_plaintext_address0 =  (sc_lv<5>) (zext_ln468_2_fu_609_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        pk_0_plaintext_address0 =  (sc_lv<5>) (zext_ln468_fu_566_p1.read());
    } else {
        pk_0_plaintext_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void picnic_verify::thread_pk_0_plaintext_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        pk_0_plaintext_address1 =  (sc_lv<5>) (zext_ln468_3_fu_620_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        pk_0_plaintext_address1 =  (sc_lv<5>) (zext_ln468_1_fu_582_p1.read());
    } else {
        pk_0_plaintext_address1 =  (sc_lv<5>) ("XXXXX");
    }
}

void picnic_verify::thread_pk_0_plaintext_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        pk_0_plaintext_ce0 = ap_const_logic_1;
    } else {
        pk_0_plaintext_ce0 = ap_const_logic_0;
    }
}

void picnic_verify::thread_pk_0_plaintext_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        pk_0_plaintext_ce1 = ap_const_logic_1;
    } else {
        pk_0_plaintext_ce1 = ap_const_logic_0;
    }
}

void picnic_verify::thread_select_ln33_fu_486_p3() {
    select_ln33_fu_486_p3 = (!or_ln33_6_fu_480_p2.read()[0].is_01())? sc_lv<2>(): ((or_ln33_6_fu_480_p2.read()[0].to_bool())? ap_const_lv2_0: ap_const_lv2_1);
}

void picnic_verify::thread_sig_0_challengeBits_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sig_0_challengeBits_address0 = grp_deserializeSignature_fu_364_sig_0_challengeBits_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        sig_0_challengeBits_address0 = grp_verify_fu_336_sig_0_challengeBits_address0.read();
    } else {
        sig_0_challengeBits_address0 =  (sc_lv<6>) ("XXXXXX");
    }
}

void picnic_verify::thread_sig_0_challengeBits_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sig_0_challengeBits_ce0 = grp_deserializeSignature_fu_364_sig_0_challengeBits_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        sig_0_challengeBits_ce0 = grp_verify_fu_336_sig_0_challengeBits_ce0.read();
    } else {
        sig_0_challengeBits_ce0 = ap_const_logic_0;
    }
}

void picnic_verify::thread_sig_0_challengeBits_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        sig_0_challengeBits_ce1 = grp_verify_fu_336_sig_0_challengeBits_ce1.read();
    } else {
        sig_0_challengeBits_ce1 = ap_const_logic_0;
    }
}

void picnic_verify::thread_sig_0_challengeBits_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sig_0_challengeBits_we0 = grp_deserializeSignature_fu_364_sig_0_challengeBits_we0.read();
    } else {
        sig_0_challengeBits_we0 = ap_const_logic_0;
    }
}

void picnic_verify::thread_sig_0_proofs_commun_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sig_0_proofs_commun_address0 = grp_deserializeSignature_fu_364_sig_0_proofs_commun_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        sig_0_proofs_commun_address0 = grp_verify_fu_336_sig_0_proofs_commun_address0.read();
    } else {
        sig_0_proofs_commun_address0 =  (sc_lv<15>) ("XXXXXXXXXXXXXXX");
    }
}

void picnic_verify::thread_sig_0_proofs_commun_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sig_0_proofs_commun_ce0 = grp_deserializeSignature_fu_364_sig_0_proofs_commun_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        sig_0_proofs_commun_ce0 = grp_verify_fu_336_sig_0_proofs_commun_ce0.read();
    } else {
        sig_0_proofs_commun_ce0 = ap_const_logic_0;
    }
}

void picnic_verify::thread_sig_0_proofs_commun_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sig_0_proofs_commun_we0 = grp_deserializeSignature_fu_364_sig_0_proofs_commun_we0.read();
    } else {
        sig_0_proofs_commun_we0 = ap_const_logic_0;
    }
}

void picnic_verify::thread_sig_0_proofs_inputS_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sig_0_proofs_inputS_address0 = grp_deserializeSignature_fu_364_sig_0_proofs_inputS_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        sig_0_proofs_inputS_address0 = grp_verify_fu_336_sig_0_proofs_inputS_address0.read();
    } else {
        sig_0_proofs_inputS_address0 =  (sc_lv<10>) ("XXXXXXXXXX");
    }
}

void picnic_verify::thread_sig_0_proofs_inputS_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sig_0_proofs_inputS_ce0 = grp_deserializeSignature_fu_364_sig_0_proofs_inputS_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        sig_0_proofs_inputS_ce0 = grp_verify_fu_336_sig_0_proofs_inputS_ce0.read();
    } else {
        sig_0_proofs_inputS_ce0 = ap_const_logic_0;
    }
}

void picnic_verify::thread_sig_0_proofs_inputS_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sig_0_proofs_inputS_we0 = grp_deserializeSignature_fu_364_sig_0_proofs_inputS_we0.read();
    } else {
        sig_0_proofs_inputS_we0 = ap_const_logic_0;
    }
}

void picnic_verify::thread_sig_0_proofs_seed1_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sig_0_proofs_seed1_address0 = grp_deserializeSignature_fu_364_sig_0_proofs_seed1_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        sig_0_proofs_seed1_address0 = grp_verify_fu_336_sig_0_proofs_seed1_address0.read();
    } else {
        sig_0_proofs_seed1_address0 =  (sc_lv<12>) ("XXXXXXXXXXXX");
    }
}

void picnic_verify::thread_sig_0_proofs_seed1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sig_0_proofs_seed1_ce0 = grp_deserializeSignature_fu_364_sig_0_proofs_seed1_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        sig_0_proofs_seed1_ce0 = grp_verify_fu_336_sig_0_proofs_seed1_ce0.read();
    } else {
        sig_0_proofs_seed1_ce0 = ap_const_logic_0;
    }
}

void picnic_verify::thread_sig_0_proofs_seed1_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sig_0_proofs_seed1_we0 = grp_deserializeSignature_fu_364_sig_0_proofs_seed1_we0.read();
    } else {
        sig_0_proofs_seed1_we0 = ap_const_logic_0;
    }
}

void picnic_verify::thread_sig_0_proofs_seed2_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sig_0_proofs_seed2_address0 = grp_deserializeSignature_fu_364_sig_0_proofs_seed2_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        sig_0_proofs_seed2_address0 = grp_verify_fu_336_sig_0_proofs_seed2_address0.read();
    } else {
        sig_0_proofs_seed2_address0 =  (sc_lv<12>) ("XXXXXXXXXXXX");
    }
}

void picnic_verify::thread_sig_0_proofs_seed2_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sig_0_proofs_seed2_ce0 = grp_deserializeSignature_fu_364_sig_0_proofs_seed2_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        sig_0_proofs_seed2_ce0 = grp_verify_fu_336_sig_0_proofs_seed2_ce0.read();
    } else {
        sig_0_proofs_seed2_ce0 = ap_const_logic_0;
    }
}

void picnic_verify::thread_sig_0_proofs_seed2_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sig_0_proofs_seed2_we0 = grp_deserializeSignature_fu_364_sig_0_proofs_seed2_we0.read();
    } else {
        sig_0_proofs_seed2_we0 = ap_const_logic_0;
    }
}

void picnic_verify::thread_sig_0_proofs_view3C_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sig_0_proofs_view3C_address0 = grp_deserializeSignature_fu_364_sig_0_proofs_view3C_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        sig_0_proofs_view3C_address0 = grp_verify_fu_336_sig_0_proofs_view3C_address0.read();
    } else {
        sig_0_proofs_view3C_address0 =  (sc_lv<13>) ("XXXXXXXXXXXXX");
    }
}

void picnic_verify::thread_sig_0_proofs_view3C_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sig_0_proofs_view3C_ce0 = grp_deserializeSignature_fu_364_sig_0_proofs_view3C_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        sig_0_proofs_view3C_ce0 = grp_verify_fu_336_sig_0_proofs_view3C_ce0.read();
    } else {
        sig_0_proofs_view3C_ce0 = ap_const_logic_0;
    }
}

void picnic_verify::thread_sig_0_proofs_view3C_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sig_0_proofs_view3C_we0 = grp_deserializeSignature_fu_364_sig_0_proofs_view3C_we0.read();
    } else {
        sig_0_proofs_view3C_we0 = ap_const_logic_0;
    }
}

void picnic_verify::thread_sig_0_salt_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sig_0_salt_address0 = grp_deserializeSignature_fu_364_sig_0_salt_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        sig_0_salt_address0 = grp_verify_fu_336_sig_0_salt_address0.read();
    } else {
        sig_0_salt_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void picnic_verify::thread_sig_0_salt_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sig_0_salt_ce0 = grp_deserializeSignature_fu_364_sig_0_salt_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        sig_0_salt_ce0 = grp_verify_fu_336_sig_0_salt_ce0.read();
    } else {
        sig_0_salt_ce0 = ap_const_logic_0;
    }
}

void picnic_verify::thread_sig_0_salt_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sig_0_salt_we0 = grp_deserializeSignature_fu_364_sig_0_salt_we0.read();
    } else {
        sig_0_salt_we0 = ap_const_logic_0;
    }
}

void picnic_verify::thread_temp2_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        temp2_address0 =  (sc_lv<3>) (zext_ln468_4_fu_637_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        temp2_address0 =  (sc_lv<3>) (zext_ln466_1_fu_547_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        temp2_address0 = grp_verify_fu_336_plaintext_address0.read();
    } else {
        temp2_address0 =  (sc_lv<3>) ("XXX");
    }
}

void picnic_verify::thread_temp2_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        temp2_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        temp2_ce0 = grp_verify_fu_336_plaintext_ce0.read();
    } else {
        temp2_ce0 = ap_const_logic_0;
    }
}

void picnic_verify::thread_temp2_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        temp2_d0 = or_ln469_2_fu_642_p5.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        temp2_d0 = ap_const_lv32_0;
    } else {
        temp2_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void picnic_verify::thread_temp2_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        temp2_we0 = ap_const_logic_1;
    } else {
        temp2_we0 = ap_const_logic_0;
    }
}

void picnic_verify::thread_temp_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        temp_address0 =  (sc_lv<3>) (zext_ln468_4_fu_637_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        temp_address0 =  (sc_lv<3>) (zext_ln466_fu_530_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        temp_address0 = grp_verify_fu_336_pubKey_address0.read();
    } else {
        temp_address0 =  (sc_lv<3>) ("XXX");
    }
}

void picnic_verify::thread_temp_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        temp_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        temp_ce0 = grp_verify_fu_336_pubKey_ce0.read();
    } else {
        temp_ce0 = ap_const_logic_0;
    }
}

void picnic_verify::thread_temp_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        temp_d0 = or_ln468_5_fu_626_p5.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        temp_d0 = ap_const_lv32_0;
    } else {
        temp_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void picnic_verify::thread_temp_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        temp_we0 = ap_const_logic_1;
    } else {
        temp_we0 = ap_const_logic_0;
    }
}

void picnic_verify::thread_tmp_fu_558_p3() {
    tmp_fu_558_p3 = loop_0_reg_314.read().range(5, 5);
}

void picnic_verify::thread_trunc_ln467_fu_572_p1() {
    trunc_ln467_fu_572_p1 = loop_0_reg_314.read().range(5-1, 0);
}

void picnic_verify::thread_viewOutputs_address0() {
    viewOutputs_address0 = grp_verify_fu_336_viewOutputs_address0.read();
}

void picnic_verify::thread_viewOutputs_ce0() {
    viewOutputs_ce0 = grp_verify_fu_336_viewOutputs_ce0.read();
}

void picnic_verify::thread_viewOutputs_d0() {
    viewOutputs_d0 = grp_verify_fu_336_viewOutputs_d0.read();
}

void picnic_verify::thread_viewOutputs_we0() {
    viewOutputs_we0 = grp_verify_fu_336_viewOutputs_we0.read();
}

void picnic_verify::thread_zext_ln466_1_fu_547_p1() {
    zext_ln466_1_fu_547_p1 = esl_zext<64,3>(phi_ln466_1_reg_303.read());
}

void picnic_verify::thread_zext_ln466_fu_530_p1() {
    zext_ln466_fu_530_p1 = esl_zext<64,3>(phi_ln466_reg_292.read());
}

void picnic_verify::thread_zext_ln468_1_fu_582_p1() {
    zext_ln468_1_fu_582_p1 = esl_zext<64,5>(or_ln468_fu_576_p2.read());
}

void picnic_verify::thread_zext_ln468_2_fu_609_p1() {
    zext_ln468_2_fu_609_p1 = esl_zext<64,5>(or_ln468_1_fu_604_p2.read());
}

void picnic_verify::thread_zext_ln468_3_fu_620_p1() {
    zext_ln468_3_fu_620_p1 = esl_zext<64,5>(or_ln468_2_fu_615_p2.read());
}

void picnic_verify::thread_zext_ln468_4_fu_637_p1() {
    zext_ln468_4_fu_637_p1 = esl_zext<64,3>(trunc_ln468_1_reg_722.read());
}

void picnic_verify::thread_zext_ln468_fu_566_p1() {
    zext_ln468_fu_566_p1 = esl_zext<64,6>(loop_0_reg_314.read());
}

void picnic_verify::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(grp_deserializeSignature_fu_364_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_lv1_0, grp_deserializeSignature_fu_364_ap_return.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(grp_deserializeSignature_fu_364_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(grp_deserializeSignature_fu_364_ap_return.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln466_fu_535_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln466_1_fu_552_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(tmp_fu_558_p3.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(grp_verify_fu_336_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<9>) ("XXXXXXXXX");
            break;
    }
}

}

