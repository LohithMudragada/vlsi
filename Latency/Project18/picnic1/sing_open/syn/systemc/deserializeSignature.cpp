// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "deserializeSignature.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic deserializeSignature::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic deserializeSignature::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<25> deserializeSignature::ap_ST_fsm_state1 = "1";
const sc_lv<25> deserializeSignature::ap_ST_fsm_state2 = "10";
const sc_lv<25> deserializeSignature::ap_ST_fsm_state3 = "100";
const sc_lv<25> deserializeSignature::ap_ST_fsm_state4 = "1000";
const sc_lv<25> deserializeSignature::ap_ST_fsm_state5 = "10000";
const sc_lv<25> deserializeSignature::ap_ST_fsm_state6 = "100000";
const sc_lv<25> deserializeSignature::ap_ST_fsm_state7 = "1000000";
const sc_lv<25> deserializeSignature::ap_ST_fsm_state8 = "10000000";
const sc_lv<25> deserializeSignature::ap_ST_fsm_state9 = "100000000";
const sc_lv<25> deserializeSignature::ap_ST_fsm_state10 = "1000000000";
const sc_lv<25> deserializeSignature::ap_ST_fsm_state11 = "10000000000";
const sc_lv<25> deserializeSignature::ap_ST_fsm_state12 = "100000000000";
const sc_lv<25> deserializeSignature::ap_ST_fsm_pp0_stage0 = "1000000000000";
const sc_lv<25> deserializeSignature::ap_ST_fsm_state15 = "10000000000000";
const sc_lv<25> deserializeSignature::ap_ST_fsm_pp1_stage0 = "100000000000000";
const sc_lv<25> deserializeSignature::ap_ST_fsm_state18 = "1000000000000000";
const sc_lv<25> deserializeSignature::ap_ST_fsm_state19 = "10000000000000000";
const sc_lv<25> deserializeSignature::ap_ST_fsm_state20 = "100000000000000000";
const sc_lv<25> deserializeSignature::ap_ST_fsm_pp2_stage0 = "1000000000000000000";
const sc_lv<25> deserializeSignature::ap_ST_fsm_state23 = "10000000000000000000";
const sc_lv<25> deserializeSignature::ap_ST_fsm_state24 = "100000000000000000000";
const sc_lv<25> deserializeSignature::ap_ST_fsm_state25 = "1000000000000000000000";
const sc_lv<25> deserializeSignature::ap_ST_fsm_state26 = "10000000000000000000000";
const sc_lv<25> deserializeSignature::ap_ST_fsm_state27 = "100000000000000000000000";
const sc_lv<25> deserializeSignature::ap_ST_fsm_state28 = "1000000000000000000000000";
const bool deserializeSignature::ap_const_boolean_1 = true;
const sc_lv<32> deserializeSignature::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> deserializeSignature::ap_const_lv1_0 = "0";
const sc_lv<32> deserializeSignature::ap_const_lv32_1 = "1";
const sc_lv<1> deserializeSignature::ap_const_lv1_1 = "1";
const sc_lv<32> deserializeSignature::ap_const_lv32_2 = "10";
const sc_lv<32> deserializeSignature::ap_const_lv32_4 = "100";
const sc_lv<32> deserializeSignature::ap_const_lv32_6 = "110";
const sc_lv<32> deserializeSignature::ap_const_lv32_8 = "1000";
const sc_lv<32> deserializeSignature::ap_const_lv32_A = "1010";
const sc_lv<32> deserializeSignature::ap_const_lv32_B = "1011";
const sc_lv<32> deserializeSignature::ap_const_lv32_C = "1100";
const bool deserializeSignature::ap_const_boolean_0 = false;
const sc_lv<32> deserializeSignature::ap_const_lv32_E = "1110";
const sc_lv<32> deserializeSignature::ap_const_lv32_10 = "10000";
const sc_lv<32> deserializeSignature::ap_const_lv32_12 = "10010";
const sc_lv<32> deserializeSignature::ap_const_lv32_13 = "10011";
const sc_lv<32> deserializeSignature::ap_const_lv32_14 = "10100";
const sc_lv<32> deserializeSignature::ap_const_lv32_15 = "10101";
const sc_lv<32> deserializeSignature::ap_const_lv32_17 = "10111";
const sc_lv<32> deserializeSignature::ap_const_lv32_D = "1101";
const sc_lv<64> deserializeSignature::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<8> deserializeSignature::ap_const_lv8_0 = "00000000";
const sc_lv<32> deserializeSignature::ap_const_lv32_5 = "101";
const sc_lv<6> deserializeSignature::ap_const_lv6_0 = "000000";
const sc_lv<32> deserializeSignature::ap_const_lv32_3 = "11";
const sc_lv<32> deserializeSignature::ap_const_lv32_7 = "111";
const sc_lv<32> deserializeSignature::ap_const_lv32_9 = "1001";
const sc_lv<16> deserializeSignature::ap_const_lv16_0 = "0000000000000000";
const sc_lv<15> deserializeSignature::ap_const_lv15_0 = "000000000000000";
const sc_lv<7> deserializeSignature::ap_const_lv7_0 = "0000000";
const sc_lv<32> deserializeSignature::ap_const_lv32_11 = "10001";
const sc_lv<5> deserializeSignature::ap_const_lv5_0 = "00000";
const sc_lv<32> deserializeSignature::ap_const_lv32_F = "1111";
const sc_lv<32> deserializeSignature::ap_const_lv32_16 = "10110";
const sc_lv<8> deserializeSignature::ap_const_lv8_8B = "10001011";
const sc_lv<8> deserializeSignature::ap_const_lv8_9B = "10011011";
const sc_lv<32> deserializeSignature::ap_const_lv32_37 = "110111";
const sc_lv<8> deserializeSignature::ap_const_lv8_DB = "11011011";
const sc_lv<8> deserializeSignature::ap_const_lv8_1 = "1";
const sc_lv<64> deserializeSignature::ap_const_lv64_7740 = "111011101000000";
const sc_lv<16> deserializeSignature::ap_const_lv16_DB = "11011011";
const sc_lv<3> deserializeSignature::ap_const_lv3_6 = "110";
const sc_lv<3> deserializeSignature::ap_const_lv3_7 = "111";
const sc_lv<2> deserializeSignature::ap_const_lv2_1 = "1";
const sc_lv<2> deserializeSignature::ap_const_lv2_2 = "10";
const sc_lv<64> deserializeSignature::ap_const_lv64_10 = "10000";
const sc_lv<6> deserializeSignature::ap_const_lv6_37 = "110111";
const sc_lv<6> deserializeSignature::ap_const_lv6_1 = "1";
const sc_lv<2> deserializeSignature::ap_const_lv2_3 = "11";
const sc_lv<6> deserializeSignature::ap_const_lv6_20 = "100000";
const sc_lv<7> deserializeSignature::ap_const_lv7_37 = "110111";
const sc_lv<15> deserializeSignature::ap_const_lv15_4B = "1001011";
const sc_lv<4> deserializeSignature::ap_const_lv4_0 = "0000";
const sc_lv<7> deserializeSignature::ap_const_lv7_57 = "1010111";
const sc_lv<7> deserializeSignature::ap_const_lv7_4B = "1001011";
const sc_lv<7> deserializeSignature::ap_const_lv7_1 = "1";
const sc_lv<8> deserializeSignature::ap_const_lv8_77 = "1110111";
const sc_lv<5> deserializeSignature::ap_const_lv5_10 = "10000";
const sc_lv<5> deserializeSignature::ap_const_lv5_1 = "1";
const sc_lv<7> deserializeSignature::ap_const_lv7_42 = "1000010";
const sc_lv<7> deserializeSignature::ap_const_lv7_52 = "1010010";
const sc_lv<2> deserializeSignature::ap_const_lv2_0 = "00";
const sc_lv<16> deserializeSignature::ap_const_lv16_E2 = "11100010";
const sc_lv<4> deserializeSignature::ap_const_lv4_1 = "1";
const sc_lv<4> deserializeSignature::ap_const_lv4_2 = "10";
const sc_lv<4> deserializeSignature::ap_const_lv4_3 = "11";
const sc_lv<5> deserializeSignature::ap_const_lv5_4 = "100";
const sc_lv<32> deserializeSignature::ap_const_lv32_18 = "11000";

deserializeSignature::deserializeSignature(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln2041_fu_805_p2);
    sensitive << ( trunc_ln54_reg_1505 );
    sensitive << ( zext_ln2041_1_fu_801_p1 );

    SC_METHOD(thread_add_ln2050_1_fu_938_p2);
    sensitive << ( trunc_ln54_reg_1505 );
    sensitive << ( zext_ln2050_2_fu_934_p1 );

    SC_METHOD(thread_add_ln2050_fu_928_p2);
    sensitive << ( zext_ln2050_1_fu_924_p1 );

    SC_METHOD(thread_add_ln2053_fu_953_p2);
    sensitive << ( phi_mul_reg_508 );

    SC_METHOD(thread_add_ln2059_1_fu_1109_p2);
    sensitive << ( add_ln2059_reg_1635 );
    sensitive << ( zext_ln2059_2_fu_1105_p1 );

    SC_METHOD(thread_add_ln2059_2_fu_1099_p2);
    sensitive << ( zext_ln2059_1_fu_1095_p1 );

    SC_METHOD(thread_add_ln2059_3_fu_1123_p2);
    sensitive << ( zext_ln2053_1_reg_1625 );
    sensitive << ( zext_ln2059_4_fu_1119_p1 );

    SC_METHOD(thread_add_ln2059_fu_1078_p2);
    sensitive << ( trunc_ln54_reg_1505 );
    sensitive << ( zext_ln2053_fu_986_p1 );

    SC_METHOD(thread_add_ln2072_1_fu_1159_p2);
    sensitive << ( zext_ln2072_1_fu_1155_p1 );

    SC_METHOD(thread_add_ln2072_2_fu_1169_p2);
    sensitive << ( add_ln2059_reg_1635 );
    sensitive << ( zext_ln2072_2_fu_1165_p1 );

    SC_METHOD(thread_add_ln2072_fu_1149_p2);
    sensitive << ( phi_mul_reg_508 );
    sensitive << ( zext_ln2072_fu_1145_p1 );

    SC_METHOD(thread_add_ln2077_1_fu_1199_p2);
    sensitive << ( zext_ln2077_1_fu_1195_p1 );

    SC_METHOD(thread_add_ln2077_2_fu_1213_p2);
    sensitive << ( add_ln2059_reg_1635 );
    sensitive << ( zext_ln2077_2_fu_1209_p1 );

    SC_METHOD(thread_add_ln2077_fu_1227_p2);
    sensitive << ( zext_ln2059_reg_1619 );
    sensitive << ( zext_ln2077_fu_1223_p1 );

    SC_METHOD(thread_add_ln2082_1_fu_1253_p2);
    sensitive << ( zext_ln2082_1_fu_1249_p1 );

    SC_METHOD(thread_add_ln2082_2_fu_1267_p2);
    sensitive << ( add_ln2059_reg_1635 );
    sensitive << ( zext_ln2082_2_fu_1263_p1 );

    SC_METHOD(thread_add_ln2082_fu_1281_p2);
    sensitive << ( zext_ln2059_reg_1619 );
    sensitive << ( zext_ln2082_fu_1277_p1 );

    SC_METHOD(thread_add_ln2085_fu_1291_p2);
    sensitive << ( zext_ln386_reg_1630 );

    SC_METHOD(thread_add_ln2088_1_fu_1330_p2);
    sensitive << ( add_ln2088_reg_1707 );
    sensitive << ( zext_ln2088_fu_1326_p1 );

    SC_METHOD(thread_add_ln2088_2_fu_1339_p2);
    sensitive << ( trunc_ln54_reg_1505 );
    sensitive << ( zext_ln2088_1_fu_1335_p1 );

    SC_METHOD(thread_add_ln2088_3_fu_1363_p2);
    sensitive << ( add_ln2088_reg_1707 );
    sensitive << ( zext_ln2088_3_fu_1359_p1 );

    SC_METHOD(thread_add_ln2088_4_fu_1372_p2);
    sensitive << ( trunc_ln54_reg_1505 );
    sensitive << ( zext_ln2088_4_fu_1368_p1 );

    SC_METHOD(thread_add_ln2088_5_fu_1392_p2);
    sensitive << ( add_ln2088_reg_1707 );
    sensitive << ( zext_ln2088_6_fu_1388_p1 );

    SC_METHOD(thread_add_ln2088_6_fu_1401_p2);
    sensitive << ( trunc_ln54_reg_1505 );
    sensitive << ( zext_ln2088_7_fu_1397_p1 );

    SC_METHOD(thread_add_ln2088_7_fu_1416_p2);
    sensitive << ( add_ln2088_reg_1707 );
    sensitive << ( zext_ln2088_9_fu_1412_p1 );

    SC_METHOD(thread_add_ln2088_8_fu_1425_p2);
    sensitive << ( trunc_ln54_reg_1505 );
    sensitive << ( zext_ln2088_10_fu_1421_p1 );

    SC_METHOD(thread_add_ln2088_fu_1312_p2);
    sensitive << ( p_01_rec_reg_484 );

    SC_METHOD(thread_add_ln2089_fu_1481_p2);
    sensitive << ( p_01_rec_reg_484 );
    sensitive << ( zext_ln2089_fu_1477_p1 );

    SC_METHOD(thread_add_ln54_fu_654_p2);
    sensitive << ( trunc_ln54_reg_1505 );
    sensitive << ( zext_ln54_fu_650_p1 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp2_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp1_stage0);

    SC_METHOD(thread_ap_block_pp1_stage0_11001);

    SC_METHOD(thread_ap_block_pp1_stage0_subdone);

    SC_METHOD(thread_ap_block_pp2_stage0);

    SC_METHOD(thread_ap_block_pp2_stage0_11001);

    SC_METHOD(thread_ap_block_pp2_stage0_subdone);

    SC_METHOD(thread_ap_block_state13_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state14_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state16_pp1_stage0_iter0);

    SC_METHOD(thread_ap_block_state17_pp1_stage0_iter1);

    SC_METHOD(thread_ap_block_state21_pp2_stage0_iter0);

    SC_METHOD(thread_ap_block_state22_pp2_stage0_iter1);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state13);
    sensitive << ( icmp_ln2058_fu_1083_p2 );

    SC_METHOD(thread_ap_condition_pp1_exit_iter0_state16);
    sensitive << ( icmp_ln2071_fu_1133_p2 );

    SC_METHOD(thread_ap_condition_pp2_exit_iter0_state21);
    sensitive << ( icmp_ln2081_fu_1237_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state28 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_pp1);
    sensitive << ( ap_idle_pp1 );

    SC_METHOD(thread_ap_enable_pp2);
    sensitive << ( ap_idle_pp2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_idle_pp1);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );

    SC_METHOD(thread_ap_idle_pp2);
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );

    SC_METHOD(thread_ap_phi_mux_loop_2_phi_fu_524_p4);
    sensitive << ( loop_2_reg_520 );
    sensitive << ( icmp_ln2058_reg_1643 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( loop_29_reg_1647 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_loop_5_phi_fu_559_p4);
    sensitive << ( loop_5_reg_555 );
    sensitive << ( icmp_ln2081_reg_1690 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( loop_32_reg_1694 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( ap_block_pp2_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state28 );

    SC_METHOD(thread_ap_return);
    sensitive << ( p_0_reg_591 );
    sensitive << ( ap_return_preg );
    sensitive << ( ap_CS_fsm_state28 );

    SC_METHOD(thread_bitNumber_assign_3_fu_1018_p3);
    sensitive << ( trunc_ln386_6_fu_1014_p1 );

    SC_METHOD(thread_bitNumber_assign_fu_851_p3);
    sensitive << ( trunc_ln386_4_reg_1575 );

    SC_METHOD(thread_bytesExpected_1_fu_772_p2);
    sensitive << ( bytesExpected_reg_1535 );
    sensitive << ( zext_ln1978_fu_769_p1 );

    SC_METHOD(thread_bytesExpected_2_fu_777_p3);
    sensitive << ( bytesExpected_reg_1535 );
    sensitive << ( trunc_ln1977_fu_766_p1 );
    sensitive << ( bytesExpected_1_fu_772_p2 );

    SC_METHOD(thread_bytesExpected_fu_664_p2);
    sensitive << ( inputShareSize_reg_426 );

    SC_METHOD(thread_challenge_1_fu_898_p3);
    sensitive << ( trunc_ln386_5_fu_874_p1 );
    sensitive << ( trunc_ln54_10_fu_894_p1 );

    SC_METHOD(thread_challenge_2_fu_1066_p3);
    sensitive << ( trunc_ln386_7_fu_1042_p1 );
    sensitive << ( trunc_ln54_11_fu_1062_p1 );

    SC_METHOD(thread_challenge_fu_726_p3);
    sensitive << ( trunc_ln386_3_fu_702_p1 );
    sensitive << ( trunc_ln54_9_fu_722_p1 );

    SC_METHOD(thread_i_10_fu_630_p2);
    sensitive << ( round_assign_reg_438 );

    SC_METHOD(thread_i_11_fu_826_p2);
    sensitive << ( round_assign_1_reg_461 );

    SC_METHOD(thread_i_fu_965_p2);
    sensitive << ( round_assign_2_reg_496 );

    SC_METHOD(thread_icmp_ln1940_fu_624_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( round_assign_reg_438 );

    SC_METHOD(thread_icmp_ln1942_1_fu_740_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( challenge_fu_726_p3 );

    SC_METHOD(thread_icmp_ln1942_fu_734_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( challenge_fu_726_p3 );

    SC_METHOD(thread_icmp_ln1951_fu_820_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( round_assign_1_reg_461 );

    SC_METHOD(thread_icmp_ln1953_fu_906_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( challenge_1_fu_898_p3 );

    SC_METHOD(thread_icmp_ln1969_fu_614_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( sigBytesLen );

    SC_METHOD(thread_icmp_ln1980_fu_784_p2);
    sensitive << ( sigBytesLen_cast1_reg_1497 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( bytesExpected_2_fu_777_p3 );

    SC_METHOD(thread_icmp_ln2040_fu_789_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( loop_0_reg_449 );

    SC_METHOD(thread_icmp_ln2049_fu_912_p2);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( loop_1_reg_472 );

    SC_METHOD(thread_icmp_ln2053_fu_959_p2);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( round_assign_2_reg_496 );

    SC_METHOD(thread_icmp_ln2058_fu_1083_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_loop_2_phi_fu_524_p4 );

    SC_METHOD(thread_icmp_ln2071_fu_1133_p2);
    sensitive << ( loop_3_reg_532 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_icmp_ln2076_fu_1183_p2);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( loop_4_reg_543 );

    SC_METHOD(thread_icmp_ln2081_fu_1237_p2);
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_phi_mux_loop_5_phi_fu_559_p4 );

    SC_METHOD(thread_icmp_ln2085_fu_1306_p2);
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( tmp_fu_1296_p4 );

    SC_METHOD(thread_inputShareSize_1_fu_752_p2);
    sensitive << ( inputShareSize_reg_426 );

    SC_METHOD(thread_inputShareSize_2_fu_758_p3);
    sensitive << ( inputShareSize_reg_426 );
    sensitive << ( or_ln1942_fu_746_p2 );
    sensitive << ( inputShareSize_1_fu_752_p2 );

    SC_METHOD(thread_loop_28_fu_918_p2);
    sensitive << ( loop_1_reg_472 );

    SC_METHOD(thread_loop_29_fu_1089_p2);
    sensitive << ( ap_phi_mux_loop_2_phi_fu_524_p4 );

    SC_METHOD(thread_loop_30_fu_1139_p2);
    sensitive << ( loop_3_reg_532 );

    SC_METHOD(thread_loop_31_fu_1189_p2);
    sensitive << ( loop_4_reg_543 );

    SC_METHOD(thread_loop_32_fu_1243_p2);
    sensitive << ( ap_phi_mux_loop_5_phi_fu_559_p4 );

    SC_METHOD(thread_loop_33_fu_1440_p2);
    sensitive << ( loop_6_reg_567 );

    SC_METHOD(thread_loop_fu_795_p2);
    sensitive << ( loop_0_reg_449 );

    SC_METHOD(thread_lshr_ln54_10_fu_888_p2);
    sensitive << ( sig_0_challengeBits_q0 );
    sensitive << ( zext_ln54_18_fu_884_p1 );

    SC_METHOD(thread_lshr_ln54_11_fu_1036_p2);
    sensitive << ( sig_0_challengeBits_q0 );
    sensitive << ( zext_ln54_19_fu_1032_p1 );

    SC_METHOD(thread_lshr_ln54_12_fu_1056_p2);
    sensitive << ( sig_0_challengeBits_q0 );
    sensitive << ( zext_ln54_20_fu_1052_p1 );

    SC_METHOD(thread_lshr_ln54_8_fu_716_p2);
    sensitive << ( sigBytes_q0 );
    sensitive << ( zext_ln54_16_fu_712_p1 );

    SC_METHOD(thread_lshr_ln54_9_fu_868_p2);
    sensitive << ( sig_0_challengeBits_q0 );
    sensitive << ( zext_ln54_17_fu_864_p1 );

    SC_METHOD(thread_lshr_ln54_fu_696_p2);
    sensitive << ( sigBytes_q0 );
    sensitive << ( zext_ln54_15_fu_692_p1 );

    SC_METHOD(thread_mul_ln1978_fu_673_p1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( mul_ln1978_fu_673_p10 );

    SC_METHOD(thread_mul_ln1978_fu_673_p10);
    sensitive << ( params_UnruhGWithout );

    SC_METHOD(thread_mul_ln1978_fu_673_p2);
    sensitive << ( mul_ln1978_fu_673_p1 );

    SC_METHOD(thread_or_ln1942_fu_746_p2);
    sensitive << ( icmp_ln1942_fu_734_p2 );
    sensitive << ( icmp_ln1942_1_fu_740_p2 );

    SC_METHOD(thread_or_ln2088_1_fu_1382_p2);
    sensitive << ( trunc_ln2087_fu_1349_p1 );

    SC_METHOD(thread_or_ln2088_2_fu_1406_p2);
    sensitive << ( trunc_ln2087_fu_1349_p1 );

    SC_METHOD(thread_or_ln2088_fu_1353_p2);
    sensitive << ( trunc_ln2087_fu_1349_p1 );

    SC_METHOD(thread_sext_ln2077_fu_1205_p1);
    sensitive << ( add_ln2077_1_fu_1199_p2 );

    SC_METHOD(thread_sext_ln2082_fu_1259_p1);
    sensitive << ( add_ln2082_1_fu_1253_p2 );

    SC_METHOD(thread_shl_ln_fu_679_p3);
    sensitive << ( trunc_ln386_reg_1525 );

    SC_METHOD(thread_sigBytesLen_cast1_fu_610_p1);
    sensitive << ( sigBytesLen );

    SC_METHOD(thread_sigBytes_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( zext_ln54_13_fu_659_p1 );
    sensitive << ( zext_ln2041_2_fu_810_p1 );
    sensitive << ( zext_ln2050_3_fu_943_p1 );
    sensitive << ( zext_ln2059_3_fu_1114_p1 );
    sensitive << ( zext_ln2072_3_fu_1174_p1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( zext_ln2077_3_fu_1218_p1 );
    sensitive << ( zext_ln2082_3_fu_1272_p1 );
    sensitive << ( zext_ln2088_2_fu_1344_p1 );
    sensitive << ( zext_ln2088_11_fu_1450_p1 );

    SC_METHOD(thread_sigBytes_address1);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( zext_ln2088_5_fu_1377_p1 );
    sensitive << ( zext_ln2088_8_fu_1446_p1 );

    SC_METHOD(thread_sigBytes_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );

    SC_METHOD(thread_sigBytes_ce1);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );

    SC_METHOD(thread_sig_0_challengeBits_address0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln2041_fu_815_p1 );
    sensitive << ( zext_ln54_12_fu_846_p1 );
    sensitive << ( zext_ln54_14_fu_981_p1 );

    SC_METHOD(thread_sig_0_challengeBits_ce0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_sig_0_challengeBits_d0);
    sensitive << ( sigBytes_q0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_sig_0_challengeBits_we0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_sig_0_proofs_commun_address0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( zext_ln2072_4_fu_1179_p1 );

    SC_METHOD(thread_sig_0_proofs_commun_ce0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter1 );

    SC_METHOD(thread_sig_0_proofs_commun_d0);
    sensitive << ( sigBytes_q0 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );

    SC_METHOD(thread_sig_0_proofs_commun_we0);
    sensitive << ( icmp_ln2071_reg_1657 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter1 );

    SC_METHOD(thread_sig_0_proofs_inputS_address0);
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( zext_ln2088_12_fu_1472_p1 );

    SC_METHOD(thread_sig_0_proofs_inputS_ce0);
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_sig_0_proofs_inputS_d0);
    sensitive << ( sigBytes_q0 );
    sensitive << ( sigBytes_q1 );
    sensitive << ( sigBytes_load_6_reg_1748 );
    sensitive << ( sigBytes_load_7_reg_1753 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_sig_0_proofs_inputS_we0);
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_sig_0_proofs_seed1_address0);
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( zext_ln2077_4_fu_1232_p1 );

    SC_METHOD(thread_sig_0_proofs_seed1_ce0);
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_sig_0_proofs_seed1_d0);
    sensitive << ( sigBytes_q0 );
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_sig_0_proofs_seed1_we0);
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_sig_0_proofs_seed2_address0);
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( zext_ln2082_4_fu_1286_p1 );

    SC_METHOD(thread_sig_0_proofs_seed2_ce0);
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter1 );

    SC_METHOD(thread_sig_0_proofs_seed2_d0);
    sensitive << ( sigBytes_q0 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( ap_block_pp2_stage0 );

    SC_METHOD(thread_sig_0_proofs_seed2_we0);
    sensitive << ( icmp_ln2081_reg_1690 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter1 );

    SC_METHOD(thread_sig_0_proofs_view3C_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln2059_5_fu_1128_p1 );

    SC_METHOD(thread_sig_0_proofs_view3C_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_sig_0_proofs_view3C_d0);
    sensitive << ( sigBytes_q0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_sig_0_proofs_view3C_we0);
    sensitive << ( icmp_ln2058_reg_1643 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_sig_0_salt_address0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( zext_ln2050_fu_948_p1 );

    SC_METHOD(thread_sig_0_salt_ce0);
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_sig_0_salt_d0);
    sensitive << ( sigBytes_q0 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_sig_0_salt_we0);
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_tmp_21_fu_990_p3);
    sensitive << ( round_assign_2_reg_496 );

    SC_METHOD(thread_tmp_22_fu_1002_p3);
    sensitive << ( round_assign_2_reg_496 );

    SC_METHOD(thread_tmp_23_fu_1465_p3);
    sensitive << ( trunc_ln2088_4_reg_1738 );
    sensitive << ( round_assign_2_reg_496 );

    SC_METHOD(thread_tmp_47_fu_1318_p3);
    sensitive << ( loop_6_reg_567 );

    SC_METHOD(thread_tmp_fu_1296_p4);
    sensitive << ( add_ln2085_fu_1291_p2 );

    SC_METHOD(thread_trunc_ln1977_fu_766_p1);
    sensitive << ( params_transform_rea );

    SC_METHOD(thread_trunc_ln2087_fu_1349_p1);
    sensitive << ( loop_6_reg_567 );

    SC_METHOD(thread_trunc_ln386_3_fu_702_p1);
    sensitive << ( lshr_ln54_fu_696_p2 );

    SC_METHOD(thread_trunc_ln386_4_fu_832_p1);
    sensitive << ( round_assign_1_reg_461 );

    SC_METHOD(thread_trunc_ln386_5_fu_874_p1);
    sensitive << ( lshr_ln54_9_fu_868_p2 );

    SC_METHOD(thread_trunc_ln386_6_fu_1014_p1);
    sensitive << ( round_assign_2_reg_496 );

    SC_METHOD(thread_trunc_ln386_7_fu_1042_p1);
    sensitive << ( lshr_ln54_11_fu_1036_p2 );

    SC_METHOD(thread_trunc_ln386_fu_636_p1);
    sensitive << ( round_assign_reg_438 );

    SC_METHOD(thread_trunc_ln54_10_fu_894_p1);
    sensitive << ( lshr_ln54_10_fu_888_p2 );

    SC_METHOD(thread_trunc_ln54_11_fu_1062_p1);
    sensitive << ( lshr_ln54_12_fu_1056_p2 );

    SC_METHOD(thread_trunc_ln54_6_fu_836_p4);
    sensitive << ( round_assign_1_reg_461 );

    SC_METHOD(thread_trunc_ln54_8_fu_971_p4);
    sensitive << ( round_assign_2_reg_496 );

    SC_METHOD(thread_trunc_ln54_9_fu_722_p1);
    sensitive << ( lshr_ln54_8_fu_716_p2 );

    SC_METHOD(thread_trunc_ln54_fu_620_p1);
    sensitive << ( sigBytes_offset );

    SC_METHOD(thread_trunc_ln_fu_640_p4);
    sensitive << ( round_assign_reg_438 );

    SC_METHOD(thread_xor_ln54_2_fu_706_p2);
    sensitive << ( shl_ln_fu_679_p3 );

    SC_METHOD(thread_xor_ln54_3_fu_858_p2);
    sensitive << ( bitNumber_assign_fu_851_p3 );

    SC_METHOD(thread_xor_ln54_4_fu_878_p2);
    sensitive << ( bitNumber_assign_fu_851_p3 );

    SC_METHOD(thread_xor_ln54_5_fu_1026_p2);
    sensitive << ( bitNumber_assign_3_fu_1018_p3 );

    SC_METHOD(thread_xor_ln54_6_fu_1046_p2);
    sensitive << ( bitNumber_assign_3_fu_1018_p3 );

    SC_METHOD(thread_xor_ln54_fu_686_p2);
    sensitive << ( shl_ln_fu_679_p3 );

    SC_METHOD(thread_zext_ln1978_fu_769_p1);
    sensitive << ( mul_ln1978_reg_1541 );

    SC_METHOD(thread_zext_ln2041_1_fu_801_p1);
    sensitive << ( loop_0_reg_449 );

    SC_METHOD(thread_zext_ln2041_2_fu_810_p1);
    sensitive << ( add_ln2041_fu_805_p2 );

    SC_METHOD(thread_zext_ln2041_fu_815_p1);
    sensitive << ( loop_0_reg_449 );

    SC_METHOD(thread_zext_ln2050_1_fu_924_p1);
    sensitive << ( loop_1_reg_472 );

    SC_METHOD(thread_zext_ln2050_2_fu_934_p1);
    sensitive << ( add_ln2050_fu_928_p2 );

    SC_METHOD(thread_zext_ln2050_3_fu_943_p1);
    sensitive << ( add_ln2050_1_fu_938_p2 );

    SC_METHOD(thread_zext_ln2050_fu_948_p1);
    sensitive << ( loop_1_reg_472 );

    SC_METHOD(thread_zext_ln2053_1_fu_1010_p1);
    sensitive << ( tmp_22_fu_1002_p3 );

    SC_METHOD(thread_zext_ln2053_fu_986_p1);
    sensitive << ( p_01_rec_reg_484 );

    SC_METHOD(thread_zext_ln2059_1_fu_1095_p1);
    sensitive << ( ap_phi_mux_loop_2_phi_fu_524_p4 );

    SC_METHOD(thread_zext_ln2059_2_fu_1105_p1);
    sensitive << ( add_ln2059_2_fu_1099_p2 );

    SC_METHOD(thread_zext_ln2059_3_fu_1114_p1);
    sensitive << ( add_ln2059_1_fu_1109_p2 );

    SC_METHOD(thread_zext_ln2059_4_fu_1119_p1);
    sensitive << ( loop_2_reg_520 );

    SC_METHOD(thread_zext_ln2059_5_fu_1128_p1);
    sensitive << ( add_ln2059_3_fu_1123_p2 );

    SC_METHOD(thread_zext_ln2059_fu_998_p1);
    sensitive << ( tmp_21_fu_990_p3 );

    SC_METHOD(thread_zext_ln2072_1_fu_1155_p1);
    sensitive << ( loop_3_reg_532 );

    SC_METHOD(thread_zext_ln2072_2_fu_1165_p1);
    sensitive << ( add_ln2072_1_fu_1159_p2 );

    SC_METHOD(thread_zext_ln2072_3_fu_1174_p1);
    sensitive << ( add_ln2072_2_fu_1169_p2 );

    SC_METHOD(thread_zext_ln2072_4_fu_1179_p1);
    sensitive << ( add_ln2072_reg_1666 );

    SC_METHOD(thread_zext_ln2072_fu_1145_p1);
    sensitive << ( loop_3_reg_532 );

    SC_METHOD(thread_zext_ln2077_1_fu_1195_p1);
    sensitive << ( loop_4_reg_543 );

    SC_METHOD(thread_zext_ln2077_2_fu_1209_p1);
    sensitive << ( sext_ln2077_fu_1205_p1 );

    SC_METHOD(thread_zext_ln2077_3_fu_1218_p1);
    sensitive << ( add_ln2077_2_fu_1213_p2 );

    SC_METHOD(thread_zext_ln2077_4_fu_1232_p1);
    sensitive << ( add_ln2077_fu_1227_p2 );

    SC_METHOD(thread_zext_ln2077_fu_1223_p1);
    sensitive << ( loop_4_reg_543 );

    SC_METHOD(thread_zext_ln2082_1_fu_1249_p1);
    sensitive << ( ap_phi_mux_loop_5_phi_fu_559_p4 );

    SC_METHOD(thread_zext_ln2082_2_fu_1263_p1);
    sensitive << ( sext_ln2082_fu_1259_p1 );

    SC_METHOD(thread_zext_ln2082_3_fu_1272_p1);
    sensitive << ( add_ln2082_2_fu_1267_p2 );

    SC_METHOD(thread_zext_ln2082_4_fu_1286_p1);
    sensitive << ( add_ln2082_fu_1281_p2 );

    SC_METHOD(thread_zext_ln2082_fu_1277_p1);
    sensitive << ( loop_5_reg_555 );

    SC_METHOD(thread_zext_ln2088_10_fu_1421_p1);
    sensitive << ( add_ln2088_7_fu_1416_p2 );

    SC_METHOD(thread_zext_ln2088_11_fu_1450_p1);
    sensitive << ( add_ln2088_8_reg_1733 );

    SC_METHOD(thread_zext_ln2088_12_fu_1472_p1);
    sensitive << ( tmp_23_fu_1465_p3 );

    SC_METHOD(thread_zext_ln2088_1_fu_1335_p1);
    sensitive << ( add_ln2088_1_fu_1330_p2 );

    SC_METHOD(thread_zext_ln2088_2_fu_1344_p1);
    sensitive << ( add_ln2088_2_fu_1339_p2 );

    SC_METHOD(thread_zext_ln2088_3_fu_1359_p1);
    sensitive << ( or_ln2088_fu_1353_p2 );

    SC_METHOD(thread_zext_ln2088_4_fu_1368_p1);
    sensitive << ( add_ln2088_3_fu_1363_p2 );

    SC_METHOD(thread_zext_ln2088_5_fu_1377_p1);
    sensitive << ( add_ln2088_4_fu_1372_p2 );

    SC_METHOD(thread_zext_ln2088_6_fu_1388_p1);
    sensitive << ( or_ln2088_1_fu_1382_p2 );

    SC_METHOD(thread_zext_ln2088_7_fu_1397_p1);
    sensitive << ( add_ln2088_5_fu_1392_p2 );

    SC_METHOD(thread_zext_ln2088_8_fu_1446_p1);
    sensitive << ( add_ln2088_6_reg_1728 );

    SC_METHOD(thread_zext_ln2088_9_fu_1412_p1);
    sensitive << ( or_ln2088_2_fu_1406_p2 );

    SC_METHOD(thread_zext_ln2088_fu_1326_p1);
    sensitive << ( loop_6_reg_567 );

    SC_METHOD(thread_zext_ln2089_fu_1477_p1);
    sensitive << ( p_sum5_pn_reg_578 );

    SC_METHOD(thread_zext_ln386_fu_1074_p1);
    sensitive << ( challenge_2_fu_1066_p3 );

    SC_METHOD(thread_zext_ln54_12_fu_846_p1);
    sensitive << ( trunc_ln54_6_fu_836_p4 );

    SC_METHOD(thread_zext_ln54_13_fu_659_p1);
    sensitive << ( add_ln54_fu_654_p2 );

    SC_METHOD(thread_zext_ln54_14_fu_981_p1);
    sensitive << ( trunc_ln54_8_fu_971_p4 );

    SC_METHOD(thread_zext_ln54_15_fu_692_p1);
    sensitive << ( xor_ln54_fu_686_p2 );

    SC_METHOD(thread_zext_ln54_16_fu_712_p1);
    sensitive << ( xor_ln54_2_fu_706_p2 );

    SC_METHOD(thread_zext_ln54_17_fu_864_p1);
    sensitive << ( xor_ln54_3_fu_858_p2 );

    SC_METHOD(thread_zext_ln54_18_fu_884_p1);
    sensitive << ( xor_ln54_4_fu_878_p2 );

    SC_METHOD(thread_zext_ln54_19_fu_1032_p1);
    sensitive << ( xor_ln54_5_fu_1026_p2 );

    SC_METHOD(thread_zext_ln54_20_fu_1052_p1);
    sensitive << ( xor_ln54_6_fu_1046_p2 );

    SC_METHOD(thread_zext_ln54_fu_650_p1);
    sensitive << ( trunc_ln_fu_640_p4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln1969_fu_614_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln1940_fu_624_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln2040_fu_789_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_ln1951_fu_820_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( icmp_ln2049_fu_912_p2 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( icmp_ln2053_fu_959_p2 );
    sensitive << ( icmp_ln2058_fu_1083_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln2071_fu_1133_p2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( icmp_ln2076_fu_1183_p2 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( icmp_ln2081_fu_1237_p2 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( icmp_ln2085_fu_1306_p2 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( tmp_47_fu_1318_p3 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp1_stage0_subdone );
    sensitive << ( ap_block_pp2_stage0_subdone );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln1980_fu_784_p2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln1953_fu_906_p2 );

    ap_CS_fsm = "0000000000000000000000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp2_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp2_iter1 = SC_LOGIC_0;
    ap_return_preg = "0";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "deserializeSignature_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, sig_0_proofs_seed1_address0, "(port)sig_0_proofs_seed1_address0");
    sc_trace(mVcdFile, sig_0_proofs_seed1_ce0, "(port)sig_0_proofs_seed1_ce0");
    sc_trace(mVcdFile, sig_0_proofs_seed1_we0, "(port)sig_0_proofs_seed1_we0");
    sc_trace(mVcdFile, sig_0_proofs_seed1_d0, "(port)sig_0_proofs_seed1_d0");
    sc_trace(mVcdFile, sig_0_proofs_seed2_address0, "(port)sig_0_proofs_seed2_address0");
    sc_trace(mVcdFile, sig_0_proofs_seed2_ce0, "(port)sig_0_proofs_seed2_ce0");
    sc_trace(mVcdFile, sig_0_proofs_seed2_we0, "(port)sig_0_proofs_seed2_we0");
    sc_trace(mVcdFile, sig_0_proofs_seed2_d0, "(port)sig_0_proofs_seed2_d0");
    sc_trace(mVcdFile, sig_0_proofs_inputS_address0, "(port)sig_0_proofs_inputS_address0");
    sc_trace(mVcdFile, sig_0_proofs_inputS_ce0, "(port)sig_0_proofs_inputS_ce0");
    sc_trace(mVcdFile, sig_0_proofs_inputS_we0, "(port)sig_0_proofs_inputS_we0");
    sc_trace(mVcdFile, sig_0_proofs_inputS_d0, "(port)sig_0_proofs_inputS_d0");
    sc_trace(mVcdFile, sig_0_proofs_commun_address0, "(port)sig_0_proofs_commun_address0");
    sc_trace(mVcdFile, sig_0_proofs_commun_ce0, "(port)sig_0_proofs_commun_ce0");
    sc_trace(mVcdFile, sig_0_proofs_commun_we0, "(port)sig_0_proofs_commun_we0");
    sc_trace(mVcdFile, sig_0_proofs_commun_d0, "(port)sig_0_proofs_commun_d0");
    sc_trace(mVcdFile, sig_0_proofs_view3C_address0, "(port)sig_0_proofs_view3C_address0");
    sc_trace(mVcdFile, sig_0_proofs_view3C_ce0, "(port)sig_0_proofs_view3C_ce0");
    sc_trace(mVcdFile, sig_0_proofs_view3C_we0, "(port)sig_0_proofs_view3C_we0");
    sc_trace(mVcdFile, sig_0_proofs_view3C_d0, "(port)sig_0_proofs_view3C_d0");
    sc_trace(mVcdFile, sig_0_challengeBits_address0, "(port)sig_0_challengeBits_address0");
    sc_trace(mVcdFile, sig_0_challengeBits_ce0, "(port)sig_0_challengeBits_ce0");
    sc_trace(mVcdFile, sig_0_challengeBits_we0, "(port)sig_0_challengeBits_we0");
    sc_trace(mVcdFile, sig_0_challengeBits_d0, "(port)sig_0_challengeBits_d0");
    sc_trace(mVcdFile, sig_0_challengeBits_q0, "(port)sig_0_challengeBits_q0");
    sc_trace(mVcdFile, sig_0_salt_address0, "(port)sig_0_salt_address0");
    sc_trace(mVcdFile, sig_0_salt_ce0, "(port)sig_0_salt_ce0");
    sc_trace(mVcdFile, sig_0_salt_we0, "(port)sig_0_salt_we0");
    sc_trace(mVcdFile, sig_0_salt_d0, "(port)sig_0_salt_d0");
    sc_trace(mVcdFile, sigBytes_address0, "(port)sigBytes_address0");
    sc_trace(mVcdFile, sigBytes_ce0, "(port)sigBytes_ce0");
    sc_trace(mVcdFile, sigBytes_q0, "(port)sigBytes_q0");
    sc_trace(mVcdFile, sigBytes_address1, "(port)sigBytes_address1");
    sc_trace(mVcdFile, sigBytes_ce1, "(port)sigBytes_ce1");
    sc_trace(mVcdFile, sigBytes_q1, "(port)sigBytes_q1");
    sc_trace(mVcdFile, sigBytes_offset, "(port)sigBytes_offset");
    sc_trace(mVcdFile, sigBytesLen, "(port)sigBytesLen");
    sc_trace(mVcdFile, params_UnruhGWithout, "(port)params_UnruhGWithout");
    sc_trace(mVcdFile, params_transform_rea, "(port)params_transform_rea");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, loop_2_reg_520, "loop_2_reg_520");
    sc_trace(mVcdFile, loop_3_reg_532, "loop_3_reg_532");
    sc_trace(mVcdFile, loop_5_reg_555, "loop_5_reg_555");
    sc_trace(mVcdFile, sigBytesLen_cast1_fu_610_p1, "sigBytesLen_cast1_fu_610_p1");
    sc_trace(mVcdFile, sigBytesLen_cast1_reg_1497, "sigBytesLen_cast1_reg_1497");
    sc_trace(mVcdFile, trunc_ln54_fu_620_p1, "trunc_ln54_fu_620_p1");
    sc_trace(mVcdFile, trunc_ln54_reg_1505, "trunc_ln54_reg_1505");
    sc_trace(mVcdFile, icmp_ln1969_fu_614_p2, "icmp_ln1969_fu_614_p2");
    sc_trace(mVcdFile, i_10_fu_630_p2, "i_10_fu_630_p2");
    sc_trace(mVcdFile, i_10_reg_1520, "i_10_reg_1520");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, trunc_ln386_fu_636_p1, "trunc_ln386_fu_636_p1");
    sc_trace(mVcdFile, trunc_ln386_reg_1525, "trunc_ln386_reg_1525");
    sc_trace(mVcdFile, icmp_ln1940_fu_624_p2, "icmp_ln1940_fu_624_p2");
    sc_trace(mVcdFile, bytesExpected_fu_664_p2, "bytesExpected_fu_664_p2");
    sc_trace(mVcdFile, bytesExpected_reg_1535, "bytesExpected_reg_1535");
    sc_trace(mVcdFile, mul_ln1978_fu_673_p2, "mul_ln1978_fu_673_p2");
    sc_trace(mVcdFile, mul_ln1978_reg_1541, "mul_ln1978_reg_1541");
    sc_trace(mVcdFile, inputShareSize_2_fu_758_p3, "inputShareSize_2_fu_758_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, loop_fu_795_p2, "loop_fu_795_p2");
    sc_trace(mVcdFile, loop_reg_1557, "loop_reg_1557");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, icmp_ln2040_fu_789_p2, "icmp_ln2040_fu_789_p2");
    sc_trace(mVcdFile, i_11_fu_826_p2, "i_11_fu_826_p2");
    sc_trace(mVcdFile, i_11_reg_1570, "i_11_reg_1570");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, trunc_ln386_4_fu_832_p1, "trunc_ln386_4_fu_832_p1");
    sc_trace(mVcdFile, trunc_ln386_4_reg_1575, "trunc_ln386_4_reg_1575");
    sc_trace(mVcdFile, icmp_ln1951_fu_820_p2, "icmp_ln1951_fu_820_p2");
    sc_trace(mVcdFile, loop_28_fu_918_p2, "loop_28_fu_918_p2");
    sc_trace(mVcdFile, loop_28_reg_1591, "loop_28_reg_1591");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, icmp_ln2049_fu_912_p2, "icmp_ln2049_fu_912_p2");
    sc_trace(mVcdFile, add_ln2053_fu_953_p2, "add_ln2053_fu_953_p2");
    sc_trace(mVcdFile, add_ln2053_reg_1601, "add_ln2053_reg_1601");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, i_fu_965_p2, "i_fu_965_p2");
    sc_trace(mVcdFile, i_reg_1609, "i_reg_1609");
    sc_trace(mVcdFile, icmp_ln2053_fu_959_p2, "icmp_ln2053_fu_959_p2");
    sc_trace(mVcdFile, zext_ln2059_fu_998_p1, "zext_ln2059_fu_998_p1");
    sc_trace(mVcdFile, zext_ln2059_reg_1619, "zext_ln2059_reg_1619");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, zext_ln2053_1_fu_1010_p1, "zext_ln2053_1_fu_1010_p1");
    sc_trace(mVcdFile, zext_ln2053_1_reg_1625, "zext_ln2053_1_reg_1625");
    sc_trace(mVcdFile, zext_ln386_fu_1074_p1, "zext_ln386_fu_1074_p1");
    sc_trace(mVcdFile, zext_ln386_reg_1630, "zext_ln386_reg_1630");
    sc_trace(mVcdFile, add_ln2059_fu_1078_p2, "add_ln2059_fu_1078_p2");
    sc_trace(mVcdFile, add_ln2059_reg_1635, "add_ln2059_reg_1635");
    sc_trace(mVcdFile, icmp_ln2058_fu_1083_p2, "icmp_ln2058_fu_1083_p2");
    sc_trace(mVcdFile, icmp_ln2058_reg_1643, "icmp_ln2058_reg_1643");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state13_pp0_stage0_iter0, "ap_block_state13_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state14_pp0_stage0_iter1, "ap_block_state14_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, loop_29_fu_1089_p2, "loop_29_fu_1089_p2");
    sc_trace(mVcdFile, loop_29_reg_1647, "loop_29_reg_1647");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, icmp_ln2071_fu_1133_p2, "icmp_ln2071_fu_1133_p2");
    sc_trace(mVcdFile, icmp_ln2071_reg_1657, "icmp_ln2071_reg_1657");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_block_state16_pp1_stage0_iter0, "ap_block_state16_pp1_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state17_pp1_stage0_iter1, "ap_block_state17_pp1_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage0_11001, "ap_block_pp1_stage0_11001");
    sc_trace(mVcdFile, loop_30_fu_1139_p2, "loop_30_fu_1139_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, add_ln2072_fu_1149_p2, "add_ln2072_fu_1149_p2");
    sc_trace(mVcdFile, add_ln2072_reg_1666, "add_ln2072_reg_1666");
    sc_trace(mVcdFile, icmp_ln2076_fu_1183_p2, "icmp_ln2076_fu_1183_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, loop_31_fu_1189_p2, "loop_31_fu_1189_p2");
    sc_trace(mVcdFile, loop_31_reg_1680, "loop_31_reg_1680");
    sc_trace(mVcdFile, icmp_ln2081_fu_1237_p2, "icmp_ln2081_fu_1237_p2");
    sc_trace(mVcdFile, icmp_ln2081_reg_1690, "icmp_ln2081_reg_1690");
    sc_trace(mVcdFile, ap_CS_fsm_pp2_stage0, "ap_CS_fsm_pp2_stage0");
    sc_trace(mVcdFile, ap_block_state21_pp2_stage0_iter0, "ap_block_state21_pp2_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state22_pp2_stage0_iter1, "ap_block_state22_pp2_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp2_stage0_11001, "ap_block_pp2_stage0_11001");
    sc_trace(mVcdFile, loop_32_fu_1243_p2, "loop_32_fu_1243_p2");
    sc_trace(mVcdFile, loop_32_reg_1694, "loop_32_reg_1694");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter0, "ap_enable_reg_pp2_iter0");
    sc_trace(mVcdFile, add_ln2088_fu_1312_p2, "add_ln2088_fu_1312_p2");
    sc_trace(mVcdFile, add_ln2088_reg_1707, "add_ln2088_reg_1707");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, icmp_ln2085_fu_1306_p2, "icmp_ln2085_fu_1306_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, tmp_47_fu_1318_p3, "tmp_47_fu_1318_p3");
    sc_trace(mVcdFile, add_ln2088_6_fu_1401_p2, "add_ln2088_6_fu_1401_p2");
    sc_trace(mVcdFile, add_ln2088_6_reg_1728, "add_ln2088_6_reg_1728");
    sc_trace(mVcdFile, add_ln2088_8_fu_1425_p2, "add_ln2088_8_fu_1425_p2");
    sc_trace(mVcdFile, add_ln2088_8_reg_1733, "add_ln2088_8_reg_1733");
    sc_trace(mVcdFile, trunc_ln2088_4_reg_1738, "trunc_ln2088_4_reg_1738");
    sc_trace(mVcdFile, loop_33_fu_1440_p2, "loop_33_fu_1440_p2");
    sc_trace(mVcdFile, loop_33_reg_1743, "loop_33_reg_1743");
    sc_trace(mVcdFile, sigBytes_load_6_reg_1748, "sigBytes_load_6_reg_1748");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, sigBytes_load_7_reg_1753, "sigBytes_load_7_reg_1753");
    sc_trace(mVcdFile, add_ln2089_fu_1481_p2, "add_ln2089_fu_1481_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state13, "ap_condition_pp0_exit_iter0_state13");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_block_pp1_stage0_subdone, "ap_block_pp1_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp1_exit_iter0_state16, "ap_condition_pp1_exit_iter0_state16");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, ap_block_pp2_stage0_subdone, "ap_block_pp2_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp2_exit_iter0_state21, "ap_condition_pp2_exit_iter0_state21");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter1, "ap_enable_reg_pp2_iter1");
    sc_trace(mVcdFile, inputShareSize_reg_426, "inputShareSize_reg_426");
    sc_trace(mVcdFile, round_assign_reg_438, "round_assign_reg_438");
    sc_trace(mVcdFile, loop_0_reg_449, "loop_0_reg_449");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, icmp_ln1980_fu_784_p2, "icmp_ln1980_fu_784_p2");
    sc_trace(mVcdFile, round_assign_1_reg_461, "round_assign_1_reg_461");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, icmp_ln1953_fu_906_p2, "icmp_ln1953_fu_906_p2");
    sc_trace(mVcdFile, loop_1_reg_472, "loop_1_reg_472");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, p_01_rec_reg_484, "p_01_rec_reg_484");
    sc_trace(mVcdFile, round_assign_2_reg_496, "round_assign_2_reg_496");
    sc_trace(mVcdFile, phi_mul_reg_508, "phi_mul_reg_508");
    sc_trace(mVcdFile, ap_phi_mux_loop_2_phi_fu_524_p4, "ap_phi_mux_loop_2_phi_fu_524_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, loop_4_reg_543, "loop_4_reg_543");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, ap_phi_mux_loop_5_phi_fu_559_p4, "ap_phi_mux_loop_5_phi_fu_559_p4");
    sc_trace(mVcdFile, ap_block_pp2_stage0, "ap_block_pp2_stage0");
    sc_trace(mVcdFile, loop_6_reg_567, "loop_6_reg_567");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, p_sum5_pn_reg_578, "p_sum5_pn_reg_578");
    sc_trace(mVcdFile, p_0_reg_591, "p_0_reg_591");
    sc_trace(mVcdFile, zext_ln54_13_fu_659_p1, "zext_ln54_13_fu_659_p1");
    sc_trace(mVcdFile, zext_ln2041_2_fu_810_p1, "zext_ln2041_2_fu_810_p1");
    sc_trace(mVcdFile, zext_ln2041_fu_815_p1, "zext_ln2041_fu_815_p1");
    sc_trace(mVcdFile, zext_ln54_12_fu_846_p1, "zext_ln54_12_fu_846_p1");
    sc_trace(mVcdFile, zext_ln2050_3_fu_943_p1, "zext_ln2050_3_fu_943_p1");
    sc_trace(mVcdFile, zext_ln2050_fu_948_p1, "zext_ln2050_fu_948_p1");
    sc_trace(mVcdFile, zext_ln54_14_fu_981_p1, "zext_ln54_14_fu_981_p1");
    sc_trace(mVcdFile, zext_ln2059_3_fu_1114_p1, "zext_ln2059_3_fu_1114_p1");
    sc_trace(mVcdFile, zext_ln2059_5_fu_1128_p1, "zext_ln2059_5_fu_1128_p1");
    sc_trace(mVcdFile, zext_ln2072_3_fu_1174_p1, "zext_ln2072_3_fu_1174_p1");
    sc_trace(mVcdFile, ap_block_pp1_stage0, "ap_block_pp1_stage0");
    sc_trace(mVcdFile, zext_ln2072_4_fu_1179_p1, "zext_ln2072_4_fu_1179_p1");
    sc_trace(mVcdFile, zext_ln2077_3_fu_1218_p1, "zext_ln2077_3_fu_1218_p1");
    sc_trace(mVcdFile, zext_ln2077_4_fu_1232_p1, "zext_ln2077_4_fu_1232_p1");
    sc_trace(mVcdFile, zext_ln2082_3_fu_1272_p1, "zext_ln2082_3_fu_1272_p1");
    sc_trace(mVcdFile, zext_ln2082_4_fu_1286_p1, "zext_ln2082_4_fu_1286_p1");
    sc_trace(mVcdFile, zext_ln2088_2_fu_1344_p1, "zext_ln2088_2_fu_1344_p1");
    sc_trace(mVcdFile, zext_ln2088_5_fu_1377_p1, "zext_ln2088_5_fu_1377_p1");
    sc_trace(mVcdFile, zext_ln2088_8_fu_1446_p1, "zext_ln2088_8_fu_1446_p1");
    sc_trace(mVcdFile, zext_ln2088_11_fu_1450_p1, "zext_ln2088_11_fu_1450_p1");
    sc_trace(mVcdFile, zext_ln2088_12_fu_1472_p1, "zext_ln2088_12_fu_1472_p1");
    sc_trace(mVcdFile, trunc_ln_fu_640_p4, "trunc_ln_fu_640_p4");
    sc_trace(mVcdFile, zext_ln54_fu_650_p1, "zext_ln54_fu_650_p1");
    sc_trace(mVcdFile, add_ln54_fu_654_p2, "add_ln54_fu_654_p2");
    sc_trace(mVcdFile, mul_ln1978_fu_673_p1, "mul_ln1978_fu_673_p1");
    sc_trace(mVcdFile, shl_ln_fu_679_p3, "shl_ln_fu_679_p3");
    sc_trace(mVcdFile, xor_ln54_fu_686_p2, "xor_ln54_fu_686_p2");
    sc_trace(mVcdFile, zext_ln54_15_fu_692_p1, "zext_ln54_15_fu_692_p1");
    sc_trace(mVcdFile, lshr_ln54_fu_696_p2, "lshr_ln54_fu_696_p2");
    sc_trace(mVcdFile, xor_ln54_2_fu_706_p2, "xor_ln54_2_fu_706_p2");
    sc_trace(mVcdFile, zext_ln54_16_fu_712_p1, "zext_ln54_16_fu_712_p1");
    sc_trace(mVcdFile, lshr_ln54_8_fu_716_p2, "lshr_ln54_8_fu_716_p2");
    sc_trace(mVcdFile, trunc_ln386_3_fu_702_p1, "trunc_ln386_3_fu_702_p1");
    sc_trace(mVcdFile, trunc_ln54_9_fu_722_p1, "trunc_ln54_9_fu_722_p1");
    sc_trace(mVcdFile, challenge_fu_726_p3, "challenge_fu_726_p3");
    sc_trace(mVcdFile, icmp_ln1942_fu_734_p2, "icmp_ln1942_fu_734_p2");
    sc_trace(mVcdFile, icmp_ln1942_1_fu_740_p2, "icmp_ln1942_1_fu_740_p2");
    sc_trace(mVcdFile, or_ln1942_fu_746_p2, "or_ln1942_fu_746_p2");
    sc_trace(mVcdFile, inputShareSize_1_fu_752_p2, "inputShareSize_1_fu_752_p2");
    sc_trace(mVcdFile, zext_ln1978_fu_769_p1, "zext_ln1978_fu_769_p1");
    sc_trace(mVcdFile, trunc_ln1977_fu_766_p1, "trunc_ln1977_fu_766_p1");
    sc_trace(mVcdFile, bytesExpected_1_fu_772_p2, "bytesExpected_1_fu_772_p2");
    sc_trace(mVcdFile, bytesExpected_2_fu_777_p3, "bytesExpected_2_fu_777_p3");
    sc_trace(mVcdFile, zext_ln2041_1_fu_801_p1, "zext_ln2041_1_fu_801_p1");
    sc_trace(mVcdFile, add_ln2041_fu_805_p2, "add_ln2041_fu_805_p2");
    sc_trace(mVcdFile, trunc_ln54_6_fu_836_p4, "trunc_ln54_6_fu_836_p4");
    sc_trace(mVcdFile, bitNumber_assign_fu_851_p3, "bitNumber_assign_fu_851_p3");
    sc_trace(mVcdFile, xor_ln54_3_fu_858_p2, "xor_ln54_3_fu_858_p2");
    sc_trace(mVcdFile, zext_ln54_17_fu_864_p1, "zext_ln54_17_fu_864_p1");
    sc_trace(mVcdFile, lshr_ln54_9_fu_868_p2, "lshr_ln54_9_fu_868_p2");
    sc_trace(mVcdFile, xor_ln54_4_fu_878_p2, "xor_ln54_4_fu_878_p2");
    sc_trace(mVcdFile, zext_ln54_18_fu_884_p1, "zext_ln54_18_fu_884_p1");
    sc_trace(mVcdFile, lshr_ln54_10_fu_888_p2, "lshr_ln54_10_fu_888_p2");
    sc_trace(mVcdFile, trunc_ln386_5_fu_874_p1, "trunc_ln386_5_fu_874_p1");
    sc_trace(mVcdFile, trunc_ln54_10_fu_894_p1, "trunc_ln54_10_fu_894_p1");
    sc_trace(mVcdFile, challenge_1_fu_898_p3, "challenge_1_fu_898_p3");
    sc_trace(mVcdFile, zext_ln2050_1_fu_924_p1, "zext_ln2050_1_fu_924_p1");
    sc_trace(mVcdFile, add_ln2050_fu_928_p2, "add_ln2050_fu_928_p2");
    sc_trace(mVcdFile, zext_ln2050_2_fu_934_p1, "zext_ln2050_2_fu_934_p1");
    sc_trace(mVcdFile, add_ln2050_1_fu_938_p2, "add_ln2050_1_fu_938_p2");
    sc_trace(mVcdFile, trunc_ln54_8_fu_971_p4, "trunc_ln54_8_fu_971_p4");
    sc_trace(mVcdFile, tmp_21_fu_990_p3, "tmp_21_fu_990_p3");
    sc_trace(mVcdFile, tmp_22_fu_1002_p3, "tmp_22_fu_1002_p3");
    sc_trace(mVcdFile, trunc_ln386_6_fu_1014_p1, "trunc_ln386_6_fu_1014_p1");
    sc_trace(mVcdFile, bitNumber_assign_3_fu_1018_p3, "bitNumber_assign_3_fu_1018_p3");
    sc_trace(mVcdFile, xor_ln54_5_fu_1026_p2, "xor_ln54_5_fu_1026_p2");
    sc_trace(mVcdFile, zext_ln54_19_fu_1032_p1, "zext_ln54_19_fu_1032_p1");
    sc_trace(mVcdFile, lshr_ln54_11_fu_1036_p2, "lshr_ln54_11_fu_1036_p2");
    sc_trace(mVcdFile, xor_ln54_6_fu_1046_p2, "xor_ln54_6_fu_1046_p2");
    sc_trace(mVcdFile, zext_ln54_20_fu_1052_p1, "zext_ln54_20_fu_1052_p1");
    sc_trace(mVcdFile, lshr_ln54_12_fu_1056_p2, "lshr_ln54_12_fu_1056_p2");
    sc_trace(mVcdFile, trunc_ln386_7_fu_1042_p1, "trunc_ln386_7_fu_1042_p1");
    sc_trace(mVcdFile, trunc_ln54_11_fu_1062_p1, "trunc_ln54_11_fu_1062_p1");
    sc_trace(mVcdFile, challenge_2_fu_1066_p3, "challenge_2_fu_1066_p3");
    sc_trace(mVcdFile, zext_ln2053_fu_986_p1, "zext_ln2053_fu_986_p1");
    sc_trace(mVcdFile, zext_ln2059_1_fu_1095_p1, "zext_ln2059_1_fu_1095_p1");
    sc_trace(mVcdFile, add_ln2059_2_fu_1099_p2, "add_ln2059_2_fu_1099_p2");
    sc_trace(mVcdFile, zext_ln2059_2_fu_1105_p1, "zext_ln2059_2_fu_1105_p1");
    sc_trace(mVcdFile, add_ln2059_1_fu_1109_p2, "add_ln2059_1_fu_1109_p2");
    sc_trace(mVcdFile, zext_ln2059_4_fu_1119_p1, "zext_ln2059_4_fu_1119_p1");
    sc_trace(mVcdFile, add_ln2059_3_fu_1123_p2, "add_ln2059_3_fu_1123_p2");
    sc_trace(mVcdFile, zext_ln2072_fu_1145_p1, "zext_ln2072_fu_1145_p1");
    sc_trace(mVcdFile, zext_ln2072_1_fu_1155_p1, "zext_ln2072_1_fu_1155_p1");
    sc_trace(mVcdFile, add_ln2072_1_fu_1159_p2, "add_ln2072_1_fu_1159_p2");
    sc_trace(mVcdFile, zext_ln2072_2_fu_1165_p1, "zext_ln2072_2_fu_1165_p1");
    sc_trace(mVcdFile, add_ln2072_2_fu_1169_p2, "add_ln2072_2_fu_1169_p2");
    sc_trace(mVcdFile, zext_ln2077_1_fu_1195_p1, "zext_ln2077_1_fu_1195_p1");
    sc_trace(mVcdFile, add_ln2077_1_fu_1199_p2, "add_ln2077_1_fu_1199_p2");
    sc_trace(mVcdFile, sext_ln2077_fu_1205_p1, "sext_ln2077_fu_1205_p1");
    sc_trace(mVcdFile, zext_ln2077_2_fu_1209_p1, "zext_ln2077_2_fu_1209_p1");
    sc_trace(mVcdFile, add_ln2077_2_fu_1213_p2, "add_ln2077_2_fu_1213_p2");
    sc_trace(mVcdFile, zext_ln2077_fu_1223_p1, "zext_ln2077_fu_1223_p1");
    sc_trace(mVcdFile, add_ln2077_fu_1227_p2, "add_ln2077_fu_1227_p2");
    sc_trace(mVcdFile, zext_ln2082_1_fu_1249_p1, "zext_ln2082_1_fu_1249_p1");
    sc_trace(mVcdFile, add_ln2082_1_fu_1253_p2, "add_ln2082_1_fu_1253_p2");
    sc_trace(mVcdFile, sext_ln2082_fu_1259_p1, "sext_ln2082_fu_1259_p1");
    sc_trace(mVcdFile, zext_ln2082_2_fu_1263_p1, "zext_ln2082_2_fu_1263_p1");
    sc_trace(mVcdFile, add_ln2082_2_fu_1267_p2, "add_ln2082_2_fu_1267_p2");
    sc_trace(mVcdFile, zext_ln2082_fu_1277_p1, "zext_ln2082_fu_1277_p1");
    sc_trace(mVcdFile, add_ln2082_fu_1281_p2, "add_ln2082_fu_1281_p2");
    sc_trace(mVcdFile, add_ln2085_fu_1291_p2, "add_ln2085_fu_1291_p2");
    sc_trace(mVcdFile, tmp_fu_1296_p4, "tmp_fu_1296_p4");
    sc_trace(mVcdFile, zext_ln2088_fu_1326_p1, "zext_ln2088_fu_1326_p1");
    sc_trace(mVcdFile, add_ln2088_1_fu_1330_p2, "add_ln2088_1_fu_1330_p2");
    sc_trace(mVcdFile, zext_ln2088_1_fu_1335_p1, "zext_ln2088_1_fu_1335_p1");
    sc_trace(mVcdFile, add_ln2088_2_fu_1339_p2, "add_ln2088_2_fu_1339_p2");
    sc_trace(mVcdFile, trunc_ln2087_fu_1349_p1, "trunc_ln2087_fu_1349_p1");
    sc_trace(mVcdFile, or_ln2088_fu_1353_p2, "or_ln2088_fu_1353_p2");
    sc_trace(mVcdFile, zext_ln2088_3_fu_1359_p1, "zext_ln2088_3_fu_1359_p1");
    sc_trace(mVcdFile, add_ln2088_3_fu_1363_p2, "add_ln2088_3_fu_1363_p2");
    sc_trace(mVcdFile, zext_ln2088_4_fu_1368_p1, "zext_ln2088_4_fu_1368_p1");
    sc_trace(mVcdFile, add_ln2088_4_fu_1372_p2, "add_ln2088_4_fu_1372_p2");
    sc_trace(mVcdFile, or_ln2088_1_fu_1382_p2, "or_ln2088_1_fu_1382_p2");
    sc_trace(mVcdFile, zext_ln2088_6_fu_1388_p1, "zext_ln2088_6_fu_1388_p1");
    sc_trace(mVcdFile, add_ln2088_5_fu_1392_p2, "add_ln2088_5_fu_1392_p2");
    sc_trace(mVcdFile, zext_ln2088_7_fu_1397_p1, "zext_ln2088_7_fu_1397_p1");
    sc_trace(mVcdFile, or_ln2088_2_fu_1406_p2, "or_ln2088_2_fu_1406_p2");
    sc_trace(mVcdFile, zext_ln2088_9_fu_1412_p1, "zext_ln2088_9_fu_1412_p1");
    sc_trace(mVcdFile, add_ln2088_7_fu_1416_p2, "add_ln2088_7_fu_1416_p2");
    sc_trace(mVcdFile, zext_ln2088_10_fu_1421_p1, "zext_ln2088_10_fu_1421_p1");
    sc_trace(mVcdFile, tmp_23_fu_1465_p3, "tmp_23_fu_1465_p3");
    sc_trace(mVcdFile, zext_ln2089_fu_1477_p1, "zext_ln2089_fu_1477_p1");
    sc_trace(mVcdFile, ap_return_preg, "ap_return_preg");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_idle_pp1, "ap_idle_pp1");
    sc_trace(mVcdFile, ap_enable_pp1, "ap_enable_pp1");
    sc_trace(mVcdFile, ap_idle_pp2, "ap_idle_pp2");
    sc_trace(mVcdFile, ap_enable_pp2, "ap_enable_pp2");
    sc_trace(mVcdFile, mul_ln1978_fu_673_p10, "mul_ln1978_fu_673_p10");
#endif

    }
}

deserializeSignature::~deserializeSignature() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void deserializeSignature::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state13.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state13.read()))) {
            ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state13.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state16.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state16.read()))) {
            ap_enable_reg_pp1_iter1 = (ap_condition_pp1_exit_iter0_state16.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
            ap_enable_reg_pp1_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp2_exit_iter0_state21.read()))) {
            ap_enable_reg_pp2_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln2076_fu_1183_p2.read()))) {
            ap_enable_reg_pp2_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp2_exit_iter0_state21.read()))) {
            ap_enable_reg_pp2_iter1 = (ap_condition_pp2_exit_iter0_state21.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp2_iter1 = ap_enable_reg_pp2_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln2076_fu_1183_p2.read()))) {
            ap_enable_reg_pp2_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_preg = ap_const_lv1_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
            ap_return_preg = p_0_reg_591.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(icmp_ln1969_fu_614_p2.read(), ap_const_lv1_0))) {
        inputShareSize_reg_426 = ap_const_lv64_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        inputShareSize_reg_426 = inputShareSize_2_fu_758_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln1980_fu_784_p2.read()))) {
        loop_0_reg_449 = ap_const_lv6_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        loop_0_reg_449 = loop_reg_1557.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln1951_fu_820_p2.read()))) {
        loop_1_reg_472 = ap_const_lv6_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        loop_1_reg_472 = loop_28_reg_1591.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln2058_reg_1643.read()))) {
        loop_2_reg_520 = loop_29_reg_1647.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        loop_2_reg_520 = ap_const_lv6_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        loop_3_reg_532 = ap_const_lv7_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln2071_fu_1133_p2.read()))) {
        loop_3_reg_532 = loop_30_fu_1139_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        loop_4_reg_543 = ap_const_lv5_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        loop_4_reg_543 = loop_31_reg_1680.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln2076_fu_1183_p2.read()))) {
        loop_5_reg_555 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln2081_reg_1690.read()))) {
        loop_5_reg_555 = loop_32_reg_1694.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln2085_fu_1306_p2.read()))) {
        loop_6_reg_567 = ap_const_lv5_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        loop_6_reg_567 = loop_33_reg_1743.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln2049_fu_912_p2.read()))) {
        p_01_rec_reg_484 = ap_const_lv16_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        p_01_rec_reg_484 = add_ln2089_fu_1481_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln2053_fu_959_p2.read()))) {
        p_0_reg_591 = ap_const_lv1_0;
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                 esl_seteq<1,1,1>(icmp_ln1969_fu_614_p2.read(), ap_const_lv1_1)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln1980_fu_784_p2.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln1953_fu_906_p2.read())))) {
        p_0_reg_591 = ap_const_lv1_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_47_fu_1318_p3.read()))) {
        p_sum5_pn_reg_578 = ap_const_lv8_9B;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln2085_fu_1306_p2.read()))) {
        p_sum5_pn_reg_578 = ap_const_lv8_8B;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln2049_fu_912_p2.read()))) {
        phi_mul_reg_508 = ap_const_lv15_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        phi_mul_reg_508 = add_ln2053_reg_1601.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln2040_fu_789_p2.read()))) {
        round_assign_1_reg_461 = ap_const_lv8_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln1953_fu_906_p2.read()))) {
        round_assign_1_reg_461 = i_11_reg_1570.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln2049_fu_912_p2.read()))) {
        round_assign_2_reg_496 = ap_const_lv8_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        round_assign_2_reg_496 = i_reg_1609.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(icmp_ln1969_fu_614_p2.read(), ap_const_lv1_0))) {
        round_assign_reg_438 = ap_const_lv8_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        round_assign_reg_438 = i_10_reg_1520.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        add_ln2053_reg_1601 = add_ln2053_fu_953_p2.read();
        i_reg_1609 = i_fu_965_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        add_ln2059_reg_1635 = add_ln2059_fu_1078_p2.read();
        zext_ln2053_1_reg_1625 = zext_ln2053_1_fu_1010_p1.read();
        zext_ln2059_reg_1619 = zext_ln2059_fu_998_p1.read();
        zext_ln386_reg_1630 = zext_ln386_fu_1074_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln2071_fu_1133_p2.read()))) {
        add_ln2072_reg_1666 = add_ln2072_fu_1149_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_47_fu_1318_p3.read()))) {
        add_ln2088_6_reg_1728 = add_ln2088_6_fu_1401_p2.read();
        add_ln2088_8_reg_1733 = add_ln2088_8_fu_1425_p2.read();
        loop_33_reg_1743 = loop_33_fu_1440_p2.read();
        trunc_ln2088_4_reg_1738 = loop_6_reg_567.read().range(3, 2);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln2085_fu_1306_p2.read()))) {
        add_ln2088_reg_1707 = add_ln2088_fu_1312_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln1940_fu_624_p2.read(), ap_const_lv1_1))) {
        bytesExpected_reg_1535 = bytesExpected_fu_664_p2.read();
        mul_ln1978_reg_1541 = mul_ln1978_fu_673_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_10_reg_1520 = i_10_fu_630_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        i_11_reg_1570 = i_11_fu_826_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln2058_reg_1643 = icmp_ln2058_fu_1083_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln2071_reg_1657 = icmp_ln2071_fu_1133_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln2081_reg_1690 = icmp_ln2081_fu_1237_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        loop_28_reg_1591 = loop_28_fu_918_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        loop_29_reg_1647 = loop_29_fu_1089_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        loop_31_reg_1680 = loop_31_fu_1189_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()))) {
        loop_32_reg_1694 = loop_32_fu_1243_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        loop_reg_1557 = loop_fu_795_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        sigBytesLen_cast1_reg_1497 = sigBytesLen_cast1_fu_610_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        sigBytes_load_6_reg_1748 = sigBytes_q0.read();
        sigBytes_load_7_reg_1753 = sigBytes_q1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln1951_fu_820_p2.read()))) {
        trunc_ln386_4_reg_1575 = trunc_ln386_4_fu_832_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln1940_fu_624_p2.read()))) {
        trunc_ln386_reg_1525 = trunc_ln386_fu_636_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(icmp_ln1969_fu_614_p2.read(), ap_const_lv1_0))) {
        trunc_ln54_reg_1505 = trunc_ln54_fu_620_p1.read();
    }
}

void deserializeSignature::thread_add_ln2041_fu_805_p2() {
    add_ln2041_fu_805_p2 = (!zext_ln2041_1_fu_801_p1.read().is_01() || !trunc_ln54_reg_1505.read().is_01())? sc_lv<17>(): (sc_biguint<17>(zext_ln2041_1_fu_801_p1.read()) + sc_biguint<17>(trunc_ln54_reg_1505.read()));
}

void deserializeSignature::thread_add_ln2050_1_fu_938_p2() {
    add_ln2050_1_fu_938_p2 = (!zext_ln2050_2_fu_934_p1.read().is_01() || !trunc_ln54_reg_1505.read().is_01())? sc_lv<17>(): (sc_biguint<17>(zext_ln2050_2_fu_934_p1.read()) + sc_biguint<17>(trunc_ln54_reg_1505.read()));
}

void deserializeSignature::thread_add_ln2050_fu_928_p2() {
    add_ln2050_fu_928_p2 = (!zext_ln2050_1_fu_924_p1.read().is_01() || !ap_const_lv7_37.is_01())? sc_lv<7>(): (sc_biguint<7>(zext_ln2050_1_fu_924_p1.read()) + sc_biguint<7>(ap_const_lv7_37));
}

void deserializeSignature::thread_add_ln2053_fu_953_p2() {
    add_ln2053_fu_953_p2 = (!phi_mul_reg_508.read().is_01() || !ap_const_lv15_4B.is_01())? sc_lv<15>(): (sc_biguint<15>(phi_mul_reg_508.read()) + sc_biguint<15>(ap_const_lv15_4B));
}

void deserializeSignature::thread_add_ln2059_1_fu_1109_p2() {
    add_ln2059_1_fu_1109_p2 = (!add_ln2059_reg_1635.read().is_01() || !zext_ln2059_2_fu_1105_p1.read().is_01())? sc_lv<17>(): (sc_biguint<17>(add_ln2059_reg_1635.read()) + sc_biguint<17>(zext_ln2059_2_fu_1105_p1.read()));
}

void deserializeSignature::thread_add_ln2059_2_fu_1099_p2() {
    add_ln2059_2_fu_1099_p2 = (!zext_ln2059_1_fu_1095_p1.read().is_01() || !ap_const_lv7_57.is_01())? sc_lv<7>(): (sc_biguint<7>(zext_ln2059_1_fu_1095_p1.read()) + sc_bigint<7>(ap_const_lv7_57));
}

void deserializeSignature::thread_add_ln2059_3_fu_1123_p2() {
    add_ln2059_3_fu_1123_p2 = (!zext_ln2053_1_reg_1625.read().is_01() || !zext_ln2059_4_fu_1119_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(zext_ln2053_1_reg_1625.read()) + sc_biguint<14>(zext_ln2059_4_fu_1119_p1.read()));
}

void deserializeSignature::thread_add_ln2059_fu_1078_p2() {
    add_ln2059_fu_1078_p2 = (!trunc_ln54_reg_1505.read().is_01() || !zext_ln2053_fu_986_p1.read().is_01())? sc_lv<17>(): (sc_biguint<17>(trunc_ln54_reg_1505.read()) + sc_biguint<17>(zext_ln2053_fu_986_p1.read()));
}

void deserializeSignature::thread_add_ln2072_1_fu_1159_p2() {
    add_ln2072_1_fu_1159_p2 = (!zext_ln2072_1_fu_1155_p1.read().is_01() || !ap_const_lv8_77.is_01())? sc_lv<8>(): (sc_biguint<8>(zext_ln2072_1_fu_1155_p1.read()) + sc_biguint<8>(ap_const_lv8_77));
}

void deserializeSignature::thread_add_ln2072_2_fu_1169_p2() {
    add_ln2072_2_fu_1169_p2 = (!add_ln2059_reg_1635.read().is_01() || !zext_ln2072_2_fu_1165_p1.read().is_01())? sc_lv<17>(): (sc_biguint<17>(add_ln2059_reg_1635.read()) + sc_biguint<17>(zext_ln2072_2_fu_1165_p1.read()));
}

void deserializeSignature::thread_add_ln2072_fu_1149_p2() {
    add_ln2072_fu_1149_p2 = (!phi_mul_reg_508.read().is_01() || !zext_ln2072_fu_1145_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(phi_mul_reg_508.read()) + sc_biguint<15>(zext_ln2072_fu_1145_p1.read()));
}

void deserializeSignature::thread_add_ln2077_1_fu_1199_p2() {
    add_ln2077_1_fu_1199_p2 = (!zext_ln2077_1_fu_1195_p1.read().is_01() || !ap_const_lv7_42.is_01())? sc_lv<7>(): (sc_biguint<7>(zext_ln2077_1_fu_1195_p1.read()) + sc_bigint<7>(ap_const_lv7_42));
}

void deserializeSignature::thread_add_ln2077_2_fu_1213_p2() {
    add_ln2077_2_fu_1213_p2 = (!add_ln2059_reg_1635.read().is_01() || !zext_ln2077_2_fu_1209_p1.read().is_01())? sc_lv<17>(): (sc_biguint<17>(add_ln2059_reg_1635.read()) + sc_biguint<17>(zext_ln2077_2_fu_1209_p1.read()));
}

void deserializeSignature::thread_add_ln2077_fu_1227_p2() {
    add_ln2077_fu_1227_p2 = (!zext_ln2059_reg_1619.read().is_01() || !zext_ln2077_fu_1223_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(zext_ln2059_reg_1619.read()) + sc_biguint<13>(zext_ln2077_fu_1223_p1.read()));
}

void deserializeSignature::thread_add_ln2082_1_fu_1253_p2() {
    add_ln2082_1_fu_1253_p2 = (!zext_ln2082_1_fu_1249_p1.read().is_01() || !ap_const_lv7_52.is_01())? sc_lv<7>(): (sc_biguint<7>(zext_ln2082_1_fu_1249_p1.read()) + sc_bigint<7>(ap_const_lv7_52));
}

void deserializeSignature::thread_add_ln2082_2_fu_1267_p2() {
    add_ln2082_2_fu_1267_p2 = (!add_ln2059_reg_1635.read().is_01() || !zext_ln2082_2_fu_1263_p1.read().is_01())? sc_lv<17>(): (sc_biguint<17>(add_ln2059_reg_1635.read()) + sc_biguint<17>(zext_ln2082_2_fu_1263_p1.read()));
}

void deserializeSignature::thread_add_ln2082_fu_1281_p2() {
    add_ln2082_fu_1281_p2 = (!zext_ln2059_reg_1619.read().is_01() || !zext_ln2082_fu_1277_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(zext_ln2059_reg_1619.read()) + sc_biguint<13>(zext_ln2082_fu_1277_p1.read()));
}

void deserializeSignature::thread_add_ln2085_fu_1291_p2() {
    add_ln2085_fu_1291_p2 = (!zext_ln386_reg_1630.read().is_01() || !ap_const_lv3_7.is_01())? sc_lv<3>(): (sc_biguint<3>(zext_ln386_reg_1630.read()) + sc_bigint<3>(ap_const_lv3_7));
}

void deserializeSignature::thread_add_ln2088_1_fu_1330_p2() {
    add_ln2088_1_fu_1330_p2 = (!zext_ln2088_fu_1326_p1.read().is_01() || !add_ln2088_reg_1707.read().is_01())? sc_lv<16>(): (sc_biguint<16>(zext_ln2088_fu_1326_p1.read()) + sc_biguint<16>(add_ln2088_reg_1707.read()));
}

void deserializeSignature::thread_add_ln2088_2_fu_1339_p2() {
    add_ln2088_2_fu_1339_p2 = (!trunc_ln54_reg_1505.read().is_01() || !zext_ln2088_1_fu_1335_p1.read().is_01())? sc_lv<17>(): (sc_biguint<17>(trunc_ln54_reg_1505.read()) + sc_biguint<17>(zext_ln2088_1_fu_1335_p1.read()));
}

void deserializeSignature::thread_add_ln2088_3_fu_1363_p2() {
    add_ln2088_3_fu_1363_p2 = (!zext_ln2088_3_fu_1359_p1.read().is_01() || !add_ln2088_reg_1707.read().is_01())? sc_lv<16>(): (sc_biguint<16>(zext_ln2088_3_fu_1359_p1.read()) + sc_biguint<16>(add_ln2088_reg_1707.read()));
}

void deserializeSignature::thread_add_ln2088_4_fu_1372_p2() {
    add_ln2088_4_fu_1372_p2 = (!trunc_ln54_reg_1505.read().is_01() || !zext_ln2088_4_fu_1368_p1.read().is_01())? sc_lv<17>(): (sc_biguint<17>(trunc_ln54_reg_1505.read()) + sc_biguint<17>(zext_ln2088_4_fu_1368_p1.read()));
}

void deserializeSignature::thread_add_ln2088_5_fu_1392_p2() {
    add_ln2088_5_fu_1392_p2 = (!zext_ln2088_6_fu_1388_p1.read().is_01() || !add_ln2088_reg_1707.read().is_01())? sc_lv<16>(): (sc_biguint<16>(zext_ln2088_6_fu_1388_p1.read()) + sc_biguint<16>(add_ln2088_reg_1707.read()));
}

void deserializeSignature::thread_add_ln2088_6_fu_1401_p2() {
    add_ln2088_6_fu_1401_p2 = (!trunc_ln54_reg_1505.read().is_01() || !zext_ln2088_7_fu_1397_p1.read().is_01())? sc_lv<17>(): (sc_biguint<17>(trunc_ln54_reg_1505.read()) + sc_biguint<17>(zext_ln2088_7_fu_1397_p1.read()));
}

void deserializeSignature::thread_add_ln2088_7_fu_1416_p2() {
    add_ln2088_7_fu_1416_p2 = (!zext_ln2088_9_fu_1412_p1.read().is_01() || !add_ln2088_reg_1707.read().is_01())? sc_lv<16>(): (sc_biguint<16>(zext_ln2088_9_fu_1412_p1.read()) + sc_biguint<16>(add_ln2088_reg_1707.read()));
}

void deserializeSignature::thread_add_ln2088_8_fu_1425_p2() {
    add_ln2088_8_fu_1425_p2 = (!trunc_ln54_reg_1505.read().is_01() || !zext_ln2088_10_fu_1421_p1.read().is_01())? sc_lv<17>(): (sc_biguint<17>(trunc_ln54_reg_1505.read()) + sc_biguint<17>(zext_ln2088_10_fu_1421_p1.read()));
}

void deserializeSignature::thread_add_ln2088_fu_1312_p2() {
    add_ln2088_fu_1312_p2 = (!p_01_rec_reg_484.read().is_01() || !ap_const_lv16_E2.is_01())? sc_lv<16>(): (sc_biguint<16>(p_01_rec_reg_484.read()) + sc_biguint<16>(ap_const_lv16_E2));
}

void deserializeSignature::thread_add_ln2089_fu_1481_p2() {
    add_ln2089_fu_1481_p2 = (!zext_ln2089_fu_1477_p1.read().is_01() || !p_01_rec_reg_484.read().is_01())? sc_lv<16>(): (sc_biguint<16>(zext_ln2089_fu_1477_p1.read()) + sc_biguint<16>(p_01_rec_reg_484.read()));
}

void deserializeSignature::thread_add_ln54_fu_654_p2() {
    add_ln54_fu_654_p2 = (!trunc_ln54_reg_1505.read().is_01() || !zext_ln54_fu_650_p1.read().is_01())? sc_lv<17>(): (sc_biguint<17>(trunc_ln54_reg_1505.read()) + sc_biguint<17>(zext_ln54_fu_650_p1.read()));
}

void deserializeSignature::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[12];
}

void deserializeSignature::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read()[14];
}

void deserializeSignature::thread_ap_CS_fsm_pp2_stage0() {
    ap_CS_fsm_pp2_stage0 = ap_CS_fsm.read()[18];
}

void deserializeSignature::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void deserializeSignature::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void deserializeSignature::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void deserializeSignature::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void deserializeSignature::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[13];
}

void deserializeSignature::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[15];
}

void deserializeSignature::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[16];
}

void deserializeSignature::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void deserializeSignature::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[17];
}

void deserializeSignature::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[19];
}

void deserializeSignature::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[20];
}

void deserializeSignature::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[21];
}

void deserializeSignature::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[22];
}

void deserializeSignature::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read()[23];
}

void deserializeSignature::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read()[24];
}

void deserializeSignature::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void deserializeSignature::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void deserializeSignature::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void deserializeSignature::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void deserializeSignature::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void deserializeSignature::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void deserializeSignature::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void deserializeSignature::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void deserializeSignature::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void deserializeSignature::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void deserializeSignature::thread_ap_block_pp1_stage0() {
    ap_block_pp1_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void deserializeSignature::thread_ap_block_pp1_stage0_11001() {
    ap_block_pp1_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void deserializeSignature::thread_ap_block_pp1_stage0_subdone() {
    ap_block_pp1_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void deserializeSignature::thread_ap_block_pp2_stage0() {
    ap_block_pp2_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void deserializeSignature::thread_ap_block_pp2_stage0_11001() {
    ap_block_pp2_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void deserializeSignature::thread_ap_block_pp2_stage0_subdone() {
    ap_block_pp2_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void deserializeSignature::thread_ap_block_state13_pp0_stage0_iter0() {
    ap_block_state13_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void deserializeSignature::thread_ap_block_state14_pp0_stage0_iter1() {
    ap_block_state14_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void deserializeSignature::thread_ap_block_state16_pp1_stage0_iter0() {
    ap_block_state16_pp1_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void deserializeSignature::thread_ap_block_state17_pp1_stage0_iter1() {
    ap_block_state17_pp1_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void deserializeSignature::thread_ap_block_state21_pp2_stage0_iter0() {
    ap_block_state21_pp2_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void deserializeSignature::thread_ap_block_state22_pp2_stage0_iter1() {
    ap_block_state22_pp2_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void deserializeSignature::thread_ap_condition_pp0_exit_iter0_state13() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln2058_fu_1083_p2.read())) {
        ap_condition_pp0_exit_iter0_state13 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state13 = ap_const_logic_0;
    }
}

void deserializeSignature::thread_ap_condition_pp1_exit_iter0_state16() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln2071_fu_1133_p2.read())) {
        ap_condition_pp1_exit_iter0_state16 = ap_const_logic_1;
    } else {
        ap_condition_pp1_exit_iter0_state16 = ap_const_logic_0;
    }
}

void deserializeSignature::thread_ap_condition_pp2_exit_iter0_state21() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln2081_fu_1237_p2.read())) {
        ap_condition_pp2_exit_iter0_state21 = ap_const_logic_1;
    } else {
        ap_condition_pp2_exit_iter0_state21 = ap_const_logic_0;
    }
}

void deserializeSignature::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void deserializeSignature::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void deserializeSignature::thread_ap_enable_pp1() {
    ap_enable_pp1 = (ap_idle_pp1.read() ^ ap_const_logic_1);
}

void deserializeSignature::thread_ap_enable_pp2() {
    ap_enable_pp2 = (ap_idle_pp2.read() ^ ap_const_logic_1);
}

void deserializeSignature::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void deserializeSignature::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void deserializeSignature::thread_ap_idle_pp1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter1.read()))) {
        ap_idle_pp1 = ap_const_logic_1;
    } else {
        ap_idle_pp1 = ap_const_logic_0;
    }
}

void deserializeSignature::thread_ap_idle_pp2() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp2_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp2_iter1.read()))) {
        ap_idle_pp2 = ap_const_logic_1;
    } else {
        ap_idle_pp2 = ap_const_logic_0;
    }
}

void deserializeSignature::thread_ap_phi_mux_loop_2_phi_fu_524_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln2058_reg_1643.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_loop_2_phi_fu_524_p4 = loop_29_reg_1647.read();
    } else {
        ap_phi_mux_loop_2_phi_fu_524_p4 = loop_2_reg_520.read();
    }
}

void deserializeSignature::thread_ap_phi_mux_loop_5_phi_fu_559_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln2081_reg_1690.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_loop_5_phi_fu_559_p4 = loop_32_reg_1694.read();
    } else {
        ap_phi_mux_loop_5_phi_fu_559_p4 = loop_5_reg_555.read();
    }
}

void deserializeSignature::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void deserializeSignature::thread_ap_return() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        ap_return = p_0_reg_591.read();
    } else {
        ap_return = ap_return_preg.read();
    }
}

void deserializeSignature::thread_bitNumber_assign_3_fu_1018_p3() {
    bitNumber_assign_3_fu_1018_p3 = esl_concat<2,1>(trunc_ln386_6_fu_1014_p1.read(), ap_const_lv1_0);
}

void deserializeSignature::thread_bitNumber_assign_fu_851_p3() {
    bitNumber_assign_fu_851_p3 = esl_concat<2,1>(trunc_ln386_4_reg_1575.read(), ap_const_lv1_0);
}

void deserializeSignature::thread_bytesExpected_1_fu_772_p2() {
    bytesExpected_1_fu_772_p2 = (!bytesExpected_reg_1535.read().is_01() || !zext_ln1978_fu_769_p1.read().is_01())? sc_lv<64>(): (sc_biguint<64>(bytesExpected_reg_1535.read()) + sc_biguint<64>(zext_ln1978_fu_769_p1.read()));
}

void deserializeSignature::thread_bytesExpected_2_fu_777_p3() {
    bytesExpected_2_fu_777_p3 = (!trunc_ln1977_fu_766_p1.read()[0].is_01())? sc_lv<64>(): ((trunc_ln1977_fu_766_p1.read()[0].to_bool())? bytesExpected_1_fu_772_p2.read(): bytesExpected_reg_1535.read());
}

void deserializeSignature::thread_bytesExpected_fu_664_p2() {
    bytesExpected_fu_664_p2 = (!ap_const_lv64_7740.is_01() || !inputShareSize_reg_426.read().is_01())? sc_lv<64>(): (sc_biguint<64>(ap_const_lv64_7740) + sc_biguint<64>(inputShareSize_reg_426.read()));
}

void deserializeSignature::thread_challenge_1_fu_898_p3() {
    challenge_1_fu_898_p3 = esl_concat<1,1>(trunc_ln386_5_fu_874_p1.read(), trunc_ln54_10_fu_894_p1.read());
}

void deserializeSignature::thread_challenge_2_fu_1066_p3() {
    challenge_2_fu_1066_p3 = esl_concat<1,1>(trunc_ln386_7_fu_1042_p1.read(), trunc_ln54_11_fu_1062_p1.read());
}

void deserializeSignature::thread_challenge_fu_726_p3() {
    challenge_fu_726_p3 = esl_concat<1,1>(trunc_ln386_3_fu_702_p1.read(), trunc_ln54_9_fu_722_p1.read());
}

void deserializeSignature::thread_i_10_fu_630_p2() {
    i_10_fu_630_p2 = (!round_assign_reg_438.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(round_assign_reg_438.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void deserializeSignature::thread_i_11_fu_826_p2() {
    i_11_fu_826_p2 = (!round_assign_1_reg_461.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(round_assign_1_reg_461.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void deserializeSignature::thread_i_fu_965_p2() {
    i_fu_965_p2 = (!round_assign_2_reg_496.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(round_assign_2_reg_496.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void deserializeSignature::thread_icmp_ln1940_fu_624_p2() {
    icmp_ln1940_fu_624_p2 = (!round_assign_reg_438.read().is_01() || !ap_const_lv8_DB.is_01())? sc_lv<1>(): sc_lv<1>(round_assign_reg_438.read() == ap_const_lv8_DB);
}

void deserializeSignature::thread_icmp_ln1942_1_fu_740_p2() {
    icmp_ln1942_1_fu_740_p2 = (!challenge_fu_726_p3.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(challenge_fu_726_p3.read() == ap_const_lv2_2);
}

void deserializeSignature::thread_icmp_ln1942_fu_734_p2() {
    icmp_ln1942_fu_734_p2 = (!challenge_fu_726_p3.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(challenge_fu_726_p3.read() == ap_const_lv2_1);
}

void deserializeSignature::thread_icmp_ln1951_fu_820_p2() {
    icmp_ln1951_fu_820_p2 = (!round_assign_1_reg_461.read().is_01() || !ap_const_lv8_DB.is_01())? sc_lv<1>(): (sc_biguint<8>(round_assign_1_reg_461.read()) < sc_biguint<8>(ap_const_lv8_DB));
}

void deserializeSignature::thread_icmp_ln1953_fu_906_p2() {
    icmp_ln1953_fu_906_p2 = (!challenge_1_fu_898_p3.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(challenge_1_fu_898_p3.read() == ap_const_lv2_3);
}

void deserializeSignature::thread_icmp_ln1969_fu_614_p2() {
    icmp_ln1969_fu_614_p2 = (!sigBytesLen.read().is_01() || !ap_const_lv32_37.is_01())? sc_lv<1>(): (sc_biguint<32>(sigBytesLen.read()) < sc_biguint<32>(ap_const_lv32_37));
}

void deserializeSignature::thread_icmp_ln1980_fu_784_p2() {
    icmp_ln1980_fu_784_p2 = (!bytesExpected_2_fu_777_p3.read().is_01() || !sigBytesLen_cast1_reg_1497.read().is_01())? sc_lv<1>(): (sc_biguint<64>(bytesExpected_2_fu_777_p3.read()) > sc_biguint<64>(sigBytesLen_cast1_reg_1497.read()));
}

void deserializeSignature::thread_icmp_ln2040_fu_789_p2() {
    icmp_ln2040_fu_789_p2 = (!loop_0_reg_449.read().is_01() || !ap_const_lv6_37.is_01())? sc_lv<1>(): sc_lv<1>(loop_0_reg_449.read() == ap_const_lv6_37);
}

void deserializeSignature::thread_icmp_ln2049_fu_912_p2() {
    icmp_ln2049_fu_912_p2 = (!loop_1_reg_472.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(loop_1_reg_472.read() == ap_const_lv6_20);
}

void deserializeSignature::thread_icmp_ln2053_fu_959_p2() {
    icmp_ln2053_fu_959_p2 = (!round_assign_2_reg_496.read().is_01() || !ap_const_lv8_DB.is_01())? sc_lv<1>(): sc_lv<1>(round_assign_2_reg_496.read() == ap_const_lv8_DB);
}

void deserializeSignature::thread_icmp_ln2058_fu_1083_p2() {
    icmp_ln2058_fu_1083_p2 = (!ap_phi_mux_loop_2_phi_fu_524_p4.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_loop_2_phi_fu_524_p4.read() == ap_const_lv6_20);
}

void deserializeSignature::thread_icmp_ln2071_fu_1133_p2() {
    icmp_ln2071_fu_1133_p2 = (!loop_3_reg_532.read().is_01() || !ap_const_lv7_4B.is_01())? sc_lv<1>(): sc_lv<1>(loop_3_reg_532.read() == ap_const_lv7_4B);
}

void deserializeSignature::thread_icmp_ln2076_fu_1183_p2() {
    icmp_ln2076_fu_1183_p2 = (!loop_4_reg_543.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(loop_4_reg_543.read() == ap_const_lv5_10);
}

void deserializeSignature::thread_icmp_ln2081_fu_1237_p2() {
    icmp_ln2081_fu_1237_p2 = (!ap_phi_mux_loop_5_phi_fu_559_p4.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_loop_5_phi_fu_559_p4.read() == ap_const_lv5_10);
}

void deserializeSignature::thread_icmp_ln2085_fu_1306_p2() {
    icmp_ln2085_fu_1306_p2 = (!tmp_fu_1296_p4.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_fu_1296_p4.read() == ap_const_lv2_0);
}

void deserializeSignature::thread_inputShareSize_1_fu_752_p2() {
    inputShareSize_1_fu_752_p2 = (!ap_const_lv64_10.is_01() || !inputShareSize_reg_426.read().is_01())? sc_lv<64>(): (sc_biguint<64>(ap_const_lv64_10) + sc_biguint<64>(inputShareSize_reg_426.read()));
}

void deserializeSignature::thread_inputShareSize_2_fu_758_p3() {
    inputShareSize_2_fu_758_p3 = (!or_ln1942_fu_746_p2.read()[0].is_01())? sc_lv<64>(): ((or_ln1942_fu_746_p2.read()[0].to_bool())? inputShareSize_1_fu_752_p2.read(): inputShareSize_reg_426.read());
}

void deserializeSignature::thread_loop_28_fu_918_p2() {
    loop_28_fu_918_p2 = (!loop_1_reg_472.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(loop_1_reg_472.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void deserializeSignature::thread_loop_29_fu_1089_p2() {
    loop_29_fu_1089_p2 = (!ap_phi_mux_loop_2_phi_fu_524_p4.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(ap_phi_mux_loop_2_phi_fu_524_p4.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void deserializeSignature::thread_loop_30_fu_1139_p2() {
    loop_30_fu_1139_p2 = (!loop_3_reg_532.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(loop_3_reg_532.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void deserializeSignature::thread_loop_31_fu_1189_p2() {
    loop_31_fu_1189_p2 = (!loop_4_reg_543.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(loop_4_reg_543.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void deserializeSignature::thread_loop_32_fu_1243_p2() {
    loop_32_fu_1243_p2 = (!ap_phi_mux_loop_5_phi_fu_559_p4.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(ap_phi_mux_loop_5_phi_fu_559_p4.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void deserializeSignature::thread_loop_33_fu_1440_p2() {
    loop_33_fu_1440_p2 = (!ap_const_lv5_4.is_01() || !loop_6_reg_567.read().is_01())? sc_lv<5>(): (sc_biguint<5>(ap_const_lv5_4) + sc_biguint<5>(loop_6_reg_567.read()));
}

void deserializeSignature::thread_loop_fu_795_p2() {
    loop_fu_795_p2 = (!loop_0_reg_449.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(loop_0_reg_449.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void deserializeSignature::thread_lshr_ln54_10_fu_888_p2() {
    lshr_ln54_10_fu_888_p2 = (!zext_ln54_18_fu_884_p1.read().is_01())? sc_lv<8>(): sig_0_challengeBits_q0.read() >> (unsigned short)zext_ln54_18_fu_884_p1.read().to_uint();
}

void deserializeSignature::thread_lshr_ln54_11_fu_1036_p2() {
    lshr_ln54_11_fu_1036_p2 = (!zext_ln54_19_fu_1032_p1.read().is_01())? sc_lv<8>(): sig_0_challengeBits_q0.read() >> (unsigned short)zext_ln54_19_fu_1032_p1.read().to_uint();
}

void deserializeSignature::thread_lshr_ln54_12_fu_1056_p2() {
    lshr_ln54_12_fu_1056_p2 = (!zext_ln54_20_fu_1052_p1.read().is_01())? sc_lv<8>(): sig_0_challengeBits_q0.read() >> (unsigned short)zext_ln54_20_fu_1052_p1.read().to_uint();
}

void deserializeSignature::thread_lshr_ln54_8_fu_716_p2() {
    lshr_ln54_8_fu_716_p2 = (!zext_ln54_16_fu_712_p1.read().is_01())? sc_lv<8>(): sigBytes_q0.read() >> (unsigned short)zext_ln54_16_fu_712_p1.read().to_uint();
}

void deserializeSignature::thread_lshr_ln54_9_fu_868_p2() {
    lshr_ln54_9_fu_868_p2 = (!zext_ln54_17_fu_864_p1.read().is_01())? sc_lv<8>(): sig_0_challengeBits_q0.read() >> (unsigned short)zext_ln54_17_fu_864_p1.read().to_uint();
}

void deserializeSignature::thread_lshr_ln54_fu_696_p2() {
    lshr_ln54_fu_696_p2 = (!zext_ln54_15_fu_692_p1.read().is_01())? sc_lv<8>(): sigBytes_q0.read() >> (unsigned short)zext_ln54_15_fu_692_p1.read().to_uint();
}

void deserializeSignature::thread_mul_ln1978_fu_673_p1() {
    mul_ln1978_fu_673_p1 =  (sc_lv<7>) (mul_ln1978_fu_673_p10.read());
}

void deserializeSignature::thread_mul_ln1978_fu_673_p10() {
    mul_ln1978_fu_673_p10 = esl_zext<16,7>(params_UnruhGWithout.read());
}

void deserializeSignature::thread_mul_ln1978_fu_673_p2() {
    mul_ln1978_fu_673_p2 = (!ap_const_lv16_DB.is_01() || !mul_ln1978_fu_673_p1.read().is_01())? sc_lv<16>(): sc_biguint<16>(ap_const_lv16_DB) * sc_biguint<7>(mul_ln1978_fu_673_p1.read());
}

void deserializeSignature::thread_or_ln1942_fu_746_p2() {
    or_ln1942_fu_746_p2 = (icmp_ln1942_fu_734_p2.read() | icmp_ln1942_1_fu_740_p2.read());
}

void deserializeSignature::thread_or_ln2088_1_fu_1382_p2() {
    or_ln2088_1_fu_1382_p2 = (trunc_ln2087_fu_1349_p1.read() | ap_const_lv4_2);
}

void deserializeSignature::thread_or_ln2088_2_fu_1406_p2() {
    or_ln2088_2_fu_1406_p2 = (trunc_ln2087_fu_1349_p1.read() | ap_const_lv4_3);
}

void deserializeSignature::thread_or_ln2088_fu_1353_p2() {
    or_ln2088_fu_1353_p2 = (trunc_ln2087_fu_1349_p1.read() | ap_const_lv4_1);
}

void deserializeSignature::thread_sext_ln2077_fu_1205_p1() {
    sext_ln2077_fu_1205_p1 = esl_sext<8,7>(add_ln2077_1_fu_1199_p2.read());
}

void deserializeSignature::thread_sext_ln2082_fu_1259_p1() {
    sext_ln2082_fu_1259_p1 = esl_sext<8,7>(add_ln2082_1_fu_1253_p2.read());
}

void deserializeSignature::thread_shl_ln_fu_679_p3() {
    shl_ln_fu_679_p3 = esl_concat<2,1>(trunc_ln386_reg_1525.read(), ap_const_lv1_0);
}

void deserializeSignature::thread_sigBytesLen_cast1_fu_610_p1() {
    sigBytesLen_cast1_fu_610_p1 = esl_zext<64,32>(sigBytesLen.read());
}

void deserializeSignature::thread_sigBytes_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        sigBytes_address0 =  (sc_lv<16>) (zext_ln2088_11_fu_1450_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        sigBytes_address0 =  (sc_lv<16>) (zext_ln2088_2_fu_1344_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0))) {
        sigBytes_address0 =  (sc_lv<16>) (zext_ln2082_3_fu_1272_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        sigBytes_address0 =  (sc_lv<16>) (zext_ln2077_3_fu_1218_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        sigBytes_address0 =  (sc_lv<16>) (zext_ln2072_3_fu_1174_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        sigBytes_address0 =  (sc_lv<16>) (zext_ln2059_3_fu_1114_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        sigBytes_address0 =  (sc_lv<16>) (zext_ln2050_3_fu_943_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        sigBytes_address0 =  (sc_lv<16>) (zext_ln2041_2_fu_810_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sigBytes_address0 =  (sc_lv<16>) (zext_ln54_13_fu_659_p1.read());
    } else {
        sigBytes_address0 = "XXXXXXXXXXXXXXXX";
    }
}

void deserializeSignature::thread_sigBytes_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        sigBytes_address1 =  (sc_lv<16>) (zext_ln2088_8_fu_1446_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        sigBytes_address1 =  (sc_lv<16>) (zext_ln2088_5_fu_1377_p1.read());
    } else {
        sigBytes_address1 = "XXXXXXXXXXXXXXXX";
    }
}

void deserializeSignature::thread_sigBytes_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        sigBytes_ce0 = ap_const_logic_1;
    } else {
        sigBytes_ce0 = ap_const_logic_0;
    }
}

void deserializeSignature::thread_sigBytes_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        sigBytes_ce1 = ap_const_logic_1;
    } else {
        sigBytes_ce1 = ap_const_logic_0;
    }
}

void deserializeSignature::thread_sig_0_challengeBits_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        sig_0_challengeBits_address0 =  (sc_lv<6>) (zext_ln54_14_fu_981_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        sig_0_challengeBits_address0 =  (sc_lv<6>) (zext_ln54_12_fu_846_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sig_0_challengeBits_address0 =  (sc_lv<6>) (zext_ln2041_fu_815_p1.read());
    } else {
        sig_0_challengeBits_address0 =  (sc_lv<6>) ("XXXXXX");
    }
}

void deserializeSignature::thread_sig_0_challengeBits_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        sig_0_challengeBits_ce0 = ap_const_logic_1;
    } else {
        sig_0_challengeBits_ce0 = ap_const_logic_0;
    }
}

void deserializeSignature::thread_sig_0_challengeBits_d0() {
    sig_0_challengeBits_d0 = sigBytes_q0.read();
}

void deserializeSignature::thread_sig_0_challengeBits_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sig_0_challengeBits_we0 = ap_const_logic_1;
    } else {
        sig_0_challengeBits_we0 = ap_const_logic_0;
    }
}

void deserializeSignature::thread_sig_0_proofs_commun_address0() {
    sig_0_proofs_commun_address0 =  (sc_lv<15>) (zext_ln2072_4_fu_1179_p1.read());
}

void deserializeSignature::thread_sig_0_proofs_commun_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()))) {
        sig_0_proofs_commun_ce0 = ap_const_logic_1;
    } else {
        sig_0_proofs_commun_ce0 = ap_const_logic_0;
    }
}

void deserializeSignature::thread_sig_0_proofs_commun_d0() {
    sig_0_proofs_commun_d0 = sigBytes_q0.read();
}

void deserializeSignature::thread_sig_0_proofs_commun_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln2071_reg_1657.read()))) {
        sig_0_proofs_commun_we0 = ap_const_logic_1;
    } else {
        sig_0_proofs_commun_we0 = ap_const_logic_0;
    }
}

void deserializeSignature::thread_sig_0_proofs_inputS_address0() {
    sig_0_proofs_inputS_address0 =  (sc_lv<10>) (zext_ln2088_12_fu_1472_p1.read());
}

void deserializeSignature::thread_sig_0_proofs_inputS_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        sig_0_proofs_inputS_ce0 = ap_const_logic_1;
    } else {
        sig_0_proofs_inputS_ce0 = ap_const_logic_0;
    }
}

void deserializeSignature::thread_sig_0_proofs_inputS_d0() {
    sig_0_proofs_inputS_d0 = esl_concat<24,8>(esl_concat<16,8>(esl_concat<8,8>(sigBytes_q0.read(), sigBytes_q1.read()), sigBytes_load_7_reg_1753.read()), sigBytes_load_6_reg_1748.read());
}

void deserializeSignature::thread_sig_0_proofs_inputS_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        sig_0_proofs_inputS_we0 = ap_const_logic_1;
    } else {
        sig_0_proofs_inputS_we0 = ap_const_logic_0;
    }
}

void deserializeSignature::thread_sig_0_proofs_seed1_address0() {
    sig_0_proofs_seed1_address0 =  (sc_lv<12>) (zext_ln2077_4_fu_1232_p1.read());
}

void deserializeSignature::thread_sig_0_proofs_seed1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        sig_0_proofs_seed1_ce0 = ap_const_logic_1;
    } else {
        sig_0_proofs_seed1_ce0 = ap_const_logic_0;
    }
}

void deserializeSignature::thread_sig_0_proofs_seed1_d0() {
    sig_0_proofs_seed1_d0 = sigBytes_q0.read();
}

void deserializeSignature::thread_sig_0_proofs_seed1_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        sig_0_proofs_seed1_we0 = ap_const_logic_1;
    } else {
        sig_0_proofs_seed1_we0 = ap_const_logic_0;
    }
}

void deserializeSignature::thread_sig_0_proofs_seed2_address0() {
    sig_0_proofs_seed2_address0 =  (sc_lv<12>) (zext_ln2082_4_fu_1286_p1.read());
}

void deserializeSignature::thread_sig_0_proofs_seed2_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()))) {
        sig_0_proofs_seed2_ce0 = ap_const_logic_1;
    } else {
        sig_0_proofs_seed2_ce0 = ap_const_logic_0;
    }
}

void deserializeSignature::thread_sig_0_proofs_seed2_d0() {
    sig_0_proofs_seed2_d0 = sigBytes_q0.read();
}

void deserializeSignature::thread_sig_0_proofs_seed2_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln2081_reg_1690.read()))) {
        sig_0_proofs_seed2_we0 = ap_const_logic_1;
    } else {
        sig_0_proofs_seed2_we0 = ap_const_logic_0;
    }
}

void deserializeSignature::thread_sig_0_proofs_view3C_address0() {
    sig_0_proofs_view3C_address0 =  (sc_lv<13>) (zext_ln2059_5_fu_1128_p1.read());
}

void deserializeSignature::thread_sig_0_proofs_view3C_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        sig_0_proofs_view3C_ce0 = ap_const_logic_1;
    } else {
        sig_0_proofs_view3C_ce0 = ap_const_logic_0;
    }
}

void deserializeSignature::thread_sig_0_proofs_view3C_d0() {
    sig_0_proofs_view3C_d0 = sigBytes_q0.read();
}

void deserializeSignature::thread_sig_0_proofs_view3C_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln2058_reg_1643.read()))) {
        sig_0_proofs_view3C_we0 = ap_const_logic_1;
    } else {
        sig_0_proofs_view3C_we0 = ap_const_logic_0;
    }
}

void deserializeSignature::thread_sig_0_salt_address0() {
    sig_0_salt_address0 =  (sc_lv<5>) (zext_ln2050_fu_948_p1.read());
}

void deserializeSignature::thread_sig_0_salt_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        sig_0_salt_ce0 = ap_const_logic_1;
    } else {
        sig_0_salt_ce0 = ap_const_logic_0;
    }
}

void deserializeSignature::thread_sig_0_salt_d0() {
    sig_0_salt_d0 = sigBytes_q0.read();
}

void deserializeSignature::thread_sig_0_salt_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        sig_0_salt_we0 = ap_const_logic_1;
    } else {
        sig_0_salt_we0 = ap_const_logic_0;
    }
}

void deserializeSignature::thread_tmp_21_fu_990_p3() {
    tmp_21_fu_990_p3 = esl_concat<8,4>(round_assign_2_reg_496.read(), ap_const_lv4_0);
}

void deserializeSignature::thread_tmp_22_fu_1002_p3() {
    tmp_22_fu_1002_p3 = esl_concat<8,5>(round_assign_2_reg_496.read(), ap_const_lv5_0);
}

void deserializeSignature::thread_tmp_23_fu_1465_p3() {
    tmp_23_fu_1465_p3 = esl_concat<8,2>(round_assign_2_reg_496.read(), trunc_ln2088_4_reg_1738.read());
}

void deserializeSignature::thread_tmp_47_fu_1318_p3() {
    tmp_47_fu_1318_p3 = loop_6_reg_567.read().range(4, 4);
}

void deserializeSignature::thread_tmp_fu_1296_p4() {
    tmp_fu_1296_p4 = add_ln2085_fu_1291_p2.read().range(2, 1);
}

void deserializeSignature::thread_trunc_ln1977_fu_766_p1() {
    trunc_ln1977_fu_766_p1 = params_transform_rea.read().range(1-1, 0);
}

void deserializeSignature::thread_trunc_ln2087_fu_1349_p1() {
    trunc_ln2087_fu_1349_p1 = loop_6_reg_567.read().range(4-1, 0);
}

void deserializeSignature::thread_trunc_ln386_3_fu_702_p1() {
    trunc_ln386_3_fu_702_p1 = lshr_ln54_fu_696_p2.read().range(1-1, 0);
}

void deserializeSignature::thread_trunc_ln386_4_fu_832_p1() {
    trunc_ln386_4_fu_832_p1 = round_assign_1_reg_461.read().range(2-1, 0);
}

void deserializeSignature::thread_trunc_ln386_5_fu_874_p1() {
    trunc_ln386_5_fu_874_p1 = lshr_ln54_9_fu_868_p2.read().range(1-1, 0);
}

void deserializeSignature::thread_trunc_ln386_6_fu_1014_p1() {
    trunc_ln386_6_fu_1014_p1 = round_assign_2_reg_496.read().range(2-1, 0);
}

void deserializeSignature::thread_trunc_ln386_7_fu_1042_p1() {
    trunc_ln386_7_fu_1042_p1 = lshr_ln54_11_fu_1036_p2.read().range(1-1, 0);
}

void deserializeSignature::thread_trunc_ln386_fu_636_p1() {
    trunc_ln386_fu_636_p1 = round_assign_reg_438.read().range(2-1, 0);
}

void deserializeSignature::thread_trunc_ln54_10_fu_894_p1() {
    trunc_ln54_10_fu_894_p1 = lshr_ln54_10_fu_888_p2.read().range(1-1, 0);
}

void deserializeSignature::thread_trunc_ln54_11_fu_1062_p1() {
    trunc_ln54_11_fu_1062_p1 = lshr_ln54_12_fu_1056_p2.read().range(1-1, 0);
}

void deserializeSignature::thread_trunc_ln54_6_fu_836_p4() {
    trunc_ln54_6_fu_836_p4 = round_assign_1_reg_461.read().range(7, 2);
}

void deserializeSignature::thread_trunc_ln54_8_fu_971_p4() {
    trunc_ln54_8_fu_971_p4 = round_assign_2_reg_496.read().range(7, 2);
}

void deserializeSignature::thread_trunc_ln54_9_fu_722_p1() {
    trunc_ln54_9_fu_722_p1 = lshr_ln54_8_fu_716_p2.read().range(1-1, 0);
}

void deserializeSignature::thread_trunc_ln54_fu_620_p1() {
    trunc_ln54_fu_620_p1 = sigBytes_offset.read().range(17-1, 0);
}

void deserializeSignature::thread_trunc_ln_fu_640_p4() {
    trunc_ln_fu_640_p4 = round_assign_reg_438.read().range(7, 2);
}

void deserializeSignature::thread_xor_ln54_2_fu_706_p2() {
    xor_ln54_2_fu_706_p2 = (shl_ln_fu_679_p3.read() ^ ap_const_lv3_7);
}

void deserializeSignature::thread_xor_ln54_3_fu_858_p2() {
    xor_ln54_3_fu_858_p2 = (bitNumber_assign_fu_851_p3.read() ^ ap_const_lv3_6);
}

void deserializeSignature::thread_xor_ln54_4_fu_878_p2() {
    xor_ln54_4_fu_878_p2 = (bitNumber_assign_fu_851_p3.read() ^ ap_const_lv3_7);
}

void deserializeSignature::thread_xor_ln54_5_fu_1026_p2() {
    xor_ln54_5_fu_1026_p2 = (bitNumber_assign_3_fu_1018_p3.read() ^ ap_const_lv3_6);
}

void deserializeSignature::thread_xor_ln54_6_fu_1046_p2() {
    xor_ln54_6_fu_1046_p2 = (bitNumber_assign_3_fu_1018_p3.read() ^ ap_const_lv3_7);
}

void deserializeSignature::thread_xor_ln54_fu_686_p2() {
    xor_ln54_fu_686_p2 = (shl_ln_fu_679_p3.read() ^ ap_const_lv3_6);
}

void deserializeSignature::thread_zext_ln1978_fu_769_p1() {
    zext_ln1978_fu_769_p1 = esl_zext<64,16>(mul_ln1978_reg_1541.read());
}

void deserializeSignature::thread_zext_ln2041_1_fu_801_p1() {
    zext_ln2041_1_fu_801_p1 = esl_zext<17,6>(loop_0_reg_449.read());
}

void deserializeSignature::thread_zext_ln2041_2_fu_810_p1() {
    zext_ln2041_2_fu_810_p1 = esl_zext<64,17>(add_ln2041_fu_805_p2.read());
}

void deserializeSignature::thread_zext_ln2041_fu_815_p1() {
    zext_ln2041_fu_815_p1 = esl_zext<64,6>(loop_0_reg_449.read());
}

void deserializeSignature::thread_zext_ln2050_1_fu_924_p1() {
    zext_ln2050_1_fu_924_p1 = esl_zext<7,6>(loop_1_reg_472.read());
}

void deserializeSignature::thread_zext_ln2050_2_fu_934_p1() {
    zext_ln2050_2_fu_934_p1 = esl_zext<17,7>(add_ln2050_fu_928_p2.read());
}

void deserializeSignature::thread_zext_ln2050_3_fu_943_p1() {
    zext_ln2050_3_fu_943_p1 = esl_zext<64,17>(add_ln2050_1_fu_938_p2.read());
}

void deserializeSignature::thread_zext_ln2050_fu_948_p1() {
    zext_ln2050_fu_948_p1 = esl_zext<64,6>(loop_1_reg_472.read());
}

void deserializeSignature::thread_zext_ln2053_1_fu_1010_p1() {
    zext_ln2053_1_fu_1010_p1 = esl_zext<14,13>(tmp_22_fu_1002_p3.read());
}

void deserializeSignature::thread_zext_ln2053_fu_986_p1() {
    zext_ln2053_fu_986_p1 = esl_zext<17,16>(p_01_rec_reg_484.read());
}

void deserializeSignature::thread_zext_ln2059_1_fu_1095_p1() {
    zext_ln2059_1_fu_1095_p1 = esl_zext<7,6>(ap_phi_mux_loop_2_phi_fu_524_p4.read());
}

void deserializeSignature::thread_zext_ln2059_2_fu_1105_p1() {
    zext_ln2059_2_fu_1105_p1 = esl_zext<17,7>(add_ln2059_2_fu_1099_p2.read());
}

void deserializeSignature::thread_zext_ln2059_3_fu_1114_p1() {
    zext_ln2059_3_fu_1114_p1 = esl_zext<64,17>(add_ln2059_1_fu_1109_p2.read());
}

void deserializeSignature::thread_zext_ln2059_4_fu_1119_p1() {
    zext_ln2059_4_fu_1119_p1 = esl_zext<14,6>(loop_2_reg_520.read());
}

void deserializeSignature::thread_zext_ln2059_5_fu_1128_p1() {
    zext_ln2059_5_fu_1128_p1 = esl_zext<64,14>(add_ln2059_3_fu_1123_p2.read());
}

void deserializeSignature::thread_zext_ln2059_fu_998_p1() {
    zext_ln2059_fu_998_p1 = esl_zext<13,12>(tmp_21_fu_990_p3.read());
}

void deserializeSignature::thread_zext_ln2072_1_fu_1155_p1() {
    zext_ln2072_1_fu_1155_p1 = esl_zext<8,7>(loop_3_reg_532.read());
}

void deserializeSignature::thread_zext_ln2072_2_fu_1165_p1() {
    zext_ln2072_2_fu_1165_p1 = esl_zext<17,8>(add_ln2072_1_fu_1159_p2.read());
}

void deserializeSignature::thread_zext_ln2072_3_fu_1174_p1() {
    zext_ln2072_3_fu_1174_p1 = esl_zext<64,17>(add_ln2072_2_fu_1169_p2.read());
}

void deserializeSignature::thread_zext_ln2072_4_fu_1179_p1() {
    zext_ln2072_4_fu_1179_p1 = esl_zext<64,15>(add_ln2072_reg_1666.read());
}

void deserializeSignature::thread_zext_ln2072_fu_1145_p1() {
    zext_ln2072_fu_1145_p1 = esl_zext<15,7>(loop_3_reg_532.read());
}

void deserializeSignature::thread_zext_ln2077_1_fu_1195_p1() {
    zext_ln2077_1_fu_1195_p1 = esl_zext<7,5>(loop_4_reg_543.read());
}

void deserializeSignature::thread_zext_ln2077_2_fu_1209_p1() {
    zext_ln2077_2_fu_1209_p1 = esl_zext<17,8>(sext_ln2077_fu_1205_p1.read());
}

void deserializeSignature::thread_zext_ln2077_3_fu_1218_p1() {
    zext_ln2077_3_fu_1218_p1 = esl_zext<64,17>(add_ln2077_2_fu_1213_p2.read());
}

void deserializeSignature::thread_zext_ln2077_4_fu_1232_p1() {
    zext_ln2077_4_fu_1232_p1 = esl_zext<64,13>(add_ln2077_fu_1227_p2.read());
}

void deserializeSignature::thread_zext_ln2077_fu_1223_p1() {
    zext_ln2077_fu_1223_p1 = esl_zext<13,5>(loop_4_reg_543.read());
}

void deserializeSignature::thread_zext_ln2082_1_fu_1249_p1() {
    zext_ln2082_1_fu_1249_p1 = esl_zext<7,5>(ap_phi_mux_loop_5_phi_fu_559_p4.read());
}

void deserializeSignature::thread_zext_ln2082_2_fu_1263_p1() {
    zext_ln2082_2_fu_1263_p1 = esl_zext<17,8>(sext_ln2082_fu_1259_p1.read());
}

void deserializeSignature::thread_zext_ln2082_3_fu_1272_p1() {
    zext_ln2082_3_fu_1272_p1 = esl_zext<64,17>(add_ln2082_2_fu_1267_p2.read());
}

void deserializeSignature::thread_zext_ln2082_4_fu_1286_p1() {
    zext_ln2082_4_fu_1286_p1 = esl_zext<64,13>(add_ln2082_fu_1281_p2.read());
}

void deserializeSignature::thread_zext_ln2082_fu_1277_p1() {
    zext_ln2082_fu_1277_p1 = esl_zext<13,5>(loop_5_reg_555.read());
}

void deserializeSignature::thread_zext_ln2088_10_fu_1421_p1() {
    zext_ln2088_10_fu_1421_p1 = esl_zext<17,16>(add_ln2088_7_fu_1416_p2.read());
}

void deserializeSignature::thread_zext_ln2088_11_fu_1450_p1() {
    zext_ln2088_11_fu_1450_p1 = esl_zext<64,17>(add_ln2088_8_reg_1733.read());
}

void deserializeSignature::thread_zext_ln2088_12_fu_1472_p1() {
    zext_ln2088_12_fu_1472_p1 = esl_zext<64,10>(tmp_23_fu_1465_p3.read());
}

void deserializeSignature::thread_zext_ln2088_1_fu_1335_p1() {
    zext_ln2088_1_fu_1335_p1 = esl_zext<17,16>(add_ln2088_1_fu_1330_p2.read());
}

void deserializeSignature::thread_zext_ln2088_2_fu_1344_p1() {
    zext_ln2088_2_fu_1344_p1 = esl_zext<64,17>(add_ln2088_2_fu_1339_p2.read());
}

void deserializeSignature::thread_zext_ln2088_3_fu_1359_p1() {
    zext_ln2088_3_fu_1359_p1 = esl_zext<16,4>(or_ln2088_fu_1353_p2.read());
}

void deserializeSignature::thread_zext_ln2088_4_fu_1368_p1() {
    zext_ln2088_4_fu_1368_p1 = esl_zext<17,16>(add_ln2088_3_fu_1363_p2.read());
}

void deserializeSignature::thread_zext_ln2088_5_fu_1377_p1() {
    zext_ln2088_5_fu_1377_p1 = esl_zext<64,17>(add_ln2088_4_fu_1372_p2.read());
}

void deserializeSignature::thread_zext_ln2088_6_fu_1388_p1() {
    zext_ln2088_6_fu_1388_p1 = esl_zext<16,4>(or_ln2088_1_fu_1382_p2.read());
}

void deserializeSignature::thread_zext_ln2088_7_fu_1397_p1() {
    zext_ln2088_7_fu_1397_p1 = esl_zext<17,16>(add_ln2088_5_fu_1392_p2.read());
}

void deserializeSignature::thread_zext_ln2088_8_fu_1446_p1() {
    zext_ln2088_8_fu_1446_p1 = esl_zext<64,17>(add_ln2088_6_reg_1728.read());
}

void deserializeSignature::thread_zext_ln2088_9_fu_1412_p1() {
    zext_ln2088_9_fu_1412_p1 = esl_zext<16,4>(or_ln2088_2_fu_1406_p2.read());
}

void deserializeSignature::thread_zext_ln2088_fu_1326_p1() {
    zext_ln2088_fu_1326_p1 = esl_zext<16,5>(loop_6_reg_567.read());
}

void deserializeSignature::thread_zext_ln2089_fu_1477_p1() {
    zext_ln2089_fu_1477_p1 = esl_zext<16,8>(p_sum5_pn_reg_578.read());
}

void deserializeSignature::thread_zext_ln386_fu_1074_p1() {
    zext_ln386_fu_1074_p1 = esl_zext<3,2>(challenge_2_fu_1066_p3.read());
}

void deserializeSignature::thread_zext_ln54_12_fu_846_p1() {
    zext_ln54_12_fu_846_p1 = esl_zext<64,6>(trunc_ln54_6_fu_836_p4.read());
}

void deserializeSignature::thread_zext_ln54_13_fu_659_p1() {
    zext_ln54_13_fu_659_p1 = esl_zext<64,17>(add_ln54_fu_654_p2.read());
}

void deserializeSignature::thread_zext_ln54_14_fu_981_p1() {
    zext_ln54_14_fu_981_p1 = esl_zext<64,6>(trunc_ln54_8_fu_971_p4.read());
}

void deserializeSignature::thread_zext_ln54_15_fu_692_p1() {
    zext_ln54_15_fu_692_p1 = esl_zext<8,3>(xor_ln54_fu_686_p2.read());
}

void deserializeSignature::thread_zext_ln54_16_fu_712_p1() {
    zext_ln54_16_fu_712_p1 = esl_zext<8,3>(xor_ln54_2_fu_706_p2.read());
}

void deserializeSignature::thread_zext_ln54_17_fu_864_p1() {
    zext_ln54_17_fu_864_p1 = esl_zext<8,3>(xor_ln54_3_fu_858_p2.read());
}

void deserializeSignature::thread_zext_ln54_18_fu_884_p1() {
    zext_ln54_18_fu_884_p1 = esl_zext<8,3>(xor_ln54_4_fu_878_p2.read());
}

void deserializeSignature::thread_zext_ln54_19_fu_1032_p1() {
    zext_ln54_19_fu_1032_p1 = esl_zext<8,3>(xor_ln54_5_fu_1026_p2.read());
}

void deserializeSignature::thread_zext_ln54_20_fu_1052_p1() {
    zext_ln54_20_fu_1052_p1 = esl_zext<8,3>(xor_ln54_6_fu_1046_p2.read());
}

void deserializeSignature::thread_zext_ln54_fu_650_p1() {
    zext_ln54_fu_650_p1 = esl_zext<17,6>(trunc_ln_fu_640_p4.read());
}

void deserializeSignature::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(icmp_ln1969_fu_614_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(icmp_ln1969_fu_614_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state28;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln1940_fu_624_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln1980_fu_784_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state28;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln2040_fu_789_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln1951_fu_820_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln1953_fu_906_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state28;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln2049_fu_912_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln2053_fu_959_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state28;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            break;
        case 4096 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln2058_fu_1083_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln2058_fu_1083_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state15;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            break;
        case 16384 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln2071_fu_1133_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln2071_fu_1133_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state18;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 65536 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln2076_fu_1183_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state20;
            }
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln2081_fu_1237_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln2081_fu_1237_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state23;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            }
            break;
        case 524288 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln2085_fu_1306_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state24;
            } else {
                ap_NS_fsm = ap_ST_fsm_state27;
            }
            break;
        case 1048576 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_47_fu_1318_p3.read()))) {
                ap_NS_fsm = ap_ST_fsm_state27;
            } else {
                ap_NS_fsm = ap_ST_fsm_state25;
            }
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<25>) ("XXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

