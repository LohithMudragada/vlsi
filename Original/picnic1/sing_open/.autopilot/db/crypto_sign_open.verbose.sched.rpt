

================================================================
== Vivado HLS Report for 'crypto_sign_open'
================================================================
* Date:           Thu May  7 18:43:43 2020

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        picnic1
* Solution:       sing_open
* Product family: artix7
* Target device:  xc7a200t-fbg676-2


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 9.122 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1  |       32|       32|         2|          -|          -|    16|    no    |
        |- Loop 2  |       32|       32|         2|          -|          -|    16|    no    |
        |- Loop 3  |        ?|        ?|         2|          -|          -|     ?|    no    |
        +----------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 1
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 14
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 14 
3 --> 4 5 
4 --> 3 
5 --> 6 7 
6 --> 5 
7 --> 8 
8 --> 9 14 
9 --> 10 
10 --> 11 
11 --> 14 12 
12 --> 13 14 
13 --> 12 
14 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.75>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%pubkey_0_plaintext = alloca [32 x i8], align 1" [api.c:129]   --->   Operation 15 'alloca' 'pubkey_0_plaintext' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1> <RAM>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%pubkey_0_ciphertext = alloca [32 x i8], align 1" [api.c:129]   --->   Operation 16 'alloca' 'pubkey_0_ciphertext' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1> <RAM>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%pk_addr = getelementptr [33 x i8]* %pk, i64 0, i64 0" [picnic.c:548->api.c:132]   --->   Operation 17 'getelementptr' 'pk_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [2/2] (1.75ns)   --->   "%pk_load = load i8* %pk_addr, align 1" [picnic.c:555->api.c:132]   --->   Operation 18 'load' 'pk_load' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1> <RAM>

State 2 <SV = 1> <Delay = 4.56>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([3300 x i8]* %m) nounwind, !map !670"   --->   Operation 19 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([1 x i64]* %mlen) nounwind, !map !676"   --->   Operation 20 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([37336 x i8]* %sm) nounwind, !map !680"   --->   Operation 21 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64 %smlen) nounwind, !map !686"   --->   Operation 22 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([33 x i8]* %pk) nounwind, !map !692"   --->   Operation 23 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%smlen_read = call i64 @_ssdm_op_Read.ap_auto.i64(i64 %smlen) nounwind" [api.c:126]   --->   Operation 24 'read' 'smlen_read' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%sm_addr = getelementptr [37336 x i8]* %sm, i64 0, i64 0" [api.c:126]   --->   Operation 25 'getelementptr' 'sm_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%mlen_addr = getelementptr [1 x i64]* %mlen, i64 0, i64 0" [api.c:125]   --->   Operation 26 'getelementptr' 'mlen_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 0) nounwind, !map !698"   --->   Operation 27 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([17 x i8]* @crypto_sign_open_str) nounwind"   --->   Operation 28 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 29 [1/2] (1.75ns)   --->   "%pk_load = load i8* %pk_addr, align 1" [picnic.c:555->api.c:132]   --->   Operation 29 'load' 'pk_load' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1> <RAM>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%pubkey_0_params = trunc i8 %pk_load to i4" [picnic.c:555->api.c:132]   --->   Operation 30 'trunc' 'pubkey_0_params' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (1.21ns)   --->   "%empty = icmp eq i4 %pubkey_0_params, -1" [picnic.c:555->api.c:132]   --->   Operation 31 'icmp' 'empty' <Predicate = true> <Delay = 1.21> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 32 [1/1] (1.21ns)   --->   "%empty_271 = icmp eq i4 %pubkey_0_params, -2" [picnic.c:555->api.c:132]   --->   Operation 32 'icmp' 'empty_271' <Predicate = true> <Delay = 1.21> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 33 [1/1] (0.00ns) (grouped into LUT with out node empty_280)   --->   "%empty_272 = or i1 %empty_271, %empty" [picnic.c:555->api.c:132]   --->   Operation 33 'or' 'empty_272' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (1.21ns)   --->   "%empty_273 = icmp eq i4 %pubkey_0_params, -3" [picnic.c:555->api.c:132]   --->   Operation 34 'icmp' 'empty_273' <Predicate = true> <Delay = 1.21> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (0.00ns) (grouped into LUT with out node empty_280)   --->   "%empty_274 = or i1 %empty_273, %empty_272" [picnic.c:555->api.c:132]   --->   Operation 35 'or' 'empty_274' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (1.21ns)   --->   "%empty_275 = icmp eq i4 %pubkey_0_params, -4" [picnic.c:555->api.c:132]   --->   Operation 36 'icmp' 'empty_275' <Predicate = true> <Delay = 1.21> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (0.00ns) (grouped into LUT with out node empty_280)   --->   "%empty_276 = or i1 %empty_275, %empty_274" [picnic.c:555->api.c:132]   --->   Operation 37 'or' 'empty_276' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (1.21ns)   --->   "%empty_277 = icmp eq i4 %pubkey_0_params, -5" [picnic.c:555->api.c:132]   --->   Operation 38 'icmp' 'empty_277' <Predicate = true> <Delay = 1.21> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.00ns) (grouped into LUT with out node empty_280)   --->   "%empty_278 = or i1 %empty_277, %empty_276" [picnic.c:555->api.c:132]   --->   Operation 39 'or' 'empty_278' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (1.21ns)   --->   "%empty_279 = icmp eq i4 %pubkey_0_params, -6" [picnic.c:555->api.c:132]   --->   Operation 40 'icmp' 'empty_279' <Predicate = true> <Delay = 1.21> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.80ns) (out node of the LUT)   --->   "%empty_280 = or i1 %empty_279, %empty_278" [picnic.c:555->api.c:132]   --->   Operation 41 'or' 'empty_280' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (1.21ns)   --->   "%empty_281 = icmp eq i4 %pubkey_0_params, 0" [picnic.c:555->api.c:132]   --->   Operation 42 'icmp' 'empty_281' <Predicate = true> <Delay = 1.21> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.80ns) (out node of the LUT)   --->   "%empty_282 = or i1 %empty_281, %empty_280" [picnic.c:555->api.c:132]   --->   Operation 43 'or' 'empty_282' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "br i1 %empty_282, label %._crit_edge7.i.i, label %.preheader1.i.preheader" [picnic.c:555->api.c:132]   --->   Operation 44 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (1.35ns)   --->   "br label %.preheader1.i" [picnic.c:576->api.c:132]   --->   Operation 45 'br' <Predicate = (!empty_282)> <Delay = 1.35>
ST_2 : Operation 46 [1/1] (1.45ns)   --->   "br label %._crit_edge"   --->   Operation 46 'br' <Predicate = (empty_282)> <Delay = 1.45>

State 3 <SV = 2> <Delay = 3.30>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "%loop_0_i = phi i5 [ %loop_34, %1 ], [ 0, %.preheader1.i.preheader ]"   --->   Operation 47 'phi' 'loop_0_i' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 48 [1/1] (1.21ns)   --->   "%icmp_ln576 = icmp eq i5 %loop_0_i, -16" [picnic.c:576->api.c:132]   --->   Operation 48 'icmp' 'icmp_ln576' <Predicate = true> <Delay = 1.21> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "%empty_283 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16) nounwind"   --->   Operation 49 'speclooptripcount' 'empty_283' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 50 [1/1] (1.54ns)   --->   "%loop_34 = add i5 %loop_0_i, 1" [picnic.c:577->api.c:132]   --->   Operation 50 'add' 'loop_34' <Predicate = true> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.18> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 51 [1/1] (0.00ns)   --->   "br i1 %icmp_ln576, label %.preheader.i.preheader, label %1" [picnic.c:576->api.c:132]   --->   Operation 51 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 52 [1/1] (0.00ns)   --->   "%zext_ln577 = zext i5 %loop_34 to i64" [picnic.c:577->api.c:132]   --->   Operation 52 'zext' 'zext_ln577' <Predicate = (!icmp_ln576)> <Delay = 0.00>
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "%pk_addr_1 = getelementptr [33 x i8]* %pk, i64 0, i64 %zext_ln577" [picnic.c:577->api.c:132]   --->   Operation 53 'getelementptr' 'pk_addr_1' <Predicate = (!icmp_ln576)> <Delay = 0.00>
ST_3 : Operation 54 [2/2] (1.75ns)   --->   "%pk_load_1 = load i8* %pk_addr_1, align 1" [picnic.c:577->api.c:132]   --->   Operation 54 'load' 'pk_load_1' <Predicate = (!icmp_ln576)> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1> <RAM>
ST_3 : Operation 55 [1/1] (1.35ns)   --->   "br label %.preheader.i" [picnic.c:581->api.c:132]   --->   Operation 55 'br' <Predicate = (icmp_ln576)> <Delay = 1.35>

State 4 <SV = 3> <Delay = 3.51>
ST_4 : Operation 56 [1/2] (1.75ns)   --->   "%pk_load_1 = load i8* %pk_addr_1, align 1" [picnic.c:577->api.c:132]   --->   Operation 56 'load' 'pk_load_1' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1> <RAM>
ST_4 : Operation 57 [1/1] (0.00ns)   --->   "%zext_ln577_1 = zext i5 %loop_0_i to i64" [picnic.c:577->api.c:132]   --->   Operation 57 'zext' 'zext_ln577_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 58 [1/1] (0.00ns)   --->   "%pubkey_0_ciphertext_1 = getelementptr [32 x i8]* %pubkey_0_ciphertext, i64 0, i64 %zext_ln577_1" [picnic.c:577->api.c:132]   --->   Operation 58 'getelementptr' 'pubkey_0_ciphertext_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 59 [1/1] (1.75ns)   --->   "store i8 %pk_load_1, i8* %pubkey_0_ciphertext_1, align 1" [picnic.c:577->api.c:132]   --->   Operation 59 'store' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1> <RAM>
ST_4 : Operation 60 [1/1] (0.00ns)   --->   "br label %.preheader1.i" [picnic.c:576->api.c:132]   --->   Operation 60 'br' <Predicate = true> <Delay = 0.00>

State 5 <SV = 3> <Delay = 3.36>
ST_5 : Operation 61 [1/1] (0.00ns)   --->   "%loop_1_i = phi i5 [ %loop_35, %2 ], [ 0, %.preheader.i.preheader ]"   --->   Operation 61 'phi' 'loop_1_i' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 62 [1/1] (0.00ns)   --->   "%zext_ln581 = zext i5 %loop_1_i to i6" [picnic.c:581->api.c:132]   --->   Operation 62 'zext' 'zext_ln581' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 63 [1/1] (1.21ns)   --->   "%icmp_ln581 = icmp eq i5 %loop_1_i, -16" [picnic.c:581->api.c:132]   --->   Operation 63 'icmp' 'icmp_ln581' <Predicate = true> <Delay = 1.21> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 64 [1/1] (0.00ns)   --->   "%empty_284 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16) nounwind"   --->   Operation 64 'speclooptripcount' 'empty_284' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 65 [1/1] (1.54ns)   --->   "%loop_35 = add i5 %loop_1_i, 1" [picnic.c:582->api.c:132]   --->   Operation 65 'add' 'loop_35' <Predicate = true> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.18> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 66 [1/1] (0.00ns)   --->   "br i1 %icmp_ln581, label %picnic_read_public_key.exit, label %2" [picnic.c:581->api.c:132]   --->   Operation 66 'br' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 67 [1/1] (1.60ns)   --->   "%add_ln582_1 = add i6 %zext_ln581, 17" [picnic.c:582->api.c:132]   --->   Operation 67 'add' 'add_ln582_1' <Predicate = (!icmp_ln581)> <Delay = 1.60> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.18> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 68 [1/1] (0.00ns)   --->   "%zext_ln582 = zext i6 %add_ln582_1 to i64" [picnic.c:582->api.c:132]   --->   Operation 68 'zext' 'zext_ln582' <Predicate = (!icmp_ln581)> <Delay = 0.00>
ST_5 : Operation 69 [1/1] (0.00ns)   --->   "%pk_addr_2 = getelementptr [33 x i8]* %pk, i64 0, i64 %zext_ln582" [picnic.c:582->api.c:132]   --->   Operation 69 'getelementptr' 'pk_addr_2' <Predicate = (!icmp_ln581)> <Delay = 0.00>
ST_5 : Operation 70 [2/2] (1.75ns)   --->   "%pk_load_2 = load i8* %pk_addr_2, align 1" [picnic.c:582->api.c:132]   --->   Operation 70 'load' 'pk_load_2' <Predicate = (!icmp_ln581)> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1> <RAM>
ST_5 : Operation 71 [1/1] (0.00ns)   --->   "%sm_addr_1 = getelementptr [37336 x i8]* %sm, i64 0, i64 3" [api.c:140]   --->   Operation 71 'getelementptr' 'sm_addr_1' <Predicate = (icmp_ln581)> <Delay = 0.00>
ST_5 : Operation 72 [2/2] (2.77ns)   --->   "%sm_load = load i8* %sm_addr_1, align 1" [api.c:140]   --->   Operation 72 'load' 'sm_load' <Predicate = (icmp_ln581)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1> <RAM>
ST_5 : Operation 73 [1/1] (0.00ns)   --->   "%sm_addr_2 = getelementptr [37336 x i8]* %sm, i64 0, i64 2" [api.c:140]   --->   Operation 73 'getelementptr' 'sm_addr_2' <Predicate = (icmp_ln581)> <Delay = 0.00>
ST_5 : Operation 74 [2/2] (2.77ns)   --->   "%sm_load_1 = load i8* %sm_addr_2, align 1" [api.c:140]   --->   Operation 74 'load' 'sm_load_1' <Predicate = (icmp_ln581)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1> <RAM>

State 6 <SV = 4> <Delay = 3.51>
ST_6 : Operation 75 [1/2] (1.75ns)   --->   "%pk_load_2 = load i8* %pk_addr_2, align 1" [picnic.c:582->api.c:132]   --->   Operation 75 'load' 'pk_load_2' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1> <RAM>
ST_6 : Operation 76 [1/1] (0.00ns)   --->   "%zext_ln582_1 = zext i5 %loop_1_i to i64" [picnic.c:582->api.c:132]   --->   Operation 76 'zext' 'zext_ln582_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 77 [1/1] (0.00ns)   --->   "%pubkey_0_plaintext_s = getelementptr [32 x i8]* %pubkey_0_plaintext, i64 0, i64 %zext_ln582_1" [picnic.c:582->api.c:132]   --->   Operation 77 'getelementptr' 'pubkey_0_plaintext_s' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 78 [1/1] (1.75ns)   --->   "store i8 %pk_load_2, i8* %pubkey_0_plaintext_s, align 1" [picnic.c:582->api.c:132]   --->   Operation 78 'store' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1> <RAM>
ST_6 : Operation 79 [1/1] (0.00ns)   --->   "br label %.preheader.i" [picnic.c:581->api.c:132]   --->   Operation 79 'br' <Predicate = true> <Delay = 0.00>

State 7 <SV = 4> <Delay = 2.77>
ST_7 : Operation 80 [1/2] (2.77ns)   --->   "%sm_load = load i8* %sm_addr_1, align 1" [api.c:140]   --->   Operation 80 'load' 'sm_load' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1> <RAM>
ST_7 : Operation 81 [1/2] (2.77ns)   --->   "%sm_load_1 = load i8* %sm_addr_2, align 1" [api.c:140]   --->   Operation 81 'load' 'sm_load_1' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1> <RAM>
ST_7 : Operation 82 [1/1] (0.00ns)   --->   "%sm_addr_3 = getelementptr [37336 x i8]* %sm, i64 0, i64 1" [api.c:140]   --->   Operation 82 'getelementptr' 'sm_addr_3' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 83 [2/2] (2.77ns)   --->   "%sm_load_2 = load i8* %sm_addr_3, align 1" [api.c:140]   --->   Operation 83 'load' 'sm_load_2' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1> <RAM>
ST_7 : Operation 84 [2/2] (2.77ns)   --->   "%sm_load_3 = load i8* %sm_addr, align 1" [api.c:140]   --->   Operation 84 'load' 'sm_load_3' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1> <RAM>

State 8 <SV = 5> <Delay = 6.79>
ST_8 : Operation 85 [1/2] (2.77ns)   --->   "%sm_load_2 = load i8* %sm_addr_3, align 1" [api.c:140]   --->   Operation 85 'load' 'sm_load_2' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1> <RAM>
ST_8 : Operation 86 [1/2] (2.77ns)   --->   "%sm_load_3 = load i8* %sm_addr, align 1" [api.c:140]   --->   Operation 86 'load' 'sm_load_3' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1> <RAM>
ST_8 : Operation 87 [1/1] (0.00ns)   --->   "%signature_len = call i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8(i8 %sm_load, i8 %sm_load_1, i8 %sm_load_2, i8 %sm_load_3)" [api.c:140]   --->   Operation 87 'bitconcatenate' 'signature_len' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 88 [1/1] (0.00ns)   --->   "%zext_ln142 = zext i32 %signature_len to i64" [api.c:142]   --->   Operation 88 'zext' 'zext_ln142' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 89 [1/1] (2.99ns)   --->   "%add_ln142 = add i64 %smlen_read, -5" [api.c:142]   --->   Operation 89 'add' 'add_ln142' <Predicate = true> <Delay = 2.99> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.18> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 90 [1/1] (2.34ns)   --->   "%icmp_ln142 = icmp ugt i64 %zext_ln142, %add_ln142" [api.c:142]   --->   Operation 90 'icmp' 'icmp_ln142' <Predicate = true> <Delay = 2.34> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 91 [1/1] (1.45ns)   --->   "br i1 %icmp_ln142, label %._crit_edge, label %3" [api.c:142]   --->   Operation 91 'br' <Predicate = true> <Delay = 1.45>
ST_8 : Operation 92 [1/1] (2.99ns)   --->   "%sub_ln146 = sub i64 %smlen_read, %zext_ln142" [api.c:146]   --->   Operation 92 'sub' 'sub_ln146' <Predicate = (!icmp_ln142)> <Delay = 2.99> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.18> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 6> <Delay = 2.99>
ST_9 : Operation 93 [1/1] (2.99ns)   --->   "%message_len = add i64 %sub_ln146, -4" [api.c:146]   --->   Operation 93 'add' 'message_len' <Predicate = true> <Delay = 2.99> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.18> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 7> <Delay = 7.88>
ST_10 : Operation 94 [2/2] (7.88ns)   --->   "%ret_2 = call fastcc i1 @picnic_verify(i4 %pubkey_0_params, [32 x i8]* %pubkey_0_plaintext, [32 x i8]* %pubkey_0_ciphertext, [37336 x i8]* %sm, i64 %message_len, i64 %sub_ln146, i32 %signature_len) nounwind" [api.c:147]   --->   Operation 94 'call' 'ret_2' <Predicate = true> <Delay = 7.88> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 11 <SV = 8> <Delay = 1.45>
ST_11 : Operation 95 [1/2] (0.00ns)   --->   "%ret_2 = call fastcc i1 @picnic_verify(i4 %pubkey_0_params, [32 x i8]* %pubkey_0_plaintext, [32 x i8]* %pubkey_0_ciphertext, [37336 x i8]* %sm, i64 %message_len, i64 %sub_ln146, i32 %signature_len) nounwind" [api.c:147]   --->   Operation 95 'call' 'ret_2' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_11 : Operation 96 [1/1] (1.45ns)   --->   "br i1 %ret_2, label %._crit_edge, label %.preheader.preheader" [api.c:149]   --->   Operation 96 'br' <Predicate = true> <Delay = 1.45>
ST_11 : Operation 97 [1/1] (1.35ns)   --->   "br label %.preheader" [api.c:154]   --->   Operation 97 'br' <Predicate = (!ret_2)> <Delay = 1.35>

State 12 <SV = 9> <Delay = 4.95>
ST_12 : Operation 98 [1/1] (0.00ns)   --->   "%loop_0 = phi i32 [ %loop, %4 ], [ 0, %.preheader.preheader ]"   --->   Operation 98 'phi' 'loop_0' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 99 [1/1] (0.00ns)   --->   "%sext_ln154 = sext i32 %loop_0 to i64" [api.c:154]   --->   Operation 99 'sext' 'sext_ln154' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 100 [1/1] (2.34ns)   --->   "%icmp_ln154 = icmp ult i64 %sext_ln154, %message_len" [api.c:154]   --->   Operation 100 'icmp' 'icmp_ln154' <Predicate = true> <Delay = 2.34> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 101 [1/1] (2.18ns)   --->   "%loop = add nsw i32 %loop_0, 1" [api.c:154]   --->   Operation 101 'add' 'loop' <Predicate = true> <Delay = 2.18> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.18> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 102 [1/1] (0.00ns)   --->   "br i1 %icmp_ln154, label %4, label %5" [api.c:154]   --->   Operation 102 'br' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 103 [1/1] (2.18ns)   --->   "%add_ln155 = add nsw i32 %loop_0, 4" [api.c:155]   --->   Operation 103 'add' 'add_ln155' <Predicate = (icmp_ln154)> <Delay = 2.18> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.18> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 104 [1/1] (0.00ns)   --->   "%sext_ln155 = sext i32 %add_ln155 to i64" [api.c:155]   --->   Operation 104 'sext' 'sext_ln155' <Predicate = (icmp_ln154)> <Delay = 0.00>
ST_12 : Operation 105 [1/1] (0.00ns)   --->   "%sm_addr_4 = getelementptr [37336 x i8]* %sm, i64 0, i64 %sext_ln155" [api.c:155]   --->   Operation 105 'getelementptr' 'sm_addr_4' <Predicate = (icmp_ln154)> <Delay = 0.00>
ST_12 : Operation 106 [2/2] (2.77ns)   --->   "%sm_load_4 = load i8* %sm_addr_4, align 1" [api.c:155]   --->   Operation 106 'load' 'sm_load_4' <Predicate = (icmp_ln154)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1> <RAM>
ST_12 : Operation 107 [1/1] (1.75ns)   --->   "store i64 %message_len, i64* %mlen_addr, align 8" [api.c:156]   --->   Operation 107 'store' <Predicate = (!icmp_ln154)> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1> <RAM>
ST_12 : Operation 108 [1/1] (1.45ns)   --->   "br label %._crit_edge" [api.c:158]   --->   Operation 108 'br' <Predicate = (!icmp_ln154)> <Delay = 1.45>

State 13 <SV = 10> <Delay = 5.54>
ST_13 : Operation 109 [1/2] (2.77ns)   --->   "%sm_load_4 = load i8* %sm_addr_4, align 1" [api.c:155]   --->   Operation 109 'load' 'sm_load_4' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1> <RAM>
ST_13 : Operation 110 [1/1] (0.00ns)   --->   "%m_addr = getelementptr [3300 x i8]* %m, i64 0, i64 %sext_ln154" [api.c:155]   --->   Operation 110 'getelementptr' 'm_addr' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 111 [1/1] (2.77ns)   --->   "store i8 %sm_load_4, i8* %m_addr, align 1" [api.c:155]   --->   Operation 111 'store' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1> <RAM>
ST_13 : Operation 112 [1/1] (0.00ns)   --->   "br label %.preheader" [api.c:154]   --->   Operation 112 'br' <Predicate = true> <Delay = 0.00>

State 14 <SV = 10> <Delay = 0.00>
ST_14 : Operation 113 [1/1] (0.00ns)   --->   "%p_0 = phi i2 [ 0, %5 ], [ -2, %picnic_read_public_key.exit ], [ -1, %3 ], [ -2, %._crit_edge7.i.i ]"   --->   Operation 113 'phi' 'p_0' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 114 [1/1] (0.00ns)   --->   "%sext_ln159 = sext i2 %p_0 to i32" [api.c:159]   --->   Operation 114 'sext' 'sext_ln159' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 115 [1/1] (0.00ns)   --->   "ret i32 %sext_ln159" [api.c:159]   --->   Operation 115 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.75ns
The critical path consists of the following:
	'getelementptr' operation ('pk_addr', picnic.c:548->api.c:132) [30]  (0 ns)
	'load' operation ('pk_load', picnic.c:555->api.c:132) on array 'pk' [31]  (1.75 ns)

 <State 2>: 4.56ns
The critical path consists of the following:
	'load' operation ('pk_load', picnic.c:555->api.c:132) on array 'pk' [31]  (1.75 ns)
	'icmp' operation ('empty_277', picnic.c:555->api.c:132) [40]  (1.21 ns)
	'or' operation ('empty_278', picnic.c:555->api.c:132) [41]  (0 ns)
	'or' operation ('empty_280', picnic.c:555->api.c:132) [43]  (0.8 ns)
	'or' operation ('empty_282', picnic.c:555->api.c:132) [45]  (0.8 ns)

 <State 3>: 3.3ns
The critical path consists of the following:
	'phi' operation ('loop') with incoming values : ('loop', picnic.c:577->api.c:132) [50]  (0 ns)
	'add' operation ('loop', picnic.c:577->api.c:132) [53]  (1.55 ns)
	'getelementptr' operation ('pk_addr_1', picnic.c:577->api.c:132) [57]  (0 ns)
	'load' operation ('pk_load_1', picnic.c:577->api.c:132) on array 'pk' [58]  (1.75 ns)

 <State 4>: 3.51ns
The critical path consists of the following:
	'load' operation ('pk_load_1', picnic.c:577->api.c:132) on array 'pk' [58]  (1.75 ns)
	'store' operation ('store_ln577', picnic.c:577->api.c:132) of variable 'pk_load_1', picnic.c:577->api.c:132 on array 'pubkey[0].ciphertext', api.c:129 [61]  (1.75 ns)

 <State 5>: 3.36ns
The critical path consists of the following:
	'phi' operation ('loop') with incoming values : ('loop', picnic.c:582->api.c:132) [66]  (0 ns)
	'add' operation ('add_ln582_1', picnic.c:582->api.c:132) [73]  (1.6 ns)
	'getelementptr' operation ('pk_addr_2', picnic.c:582->api.c:132) [75]  (0 ns)
	'load' operation ('pk_load_2', picnic.c:582->api.c:132) on array 'pk' [76]  (1.75 ns)

 <State 6>: 3.51ns
The critical path consists of the following:
	'load' operation ('pk_load_2', picnic.c:582->api.c:132) on array 'pk' [76]  (1.75 ns)
	'store' operation ('store_ln582', picnic.c:582->api.c:132) of variable 'pk_load_2', picnic.c:582->api.c:132 on array 'pubkey[0].plaintext', api.c:129 [79]  (1.75 ns)

 <State 7>: 2.77ns
The critical path consists of the following:
	'load' operation ('sm_load', api.c:140) on array 'sm' [83]  (2.77 ns)

 <State 8>: 6.79ns
The critical path consists of the following:
	'add' operation ('add_ln142', api.c:142) [91]  (3 ns)
	'icmp' operation ('icmp_ln142', api.c:142) [92]  (2.34 ns)
	multiplexor before 'phi' operation ('p_0') [121]  (1.45 ns)

 <State 9>: 3ns
The critical path consists of the following:
	'add' operation ('message_len', api.c:146) [96]  (3 ns)

 <State 10>: 7.88ns
The critical path consists of the following:
	'call' operation ('ret_2', api.c:147) to 'picnic_verify' [97]  (7.88 ns)

 <State 11>: 1.45ns
The critical path consists of the following:
	'call' operation ('ret_2', api.c:147) to 'picnic_verify' [97]  (0 ns)
	multiplexor before 'phi' operation ('p_0') [121]  (1.45 ns)

 <State 12>: 4.95ns
The critical path consists of the following:
	'phi' operation ('loop') with incoming values : ('loop', api.c:154) [102]  (0 ns)
	'add' operation ('add_ln155', api.c:155) [108]  (2.18 ns)
	'getelementptr' operation ('sm_addr_4', api.c:155) [110]  (0 ns)
	'load' operation ('sm_load_4', api.c:155) on array 'sm' [111]  (2.77 ns)

 <State 13>: 5.54ns
The critical path consists of the following:
	'load' operation ('sm_load_4', api.c:155) on array 'sm' [111]  (2.77 ns)
	'store' operation ('store_ln155', api.c:155) of variable 'sm_load_4', api.c:155 on array 'm' [113]  (2.77 ns)

 <State 14>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
