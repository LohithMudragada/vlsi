-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity verify is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    sig_0_proofs_seed1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sig_0_proofs_seed1_ce0 : OUT STD_LOGIC;
    sig_0_proofs_seed1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    sig_0_proofs_seed2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sig_0_proofs_seed2_ce0 : OUT STD_LOGIC;
    sig_0_proofs_seed2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    sig_0_proofs_inputS_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sig_0_proofs_inputS_ce0 : OUT STD_LOGIC;
    sig_0_proofs_inputS_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    sig_0_proofs_commun_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
    sig_0_proofs_commun_ce0 : OUT STD_LOGIC;
    sig_0_proofs_commun_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    sig_0_proofs_view3C_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    sig_0_proofs_view3C_ce0 : OUT STD_LOGIC;
    sig_0_proofs_view3C_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    sig_0_challengeBits_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    sig_0_challengeBits_ce0 : OUT STD_LOGIC;
    sig_0_challengeBits_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    sig_0_challengeBits_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    sig_0_challengeBits_ce1 : OUT STD_LOGIC;
    sig_0_challengeBits_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    sig_0_salt_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sig_0_salt_ce0 : OUT STD_LOGIC;
    sig_0_salt_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    pubKey_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    pubKey_ce0 : OUT STD_LOGIC;
    pubKey_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    plaintext_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    plaintext_ce0 : OUT STD_LOGIC;
    plaintext_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    message_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    message_ce0 : OUT STD_LOGIC;
    message_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    messageByteLength : IN STD_LOGIC_VECTOR (63 downto 0);
    viewOutputs_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    viewOutputs_ce0 : OUT STD_LOGIC;
    viewOutputs_we0 : OUT STD_LOGIC;
    viewOutputs_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    viewOutputs_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of verify is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state78 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state79 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state80 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state81 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state82 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state83 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state84 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state85 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state86 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state87 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state88 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state89 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state90 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state91 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state92 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state93 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state94 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state95 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state96 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state97 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state98 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state99 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state100 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state101 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state102 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state103 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state104 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state105 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state106 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state107 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state108 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state109 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state110 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state111 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state112 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state113 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state114 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state115 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state116 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state117 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state118 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state119 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state120 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state121 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state122 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state123 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state124 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state125 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state126 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state127 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state128 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state129 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state130 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state131 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state132 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state133 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state134 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state135 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state136 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state137 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state138 : STD_LOGIC_VECTOR (148 downto 0) := "00000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state139 : STD_LOGIC_VECTOR (148 downto 0) := "00000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state140 : STD_LOGIC_VECTOR (148 downto 0) := "00000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state141 : STD_LOGIC_VECTOR (148 downto 0) := "00000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state142 : STD_LOGIC_VECTOR (148 downto 0) := "00000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state143 : STD_LOGIC_VECTOR (148 downto 0) := "00000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state144 : STD_LOGIC_VECTOR (148 downto 0) := "00000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state145 : STD_LOGIC_VECTOR (148 downto 0) := "00001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state146 : STD_LOGIC_VECTOR (148 downto 0) := "00010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state147 : STD_LOGIC_VECTOR (148 downto 0) := "00100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state148 : STD_LOGIC_VECTOR (148 downto 0) := "01000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state149 : STD_LOGIC_VECTOR (148 downto 0) := "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_73 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110011";
    constant ap_const_lv32_7B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111011";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_75 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110101";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv32_77 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110111";
    constant ap_const_lv32_85 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000101";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_7D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111101";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_83 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000011";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_81 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_lv32_4A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001010";
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";
    constant ap_const_lv32_4C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001100";
    constant ap_const_lv32_4D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001101";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_51 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010001";
    constant ap_const_lv32_52 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010010";
    constant ap_const_lv32_53 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010011";
    constant ap_const_lv32_54 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010100";
    constant ap_const_lv32_55 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010101";
    constant ap_const_lv32_56 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010110";
    constant ap_const_lv32_57 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010111";
    constant ap_const_lv32_58 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011000";
    constant ap_const_lv32_59 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011001";
    constant ap_const_lv32_5A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011010";
    constant ap_const_lv32_5B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011011";
    constant ap_const_lv32_5C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011100";
    constant ap_const_lv32_5D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011101";
    constant ap_const_lv32_5E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011110";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_61 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100001";
    constant ap_const_lv32_62 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100010";
    constant ap_const_lv32_63 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100011";
    constant ap_const_lv32_64 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100100";
    constant ap_const_lv32_65 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100101";
    constant ap_const_lv32_66 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100110";
    constant ap_const_lv32_67 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100111";
    constant ap_const_lv32_68 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101000";
    constant ap_const_lv32_69 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101001";
    constant ap_const_lv32_6A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101010";
    constant ap_const_lv32_6B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101011";
    constant ap_const_lv32_6C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101100";
    constant ap_const_lv32_6D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101101";
    constant ap_const_lv32_6E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101110";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv32_71 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110001";
    constant ap_const_lv32_72 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_87 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000111";
    constant ap_const_lv32_88 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001000";
    constant ap_const_lv32_8A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001010";
    constant ap_const_lv32_8C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001100";
    constant ap_const_lv32_8E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001110";
    constant ap_const_lv32_90 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010000";
    constant ap_const_lv32_93 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010011";
    constant ap_const_lv32_94 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010100";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_89 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001001";
    constant ap_const_lv32_8B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001011";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_8D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001101";
    constant ap_const_lv32_8F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001111";
    constant ap_const_lv32_91 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010001";
    constant ap_const_lv32_92 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010010";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv32_78 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111000";
    constant ap_const_lv32_86 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000110";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_79 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111001";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_7E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111110";
    constant ap_const_lv32_82 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000010";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_7C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111100";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_74 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_7A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111010";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_76 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110110";
    constant ap_const_lv32_84 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000100";
    constant ap_const_lv15_4B : STD_LOGIC_VECTOR (14 downto 0) := "000000001001011";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv15_4A : STD_LOGIC_VECTOR (14 downto 0) := "000000001001010";
    constant ap_const_lv8_DB : STD_LOGIC_VECTOR (7 downto 0) := "11011011";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv8_DA : STD_LOGIC_VECTOR (7 downto 0) := "11011010";
    constant ap_const_lv10_2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_const_lv10_3 : STD_LOGIC_VECTOR (9 downto 0) := "0000000011";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv14_2 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000010";
    constant ap_const_lv14_3 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000011";
    constant ap_const_lv14_4 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000100";
    constant ap_const_lv14_5 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000101";
    constant ap_const_lv14_6 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000110";
    constant ap_const_lv14_7 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000111";
    constant ap_const_lv14_8 : STD_LOGIC_VECTOR (13 downto 0) := "00000000001000";
    constant ap_const_lv14_9 : STD_LOGIC_VECTOR (13 downto 0) := "00000000001001";
    constant ap_const_lv14_A : STD_LOGIC_VECTOR (13 downto 0) := "00000000001010";
    constant ap_const_lv14_B : STD_LOGIC_VECTOR (13 downto 0) := "00000000001011";
    constant ap_const_lv14_C : STD_LOGIC_VECTOR (13 downto 0) := "00000000001100";
    constant ap_const_lv14_D : STD_LOGIC_VECTOR (13 downto 0) := "00000000001101";
    constant ap_const_lv14_E : STD_LOGIC_VECTOR (13 downto 0) := "00000000001110";
    constant ap_const_lv14_F : STD_LOGIC_VECTOR (13 downto 0) := "00000000001111";
    constant ap_const_lv14_10 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010000";
    constant ap_const_lv14_11 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010001";
    constant ap_const_lv14_12 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010010";
    constant ap_const_lv14_13 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010011";
    constant ap_const_lv14_14 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010100";
    constant ap_const_lv14_15 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010101";
    constant ap_const_lv14_16 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010110";
    constant ap_const_lv14_17 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010111";
    constant ap_const_lv14_18 : STD_LOGIC_VECTOR (13 downto 0) := "00000000011000";
    constant ap_const_lv14_19 : STD_LOGIC_VECTOR (13 downto 0) := "00000000011001";
    constant ap_const_lv14_1A : STD_LOGIC_VECTOR (13 downto 0) := "00000000011010";
    constant ap_const_lv14_1B : STD_LOGIC_VECTOR (13 downto 0) := "00000000011011";
    constant ap_const_lv14_1C : STD_LOGIC_VECTOR (13 downto 0) := "00000000011100";
    constant ap_const_lv14_1D : STD_LOGIC_VECTOR (13 downto 0) := "00000000011101";
    constant ap_const_lv14_1E : STD_LOGIC_VECTOR (13 downto 0) := "00000000011110";
    constant ap_const_lv14_1F : STD_LOGIC_VECTOR (13 downto 0) := "00000000011111";
    constant ap_const_lv14_20 : STD_LOGIC_VECTOR (13 downto 0) := "00000000100000";
    constant ap_const_lv14_4B : STD_LOGIC_VECTOR (13 downto 0) := "00000001001011";
    constant ap_const_lv14_21 : STD_LOGIC_VECTOR (13 downto 0) := "00000000100001";
    constant ap_const_lv15_22 : STD_LOGIC_VECTOR (14 downto 0) := "000000000100010";
    constant ap_const_lv15_23 : STD_LOGIC_VECTOR (14 downto 0) := "000000000100011";
    constant ap_const_lv15_24 : STD_LOGIC_VECTOR (14 downto 0) := "000000000100100";
    constant ap_const_lv15_25 : STD_LOGIC_VECTOR (14 downto 0) := "000000000100101";
    constant ap_const_lv15_26 : STD_LOGIC_VECTOR (14 downto 0) := "000000000100110";
    constant ap_const_lv15_27 : STD_LOGIC_VECTOR (14 downto 0) := "000000000100111";
    constant ap_const_lv15_28 : STD_LOGIC_VECTOR (14 downto 0) := "000000000101000";
    constant ap_const_lv15_29 : STD_LOGIC_VECTOR (14 downto 0) := "000000000101001";
    constant ap_const_lv15_2A : STD_LOGIC_VECTOR (14 downto 0) := "000000000101010";
    constant ap_const_lv15_2B : STD_LOGIC_VECTOR (14 downto 0) := "000000000101011";
    constant ap_const_lv15_2C : STD_LOGIC_VECTOR (14 downto 0) := "000000000101100";
    constant ap_const_lv15_2D : STD_LOGIC_VECTOR (14 downto 0) := "000000000101101";
    constant ap_const_lv15_2E : STD_LOGIC_VECTOR (14 downto 0) := "000000000101110";
    constant ap_const_lv15_2F : STD_LOGIC_VECTOR (14 downto 0) := "000000000101111";
    constant ap_const_lv15_30 : STD_LOGIC_VECTOR (14 downto 0) := "000000000110000";
    constant ap_const_lv15_31 : STD_LOGIC_VECTOR (14 downto 0) := "000000000110001";
    constant ap_const_lv15_32 : STD_LOGIC_VECTOR (14 downto 0) := "000000000110010";
    constant ap_const_lv15_33 : STD_LOGIC_VECTOR (14 downto 0) := "000000000110011";
    constant ap_const_lv15_34 : STD_LOGIC_VECTOR (14 downto 0) := "000000000110100";
    constant ap_const_lv15_35 : STD_LOGIC_VECTOR (14 downto 0) := "000000000110101";
    constant ap_const_lv15_36 : STD_LOGIC_VECTOR (14 downto 0) := "000000000110110";
    constant ap_const_lv15_37 : STD_LOGIC_VECTOR (14 downto 0) := "000000000110111";
    constant ap_const_lv15_38 : STD_LOGIC_VECTOR (14 downto 0) := "000000000111000";
    constant ap_const_lv15_39 : STD_LOGIC_VECTOR (14 downto 0) := "000000000111001";
    constant ap_const_lv15_3A : STD_LOGIC_VECTOR (14 downto 0) := "000000000111010";
    constant ap_const_lv15_3B : STD_LOGIC_VECTOR (14 downto 0) := "000000000111011";
    constant ap_const_lv15_3C : STD_LOGIC_VECTOR (14 downto 0) := "000000000111100";
    constant ap_const_lv15_3D : STD_LOGIC_VECTOR (14 downto 0) := "000000000111101";
    constant ap_const_lv15_3E : STD_LOGIC_VECTOR (14 downto 0) := "000000000111110";
    constant ap_const_lv15_3F : STD_LOGIC_VECTOR (14 downto 0) := "000000000111111";
    constant ap_const_lv15_40 : STD_LOGIC_VECTOR (14 downto 0) := "000000001000000";
    constant ap_const_lv15_41 : STD_LOGIC_VECTOR (14 downto 0) := "000000001000001";
    constant ap_const_lv15_42 : STD_LOGIC_VECTOR (14 downto 0) := "000000001000010";
    constant ap_const_lv15_43 : STD_LOGIC_VECTOR (14 downto 0) := "000000001000011";
    constant ap_const_lv15_44 : STD_LOGIC_VECTOR (14 downto 0) := "000000001000100";
    constant ap_const_lv15_45 : STD_LOGIC_VECTOR (14 downto 0) := "000000001000101";
    constant ap_const_lv15_46 : STD_LOGIC_VECTOR (14 downto 0) := "000000001000110";
    constant ap_const_lv15_47 : STD_LOGIC_VECTOR (14 downto 0) := "000000001000111";
    constant ap_const_lv15_48 : STD_LOGIC_VECTOR (14 downto 0) := "000000001001000";
    constant ap_const_lv15_49 : STD_LOGIC_VECTOR (14 downto 0) := "000000001001001";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv10_4 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_const_lv6_37 : STD_LOGIC_VECTOR (5 downto 0) := "110111";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (148 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal grp_HashInit_fu_3328_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_3358 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal grp_HashInit_fu_3328_ap_ready : STD_LOGIC;
    signal grp_HashInit_fu_3328_ap_done : STD_LOGIC;
    signal ap_CS_fsm_state58 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state58 : signal is "none";
    signal ap_CS_fsm_state116 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state116 : signal is "none";
    signal ap_CS_fsm_state124 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state124 : signal is "none";
    signal grp_KeccakWidth1600_Spon_5_fu_3300_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_3364 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal grp_KeccakWidth1600_Spon_5_fu_3300_ap_ready : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_5_fu_3300_ap_done : STD_LOGIC;
    signal ap_CS_fsm_state118 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state118 : signal is "none";
    signal reg_3369 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal grp_HashFinal_fu_3340_ap_ready : STD_LOGIC;
    signal grp_HashFinal_fu_3340_ap_done : STD_LOGIC;
    signal ap_CS_fsm_state68 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state68 : signal is "none";
    signal ap_CS_fsm_state120 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state120 : signal is "none";
    signal ap_CS_fsm_state134 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state134 : signal is "none";
    signal reg_3374 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_KeccakWidth1600_Spon_6_fu_3286_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_3379 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state60 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state60 : signal is "none";
    signal grp_KeccakWidth1600_Spon_6_fu_3286_ap_ready : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_6_fu_3286_ap_done : STD_LOGIC;
    signal ap_CS_fsm_state126 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state126 : signal is "none";
    signal grp_HashUpdate_2_1_fu_3273_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_3384 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state62 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state62 : signal is "none";
    signal grp_HashUpdate_2_1_fu_3273_ap_ready : STD_LOGIC;
    signal grp_HashUpdate_2_1_fu_3273_ap_done : STD_LOGIC;
    signal ap_CS_fsm_state66 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state66 : signal is "none";
    signal ap_CS_fsm_state128 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state128 : signal is "none";
    signal ap_CS_fsm_state132 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state132 : signal is "none";
    signal grp_KeccakWidth1600_Spon_11_fu_3315_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_3390 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state64 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state64 : signal is "none";
    signal grp_KeccakWidth1600_Spon_11_fu_3315_ap_ready : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_11_fu_3315_ap_done : STD_LOGIC;
    signal ap_CS_fsm_state130 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state130 : signal is "none";
    signal add_ln1236_fu_3395_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln1236_reg_5796 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal zext_ln1254_fu_3413_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln1254_reg_5801 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln1254_1_fu_3425_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1254_1_reg_5806 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln1254_fu_3429_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln1254_reg_5813 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_fu_3452_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_reg_5824 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1236_fu_3446_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln_fu_3525_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln_reg_5835 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal trunc_ln386_2_fu_3540_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln386_2_reg_5840 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln54_1_fu_3550_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln54_1_reg_5845 : STD_LOGIC_VECTOR (0 downto 0);
    signal challenge_fu_3554_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal challenge_reg_5850 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_verifyProof_23_fu_3198_ap_ready : STD_LOGIC;
    signal grp_verifyProof_23_fu_3198_ap_done : STD_LOGIC;
    signal zext_ln1250_cast_fu_3560_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1250_cast_reg_5858 : STD_LOGIC_VECTOR (10 downto 0);
    signal indvarinc_fu_3564_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal indvarinc_reg_5863 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal tmp_8_fu_3570_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_8_reg_5868 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_48_fu_3578_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_48_reg_5874 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_fu_3589_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_reg_5879 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_52_fu_3598_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_52_reg_5894 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_3609_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_reg_5898 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal tmp_1_fu_3623_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1_reg_5903 : STD_LOGIC_VECTOR (63 downto 0);
    signal phi_mul_cast_fu_3632_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal phi_mul_cast_reg_5918 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal p_cast167_fu_3643_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast167_reg_5928 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal p_cast166_fu_3654_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast166_reg_5933 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast165_fu_3665_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast165_reg_5948 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal p_cast164_fu_3676_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast164_reg_5953 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast163_fu_3687_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast163_reg_5968 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal p_cast162_fu_3698_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast162_reg_5973 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast161_fu_3709_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast161_reg_5988 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal p_cast160_fu_3720_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast160_reg_5993 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast159_fu_3731_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast159_reg_6008 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal p_cast158_fu_3742_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast158_reg_6013 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast157_fu_3753_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast157_reg_6028 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal p_cast156_fu_3764_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast156_reg_6033 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast155_fu_3775_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast155_reg_6048 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal p_cast154_fu_3786_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast154_reg_6053 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast153_fu_3797_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast153_reg_6068 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal p_cast152_fu_3808_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast152_reg_6073 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast151_fu_3819_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast151_reg_6088 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal p_cast150_fu_3830_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast150_reg_6093 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast149_fu_3841_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast149_reg_6108 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal p_cast148_fu_3852_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast148_reg_6113 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast147_fu_3863_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast147_reg_6128 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal p_cast146_fu_3874_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast146_reg_6133 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast145_fu_3885_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast145_reg_6148 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal p_cast144_fu_3896_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast144_reg_6153 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast143_fu_3907_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast143_reg_6168 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal p_cast142_fu_3918_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast142_reg_6173 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast141_fu_3929_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast141_reg_6188 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal p_cast140_fu_3940_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast140_reg_6193 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast139_fu_3951_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast139_reg_6208 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal p_cast138_fu_3962_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast138_reg_6213 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast137_fu_3973_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast137_reg_6228 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal p_cast136_fu_3984_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast136_reg_6233 : STD_LOGIC_VECTOR (63 downto 0);
    signal phi_mul_cast168_fu_3989_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal phi_mul_cast168_reg_6248 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal next_mul_fu_3993_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal next_mul_reg_6292 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_cast135_fu_4005_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast135_reg_6297 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast134_fu_4016_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast134_reg_6302 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast133_fu_4026_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast133_reg_6317 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal p_cast132_fu_4036_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast132_reg_6322 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast131_fu_4046_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast131_reg_6337 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal p_cast130_fu_4056_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast130_reg_6342 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast129_fu_4066_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast129_reg_6357 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal p_cast128_fu_4076_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast128_reg_6362 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast127_fu_4086_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast127_reg_6377 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal p_cast126_fu_4096_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast126_reg_6382 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast125_fu_4106_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast125_reg_6397 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal p_cast124_fu_4116_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast124_reg_6402 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast123_fu_4126_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast123_reg_6417 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal p_cast122_fu_4136_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast122_reg_6422 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast121_fu_4146_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast121_reg_6437 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal p_cast120_fu_4156_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast120_reg_6442 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast119_fu_4166_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast119_reg_6457 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal p_cast118_fu_4176_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast118_reg_6462 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast117_fu_4186_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast117_reg_6477 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal p_cast116_fu_4196_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast116_reg_6482 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast115_fu_4206_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast115_reg_6497 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal p_cast114_fu_4216_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast114_reg_6502 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast113_fu_4226_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast113_reg_6517 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal p_cast112_fu_4236_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast112_reg_6522 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast111_fu_4246_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast111_reg_6537 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal p_cast110_fu_4256_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast110_reg_6542 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast109_fu_4266_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast109_reg_6557 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal p_cast108_fu_4276_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast108_reg_6562 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast107_fu_4286_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast107_reg_6577 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal p_cast106_fu_4296_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast106_reg_6582 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast105_fu_4306_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast105_reg_6597 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal p_cast104_fu_4316_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast104_reg_6602 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast103_fu_4326_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast103_reg_6617 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal p_cast102_fu_4336_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast102_reg_6622 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast101_fu_4346_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast101_reg_6637 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal p_cast100_fu_4356_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast100_reg_6642 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast99_fu_4366_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast99_reg_6657 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal p_cast98_fu_4376_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast98_reg_6662 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast97_fu_4386_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast97_reg_6677 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal p_cast96_fu_4396_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast96_reg_6682 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast95_fu_4406_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast95_reg_6697 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal p_cast94_fu_4416_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast94_reg_6702 : STD_LOGIC_VECTOR (63 downto 0);
    signal indvarinc9_fu_4421_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal indvarinc88_fu_4433_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal indvarinc88_reg_6725 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal tmp_2_fu_4439_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_2_reg_6730 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_130_fu_4447_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_130_reg_6736 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_fu_4458_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_reg_6741 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_134_fu_4467_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_134_reg_6756 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_4478_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_6_reg_6760 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal tmp_7_fu_4492_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_7_reg_6765 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1251_fu_4501_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln1251_reg_6780 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state70 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state70 : signal is "none";
    signal grp_KeccakWidth1600_Spon_fu_3258_ap_ready : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_fu_3258_ap_done : STD_LOGIC;
    signal select_ln1251_fu_4525_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln1251_reg_6786 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln1251_1_cast_fu_4533_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1251_1_cast_reg_6791 : STD_LOGIC_VECTOR (10 downto 0);
    signal indvarinc96_fu_4537_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal indvarinc96_reg_6796 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state71 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state71 : signal is "none";
    signal tmp_10_fu_4543_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_10_reg_6801 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_136_fu_4551_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_136_reg_6807 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_11_fu_4562_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_11_reg_6812 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_140_fu_4571_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_140_reg_6827 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_4582_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_12_reg_6831 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state72 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state72 : signal is "none";
    signal tmp_13_fu_4596_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_13_reg_6836 : STD_LOGIC_VECTOR (63 downto 0);
    signal phi_mul15_cast_fu_4605_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal phi_mul15_cast_reg_6851 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state74 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state74 : signal is "none";
    signal p_cast92_fu_4616_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast92_reg_6861 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state75 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state75 : signal is "none";
    signal p_cast91_fu_4627_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast91_reg_6866 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast90_fu_4638_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast90_reg_6881 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state76 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state76 : signal is "none";
    signal p_cast89_fu_4649_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast89_reg_6886 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast88_fu_4660_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast88_reg_6901 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state77 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state77 : signal is "none";
    signal p_cast87_fu_4671_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast87_reg_6906 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast86_fu_4682_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast86_reg_6921 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state78 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state78 : signal is "none";
    signal p_cast85_fu_4693_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast85_reg_6926 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast84_fu_4704_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast84_reg_6941 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state79 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state79 : signal is "none";
    signal p_cast83_fu_4715_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast83_reg_6946 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast82_fu_4726_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast82_reg_6961 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state80 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state80 : signal is "none";
    signal p_cast81_fu_4737_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast81_reg_6966 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast80_fu_4748_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast80_reg_6981 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state81 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state81 : signal is "none";
    signal p_cast79_fu_4759_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast79_reg_6986 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast78_fu_4770_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast78_reg_7001 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state82 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state82 : signal is "none";
    signal p_cast77_fu_4781_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast77_reg_7006 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast76_fu_4792_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast76_reg_7021 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state83 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state83 : signal is "none";
    signal p_cast75_fu_4803_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast75_reg_7026 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast74_fu_4814_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast74_reg_7041 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state84 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state84 : signal is "none";
    signal p_cast73_fu_4825_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast73_reg_7046 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast72_fu_4836_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast72_reg_7061 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state85 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state85 : signal is "none";
    signal p_cast71_fu_4847_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast71_reg_7066 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast70_fu_4858_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast70_reg_7081 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state86 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state86 : signal is "none";
    signal p_cast69_fu_4869_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast69_reg_7086 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast68_fu_4880_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast68_reg_7101 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state87 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state87 : signal is "none";
    signal p_cast67_fu_4891_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast67_reg_7106 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast66_fu_4902_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast66_reg_7121 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state88 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state88 : signal is "none";
    signal p_cast65_fu_4913_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast65_reg_7126 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast64_fu_4924_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast64_reg_7141 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state89 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state89 : signal is "none";
    signal p_cast63_fu_4935_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast63_reg_7146 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast62_fu_4946_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast62_reg_7161 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state90 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state90 : signal is "none";
    signal p_cast61_fu_4957_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast61_reg_7166 : STD_LOGIC_VECTOR (63 downto 0);
    signal phi_mul15_cast93_fu_4962_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal phi_mul15_cast93_reg_7181 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state91 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state91 : signal is "none";
    signal next_mul16_fu_4966_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal next_mul16_reg_7225 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_cast60_fu_4978_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast60_reg_7230 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast59_fu_4989_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast59_reg_7235 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast58_fu_4999_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast58_reg_7250 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state92 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state92 : signal is "none";
    signal p_cast57_fu_5009_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast57_reg_7255 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast56_fu_5019_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast56_reg_7270 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state93 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state93 : signal is "none";
    signal p_cast55_fu_5029_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast55_reg_7275 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast54_fu_5039_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast54_reg_7290 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state94 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state94 : signal is "none";
    signal p_cast53_fu_5049_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast53_reg_7295 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast52_fu_5059_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast52_reg_7310 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state95 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state95 : signal is "none";
    signal p_cast51_fu_5069_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast51_reg_7315 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast50_fu_5079_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast50_reg_7330 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state96 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state96 : signal is "none";
    signal p_cast49_fu_5089_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast49_reg_7335 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast48_fu_5099_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast48_reg_7350 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state97 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state97 : signal is "none";
    signal p_cast47_fu_5109_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast47_reg_7355 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast46_fu_5119_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast46_reg_7370 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state98 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state98 : signal is "none";
    signal p_cast45_fu_5129_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast45_reg_7375 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast44_fu_5139_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast44_reg_7390 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state99 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state99 : signal is "none";
    signal p_cast43_fu_5149_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast43_reg_7395 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast42_fu_5159_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast42_reg_7410 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state100 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state100 : signal is "none";
    signal p_cast41_fu_5169_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast41_reg_7415 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast40_fu_5179_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast40_reg_7430 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state101 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state101 : signal is "none";
    signal p_cast39_fu_5189_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast39_reg_7435 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast38_fu_5199_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast38_reg_7450 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state102 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state102 : signal is "none";
    signal p_cast37_fu_5209_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast37_reg_7455 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast36_fu_5219_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast36_reg_7470 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state103 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state103 : signal is "none";
    signal p_cast35_fu_5229_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast35_reg_7475 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast34_fu_5239_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast34_reg_7490 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state104 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state104 : signal is "none";
    signal p_cast33_fu_5249_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast33_reg_7495 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast32_fu_5259_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast32_reg_7510 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state105 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state105 : signal is "none";
    signal p_cast31_fu_5269_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast31_reg_7515 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast30_fu_5279_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast30_reg_7530 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state106 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state106 : signal is "none";
    signal p_cast29_fu_5289_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast29_reg_7535 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast28_fu_5299_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast28_reg_7550 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state107 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state107 : signal is "none";
    signal p_cast27_fu_5309_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast27_reg_7555 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast26_fu_5319_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast26_reg_7570 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state108 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state108 : signal is "none";
    signal p_cast25_fu_5329_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast25_reg_7575 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast24_fu_5339_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast24_reg_7590 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state109 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state109 : signal is "none";
    signal p_cast23_fu_5349_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast23_reg_7595 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast22_fu_5359_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast22_reg_7610 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state110 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state110 : signal is "none";
    signal p_cast21_fu_5369_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast21_reg_7615 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast20_fu_5379_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast20_reg_7630 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state111 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state111 : signal is "none";
    signal p_cast_fu_5389_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast_reg_7635 : STD_LOGIC_VECTOR (63 downto 0);
    signal indvarinc104_fu_5394_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state112 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state112 : signal is "none";
    signal indvarinc183_fu_5406_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal indvarinc183_reg_7658 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state113 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state113 : signal is "none";
    signal tmp_14_fu_5412_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_14_reg_7663 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_218_fu_5420_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_218_reg_7669 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_15_fu_5431_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_15_reg_7674 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_222_fu_5440_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_222_reg_7689 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_5451_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_16_reg_7693 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state114 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state114 : signal is "none";
    signal tmp_17_fu_5465_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_reg_7698 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln81_fu_5474_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln81_reg_7713 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state115 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state115 : signal is "none";
    signal tmp_25_cast_fu_5510_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_25_cast_reg_7719 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state136 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state136 : signal is "none";
    signal zext_ln1253_fu_5518_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1253_reg_7724 : STD_LOGIC_VECTOR (10 downto 0);
    signal loop_fu_5528_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal loop_reg_7732 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state137 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state137 : signal is "none";
    signal icmp_ln1253_fu_5522_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1254_4_fu_5552_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1254_4_reg_7742 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1263_fu_5557_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1263_reg_7747 : STD_LOGIC_VECTOR (10 downto 0);
    signal loop_22_fu_5571_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal loop_22_reg_7755 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state139 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state139 : signal is "none";
    signal icmp_ln1262_fu_5565_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1265_fu_5591_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1265_reg_7765 : STD_LOGIC_VECTOR (10 downto 0);
    signal loop_23_fu_5615_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal loop_23_reg_7773 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state141 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state141 : signal is "none";
    signal icmp_ln1264_fu_5609_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln1268_fu_5649_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1268_reg_7783 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state143 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state143 : signal is "none";
    signal j_fu_5679_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_reg_7801 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln1268_fu_5673_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1273_fu_5685_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1273_reg_7811 : STD_LOGIC_VECTOR (10 downto 0);
    signal loop_24_fu_5718_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal loop_24_reg_7819 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state145 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state145 : signal is "none";
    signal icmp_ln1272_fu_5712_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1275_fu_5739_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal loop_21_fu_5765_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal loop_21_reg_7837 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state148 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state148 : signal is "none";
    signal icmp_ln1286_fu_5759_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1287_fu_5783_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state149 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state149 : signal is "none";
    signal ctx_sponge_state_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal ctx_sponge_state_2_ce0 : STD_LOGIC;
    signal ctx_sponge_state_2_we0 : STD_LOGIC;
    signal ctx_sponge_state_2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal ctx_sponge_state_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal view2s_outputShare18_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal view2s_outputShare18_ce0 : STD_LOGIC;
    signal view2s_outputShare18_we0 : STD_LOGIC;
    signal view2s_outputShare18_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal view2s_outputShare18_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal view2s_outputShare18_ce1 : STD_LOGIC;
    signal view2s_outputShare18_we1 : STD_LOGIC;
    signal data_assign_2_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal data_assign_2_ce0 : STD_LOGIC;
    signal data_assign_2_we0 : STD_LOGIC;
    signal data_assign_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_assign_2_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal data_assign_2_ce1 : STD_LOGIC;
    signal data_assign_2_we1 : STD_LOGIC;
    signal view2s_inputShare93_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal view2s_inputShare93_ce0 : STD_LOGIC;
    signal view2s_inputShare93_we0 : STD_LOGIC;
    signal view2s_inputShare93_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal view2s_inputShare93_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal view2s_inputShare93_ce1 : STD_LOGIC;
    signal view2s_inputShare93_we1 : STD_LOGIC;
    signal ctx_sponge_state_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal ctx_sponge_state_ce0 : STD_LOGIC;
    signal ctx_sponge_state_we0 : STD_LOGIC;
    signal ctx_sponge_state_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal ctx_sponge_state_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal view1s_outputShare85_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal view1s_outputShare85_ce0 : STD_LOGIC;
    signal view1s_outputShare85_we0 : STD_LOGIC;
    signal view1s_outputShare85_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal view1s_outputShare85_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal view1s_outputShare85_ce1 : STD_LOGIC;
    signal view1s_outputShare85_we1 : STD_LOGIC;
    signal data_assign_1_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal data_assign_1_ce0 : STD_LOGIC;
    signal data_assign_1_we0 : STD_LOGIC;
    signal data_assign_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_assign_1_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal data_assign_1_ce1 : STD_LOGIC;
    signal data_assign_1_we1 : STD_LOGIC;
    signal view1s_inputShare1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal view1s_inputShare1_ce0 : STD_LOGIC;
    signal view1s_inputShare1_we0 : STD_LOGIC;
    signal view1s_inputShare1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal view1s_inputShare1_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal view1s_inputShare1_ce1 : STD_LOGIC;
    signal view1s_inputShare1_we1 : STD_LOGIC;
    signal as_hashes_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal as_hashes_ce0 : STD_LOGIC;
    signal as_hashes_we0 : STD_LOGIC;
    signal as_hashes_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal as_hashes_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal computed_challengebi_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal computed_challengebi_ce0 : STD_LOGIC;
    signal computed_challengebi_we0 : STD_LOGIC;
    signal computed_challengebi_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal view3Slab_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal view3Slab_ce0 : STD_LOGIC;
    signal view3Slab_we0 : STD_LOGIC;
    signal view3Slab_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal view3Slab_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tape_0_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tape_0_0_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal view1s_inputShare_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal view1s_inputShare_ce0 : STD_LOGIC;
    signal view1s_inputShare_we0 : STD_LOGIC;
    signal view1s_inputShare_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal view1s_inputShare_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal view1s_inputShare_ce1 : STD_LOGIC;
    signal view1s_inputShare_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal view1s_communicatedB_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal view1s_communicatedB_ce0 : STD_LOGIC;
    signal view1s_communicatedB_we0 : STD_LOGIC;
    signal view1s_communicatedB_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal view1s_communicatedB_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal view1s_communicatedB_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal view1s_communicatedB_ce1 : STD_LOGIC;
    signal view1s_communicatedB_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal view1s_outputShare_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal view1s_outputShare_ce0 : STD_LOGIC;
    signal view1s_outputShare_we0 : STD_LOGIC;
    signal view1s_outputShare_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal view1s_outputShare_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal view1s_outputShare_ce1 : STD_LOGIC;
    signal view1s_outputShare_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal view2s_inputShare_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal view2s_inputShare_ce0 : STD_LOGIC;
    signal view2s_inputShare_we0 : STD_LOGIC;
    signal view2s_inputShare_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal view2s_inputShare_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal view2s_inputShare_ce1 : STD_LOGIC;
    signal view2s_inputShare_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal view2s_communicatedB_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal view2s_communicatedB_ce0 : STD_LOGIC;
    signal view2s_communicatedB_we0 : STD_LOGIC;
    signal view2s_communicatedB_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal view2s_communicatedB_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal view2s_communicatedB_ce1 : STD_LOGIC;
    signal view2s_communicatedB_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal view2s_outputShare_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal view2s_outputShare_ce0 : STD_LOGIC;
    signal view2s_outputShare_we0 : STD_LOGIC;
    signal view2s_outputShare_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal view2s_outputShare_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal view2s_outputShare_ce1 : STD_LOGIC;
    signal view2s_outputShare_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_verifyProof_23_fu_3198_ap_start : STD_LOGIC;
    signal grp_verifyProof_23_fu_3198_ap_idle : STD_LOGIC;
    signal grp_verifyProof_23_fu_3198_proof_0_seed1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_verifyProof_23_fu_3198_proof_0_seed1_ce0 : STD_LOGIC;
    signal grp_verifyProof_23_fu_3198_proof_0_seed2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_verifyProof_23_fu_3198_proof_0_seed2_ce0 : STD_LOGIC;
    signal grp_verifyProof_23_fu_3198_proof_0_inputShare_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_verifyProof_23_fu_3198_proof_0_inputShare_ce0 : STD_LOGIC;
    signal grp_verifyProof_23_fu_3198_proof_0_communicatedBits_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_verifyProof_23_fu_3198_proof_0_communicatedBits_ce0 : STD_LOGIC;
    signal grp_verifyProof_23_fu_3198_view1_inputShare_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_verifyProof_23_fu_3198_view1_inputShare_ce0 : STD_LOGIC;
    signal grp_verifyProof_23_fu_3198_view1_inputShare_we0 : STD_LOGIC;
    signal grp_verifyProof_23_fu_3198_view1_inputShare_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_verifyProof_23_fu_3198_view1_communicatedBits_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_verifyProof_23_fu_3198_view1_communicatedBits_ce0 : STD_LOGIC;
    signal grp_verifyProof_23_fu_3198_view1_communicatedBits_we0 : STD_LOGIC;
    signal grp_verifyProof_23_fu_3198_view1_communicatedBits_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_verifyProof_23_fu_3198_view1_outputShare_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_verifyProof_23_fu_3198_view1_outputShare_ce0 : STD_LOGIC;
    signal grp_verifyProof_23_fu_3198_view1_outputShare_we0 : STD_LOGIC;
    signal grp_verifyProof_23_fu_3198_view1_outputShare_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_verifyProof_23_fu_3198_view2_inputShare_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_verifyProof_23_fu_3198_view2_inputShare_ce0 : STD_LOGIC;
    signal grp_verifyProof_23_fu_3198_view2_inputShare_we0 : STD_LOGIC;
    signal grp_verifyProof_23_fu_3198_view2_inputShare_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_verifyProof_23_fu_3198_view2_communicatedBits_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_verifyProof_23_fu_3198_view2_communicatedBits_ce0 : STD_LOGIC;
    signal grp_verifyProof_23_fu_3198_view2_communicatedBits_we0 : STD_LOGIC;
    signal grp_verifyProof_23_fu_3198_view2_communicatedBits_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_verifyProof_23_fu_3198_view2_outputShare_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_verifyProof_23_fu_3198_view2_outputShare_ce0 : STD_LOGIC;
    signal grp_verifyProof_23_fu_3198_view2_outputShare_we0 : STD_LOGIC;
    signal grp_verifyProof_23_fu_3198_view2_outputShare_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_verifyProof_23_fu_3198_salt_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_verifyProof_23_fu_3198_salt_0_ce0 : STD_LOGIC;
    signal grp_verifyProof_23_fu_3198_tmp_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_verifyProof_23_fu_3198_tmp_ce0 : STD_LOGIC;
    signal grp_verifyProof_23_fu_3198_tmp_we0 : STD_LOGIC;
    signal grp_verifyProof_23_fu_3198_tmp_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_verifyProof_23_fu_3198_plaintext_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_verifyProof_23_fu_3198_plaintext_ce0 : STD_LOGIC;
    signal grp_verifyProof_23_fu_3198_tape_0_tape_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_verifyProof_23_fu_3198_tape_0_tape_ce0 : STD_LOGIC;
    signal grp_verifyProof_23_fu_3198_tape_0_tape_we0 : STD_LOGIC;
    signal grp_verifyProof_23_fu_3198_tape_0_tape_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_verifyProof_23_fu_3198_tape_0_tape_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_verifyProof_23_fu_3198_tape_0_tape_ce1 : STD_LOGIC;
    signal grp_H3_2_fu_3237_ap_start : STD_LOGIC;
    signal grp_H3_2_fu_3237_ap_done : STD_LOGIC;
    signal grp_H3_2_fu_3237_ap_idle : STD_LOGIC;
    signal grp_H3_2_fu_3237_ap_ready : STD_LOGIC;
    signal grp_H3_2_fu_3237_circuitOutput_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_H3_2_fu_3237_circuitOutput_ce0 : STD_LOGIC;
    signal grp_H3_2_fu_3237_plaintext_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_H3_2_fu_3237_plaintext_ce0 : STD_LOGIC;
    signal grp_H3_2_fu_3237_as_hashes_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_H3_2_fu_3237_as_hashes_ce0 : STD_LOGIC;
    signal grp_H3_2_fu_3237_challengeBits_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_H3_2_fu_3237_challengeBits_ce0 : STD_LOGIC;
    signal grp_H3_2_fu_3237_challengeBits_we0 : STD_LOGIC;
    signal grp_H3_2_fu_3237_challengeBits_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_H3_2_fu_3237_salt_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_H3_2_fu_3237_salt_0_ce0 : STD_LOGIC;
    signal grp_H3_2_fu_3237_message_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_H3_2_fu_3237_message_ce0 : STD_LOGIC;
    signal grp_H3_2_fu_3237_viewOutputs_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_H3_2_fu_3237_viewOutputs_ce0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_fu_3258_ap_start : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_fu_3258_ap_idle : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_fu_3258_instance_state_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakWidth1600_Spon_fu_3258_instance_state_ce0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_fu_3258_instance_state_we0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_fu_3258_instance_state_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakWidth1600_Spon_fu_3258_instance_state_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakWidth1600_Spon_fu_3258_data_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_KeccakWidth1600_Spon_fu_3258_data_ce0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_fu_3258_data_we0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_fu_3258_data_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakWidth1600_Spon_fu_3258_data_offset1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_HashUpdate_2_1_fu_3273_ap_start : STD_LOGIC;
    signal grp_HashUpdate_2_1_fu_3273_ap_idle : STD_LOGIC;
    signal grp_HashUpdate_2_1_fu_3273_ctx_sponge_state_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_HashUpdate_2_1_fu_3273_ctx_sponge_state_ce0 : STD_LOGIC;
    signal grp_HashUpdate_2_1_fu_3273_ctx_sponge_state_we0 : STD_LOGIC;
    signal grp_HashUpdate_2_1_fu_3273_ctx_sponge_state_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_HashUpdate_2_1_fu_3273_ctx_sponge_state_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_HashUpdate_2_1_fu_3273_ctx_sponge_byteIOInd : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_HashUpdate_2_1_fu_3273_data_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_HashUpdate_2_1_fu_3273_data_ce0 : STD_LOGIC;
    signal grp_HashUpdate_2_1_fu_3273_data_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_KeccakWidth1600_Spon_6_fu_3286_ap_start : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_6_fu_3286_ap_idle : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_6_fu_3286_instance_state_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakWidth1600_Spon_6_fu_3286_instance_state_ce0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_6_fu_3286_instance_state_we0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_6_fu_3286_instance_state_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakWidth1600_Spon_6_fu_3286_instance_state_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakWidth1600_Spon_6_fu_3286_data_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_KeccakWidth1600_Spon_6_fu_3286_data_ce0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_6_fu_3286_data_offset1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_KeccakWidth1600_Spon_5_fu_3300_ap_start : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_5_fu_3300_ap_idle : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_5_fu_3300_instance_state_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakWidth1600_Spon_5_fu_3300_instance_state_ce0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_5_fu_3300_instance_state_we0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_5_fu_3300_instance_state_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakWidth1600_Spon_5_fu_3300_instance_state_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakWidth1600_Spon_5_fu_3300_data_0_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_KeccakWidth1600_Spon_5_fu_3300_data_0_ce0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_5_fu_3300_data_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakWidth1600_Spon_11_fu_3315_ap_start : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_11_fu_3315_ap_idle : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_11_fu_3315_instance_state_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakWidth1600_Spon_11_fu_3315_instance_state_ce0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_11_fu_3315_instance_state_we0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_11_fu_3315_instance_state_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakWidth1600_Spon_11_fu_3315_instance_state_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakWidth1600_Spon_11_fu_3315_data_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_KeccakWidth1600_Spon_11_fu_3315_data_ce0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_11_fu_3315_data_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_HashInit_fu_3328_ap_start : STD_LOGIC;
    signal grp_HashInit_fu_3328_ap_idle : STD_LOGIC;
    signal grp_HashInit_fu_3328_ctx_sponge_state_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_HashInit_fu_3328_ctx_sponge_state_ce0 : STD_LOGIC;
    signal grp_HashInit_fu_3328_ctx_sponge_state_we0 : STD_LOGIC;
    signal grp_HashInit_fu_3328_ctx_sponge_state_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_HashInit_fu_3328_ctx_sponge_state_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_HashInit_fu_3328_hashPrefix : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_HashFinal_fu_3340_ap_start : STD_LOGIC;
    signal grp_HashFinal_fu_3340_ap_idle : STD_LOGIC;
    signal grp_HashFinal_fu_3340_ctx_sponge_state_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_HashFinal_fu_3340_ctx_sponge_state_ce0 : STD_LOGIC;
    signal grp_HashFinal_fu_3340_ctx_sponge_state_we0 : STD_LOGIC;
    signal grp_HashFinal_fu_3340_ctx_sponge_state_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_HashFinal_fu_3340_ctx_sponge_state_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_HashFinal_fu_3340_ctx_sponge_byteIOInd : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_HashFinal_fu_3340_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_HashFinal_fu_3340_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal round_assign_reg_2992 : STD_LOGIC_VECTOR (7 downto 0);
    signal view3Output_0_rec_reg_3004 : STD_LOGIC_VECTOR (9 downto 0);
    signal phi_mul17_reg_3016 : STD_LOGIC_VECTOR (14 downto 0);
    signal indvar_reg_3027 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal phi_mul_reg_3038 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_128_fu_4427_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar8_reg_3050 : STD_LOGIC_VECTOR (7 downto 0);
    signal indvar87_reg_3061 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state49 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal indvar95_reg_3072 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state73 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state73 : signal is "none";
    signal phi_mul15_reg_3083 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_216_fu_5400_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar103_reg_3095 : STD_LOGIC_VECTOR (7 downto 0);
    signal indvar182_reg_3106 : STD_LOGIC_VECTOR (7 downto 0);
    signal loop_0_reg_3117 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state138 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state138 : signal is "none";
    signal loop_1_reg_3128 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state140 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state140 : signal is "none";
    signal loop_2_reg_3140 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state142 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state142 : signal is "none";
    signal j_0_reg_3152 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state144 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state144 : signal is "none";
    signal loop_3_reg_3163 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state146 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state146 : signal is "none";
    signal loop_4_reg_3175 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state147 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state147 : signal is "none";
    signal status_0_reg_3186 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_verifyProof_23_fu_3198_ap_start_reg : STD_LOGIC := '0';
    signal grp_H3_2_fu_3237_ap_start_reg : STD_LOGIC := '0';
    signal grp_KeccakWidth1600_Spon_fu_3258_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal ap_CS_fsm_state69 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state69 : signal is "none";
    signal ap_CS_fsm_state121 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state121 : signal is "none";
    signal ap_CS_fsm_state135 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state135 : signal is "none";
    signal ap_CS_fsm_state56 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state56 : signal is "none";
    signal ap_CS_fsm_state122 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state122 : signal is "none";
    signal grp_HashUpdate_2_1_fu_3273_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state61 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state61 : signal is "none";
    signal ap_CS_fsm_state65 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state65 : signal is "none";
    signal ap_CS_fsm_state127 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state127 : signal is "none";
    signal ap_CS_fsm_state131 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state131 : signal is "none";
    signal grp_KeccakWidth1600_Spon_6_fu_3286_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state59 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state59 : signal is "none";
    signal ap_CS_fsm_state125 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state125 : signal is "none";
    signal grp_KeccakWidth1600_Spon_5_fu_3300_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal ap_CS_fsm_state117 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state117 : signal is "none";
    signal grp_KeccakWidth1600_Spon_11_fu_3315_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state63 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state63 : signal is "none";
    signal ap_CS_fsm_state129 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state129 : signal is "none";
    signal grp_HashInit_fu_3328_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state57 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal ap_CS_fsm_state123 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state123 : signal is "none";
    signal grp_HashFinal_fu_3340_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal ap_CS_fsm_state67 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state67 : signal is "none";
    signal ap_CS_fsm_state119 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state119 : signal is "none";
    signal ap_CS_fsm_state133 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state133 : signal is "none";
    signal zext_ln1241_fu_3441_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln54_fu_3468_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1254_5_fu_5547_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1254_6_fu_5561_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1263_1_fu_5586_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1263_fu_5604_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1265_1_fu_5630_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1265_fu_5644_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1269_2_fu_5667_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1268_1_fu_5653_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1269_fu_5707_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1273_1_fu_5734_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1273_fu_5754_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1287_fu_5771_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_4_fu_3405_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_5_fu_3417_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1236_fu_3401_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1241_fu_3435_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln_fu_3458_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln386_fu_3473_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal bitNumber_assign_fu_3477_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal xor_ln54_fu_3485_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln54_1_fu_3491_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln54_fu_3495_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln54_1_fu_3505_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln54_2_fu_3511_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln54_1_fu_3515_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln386_1_fu_3501_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln54_fu_3521_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal lshr_ln54_2_fu_3534_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln54_3_fu_3544_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_49_fu_3583_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_50_fu_3604_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_51_fu_3618_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_54_fu_3637_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_55_fu_3648_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_56_fu_3659_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_57_fu_3670_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_58_fu_3681_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_59_fu_3692_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_60_fu_3703_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_61_fu_3714_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_62_fu_3725_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_63_fu_3736_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_64_fu_3747_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_65_fu_3758_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_66_fu_3769_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_67_fu_3780_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_68_fu_3791_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_69_fu_3802_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_70_fu_3813_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_71_fu_3824_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_72_fu_3835_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_73_fu_3846_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_74_fu_3857_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_75_fu_3868_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_76_fu_3879_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_77_fu_3890_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_78_fu_3901_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_79_fu_3912_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_80_fu_3923_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_81_fu_3934_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_82_fu_3945_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_83_fu_3956_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_84_fu_3967_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_85_fu_3978_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_86_fu_3999_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_87_fu_4010_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_88_fu_4021_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_89_fu_4031_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_90_fu_4041_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_91_fu_4051_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_92_fu_4061_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_93_fu_4071_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_94_fu_4081_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_95_fu_4091_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_96_fu_4101_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_97_fu_4111_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_98_fu_4121_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_99_fu_4131_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_100_fu_4141_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_101_fu_4151_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_102_fu_4161_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_103_fu_4171_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_104_fu_4181_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_105_fu_4191_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_106_fu_4201_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_107_fu_4211_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_108_fu_4221_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_109_fu_4231_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_110_fu_4241_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_111_fu_4251_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_112_fu_4261_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_113_fu_4271_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_114_fu_4281_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_115_fu_4291_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_116_fu_4301_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_117_fu_4311_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_118_fu_4321_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_119_fu_4331_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_120_fu_4341_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_121_fu_4351_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_122_fu_4361_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_123_fu_4371_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_124_fu_4381_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_125_fu_4391_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_126_fu_4401_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_127_fu_4411_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_131_fu_4452_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_132_fu_4473_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_133_fu_4487_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1251_fu_4504_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal xor_ln1251_fu_4516_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln1251_fu_4510_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1251_fu_4521_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_137_fu_4556_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_138_fu_4577_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_139_fu_4591_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_142_fu_4610_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_143_fu_4621_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_144_fu_4632_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_145_fu_4643_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_146_fu_4654_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_147_fu_4665_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_148_fu_4676_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_149_fu_4687_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_150_fu_4698_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_151_fu_4709_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_152_fu_4720_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_153_fu_4731_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_154_fu_4742_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_155_fu_4753_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_156_fu_4764_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_157_fu_4775_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_158_fu_4786_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_159_fu_4797_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_160_fu_4808_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_161_fu_4819_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_162_fu_4830_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_163_fu_4841_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_164_fu_4852_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_165_fu_4863_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_166_fu_4874_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_167_fu_4885_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_168_fu_4896_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_169_fu_4907_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_170_fu_4918_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_171_fu_4929_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_172_fu_4940_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_173_fu_4951_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_174_fu_4972_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_175_fu_4983_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_176_fu_4994_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_177_fu_5004_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_178_fu_5014_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_179_fu_5024_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_180_fu_5034_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_181_fu_5044_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_182_fu_5054_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_183_fu_5064_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_184_fu_5074_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_185_fu_5084_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_186_fu_5094_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_187_fu_5104_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_188_fu_5114_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_189_fu_5124_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_190_fu_5134_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_191_fu_5144_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_192_fu_5154_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_193_fu_5164_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_194_fu_5174_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_195_fu_5184_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_196_fu_5194_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_197_fu_5204_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_198_fu_5214_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_199_fu_5224_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_200_fu_5234_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_201_fu_5244_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_202_fu_5254_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_203_fu_5264_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_204_fu_5274_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_205_fu_5284_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_206_fu_5294_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_207_fu_5304_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_208_fu_5314_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_209_fu_5324_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_210_fu_5334_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_211_fu_5344_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_212_fu_5354_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_213_fu_5364_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_214_fu_5374_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_215_fu_5384_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_219_fu_5425_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_220_fu_5446_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_221_fu_5460_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1254_fu_5477_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln1254_fu_5482_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1254_1_fu_5488_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln1254_fu_5493_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln1254_2_fu_5501_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1254_2_fu_5505_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1254_4_fu_5538_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln1254_3_fu_5542_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln1254_3_fu_5534_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln1263_fu_5577_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1263_1_fu_5581_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_18_fu_5595_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln1265_fu_5621_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1265_1_fu_5625_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_19_fu_5635_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln1269_1_fu_5658_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1269_1_fu_5662_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal xor_ln1269_fu_5689_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln1269_fu_5702_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1273_fu_5724_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1273_1_fu_5728_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_20_fu_5745_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln1287_fu_5777_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_return_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (148 downto 0);

    component verifyProof_23 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        proof_0_seed1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        proof_0_seed1_ce0 : OUT STD_LOGIC;
        proof_0_seed1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        proof_seed1_offset1 : IN STD_LOGIC_VECTOR (7 downto 0);
        proof_0_seed2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        proof_0_seed2_ce0 : OUT STD_LOGIC;
        proof_0_seed2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        proof_0_inputShare_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        proof_0_inputShare_ce0 : OUT STD_LOGIC;
        proof_0_inputShare_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        proof_0_communicatedBits_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        proof_0_communicatedBits_ce0 : OUT STD_LOGIC;
        proof_0_communicatedBits_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        view1_inputShare_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        view1_inputShare_ce0 : OUT STD_LOGIC;
        view1_inputShare_we0 : OUT STD_LOGIC;
        view1_inputShare_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        view1_inputShare_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        view1_communicatedBits_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        view1_communicatedBits_ce0 : OUT STD_LOGIC;
        view1_communicatedBits_we0 : OUT STD_LOGIC;
        view1_communicatedBits_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        view1_communicatedBits_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        view1_outputShare_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        view1_outputShare_ce0 : OUT STD_LOGIC;
        view1_outputShare_we0 : OUT STD_LOGIC;
        view1_outputShare_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        view2_inputShare_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        view2_inputShare_ce0 : OUT STD_LOGIC;
        view2_inputShare_we0 : OUT STD_LOGIC;
        view2_inputShare_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        view2_inputShare_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        view2_communicatedBits_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        view2_communicatedBits_ce0 : OUT STD_LOGIC;
        view2_communicatedBits_we0 : OUT STD_LOGIC;
        view2_communicatedBits_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        view2_communicatedBits_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        view2_outputShare_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        view2_outputShare_ce0 : OUT STD_LOGIC;
        view2_outputShare_we0 : OUT STD_LOGIC;
        view2_outputShare_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        challenge : IN STD_LOGIC_VECTOR (1 downto 0);
        salt_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        salt_0_ce0 : OUT STD_LOGIC;
        salt_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        roundNumber : IN STD_LOGIC_VECTOR (7 downto 0);
        tmp_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        tmp_ce0 : OUT STD_LOGIC;
        tmp_we0 : OUT STD_LOGIC;
        tmp_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        tmp_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        plaintext_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        plaintext_ce0 : OUT STD_LOGIC;
        plaintext_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        tape_0_tape_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        tape_0_tape_ce0 : OUT STD_LOGIC;
        tape_0_tape_we0 : OUT STD_LOGIC;
        tape_0_tape_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        tape_0_tape_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        tape_0_tape_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        tape_0_tape_ce1 : OUT STD_LOGIC;
        tape_0_tape_q1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component H3_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        circuitOutput_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        circuitOutput_ce0 : OUT STD_LOGIC;
        circuitOutput_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        plaintext_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        plaintext_ce0 : OUT STD_LOGIC;
        plaintext_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        as_hashes_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        as_hashes_ce0 : OUT STD_LOGIC;
        as_hashes_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        challengeBits_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        challengeBits_ce0 : OUT STD_LOGIC;
        challengeBits_we0 : OUT STD_LOGIC;
        challengeBits_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        challengeBits_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        salt_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        salt_0_ce0 : OUT STD_LOGIC;
        salt_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        message_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        message_ce0 : OUT STD_LOGIC;
        message_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        messageByteLength : IN STD_LOGIC_VECTOR (63 downto 0);
        viewOutputs_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        viewOutputs_ce0 : OUT STD_LOGIC;
        viewOutputs_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component KeccakWidth1600_Spon IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        instance_state_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        instance_state_ce0 : OUT STD_LOGIC;
        instance_state_we0 : OUT STD_LOGIC;
        instance_state_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        instance_state_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        instance_byteIOIndex_read : IN STD_LOGIC_VECTOR (31 downto 0);
        instance_squeezing_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        data_ce0 : OUT STD_LOGIC;
        data_we0 : OUT STD_LOGIC;
        data_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        data_offset : IN STD_LOGIC_VECTOR (7 downto 0);
        data_offset1 : IN STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component HashUpdate_2_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ctx_sponge_state_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ctx_sponge_state_ce0 : OUT STD_LOGIC;
        ctx_sponge_state_we0 : OUT STD_LOGIC;
        ctx_sponge_state_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ctx_sponge_state_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ctx_sponge_byteIOInd : IN STD_LOGIC_VECTOR (31 downto 0);
        data_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        data_ce0 : OUT STD_LOGIC;
        data_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        data_offset : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component KeccakWidth1600_Spon_6 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        instance_state_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        instance_state_ce0 : OUT STD_LOGIC;
        instance_state_we0 : OUT STD_LOGIC;
        instance_state_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        instance_state_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        instance_byteIOIndex_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        data_ce0 : OUT STD_LOGIC;
        data_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        data_offset : IN STD_LOGIC_VECTOR (7 downto 0);
        data_offset1 : IN STD_LOGIC_VECTOR (1 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component KeccakWidth1600_Spon_5 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        instance_state_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        instance_state_ce0 : OUT STD_LOGIC;
        instance_state_we0 : OUT STD_LOGIC;
        instance_state_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        instance_state_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        instance_byteIOIndex_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_0_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        data_0_ce0 : OUT STD_LOGIC;
        data_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        data_offset1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component KeccakWidth1600_Spon_11 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        instance_state_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        instance_state_ce0 : OUT STD_LOGIC;
        instance_state_we0 : OUT STD_LOGIC;
        instance_state_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        instance_state_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        instance_byteIOIndex_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        data_ce0 : OUT STD_LOGIC;
        data_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        data_offset : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component HashInit IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ctx_sponge_state_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ctx_sponge_state_ce0 : OUT STD_LOGIC;
        ctx_sponge_state_we0 : OUT STD_LOGIC;
        ctx_sponge_state_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ctx_sponge_state_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        hashPrefix : IN STD_LOGIC_VECTOR (3 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component HashFinal IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ctx_sponge_state_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ctx_sponge_state_ce0 : OUT STD_LOGIC;
        ctx_sponge_state_we0 : OUT STD_LOGIC;
        ctx_sponge_state_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ctx_sponge_state_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ctx_sponge_byteIOInd : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component verify_ctx_spongencg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component verify_view2s_outocq IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component verify_data_assigpcA IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (14 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (14 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component verify_as_hashes IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (14 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component verify_computed_cvdy IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component verify_view3Slab IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component verify_tmp IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component verify_tape_0_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component verify_view1s_inpwdI IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component verify_view1s_comxdS IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (14 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (14 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    ctx_sponge_state_2_U : component verify_ctx_spongencg
    generic map (
        DataWidth => 8,
        AddressRange => 200,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ctx_sponge_state_2_address0,
        ce0 => ctx_sponge_state_2_ce0,
        we0 => ctx_sponge_state_2_we0,
        d0 => ctx_sponge_state_2_d0,
        q0 => ctx_sponge_state_2_q0);

    view2s_outputShare18_U : component verify_view2s_outocq
    generic map (
        DataWidth => 32,
        AddressRange => 876,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => view2s_outputShare18_address0,
        ce0 => view2s_outputShare18_ce0,
        we0 => view2s_outputShare18_we0,
        d0 => view2s_outputShare_q0,
        q0 => view2s_outputShare18_q0,
        address1 => view2s_outputShare18_address1,
        ce1 => view2s_outputShare18_ce1,
        we1 => view2s_outputShare18_we1,
        d1 => view2s_outputShare_q1);

    data_assign_2_U : component verify_data_assigpcA
    generic map (
        DataWidth => 8,
        AddressRange => 16425,
        AddressWidth => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => data_assign_2_address0,
        ce0 => data_assign_2_ce0,
        we0 => data_assign_2_we0,
        d0 => view2s_communicatedB_q0,
        q0 => data_assign_2_q0,
        address1 => data_assign_2_address1,
        ce1 => data_assign_2_ce1,
        we1 => data_assign_2_we1,
        d1 => view2s_communicatedB_q1);

    view2s_inputShare93_U : component verify_view2s_outocq
    generic map (
        DataWidth => 32,
        AddressRange => 876,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => view2s_inputShare93_address0,
        ce0 => view2s_inputShare93_ce0,
        we0 => view2s_inputShare93_we0,
        d0 => view2s_inputShare_q0,
        q0 => view2s_inputShare93_q0,
        address1 => view2s_inputShare93_address1,
        ce1 => view2s_inputShare93_ce1,
        we1 => view2s_inputShare93_we1,
        d1 => view2s_inputShare_q1);

    ctx_sponge_state_U : component verify_ctx_spongencg
    generic map (
        DataWidth => 8,
        AddressRange => 200,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ctx_sponge_state_address0,
        ce0 => ctx_sponge_state_ce0,
        we0 => ctx_sponge_state_we0,
        d0 => ctx_sponge_state_d0,
        q0 => ctx_sponge_state_q0);

    view1s_outputShare85_U : component verify_view2s_outocq
    generic map (
        DataWidth => 32,
        AddressRange => 876,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => view1s_outputShare85_address0,
        ce0 => view1s_outputShare85_ce0,
        we0 => view1s_outputShare85_we0,
        d0 => view1s_outputShare_q0,
        q0 => view1s_outputShare85_q0,
        address1 => view1s_outputShare85_address1,
        ce1 => view1s_outputShare85_ce1,
        we1 => view1s_outputShare85_we1,
        d1 => view1s_outputShare_q1);

    data_assign_1_U : component verify_data_assigpcA
    generic map (
        DataWidth => 8,
        AddressRange => 16425,
        AddressWidth => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => data_assign_1_address0,
        ce0 => data_assign_1_ce0,
        we0 => data_assign_1_we0,
        d0 => view1s_communicatedB_q0,
        q0 => data_assign_1_q0,
        address1 => data_assign_1_address1,
        ce1 => data_assign_1_ce1,
        we1 => data_assign_1_we1,
        d1 => view1s_communicatedB_q1);

    view1s_inputShare1_U : component verify_view2s_outocq
    generic map (
        DataWidth => 32,
        AddressRange => 876,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => view1s_inputShare1_address0,
        ce0 => view1s_inputShare1_ce0,
        we0 => view1s_inputShare1_we0,
        d0 => view1s_inputShare_q0,
        q0 => view1s_inputShare1_q0,
        address1 => view1s_inputShare1_address1,
        ce1 => view1s_inputShare1_ce1,
        we1 => view1s_inputShare1_we1,
        d1 => view1s_inputShare_q1);

    as_hashes_U : component verify_as_hashes
    generic map (
        DataWidth => 8,
        AddressRange => 21024,
        AddressWidth => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => as_hashes_address0,
        ce0 => as_hashes_ce0,
        we0 => as_hashes_we0,
        d0 => as_hashes_d0,
        q0 => as_hashes_q0);

    computed_challengebi_U : component verify_computed_cvdy
    generic map (
        DataWidth => 8,
        AddressRange => 55,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => computed_challengebi_address0,
        ce0 => computed_challengebi_ce0,
        we0 => computed_challengebi_we0,
        d0 => grp_H3_2_fu_3237_challengeBits_d0,
        q0 => computed_challengebi_q0);

    view3Slab_U : component verify_view3Slab
    generic map (
        DataWidth => 32,
        AddressRange => 3504,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => view3Slab_address0,
        ce0 => view3Slab_ce0,
        we0 => view3Slab_we0,
        d0 => view3Slab_d0,
        q0 => view3Slab_q0);

    tmp_U : component verify_tmp
    generic map (
        DataWidth => 8,
        AddressRange => 96,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_verifyProof_23_fu_3198_tmp_address0,
        ce0 => grp_verifyProof_23_fu_3198_tmp_ce0,
        we0 => grp_verifyProof_23_fu_3198_tmp_we0,
        d0 => grp_verifyProof_23_fu_3198_tmp_d0,
        q0 => tmp_q0);

    tape_0_0_U : component verify_tape_0_0
    generic map (
        DataWidth => 8,
        AddressRange => 498,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_verifyProof_23_fu_3198_tape_0_tape_address0,
        ce0 => grp_verifyProof_23_fu_3198_tape_0_tape_ce0,
        we0 => grp_verifyProof_23_fu_3198_tape_0_tape_we0,
        d0 => grp_verifyProof_23_fu_3198_tape_0_tape_d0,
        q0 => tape_0_0_q0,
        address1 => grp_verifyProof_23_fu_3198_tape_0_tape_address1,
        ce1 => grp_verifyProof_23_fu_3198_tape_0_tape_ce1,
        q1 => tape_0_0_q1);

    view1s_inputShare_U : component verify_view1s_inpwdI
    generic map (
        DataWidth => 32,
        AddressRange => 876,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => view1s_inputShare_address0,
        ce0 => view1s_inputShare_ce0,
        we0 => view1s_inputShare_we0,
        d0 => grp_verifyProof_23_fu_3198_view1_inputShare_d0,
        q0 => view1s_inputShare_q0,
        address1 => view1s_inputShare_address1,
        ce1 => view1s_inputShare_ce1,
        q1 => view1s_inputShare_q1);

    view1s_communicatedB_U : component verify_view1s_comxdS
    generic map (
        DataWidth => 8,
        AddressRange => 16425,
        AddressWidth => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => view1s_communicatedB_address0,
        ce0 => view1s_communicatedB_ce0,
        we0 => view1s_communicatedB_we0,
        d0 => view1s_communicatedB_d0,
        q0 => view1s_communicatedB_q0,
        address1 => view1s_communicatedB_address1,
        ce1 => view1s_communicatedB_ce1,
        q1 => view1s_communicatedB_q1);

    view1s_outputShare_U : component verify_view1s_inpwdI
    generic map (
        DataWidth => 32,
        AddressRange => 876,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => view1s_outputShare_address0,
        ce0 => view1s_outputShare_ce0,
        we0 => view1s_outputShare_we0,
        d0 => grp_verifyProof_23_fu_3198_view1_outputShare_d0,
        q0 => view1s_outputShare_q0,
        address1 => view1s_outputShare_address1,
        ce1 => view1s_outputShare_ce1,
        q1 => view1s_outputShare_q1);

    view2s_inputShare_U : component verify_view1s_inpwdI
    generic map (
        DataWidth => 32,
        AddressRange => 876,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => view2s_inputShare_address0,
        ce0 => view2s_inputShare_ce0,
        we0 => view2s_inputShare_we0,
        d0 => grp_verifyProof_23_fu_3198_view2_inputShare_d0,
        q0 => view2s_inputShare_q0,
        address1 => view2s_inputShare_address1,
        ce1 => view2s_inputShare_ce1,
        q1 => view2s_inputShare_q1);

    view2s_communicatedB_U : component verify_view1s_comxdS
    generic map (
        DataWidth => 8,
        AddressRange => 16425,
        AddressWidth => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => view2s_communicatedB_address0,
        ce0 => view2s_communicatedB_ce0,
        we0 => view2s_communicatedB_we0,
        d0 => grp_verifyProof_23_fu_3198_view2_communicatedBits_d0,
        q0 => view2s_communicatedB_q0,
        address1 => view2s_communicatedB_address1,
        ce1 => view2s_communicatedB_ce1,
        q1 => view2s_communicatedB_q1);

    view2s_outputShare_U : component verify_view1s_inpwdI
    generic map (
        DataWidth => 32,
        AddressRange => 876,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => view2s_outputShare_address0,
        ce0 => view2s_outputShare_ce0,
        we0 => view2s_outputShare_we0,
        d0 => grp_verifyProof_23_fu_3198_view2_outputShare_d0,
        q0 => view2s_outputShare_q0,
        address1 => view2s_outputShare_address1,
        ce1 => view2s_outputShare_ce1,
        q1 => view2s_outputShare_q1);

    grp_verifyProof_23_fu_3198 : component verifyProof_23
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_verifyProof_23_fu_3198_ap_start,
        ap_done => grp_verifyProof_23_fu_3198_ap_done,
        ap_idle => grp_verifyProof_23_fu_3198_ap_idle,
        ap_ready => grp_verifyProof_23_fu_3198_ap_ready,
        proof_0_seed1_address0 => grp_verifyProof_23_fu_3198_proof_0_seed1_address0,
        proof_0_seed1_ce0 => grp_verifyProof_23_fu_3198_proof_0_seed1_ce0,
        proof_0_seed1_q0 => sig_0_proofs_seed1_q0,
        proof_seed1_offset1 => round_assign_reg_2992,
        proof_0_seed2_address0 => grp_verifyProof_23_fu_3198_proof_0_seed2_address0,
        proof_0_seed2_ce0 => grp_verifyProof_23_fu_3198_proof_0_seed2_ce0,
        proof_0_seed2_q0 => sig_0_proofs_seed2_q0,
        proof_0_inputShare_address0 => grp_verifyProof_23_fu_3198_proof_0_inputShare_address0,
        proof_0_inputShare_ce0 => grp_verifyProof_23_fu_3198_proof_0_inputShare_ce0,
        proof_0_inputShare_q0 => sig_0_proofs_inputS_q0,
        proof_0_communicatedBits_address0 => grp_verifyProof_23_fu_3198_proof_0_communicatedBits_address0,
        proof_0_communicatedBits_ce0 => grp_verifyProof_23_fu_3198_proof_0_communicatedBits_ce0,
        proof_0_communicatedBits_q0 => sig_0_proofs_commun_q0,
        view1_inputShare_address0 => grp_verifyProof_23_fu_3198_view1_inputShare_address0,
        view1_inputShare_ce0 => grp_verifyProof_23_fu_3198_view1_inputShare_ce0,
        view1_inputShare_we0 => grp_verifyProof_23_fu_3198_view1_inputShare_we0,
        view1_inputShare_d0 => grp_verifyProof_23_fu_3198_view1_inputShare_d0,
        view1_inputShare_q0 => view1s_inputShare_q0,
        view1_communicatedBits_address0 => grp_verifyProof_23_fu_3198_view1_communicatedBits_address0,
        view1_communicatedBits_ce0 => grp_verifyProof_23_fu_3198_view1_communicatedBits_ce0,
        view1_communicatedBits_we0 => grp_verifyProof_23_fu_3198_view1_communicatedBits_we0,
        view1_communicatedBits_d0 => grp_verifyProof_23_fu_3198_view1_communicatedBits_d0,
        view1_communicatedBits_q0 => view1s_communicatedB_q0,
        view1_outputShare_address0 => grp_verifyProof_23_fu_3198_view1_outputShare_address0,
        view1_outputShare_ce0 => grp_verifyProof_23_fu_3198_view1_outputShare_ce0,
        view1_outputShare_we0 => grp_verifyProof_23_fu_3198_view1_outputShare_we0,
        view1_outputShare_d0 => grp_verifyProof_23_fu_3198_view1_outputShare_d0,
        view2_inputShare_address0 => grp_verifyProof_23_fu_3198_view2_inputShare_address0,
        view2_inputShare_ce0 => grp_verifyProof_23_fu_3198_view2_inputShare_ce0,
        view2_inputShare_we0 => grp_verifyProof_23_fu_3198_view2_inputShare_we0,
        view2_inputShare_d0 => grp_verifyProof_23_fu_3198_view2_inputShare_d0,
        view2_inputShare_q0 => view2s_inputShare_q0,
        view2_communicatedBits_address0 => grp_verifyProof_23_fu_3198_view2_communicatedBits_address0,
        view2_communicatedBits_ce0 => grp_verifyProof_23_fu_3198_view2_communicatedBits_ce0,
        view2_communicatedBits_we0 => grp_verifyProof_23_fu_3198_view2_communicatedBits_we0,
        view2_communicatedBits_d0 => grp_verifyProof_23_fu_3198_view2_communicatedBits_d0,
        view2_communicatedBits_q0 => view2s_communicatedB_q0,
        view2_outputShare_address0 => grp_verifyProof_23_fu_3198_view2_outputShare_address0,
        view2_outputShare_ce0 => grp_verifyProof_23_fu_3198_view2_outputShare_ce0,
        view2_outputShare_we0 => grp_verifyProof_23_fu_3198_view2_outputShare_we0,
        view2_outputShare_d0 => grp_verifyProof_23_fu_3198_view2_outputShare_d0,
        challenge => or_ln_reg_5835,
        salt_0_address0 => grp_verifyProof_23_fu_3198_salt_0_address0,
        salt_0_ce0 => grp_verifyProof_23_fu_3198_salt_0_ce0,
        salt_0_q0 => sig_0_salt_q0,
        roundNumber => round_assign_reg_2992,
        tmp_address0 => grp_verifyProof_23_fu_3198_tmp_address0,
        tmp_ce0 => grp_verifyProof_23_fu_3198_tmp_ce0,
        tmp_we0 => grp_verifyProof_23_fu_3198_tmp_we0,
        tmp_d0 => grp_verifyProof_23_fu_3198_tmp_d0,
        tmp_q0 => tmp_q0,
        plaintext_address0 => grp_verifyProof_23_fu_3198_plaintext_address0,
        plaintext_ce0 => grp_verifyProof_23_fu_3198_plaintext_ce0,
        plaintext_q0 => plaintext_q0,
        tape_0_tape_address0 => grp_verifyProof_23_fu_3198_tape_0_tape_address0,
        tape_0_tape_ce0 => grp_verifyProof_23_fu_3198_tape_0_tape_ce0,
        tape_0_tape_we0 => grp_verifyProof_23_fu_3198_tape_0_tape_we0,
        tape_0_tape_d0 => grp_verifyProof_23_fu_3198_tape_0_tape_d0,
        tape_0_tape_q0 => tape_0_0_q0,
        tape_0_tape_address1 => grp_verifyProof_23_fu_3198_tape_0_tape_address1,
        tape_0_tape_ce1 => grp_verifyProof_23_fu_3198_tape_0_tape_ce1,
        tape_0_tape_q1 => tape_0_0_q1);

    grp_H3_2_fu_3237 : component H3_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_H3_2_fu_3237_ap_start,
        ap_done => grp_H3_2_fu_3237_ap_done,
        ap_idle => grp_H3_2_fu_3237_ap_idle,
        ap_ready => grp_H3_2_fu_3237_ap_ready,
        circuitOutput_address0 => grp_H3_2_fu_3237_circuitOutput_address0,
        circuitOutput_ce0 => grp_H3_2_fu_3237_circuitOutput_ce0,
        circuitOutput_q0 => pubKey_q0,
        plaintext_address0 => grp_H3_2_fu_3237_plaintext_address0,
        plaintext_ce0 => grp_H3_2_fu_3237_plaintext_ce0,
        plaintext_q0 => plaintext_q0,
        as_hashes_address0 => grp_H3_2_fu_3237_as_hashes_address0,
        as_hashes_ce0 => grp_H3_2_fu_3237_as_hashes_ce0,
        as_hashes_q0 => as_hashes_q0,
        challengeBits_address0 => grp_H3_2_fu_3237_challengeBits_address0,
        challengeBits_ce0 => grp_H3_2_fu_3237_challengeBits_ce0,
        challengeBits_we0 => grp_H3_2_fu_3237_challengeBits_we0,
        challengeBits_d0 => grp_H3_2_fu_3237_challengeBits_d0,
        challengeBits_q0 => computed_challengebi_q0,
        salt_0_address0 => grp_H3_2_fu_3237_salt_0_address0,
        salt_0_ce0 => grp_H3_2_fu_3237_salt_0_ce0,
        salt_0_q0 => sig_0_salt_q0,
        message_address0 => grp_H3_2_fu_3237_message_address0,
        message_ce0 => grp_H3_2_fu_3237_message_ce0,
        message_q0 => message_q0,
        messageByteLength => messageByteLength,
        viewOutputs_address0 => grp_H3_2_fu_3237_viewOutputs_address0,
        viewOutputs_ce0 => grp_H3_2_fu_3237_viewOutputs_ce0,
        viewOutputs_q0 => viewOutputs_q0);

    grp_KeccakWidth1600_Spon_fu_3258 : component KeccakWidth1600_Spon
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_KeccakWidth1600_Spon_fu_3258_ap_start,
        ap_done => grp_KeccakWidth1600_Spon_fu_3258_ap_done,
        ap_idle => grp_KeccakWidth1600_Spon_fu_3258_ap_idle,
        ap_ready => grp_KeccakWidth1600_Spon_fu_3258_ap_ready,
        instance_state_address0 => grp_KeccakWidth1600_Spon_fu_3258_instance_state_address0,
        instance_state_ce0 => grp_KeccakWidth1600_Spon_fu_3258_instance_state_ce0,
        instance_state_we0 => grp_KeccakWidth1600_Spon_fu_3258_instance_state_we0,
        instance_state_d0 => grp_KeccakWidth1600_Spon_fu_3258_instance_state_d0,
        instance_state_q0 => grp_KeccakWidth1600_Spon_fu_3258_instance_state_q0,
        instance_byteIOIndex_read => reg_3369,
        instance_squeezing_read => reg_3374,
        data_address0 => grp_KeccakWidth1600_Spon_fu_3258_data_address0,
        data_ce0 => grp_KeccakWidth1600_Spon_fu_3258_data_ce0,
        data_we0 => grp_KeccakWidth1600_Spon_fu_3258_data_we0,
        data_d0 => grp_KeccakWidth1600_Spon_fu_3258_data_d0,
        data_offset => round_assign_reg_2992,
        data_offset1 => grp_KeccakWidth1600_Spon_fu_3258_data_offset1);

    grp_HashUpdate_2_1_fu_3273 : component HashUpdate_2_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_HashUpdate_2_1_fu_3273_ap_start,
        ap_done => grp_HashUpdate_2_1_fu_3273_ap_done,
        ap_idle => grp_HashUpdate_2_1_fu_3273_ap_idle,
        ap_ready => grp_HashUpdate_2_1_fu_3273_ap_ready,
        ctx_sponge_state_address0 => grp_HashUpdate_2_1_fu_3273_ctx_sponge_state_address0,
        ctx_sponge_state_ce0 => grp_HashUpdate_2_1_fu_3273_ctx_sponge_state_ce0,
        ctx_sponge_state_we0 => grp_HashUpdate_2_1_fu_3273_ctx_sponge_state_we0,
        ctx_sponge_state_d0 => grp_HashUpdate_2_1_fu_3273_ctx_sponge_state_d0,
        ctx_sponge_state_q0 => grp_HashUpdate_2_1_fu_3273_ctx_sponge_state_q0,
        ctx_sponge_byteIOInd => grp_HashUpdate_2_1_fu_3273_ctx_sponge_byteIOInd,
        data_address0 => grp_HashUpdate_2_1_fu_3273_data_address0,
        data_ce0 => grp_HashUpdate_2_1_fu_3273_data_ce0,
        data_q0 => grp_HashUpdate_2_1_fu_3273_data_q0,
        data_offset => round_assign_reg_2992,
        ap_return => grp_HashUpdate_2_1_fu_3273_ap_return);

    grp_KeccakWidth1600_Spon_6_fu_3286 : component KeccakWidth1600_Spon_6
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_KeccakWidth1600_Spon_6_fu_3286_ap_start,
        ap_done => grp_KeccakWidth1600_Spon_6_fu_3286_ap_done,
        ap_idle => grp_KeccakWidth1600_Spon_6_fu_3286_ap_idle,
        ap_ready => grp_KeccakWidth1600_Spon_6_fu_3286_ap_ready,
        instance_state_address0 => grp_KeccakWidth1600_Spon_6_fu_3286_instance_state_address0,
        instance_state_ce0 => grp_KeccakWidth1600_Spon_6_fu_3286_instance_state_ce0,
        instance_state_we0 => grp_KeccakWidth1600_Spon_6_fu_3286_instance_state_we0,
        instance_state_d0 => grp_KeccakWidth1600_Spon_6_fu_3286_instance_state_d0,
        instance_state_q0 => grp_KeccakWidth1600_Spon_6_fu_3286_instance_state_q0,
        instance_byteIOIndex_read => reg_3358,
        data_address0 => grp_KeccakWidth1600_Spon_6_fu_3286_data_address0,
        data_ce0 => grp_KeccakWidth1600_Spon_6_fu_3286_data_ce0,
        data_q0 => as_hashes_q0,
        data_offset => round_assign_reg_2992,
        data_offset1 => grp_KeccakWidth1600_Spon_6_fu_3286_data_offset1,
        ap_return => grp_KeccakWidth1600_Spon_6_fu_3286_ap_return);

    grp_KeccakWidth1600_Spon_5_fu_3300 : component KeccakWidth1600_Spon_5
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_KeccakWidth1600_Spon_5_fu_3300_ap_start,
        ap_done => grp_KeccakWidth1600_Spon_5_fu_3300_ap_done,
        ap_idle => grp_KeccakWidth1600_Spon_5_fu_3300_ap_idle,
        ap_ready => grp_KeccakWidth1600_Spon_5_fu_3300_ap_ready,
        instance_state_address0 => grp_KeccakWidth1600_Spon_5_fu_3300_instance_state_address0,
        instance_state_ce0 => grp_KeccakWidth1600_Spon_5_fu_3300_instance_state_ce0,
        instance_state_we0 => grp_KeccakWidth1600_Spon_5_fu_3300_instance_state_we0,
        instance_state_d0 => grp_KeccakWidth1600_Spon_5_fu_3300_instance_state_d0,
        instance_state_q0 => grp_KeccakWidth1600_Spon_5_fu_3300_instance_state_q0,
        instance_byteIOIndex_read => reg_3358,
        data_0_address0 => grp_KeccakWidth1600_Spon_5_fu_3300_data_0_address0,
        data_0_ce0 => grp_KeccakWidth1600_Spon_5_fu_3300_data_0_ce0,
        data_0_q0 => grp_KeccakWidth1600_Spon_5_fu_3300_data_0_q0,
        data_offset1 => round_assign_reg_2992,
        ap_return => grp_KeccakWidth1600_Spon_5_fu_3300_ap_return);

    grp_KeccakWidth1600_Spon_11_fu_3315 : component KeccakWidth1600_Spon_11
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_KeccakWidth1600_Spon_11_fu_3315_ap_start,
        ap_done => grp_KeccakWidth1600_Spon_11_fu_3315_ap_done,
        ap_idle => grp_KeccakWidth1600_Spon_11_fu_3315_ap_idle,
        ap_ready => grp_KeccakWidth1600_Spon_11_fu_3315_ap_ready,
        instance_state_address0 => grp_KeccakWidth1600_Spon_11_fu_3315_instance_state_address0,
        instance_state_ce0 => grp_KeccakWidth1600_Spon_11_fu_3315_instance_state_ce0,
        instance_state_we0 => grp_KeccakWidth1600_Spon_11_fu_3315_instance_state_we0,
        instance_state_d0 => grp_KeccakWidth1600_Spon_11_fu_3315_instance_state_d0,
        instance_state_q0 => grp_KeccakWidth1600_Spon_11_fu_3315_instance_state_q0,
        instance_byteIOIndex_read => reg_3384,
        data_address0 => grp_KeccakWidth1600_Spon_11_fu_3315_data_address0,
        data_ce0 => grp_KeccakWidth1600_Spon_11_fu_3315_data_ce0,
        data_q0 => grp_KeccakWidth1600_Spon_11_fu_3315_data_q0,
        data_offset => round_assign_reg_2992,
        ap_return => grp_KeccakWidth1600_Spon_11_fu_3315_ap_return);

    grp_HashInit_fu_3328 : component HashInit
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_HashInit_fu_3328_ap_start,
        ap_done => grp_HashInit_fu_3328_ap_done,
        ap_idle => grp_HashInit_fu_3328_ap_idle,
        ap_ready => grp_HashInit_fu_3328_ap_ready,
        ctx_sponge_state_address0 => grp_HashInit_fu_3328_ctx_sponge_state_address0,
        ctx_sponge_state_ce0 => grp_HashInit_fu_3328_ctx_sponge_state_ce0,
        ctx_sponge_state_we0 => grp_HashInit_fu_3328_ctx_sponge_state_we0,
        ctx_sponge_state_d0 => grp_HashInit_fu_3328_ctx_sponge_state_d0,
        ctx_sponge_state_q0 => grp_HashInit_fu_3328_ctx_sponge_state_q0,
        hashPrefix => grp_HashInit_fu_3328_hashPrefix,
        ap_return => grp_HashInit_fu_3328_ap_return);

    grp_HashFinal_fu_3340 : component HashFinal
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_HashFinal_fu_3340_ap_start,
        ap_done => grp_HashFinal_fu_3340_ap_done,
        ap_idle => grp_HashFinal_fu_3340_ap_idle,
        ap_ready => grp_HashFinal_fu_3340_ap_ready,
        ctx_sponge_state_address0 => grp_HashFinal_fu_3340_ctx_sponge_state_address0,
        ctx_sponge_state_ce0 => grp_HashFinal_fu_3340_ctx_sponge_state_ce0,
        ctx_sponge_state_we0 => grp_HashFinal_fu_3340_ctx_sponge_state_we0,
        ctx_sponge_state_d0 => grp_HashFinal_fu_3340_ctx_sponge_state_d0,
        ctx_sponge_state_q0 => grp_HashFinal_fu_3340_ctx_sponge_state_q0,
        ctx_sponge_byteIOInd => grp_HashFinal_fu_3340_ctx_sponge_byteIOInd,
        ap_return_0 => grp_HashFinal_fu_3340_ap_return_0,
        ap_return_1 => grp_HashFinal_fu_3340_ap_return_1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_return_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_preg <= ap_const_lv32_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state148) and (icmp_ln1286_fu_5759_p2 = ap_const_lv1_1))) then 
                    ap_return_preg <= status_0_reg_3186;
                end if; 
            end if;
        end if;
    end process;


    grp_H3_2_fu_3237_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_H3_2_fu_3237_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln1236_fu_3446_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    grp_H3_2_fu_3237_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_H3_2_fu_3237_ap_ready = ap_const_logic_1)) then 
                    grp_H3_2_fu_3237_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_HashFinal_fu_3340_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_HashFinal_fu_3340_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state133) or (ap_const_logic_1 = ap_CS_fsm_state119) or (ap_const_logic_1 = ap_CS_fsm_state67) or (ap_const_logic_1 = ap_CS_fsm_state53))) then 
                    grp_HashFinal_fu_3340_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_HashFinal_fu_3340_ap_ready = ap_const_logic_1)) then 
                    grp_HashFinal_fu_3340_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_HashInit_fu_3328_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_HashInit_fu_3328_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state123) or (ap_const_logic_1 = ap_CS_fsm_state57) or ((ap_const_logic_1 = ap_CS_fsm_state49) and (empty_134_reg_6756 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state115) and (empty_222_reg_7689 = ap_const_lv1_1)))) then 
                    grp_HashInit_fu_3328_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_HashInit_fu_3328_ap_ready = ap_const_logic_1)) then 
                    grp_HashInit_fu_3328_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_HashUpdate_2_1_fu_3273_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_HashUpdate_2_1_fu_3273_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state131) or (ap_const_logic_1 = ap_CS_fsm_state127) or (ap_const_logic_1 = ap_CS_fsm_state65) or (ap_const_logic_1 = ap_CS_fsm_state61))) then 
                    grp_HashUpdate_2_1_fu_3273_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_HashUpdate_2_1_fu_3273_ap_ready = ap_const_logic_1)) then 
                    grp_HashUpdate_2_1_fu_3273_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_KeccakWidth1600_Spon_11_fu_3315_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_KeccakWidth1600_Spon_11_fu_3315_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state129) or (ap_const_logic_1 = ap_CS_fsm_state63))) then 
                    grp_KeccakWidth1600_Spon_11_fu_3315_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_KeccakWidth1600_Spon_11_fu_3315_ap_ready = ap_const_logic_1)) then 
                    grp_KeccakWidth1600_Spon_11_fu_3315_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_KeccakWidth1600_Spon_5_fu_3300_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_KeccakWidth1600_Spon_5_fu_3300_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state117) or (ap_const_logic_1 = ap_CS_fsm_state51))) then 
                    grp_KeccakWidth1600_Spon_5_fu_3300_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_KeccakWidth1600_Spon_5_fu_3300_ap_ready = ap_const_logic_1)) then 
                    grp_KeccakWidth1600_Spon_5_fu_3300_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_KeccakWidth1600_Spon_6_fu_3286_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_KeccakWidth1600_Spon_6_fu_3286_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state125) or (ap_const_logic_1 = ap_CS_fsm_state59))) then 
                    grp_KeccakWidth1600_Spon_6_fu_3286_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_KeccakWidth1600_Spon_6_fu_3286_ap_ready = ap_const_logic_1)) then 
                    grp_KeccakWidth1600_Spon_6_fu_3286_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_KeccakWidth1600_Spon_fu_3258_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_KeccakWidth1600_Spon_fu_3258_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state135) or (ap_const_logic_1 = ap_CS_fsm_state121) or (ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state55))) then 
                    grp_KeccakWidth1600_Spon_fu_3258_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_KeccakWidth1600_Spon_fu_3258_ap_ready = ap_const_logic_1)) then 
                    grp_KeccakWidth1600_Spon_fu_3258_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_verifyProof_23_fu_3198_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_verifyProof_23_fu_3198_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_verifyProof_23_fu_3198_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_verifyProof_23_fu_3198_ap_ready = ap_const_logic_1)) then 
                    grp_verifyProof_23_fu_3198_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    indvar103_reg_3095_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state73) and (empty_140_reg_6827 = ap_const_lv1_1))) then 
                indvar103_reg_3095 <= ap_const_lv8_0;
            elsif (((empty_216_fu_5400_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state112))) then 
                indvar103_reg_3095 <= indvarinc104_fu_5394_p2;
            end if; 
        end if;
    end process;

    indvar182_reg_3106_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state112) and (empty_216_fu_5400_p2 = ap_const_lv1_1))) then 
                indvar182_reg_3106 <= ap_const_lv8_0;
            elsif (((empty_222_reg_7689 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state115))) then 
                indvar182_reg_3106 <= indvarinc183_reg_7658;
            end if; 
        end if;
    end process;

    indvar87_reg_3061_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state46) and (empty_128_fu_4427_p2 = ap_const_lv1_1))) then 
                indvar87_reg_3061 <= ap_const_lv8_0;
            elsif (((empty_134_reg_6756 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state49))) then 
                indvar87_reg_3061 <= indvarinc88_reg_6725;
            end if; 
        end if;
    end process;

    indvar8_reg_3050_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((empty_52_reg_5894 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                indvar8_reg_3050 <= ap_const_lv8_0;
            elsif (((empty_128_fu_4427_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state46))) then 
                indvar8_reg_3050 <= indvarinc9_fu_4421_p2;
            end if; 
        end if;
    end process;

    indvar95_reg_3072_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((empty_140_reg_6827 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state73))) then 
                indvar95_reg_3072 <= indvarinc96_reg_6796;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state70) and (grp_KeccakWidth1600_Spon_fu_3258_ap_done = ap_const_logic_1))) then 
                indvar95_reg_3072 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    indvar_reg_3027_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((empty_52_reg_5894 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                indvar_reg_3027 <= indvarinc_reg_5863;
            elsif (((grp_verifyProof_23_fu_3198_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                indvar_reg_3027 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    j_0_reg_3152_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state141) and (icmp_ln1264_fu_5609_p2 = ap_const_lv1_1))) then 
                j_0_reg_3152 <= ap_const_lv3_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state144)) then 
                j_0_reg_3152 <= j_reg_7801;
            end if; 
        end if;
    end process;

    loop_0_reg_3117_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state138)) then 
                loop_0_reg_3117 <= loop_reg_7732;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state136) and (grp_KeccakWidth1600_Spon_fu_3258_ap_done = ap_const_logic_1))) then 
                loop_0_reg_3117 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    loop_1_reg_3128_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state137) and (icmp_ln1253_fu_5522_p2 = ap_const_lv1_1))) then 
                loop_1_reg_3128 <= ap_const_lv3_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state140)) then 
                loop_1_reg_3128 <= loop_22_reg_7755;
            end if; 
        end if;
    end process;

    loop_2_reg_3140_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state139) and (icmp_ln1262_fu_5565_p2 = ap_const_lv1_1))) then 
                loop_2_reg_3140 <= ap_const_lv3_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state142)) then 
                loop_2_reg_3140 <= loop_23_reg_7773;
            end if; 
        end if;
    end process;

    loop_3_reg_3163_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state143) and (icmp_ln1268_fu_5673_p2 = ap_const_lv1_1))) then 
                loop_3_reg_3163 <= ap_const_lv3_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
                loop_3_reg_3163 <= loop_24_reg_7819;
            end if; 
        end if;
    end process;

    loop_4_reg_3175_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state149)) then 
                loop_4_reg_3175 <= loop_21_reg_7837;
            elsif (((grp_H3_2_fu_3237_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state147))) then 
                loop_4_reg_3175 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    phi_mul15_reg_3083_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state73) and (empty_140_reg_6827 = ap_const_lv1_1))) then 
                phi_mul15_reg_3083 <= ap_const_lv14_0;
            elsif (((empty_216_fu_5400_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state112))) then 
                phi_mul15_reg_3083 <= next_mul16_reg_7225;
            end if; 
        end if;
    end process;

    phi_mul17_reg_3016_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state145) and (icmp_ln1272_fu_5712_p2 = ap_const_lv1_1))) then 
                phi_mul17_reg_3016 <= add_ln1236_reg_5796;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                phi_mul17_reg_3016 <= ap_const_lv15_0;
            end if; 
        end if;
    end process;

    phi_mul_reg_3038_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((empty_52_reg_5894 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                phi_mul_reg_3038 <= ap_const_lv14_0;
            elsif (((empty_128_fu_4427_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state46))) then 
                phi_mul_reg_3038 <= next_mul_reg_6292;
            end if; 
        end if;
    end process;

    round_assign_reg_2992_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state145) and (icmp_ln1272_fu_5712_p2 = ap_const_lv1_1))) then 
                round_assign_reg_2992 <= i_reg_5824;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                round_assign_reg_2992 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    status_0_reg_3186_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state149)) then 
                status_0_reg_3186 <= select_ln1287_fu_5783_p3;
            elsif (((grp_H3_2_fu_3237_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state147))) then 
                status_0_reg_3186 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    view3Output_0_rec_reg_3004_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state145) and (icmp_ln1272_fu_5712_p2 = ap_const_lv1_1))) then 
                view3Output_0_rec_reg_3004 <= add_ln1275_fu_5739_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                view3Output_0_rec_reg_3004 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln1236_reg_5796 <= add_ln1236_fu_3395_p2;
                i_reg_5824 <= i_fu_3452_p2;
                sub_ln1254_reg_5813 <= sub_ln1254_fu_3429_p2;
                    zext_ln1254_1_reg_5806(9 downto 2) <= zext_ln1254_1_fu_3425_p1(9 downto 2);
                    zext_ln1254_reg_5801(12 downto 5) <= zext_ln1254_fu_3413_p1(12 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1253_fu_5522_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state137))) then
                add_ln1254_4_reg_7742 <= add_ln1254_4_fu_5552_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state137) and (icmp_ln1253_fu_5522_p2 = ap_const_lv1_1))) then
                add_ln1263_reg_7747 <= add_ln1263_fu_5557_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state139) and (icmp_ln1262_fu_5565_p2 = ap_const_lv1_1))) then
                add_ln1265_reg_7765 <= add_ln1265_fu_5591_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state143) and (icmp_ln1268_fu_5673_p2 = ap_const_lv1_1))) then
                add_ln1273_reg_7811 <= add_ln1273_fu_5685_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_verifyProof_23_fu_3198_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                challenge_reg_5850 <= challenge_fu_3554_p3;
                    zext_ln1250_cast_reg_5858(1 downto 0) <= zext_ln1250_cast_fu_3560_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state47)) then
                    empty_130_reg_6736(9 downto 2) <= empty_130_fu_4447_p1(9 downto 2);
                empty_134_reg_6756 <= empty_134_fu_4467_p2;
                indvarinc88_reg_6725 <= indvarinc88_fu_4433_p2;
                    tmp_2_reg_6730(9 downto 2) <= tmp_2_fu_4439_p3(9 downto 2);
                    tmp_3_reg_6741(9 downto 2) <= tmp_3_fu_4458_p3(9 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state71)) then
                    empty_136_reg_6807(9 downto 2) <= empty_136_fu_4551_p1(9 downto 2);
                empty_140_reg_6827 <= empty_140_fu_4571_p2;
                indvarinc96_reg_6796 <= indvarinc96_fu_4537_p2;
                    tmp_10_reg_6801(9 downto 2) <= tmp_10_fu_4543_p3(9 downto 2);
                    tmp_11_reg_6812(9 downto 2) <= tmp_11_fu_4562_p3(9 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state113)) then
                    empty_218_reg_7669(9 downto 2) <= empty_218_fu_5420_p1(9 downto 2);
                empty_222_reg_7689 <= empty_222_fu_5440_p2;
                indvarinc183_reg_7658 <= indvarinc183_fu_5406_p2;
                    tmp_14_reg_7663(9 downto 2) <= tmp_14_fu_5412_p3(9 downto 2);
                    tmp_15_reg_7674(9 downto 2) <= tmp_15_fu_5431_p3(9 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                    empty_48_reg_5874(9 downto 2) <= empty_48_fu_3578_p1(9 downto 2);
                empty_52_reg_5894 <= empty_52_fu_3598_p2;
                indvarinc_reg_5863 <= indvarinc_fu_3564_p2;
                    tmp_8_reg_5868(9 downto 2) <= tmp_8_fu_3570_p3(9 downto 2);
                    tmp_9_reg_5879(9 downto 2) <= tmp_9_fu_3589_p3(9 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state143)) then
                j_reg_7801 <= j_fu_5679_p2;
                    zext_ln1268_reg_7783(2 downto 0) <= zext_ln1268_fu_5649_p1(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state148)) then
                loop_21_reg_7837 <= loop_21_fu_5765_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state139)) then
                loop_22_reg_7755 <= loop_22_fu_5571_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state141)) then
                loop_23_reg_7773 <= loop_23_fu_5615_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state145)) then
                loop_24_reg_7819 <= loop_24_fu_5718_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state137)) then
                loop_reg_7732 <= loop_fu_5528_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state91)) then
                next_mul16_reg_7225 <= next_mul16_fu_4966_p2;
                    p_cast59_reg_7235(14 downto 0) <= p_cast59_fu_4989_p1(14 downto 0);
                    p_cast60_reg_7230(13 downto 0) <= p_cast60_fu_4978_p1(13 downto 0);
                    phi_mul15_cast93_reg_7181(13 downto 0) <= phi_mul15_cast93_fu_4962_p1(13 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then
                next_mul_reg_6292 <= next_mul_fu_3993_p2;
                    p_cast134_reg_6302(14 downto 0) <= p_cast134_fu_4016_p1(14 downto 0);
                    p_cast135_reg_6297(13 downto 0) <= p_cast135_fu_4005_p1(13 downto 0);
                    phi_mul_cast168_reg_6248(13 downto 0) <= phi_mul_cast168_fu_3989_p1(13 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                or_ln_reg_5835 <= or_ln_fu_3525_p3;
                trunc_ln386_2_reg_5840 <= trunc_ln386_2_fu_3540_p1;
                trunc_ln54_1_reg_5845 <= trunc_ln54_1_fu_3550_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state42)) then
                    p_cast100_reg_6642(14 downto 0) <= p_cast100_fu_4356_p1(14 downto 0);
                    p_cast101_reg_6637(14 downto 0) <= p_cast101_fu_4346_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state41)) then
                    p_cast102_reg_6622(14 downto 0) <= p_cast102_fu_4336_p1(14 downto 0);
                    p_cast103_reg_6617(14 downto 0) <= p_cast103_fu_4326_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state40)) then
                    p_cast104_reg_6602(14 downto 0) <= p_cast104_fu_4316_p1(14 downto 0);
                    p_cast105_reg_6597(14 downto 0) <= p_cast105_fu_4306_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state39)) then
                    p_cast106_reg_6582(14 downto 0) <= p_cast106_fu_4296_p1(14 downto 0);
                    p_cast107_reg_6577(14 downto 0) <= p_cast107_fu_4286_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state38)) then
                    p_cast108_reg_6562(14 downto 0) <= p_cast108_fu_4276_p1(14 downto 0);
                    p_cast109_reg_6557(14 downto 0) <= p_cast109_fu_4266_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state37)) then
                    p_cast110_reg_6542(14 downto 0) <= p_cast110_fu_4256_p1(14 downto 0);
                    p_cast111_reg_6537(14 downto 0) <= p_cast111_fu_4246_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state36)) then
                    p_cast112_reg_6522(14 downto 0) <= p_cast112_fu_4236_p1(14 downto 0);
                    p_cast113_reg_6517(14 downto 0) <= p_cast113_fu_4226_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state35)) then
                    p_cast114_reg_6502(14 downto 0) <= p_cast114_fu_4216_p1(14 downto 0);
                    p_cast115_reg_6497(14 downto 0) <= p_cast115_fu_4206_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state34)) then
                    p_cast116_reg_6482(14 downto 0) <= p_cast116_fu_4196_p1(14 downto 0);
                    p_cast117_reg_6477(14 downto 0) <= p_cast117_fu_4186_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state33)) then
                    p_cast118_reg_6462(14 downto 0) <= p_cast118_fu_4176_p1(14 downto 0);
                    p_cast119_reg_6457(14 downto 0) <= p_cast119_fu_4166_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state32)) then
                    p_cast120_reg_6442(14 downto 0) <= p_cast120_fu_4156_p1(14 downto 0);
                    p_cast121_reg_6437(14 downto 0) <= p_cast121_fu_4146_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state31)) then
                    p_cast122_reg_6422(14 downto 0) <= p_cast122_fu_4136_p1(14 downto 0);
                    p_cast123_reg_6417(14 downto 0) <= p_cast123_fu_4126_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state30)) then
                    p_cast124_reg_6402(14 downto 0) <= p_cast124_fu_4116_p1(14 downto 0);
                    p_cast125_reg_6397(14 downto 0) <= p_cast125_fu_4106_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state29)) then
                    p_cast126_reg_6382(14 downto 0) <= p_cast126_fu_4096_p1(14 downto 0);
                    p_cast127_reg_6377(14 downto 0) <= p_cast127_fu_4086_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state28)) then
                    p_cast128_reg_6362(14 downto 0) <= p_cast128_fu_4076_p1(14 downto 0);
                    p_cast129_reg_6357(14 downto 0) <= p_cast129_fu_4066_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state27)) then
                    p_cast130_reg_6342(14 downto 0) <= p_cast130_fu_4056_p1(14 downto 0);
                    p_cast131_reg_6337(14 downto 0) <= p_cast131_fu_4046_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then
                    p_cast132_reg_6322(14 downto 0) <= p_cast132_fu_4036_p1(14 downto 0);
                    p_cast133_reg_6317(14 downto 0) <= p_cast133_fu_4026_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then
                    p_cast136_reg_6233(13 downto 0) <= p_cast136_fu_3984_p1(13 downto 0);
                    p_cast137_reg_6228(13 downto 0) <= p_cast137_fu_3973_p1(13 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then
                    p_cast138_reg_6213(13 downto 0) <= p_cast138_fu_3962_p1(13 downto 0);
                    p_cast139_reg_6208(13 downto 0) <= p_cast139_fu_3951_p1(13 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then
                    p_cast140_reg_6193(13 downto 0) <= p_cast140_fu_3940_p1(13 downto 0);
                    p_cast141_reg_6188(13 downto 0) <= p_cast141_fu_3929_p1(13 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state21)) then
                    p_cast142_reg_6173(13 downto 0) <= p_cast142_fu_3918_p1(13 downto 0);
                    p_cast143_reg_6168(13 downto 0) <= p_cast143_fu_3907_p1(13 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                    p_cast144_reg_6153(13 downto 0) <= p_cast144_fu_3896_p1(13 downto 0);
                    p_cast145_reg_6148(13 downto 0) <= p_cast145_fu_3885_p1(13 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then
                    p_cast146_reg_6133(13 downto 0) <= p_cast146_fu_3874_p1(13 downto 0);
                    p_cast147_reg_6128(13 downto 0) <= p_cast147_fu_3863_p1(13 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                    p_cast148_reg_6113(13 downto 0) <= p_cast148_fu_3852_p1(13 downto 0);
                    p_cast149_reg_6108(13 downto 0) <= p_cast149_fu_3841_p1(13 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                    p_cast150_reg_6093(13 downto 0) <= p_cast150_fu_3830_p1(13 downto 0);
                    p_cast151_reg_6088(13 downto 0) <= p_cast151_fu_3819_p1(13 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                    p_cast152_reg_6073(13 downto 0) <= p_cast152_fu_3808_p1(13 downto 0);
                    p_cast153_reg_6068(13 downto 0) <= p_cast153_fu_3797_p1(13 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                    p_cast154_reg_6053(13 downto 0) <= p_cast154_fu_3786_p1(13 downto 0);
                    p_cast155_reg_6048(13 downto 0) <= p_cast155_fu_3775_p1(13 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                    p_cast156_reg_6033(13 downto 0) <= p_cast156_fu_3764_p1(13 downto 0);
                    p_cast157_reg_6028(13 downto 0) <= p_cast157_fu_3753_p1(13 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                    p_cast158_reg_6013(13 downto 0) <= p_cast158_fu_3742_p1(13 downto 0);
                    p_cast159_reg_6008(13 downto 0) <= p_cast159_fu_3731_p1(13 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                    p_cast160_reg_5993(13 downto 0) <= p_cast160_fu_3720_p1(13 downto 0);
                    p_cast161_reg_5988(13 downto 0) <= p_cast161_fu_3709_p1(13 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                    p_cast162_reg_5973(13 downto 0) <= p_cast162_fu_3698_p1(13 downto 0);
                    p_cast163_reg_5968(13 downto 0) <= p_cast163_fu_3687_p1(13 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                    p_cast164_reg_5953(13 downto 0) <= p_cast164_fu_3676_p1(13 downto 0);
                    p_cast165_reg_5948(13 downto 0) <= p_cast165_fu_3665_p1(13 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                    p_cast166_reg_5933(13 downto 0) <= p_cast166_fu_3654_p1(13 downto 0);
                    p_cast167_reg_5928(13 downto 0) <= p_cast167_fu_3643_p1(13 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state111)) then
                    p_cast20_reg_7630(14 downto 0) <= p_cast20_fu_5379_p1(14 downto 0);
                    p_cast_reg_7635(14 downto 0) <= p_cast_fu_5389_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state110)) then
                    p_cast21_reg_7615(14 downto 0) <= p_cast21_fu_5369_p1(14 downto 0);
                    p_cast22_reg_7610(14 downto 0) <= p_cast22_fu_5359_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state109)) then
                    p_cast23_reg_7595(14 downto 0) <= p_cast23_fu_5349_p1(14 downto 0);
                    p_cast24_reg_7590(14 downto 0) <= p_cast24_fu_5339_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state108)) then
                    p_cast25_reg_7575(14 downto 0) <= p_cast25_fu_5329_p1(14 downto 0);
                    p_cast26_reg_7570(14 downto 0) <= p_cast26_fu_5319_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state107)) then
                    p_cast27_reg_7555(14 downto 0) <= p_cast27_fu_5309_p1(14 downto 0);
                    p_cast28_reg_7550(14 downto 0) <= p_cast28_fu_5299_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state106)) then
                    p_cast29_reg_7535(14 downto 0) <= p_cast29_fu_5289_p1(14 downto 0);
                    p_cast30_reg_7530(14 downto 0) <= p_cast30_fu_5279_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state105)) then
                    p_cast31_reg_7515(14 downto 0) <= p_cast31_fu_5269_p1(14 downto 0);
                    p_cast32_reg_7510(14 downto 0) <= p_cast32_fu_5259_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state104)) then
                    p_cast33_reg_7495(14 downto 0) <= p_cast33_fu_5249_p1(14 downto 0);
                    p_cast34_reg_7490(14 downto 0) <= p_cast34_fu_5239_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state103)) then
                    p_cast35_reg_7475(14 downto 0) <= p_cast35_fu_5229_p1(14 downto 0);
                    p_cast36_reg_7470(14 downto 0) <= p_cast36_fu_5219_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state102)) then
                    p_cast37_reg_7455(14 downto 0) <= p_cast37_fu_5209_p1(14 downto 0);
                    p_cast38_reg_7450(14 downto 0) <= p_cast38_fu_5199_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state101)) then
                    p_cast39_reg_7435(14 downto 0) <= p_cast39_fu_5189_p1(14 downto 0);
                    p_cast40_reg_7430(14 downto 0) <= p_cast40_fu_5179_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state100)) then
                    p_cast41_reg_7415(14 downto 0) <= p_cast41_fu_5169_p1(14 downto 0);
                    p_cast42_reg_7410(14 downto 0) <= p_cast42_fu_5159_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state99)) then
                    p_cast43_reg_7395(14 downto 0) <= p_cast43_fu_5149_p1(14 downto 0);
                    p_cast44_reg_7390(14 downto 0) <= p_cast44_fu_5139_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state98)) then
                    p_cast45_reg_7375(14 downto 0) <= p_cast45_fu_5129_p1(14 downto 0);
                    p_cast46_reg_7370(14 downto 0) <= p_cast46_fu_5119_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state97)) then
                    p_cast47_reg_7355(14 downto 0) <= p_cast47_fu_5109_p1(14 downto 0);
                    p_cast48_reg_7350(14 downto 0) <= p_cast48_fu_5099_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state96)) then
                    p_cast49_reg_7335(14 downto 0) <= p_cast49_fu_5089_p1(14 downto 0);
                    p_cast50_reg_7330(14 downto 0) <= p_cast50_fu_5079_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state95)) then
                    p_cast51_reg_7315(14 downto 0) <= p_cast51_fu_5069_p1(14 downto 0);
                    p_cast52_reg_7310(14 downto 0) <= p_cast52_fu_5059_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state94)) then
                    p_cast53_reg_7295(14 downto 0) <= p_cast53_fu_5049_p1(14 downto 0);
                    p_cast54_reg_7290(14 downto 0) <= p_cast54_fu_5039_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state93)) then
                    p_cast55_reg_7275(14 downto 0) <= p_cast55_fu_5029_p1(14 downto 0);
                    p_cast56_reg_7270(14 downto 0) <= p_cast56_fu_5019_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state92)) then
                    p_cast57_reg_7255(14 downto 0) <= p_cast57_fu_5009_p1(14 downto 0);
                    p_cast58_reg_7250(14 downto 0) <= p_cast58_fu_4999_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state90)) then
                    p_cast61_reg_7166(13 downto 0) <= p_cast61_fu_4957_p1(13 downto 0);
                    p_cast62_reg_7161(13 downto 0) <= p_cast62_fu_4946_p1(13 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state89)) then
                    p_cast63_reg_7146(13 downto 0) <= p_cast63_fu_4935_p1(13 downto 0);
                    p_cast64_reg_7141(13 downto 0) <= p_cast64_fu_4924_p1(13 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state88)) then
                    p_cast65_reg_7126(13 downto 0) <= p_cast65_fu_4913_p1(13 downto 0);
                    p_cast66_reg_7121(13 downto 0) <= p_cast66_fu_4902_p1(13 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state87)) then
                    p_cast67_reg_7106(13 downto 0) <= p_cast67_fu_4891_p1(13 downto 0);
                    p_cast68_reg_7101(13 downto 0) <= p_cast68_fu_4880_p1(13 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state86)) then
                    p_cast69_reg_7086(13 downto 0) <= p_cast69_fu_4869_p1(13 downto 0);
                    p_cast70_reg_7081(13 downto 0) <= p_cast70_fu_4858_p1(13 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state85)) then
                    p_cast71_reg_7066(13 downto 0) <= p_cast71_fu_4847_p1(13 downto 0);
                    p_cast72_reg_7061(13 downto 0) <= p_cast72_fu_4836_p1(13 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state84)) then
                    p_cast73_reg_7046(13 downto 0) <= p_cast73_fu_4825_p1(13 downto 0);
                    p_cast74_reg_7041(13 downto 0) <= p_cast74_fu_4814_p1(13 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state83)) then
                    p_cast75_reg_7026(13 downto 0) <= p_cast75_fu_4803_p1(13 downto 0);
                    p_cast76_reg_7021(13 downto 0) <= p_cast76_fu_4792_p1(13 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state82)) then
                    p_cast77_reg_7006(13 downto 0) <= p_cast77_fu_4781_p1(13 downto 0);
                    p_cast78_reg_7001(13 downto 0) <= p_cast78_fu_4770_p1(13 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state81)) then
                    p_cast79_reg_6986(13 downto 0) <= p_cast79_fu_4759_p1(13 downto 0);
                    p_cast80_reg_6981(13 downto 0) <= p_cast80_fu_4748_p1(13 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state80)) then
                    p_cast81_reg_6966(13 downto 0) <= p_cast81_fu_4737_p1(13 downto 0);
                    p_cast82_reg_6961(13 downto 0) <= p_cast82_fu_4726_p1(13 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state79)) then
                    p_cast83_reg_6946(13 downto 0) <= p_cast83_fu_4715_p1(13 downto 0);
                    p_cast84_reg_6941(13 downto 0) <= p_cast84_fu_4704_p1(13 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state78)) then
                    p_cast85_reg_6926(13 downto 0) <= p_cast85_fu_4693_p1(13 downto 0);
                    p_cast86_reg_6921(13 downto 0) <= p_cast86_fu_4682_p1(13 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state77)) then
                    p_cast87_reg_6906(13 downto 0) <= p_cast87_fu_4671_p1(13 downto 0);
                    p_cast88_reg_6901(13 downto 0) <= p_cast88_fu_4660_p1(13 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state76)) then
                    p_cast89_reg_6886(13 downto 0) <= p_cast89_fu_4649_p1(13 downto 0);
                    p_cast90_reg_6881(13 downto 0) <= p_cast90_fu_4638_p1(13 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state75)) then
                    p_cast91_reg_6866(13 downto 0) <= p_cast91_fu_4627_p1(13 downto 0);
                    p_cast92_reg_6861(13 downto 0) <= p_cast92_fu_4616_p1(13 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state45)) then
                    p_cast94_reg_6702(14 downto 0) <= p_cast94_fu_4416_p1(14 downto 0);
                    p_cast95_reg_6697(14 downto 0) <= p_cast95_fu_4406_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state44)) then
                    p_cast96_reg_6682(14 downto 0) <= p_cast96_fu_4396_p1(14 downto 0);
                    p_cast97_reg_6677(14 downto 0) <= p_cast97_fu_4386_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state43)) then
                    p_cast98_reg_6662(14 downto 0) <= p_cast98_fu_4376_p1(14 downto 0);
                    p_cast99_reg_6657(14 downto 0) <= p_cast99_fu_4366_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state74)) then
                    phi_mul15_cast_reg_6851(13 downto 0) <= phi_mul15_cast_fu_4605_p1(13 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                    phi_mul_cast_reg_5918(13 downto 0) <= phi_mul_cast_fu_3632_p1(13 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((grp_HashInit_fu_3328_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state124)) or ((grp_HashInit_fu_3328_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state116)) or ((grp_HashInit_fu_3328_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state58)) or ((grp_HashInit_fu_3328_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state50)))) then
                reg_3358 <= grp_HashInit_fu_3328_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((grp_KeccakWidth1600_Spon_5_fu_3300_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state118)) or ((grp_KeccakWidth1600_Spon_5_fu_3300_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state52)))) then
                reg_3364 <= grp_KeccakWidth1600_Spon_5_fu_3300_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((grp_HashFinal_fu_3340_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state134)) or ((grp_HashFinal_fu_3340_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state120)) or ((grp_HashFinal_fu_3340_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state68)) or ((grp_HashFinal_fu_3340_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state54)))) then
                reg_3369 <= grp_HashFinal_fu_3340_ap_return_0;
                reg_3374 <= grp_HashFinal_fu_3340_ap_return_1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((grp_KeccakWidth1600_Spon_6_fu_3286_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state126)) or ((grp_KeccakWidth1600_Spon_6_fu_3286_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state60)))) then
                reg_3379 <= grp_KeccakWidth1600_Spon_6_fu_3286_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((grp_HashUpdate_2_1_fu_3273_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state132)) or ((grp_HashUpdate_2_1_fu_3273_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state128)) or ((grp_HashUpdate_2_1_fu_3273_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state66)) or ((grp_HashUpdate_2_1_fu_3273_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state62)))) then
                reg_3384 <= grp_HashUpdate_2_1_fu_3273_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((grp_KeccakWidth1600_Spon_11_fu_3315_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state130)) or ((grp_KeccakWidth1600_Spon_11_fu_3315_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state64)))) then
                reg_3390 <= grp_KeccakWidth1600_Spon_11_fu_3315_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state70) and (grp_KeccakWidth1600_Spon_fu_3258_ap_done = ap_const_logic_1))) then
                select_ln1251_reg_6786 <= select_ln1251_fu_4525_p3;
                    zext_ln1251_1_cast_reg_6791(2 downto 0) <= zext_ln1251_1_cast_fu_4533_p1(2 downto 0);
                    zext_ln1251_reg_6780(1 downto 0) <= zext_ln1251_fu_4501_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state72)) then
                    tmp_12_reg_6831(9 downto 2) <= tmp_12_fu_4582_p3(9 downto 2);
                    tmp_13_reg_6836(9 downto 2) <= tmp_13_fu_4596_p3(9 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state114)) then
                    tmp_16_reg_7693(9 downto 2) <= tmp_16_fu_5451_p3(9 downto 2);
                    tmp_17_reg_7698(9 downto 2) <= tmp_17_fu_5465_p3(9 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                    tmp_1_reg_5903(9 downto 2) <= tmp_1_fu_3623_p3(9 downto 2);
                    tmp_s_reg_5898(9 downto 2) <= tmp_s_fu_3609_p3(9 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state136) and (grp_KeccakWidth1600_Spon_fu_3258_ap_done = ap_const_logic_1))) then
                    tmp_25_cast_reg_7719(15 downto 5) <= tmp_25_cast_fu_5510_p3(15 downto 5);
                    zext_ln1253_reg_7724(2 downto 0) <= zext_ln1253_fu_5518_p1(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state48)) then
                    tmp_6_reg_6760(9 downto 2) <= tmp_6_fu_4478_p3(9 downto 2);
                    tmp_7_reg_6765(9 downto 2) <= tmp_7_fu_4492_p3(9 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state115) and (empty_222_reg_7689 = ap_const_lv1_1))) then
                trunc_ln81_reg_7713 <= trunc_ln81_fu_5474_p1;
            end if;
        end if;
    end process;
    zext_ln1254_reg_5801(4 downto 0) <= "00000";
    zext_ln1254_reg_5801(13) <= '0';
    zext_ln1254_1_reg_5806(1 downto 0) <= "00";
    zext_ln1254_1_reg_5806(10) <= '0';
    zext_ln1250_cast_reg_5858(10 downto 2) <= "000000000";
    tmp_8_reg_5868(1 downto 0) <= "00";
    empty_48_reg_5874(1 downto 0) <= "00";
    empty_48_reg_5874(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    tmp_9_reg_5879(1 downto 0) <= "01";
    tmp_9_reg_5879(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    tmp_s_reg_5898(1 downto 0) <= "10";
    tmp_s_reg_5898(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    tmp_1_reg_5903(1 downto 0) <= "11";
    tmp_1_reg_5903(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    phi_mul_cast_reg_5918(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast167_reg_5928(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast166_reg_5933(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast165_reg_5948(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast164_reg_5953(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast163_reg_5968(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast162_reg_5973(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast161_reg_5988(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast160_reg_5993(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast159_reg_6008(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast158_reg_6013(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast157_reg_6028(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast156_reg_6033(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast155_reg_6048(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast154_reg_6053(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast153_reg_6068(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast152_reg_6073(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast151_reg_6088(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast150_reg_6093(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast149_reg_6108(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast148_reg_6113(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast147_reg_6128(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast146_reg_6133(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast145_reg_6148(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast144_reg_6153(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast143_reg_6168(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast142_reg_6173(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast141_reg_6188(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast140_reg_6193(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast139_reg_6208(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast138_reg_6213(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast137_reg_6228(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast136_reg_6233(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    phi_mul_cast168_reg_6248(14) <= '0';
    p_cast135_reg_6297(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast134_reg_6302(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast133_reg_6317(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast132_reg_6322(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast131_reg_6337(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast130_reg_6342(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast129_reg_6357(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast128_reg_6362(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast127_reg_6377(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast126_reg_6382(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast125_reg_6397(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast124_reg_6402(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast123_reg_6417(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast122_reg_6422(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast121_reg_6437(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast120_reg_6442(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast119_reg_6457(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast118_reg_6462(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast117_reg_6477(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast116_reg_6482(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast115_reg_6497(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast114_reg_6502(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast113_reg_6517(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast112_reg_6522(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast111_reg_6537(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast110_reg_6542(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast109_reg_6557(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast108_reg_6562(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast107_reg_6577(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast106_reg_6582(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast105_reg_6597(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast104_reg_6602(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast103_reg_6617(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast102_reg_6622(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast101_reg_6637(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast100_reg_6642(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast99_reg_6657(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast98_reg_6662(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast97_reg_6677(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast96_reg_6682(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast95_reg_6697(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast94_reg_6702(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    tmp_2_reg_6730(1 downto 0) <= "00";
    empty_130_reg_6736(1 downto 0) <= "00";
    empty_130_reg_6736(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    tmp_3_reg_6741(1 downto 0) <= "01";
    tmp_3_reg_6741(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    tmp_6_reg_6760(1 downto 0) <= "10";
    tmp_6_reg_6760(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    tmp_7_reg_6765(1 downto 0) <= "11";
    tmp_7_reg_6765(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln1251_reg_6780(2) <= '0';
    zext_ln1251_1_cast_reg_6791(10 downto 3) <= "00000000";
    tmp_10_reg_6801(1 downto 0) <= "00";
    empty_136_reg_6807(1 downto 0) <= "00";
    empty_136_reg_6807(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    tmp_11_reg_6812(1 downto 0) <= "01";
    tmp_11_reg_6812(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    tmp_12_reg_6831(1 downto 0) <= "10";
    tmp_12_reg_6831(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    tmp_13_reg_6836(1 downto 0) <= "11";
    tmp_13_reg_6836(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    phi_mul15_cast_reg_6851(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast92_reg_6861(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast91_reg_6866(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast90_reg_6881(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast89_reg_6886(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast88_reg_6901(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast87_reg_6906(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast86_reg_6921(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast85_reg_6926(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast84_reg_6941(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast83_reg_6946(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast82_reg_6961(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast81_reg_6966(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast80_reg_6981(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast79_reg_6986(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast78_reg_7001(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast77_reg_7006(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast76_reg_7021(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast75_reg_7026(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast74_reg_7041(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast73_reg_7046(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast72_reg_7061(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast71_reg_7066(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast70_reg_7081(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast69_reg_7086(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast68_reg_7101(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast67_reg_7106(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast66_reg_7121(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast65_reg_7126(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast64_reg_7141(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast63_reg_7146(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast62_reg_7161(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast61_reg_7166(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    phi_mul15_cast93_reg_7181(14) <= '0';
    p_cast60_reg_7230(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    p_cast59_reg_7235(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast58_reg_7250(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast57_reg_7255(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast56_reg_7270(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast55_reg_7275(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast54_reg_7290(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast53_reg_7295(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast52_reg_7310(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast51_reg_7315(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast50_reg_7330(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast49_reg_7335(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast48_reg_7350(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast47_reg_7355(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast46_reg_7370(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast45_reg_7375(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast44_reg_7390(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast43_reg_7395(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast42_reg_7410(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast41_reg_7415(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast40_reg_7430(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast39_reg_7435(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast38_reg_7450(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast37_reg_7455(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast36_reg_7470(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast35_reg_7475(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast34_reg_7490(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast33_reg_7495(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast32_reg_7510(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast31_reg_7515(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast30_reg_7530(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast29_reg_7535(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast28_reg_7550(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast27_reg_7555(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast26_reg_7570(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast25_reg_7575(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast24_reg_7590(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast23_reg_7595(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast22_reg_7610(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast21_reg_7615(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast20_reg_7630(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    p_cast_reg_7635(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    tmp_14_reg_7663(1 downto 0) <= "00";
    empty_218_reg_7669(1 downto 0) <= "00";
    empty_218_reg_7669(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    tmp_15_reg_7674(1 downto 0) <= "01";
    tmp_15_reg_7674(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    tmp_16_reg_7693(1 downto 0) <= "10";
    tmp_16_reg_7693(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    tmp_17_reg_7698(1 downto 0) <= "11";
    tmp_17_reg_7698(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    tmp_25_cast_reg_7719(4 downto 0) <= "00000";
    zext_ln1253_reg_7724(10 downto 3) <= "00000000";
    zext_ln1268_reg_7783(9 downto 3) <= "0000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state50, grp_HashInit_fu_3328_ap_done, ap_CS_fsm_state58, ap_CS_fsm_state116, ap_CS_fsm_state124, ap_CS_fsm_state52, grp_KeccakWidth1600_Spon_5_fu_3300_ap_done, ap_CS_fsm_state118, ap_CS_fsm_state54, grp_HashFinal_fu_3340_ap_done, ap_CS_fsm_state68, ap_CS_fsm_state120, ap_CS_fsm_state134, ap_CS_fsm_state60, grp_KeccakWidth1600_Spon_6_fu_3286_ap_done, ap_CS_fsm_state126, ap_CS_fsm_state62, grp_HashUpdate_2_1_fu_3273_ap_done, ap_CS_fsm_state66, ap_CS_fsm_state128, ap_CS_fsm_state132, ap_CS_fsm_state64, grp_KeccakWidth1600_Spon_11_fu_3315_ap_done, ap_CS_fsm_state130, ap_CS_fsm_state2, icmp_ln1236_fu_3446_p2, ap_CS_fsm_state4, grp_verifyProof_23_fu_3198_ap_done, empty_52_reg_5894, ap_CS_fsm_state46, empty_134_reg_6756, ap_CS_fsm_state70, grp_KeccakWidth1600_Spon_fu_3258_ap_done, empty_140_reg_6827, ap_CS_fsm_state112, empty_222_reg_7689, ap_CS_fsm_state115, ap_CS_fsm_state136, ap_CS_fsm_state137, icmp_ln1253_fu_5522_p2, ap_CS_fsm_state139, icmp_ln1262_fu_5565_p2, ap_CS_fsm_state141, icmp_ln1264_fu_5609_p2, ap_CS_fsm_state143, icmp_ln1268_fu_5673_p2, ap_CS_fsm_state145, icmp_ln1272_fu_5712_p2, ap_CS_fsm_state148, icmp_ln1286_fu_5759_p2, grp_H3_2_fu_3237_ap_done, ap_CS_fsm_state7, empty_128_fu_4427_p2, ap_CS_fsm_state49, ap_CS_fsm_state73, empty_216_fu_5400_p2, ap_CS_fsm_state147, ap_CS_fsm_state56, ap_CS_fsm_state122)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln1236_fu_3446_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state147;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((grp_verifyProof_23_fu_3198_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((empty_52_reg_5894 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state46) and (empty_128_fu_4427_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state47;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state49) and (empty_134_reg_6756 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state50;
                else
                    ap_NS_fsm <= ap_ST_fsm_state47;
                end if;
            when ap_ST_fsm_state50 => 
                if (((grp_HashInit_fu_3328_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state50))) then
                    ap_NS_fsm <= ap_ST_fsm_state51;
                else
                    ap_NS_fsm <= ap_ST_fsm_state50;
                end if;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                if (((grp_KeccakWidth1600_Spon_5_fu_3300_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state52))) then
                    ap_NS_fsm <= ap_ST_fsm_state53;
                else
                    ap_NS_fsm <= ap_ST_fsm_state52;
                end if;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                if (((grp_HashFinal_fu_3340_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state54))) then
                    ap_NS_fsm <= ap_ST_fsm_state55;
                else
                    ap_NS_fsm <= ap_ST_fsm_state54;
                end if;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state56) and (grp_KeccakWidth1600_Spon_fu_3258_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state57;
                else
                    ap_NS_fsm <= ap_ST_fsm_state56;
                end if;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                if (((grp_HashInit_fu_3328_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state58))) then
                    ap_NS_fsm <= ap_ST_fsm_state59;
                else
                    ap_NS_fsm <= ap_ST_fsm_state58;
                end if;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                if (((grp_KeccakWidth1600_Spon_6_fu_3286_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state60))) then
                    ap_NS_fsm <= ap_ST_fsm_state61;
                else
                    ap_NS_fsm <= ap_ST_fsm_state60;
                end if;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                if (((grp_HashUpdate_2_1_fu_3273_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state62))) then
                    ap_NS_fsm <= ap_ST_fsm_state63;
                else
                    ap_NS_fsm <= ap_ST_fsm_state62;
                end if;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                if (((grp_KeccakWidth1600_Spon_11_fu_3315_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state64))) then
                    ap_NS_fsm <= ap_ST_fsm_state65;
                else
                    ap_NS_fsm <= ap_ST_fsm_state64;
                end if;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                if (((grp_HashUpdate_2_1_fu_3273_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state66))) then
                    ap_NS_fsm <= ap_ST_fsm_state67;
                else
                    ap_NS_fsm <= ap_ST_fsm_state66;
                end if;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                if (((grp_HashFinal_fu_3340_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state68))) then
                    ap_NS_fsm <= ap_ST_fsm_state69;
                else
                    ap_NS_fsm <= ap_ST_fsm_state68;
                end if;
            when ap_ST_fsm_state69 => 
                ap_NS_fsm <= ap_ST_fsm_state70;
            when ap_ST_fsm_state70 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state70) and (grp_KeccakWidth1600_Spon_fu_3258_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state71;
                else
                    ap_NS_fsm <= ap_ST_fsm_state70;
                end if;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state72;
            when ap_ST_fsm_state72 => 
                ap_NS_fsm <= ap_ST_fsm_state73;
            when ap_ST_fsm_state73 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state73) and (empty_140_reg_6827 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state74;
                else
                    ap_NS_fsm <= ap_ST_fsm_state71;
                end if;
            when ap_ST_fsm_state74 => 
                ap_NS_fsm <= ap_ST_fsm_state75;
            when ap_ST_fsm_state75 => 
                ap_NS_fsm <= ap_ST_fsm_state76;
            when ap_ST_fsm_state76 => 
                ap_NS_fsm <= ap_ST_fsm_state77;
            when ap_ST_fsm_state77 => 
                ap_NS_fsm <= ap_ST_fsm_state78;
            when ap_ST_fsm_state78 => 
                ap_NS_fsm <= ap_ST_fsm_state79;
            when ap_ST_fsm_state79 => 
                ap_NS_fsm <= ap_ST_fsm_state80;
            when ap_ST_fsm_state80 => 
                ap_NS_fsm <= ap_ST_fsm_state81;
            when ap_ST_fsm_state81 => 
                ap_NS_fsm <= ap_ST_fsm_state82;
            when ap_ST_fsm_state82 => 
                ap_NS_fsm <= ap_ST_fsm_state83;
            when ap_ST_fsm_state83 => 
                ap_NS_fsm <= ap_ST_fsm_state84;
            when ap_ST_fsm_state84 => 
                ap_NS_fsm <= ap_ST_fsm_state85;
            when ap_ST_fsm_state85 => 
                ap_NS_fsm <= ap_ST_fsm_state86;
            when ap_ST_fsm_state86 => 
                ap_NS_fsm <= ap_ST_fsm_state87;
            when ap_ST_fsm_state87 => 
                ap_NS_fsm <= ap_ST_fsm_state88;
            when ap_ST_fsm_state88 => 
                ap_NS_fsm <= ap_ST_fsm_state89;
            when ap_ST_fsm_state89 => 
                ap_NS_fsm <= ap_ST_fsm_state90;
            when ap_ST_fsm_state90 => 
                ap_NS_fsm <= ap_ST_fsm_state91;
            when ap_ST_fsm_state91 => 
                ap_NS_fsm <= ap_ST_fsm_state92;
            when ap_ST_fsm_state92 => 
                ap_NS_fsm <= ap_ST_fsm_state93;
            when ap_ST_fsm_state93 => 
                ap_NS_fsm <= ap_ST_fsm_state94;
            when ap_ST_fsm_state94 => 
                ap_NS_fsm <= ap_ST_fsm_state95;
            when ap_ST_fsm_state95 => 
                ap_NS_fsm <= ap_ST_fsm_state96;
            when ap_ST_fsm_state96 => 
                ap_NS_fsm <= ap_ST_fsm_state97;
            when ap_ST_fsm_state97 => 
                ap_NS_fsm <= ap_ST_fsm_state98;
            when ap_ST_fsm_state98 => 
                ap_NS_fsm <= ap_ST_fsm_state99;
            when ap_ST_fsm_state99 => 
                ap_NS_fsm <= ap_ST_fsm_state100;
            when ap_ST_fsm_state100 => 
                ap_NS_fsm <= ap_ST_fsm_state101;
            when ap_ST_fsm_state101 => 
                ap_NS_fsm <= ap_ST_fsm_state102;
            when ap_ST_fsm_state102 => 
                ap_NS_fsm <= ap_ST_fsm_state103;
            when ap_ST_fsm_state103 => 
                ap_NS_fsm <= ap_ST_fsm_state104;
            when ap_ST_fsm_state104 => 
                ap_NS_fsm <= ap_ST_fsm_state105;
            when ap_ST_fsm_state105 => 
                ap_NS_fsm <= ap_ST_fsm_state106;
            when ap_ST_fsm_state106 => 
                ap_NS_fsm <= ap_ST_fsm_state107;
            when ap_ST_fsm_state107 => 
                ap_NS_fsm <= ap_ST_fsm_state108;
            when ap_ST_fsm_state108 => 
                ap_NS_fsm <= ap_ST_fsm_state109;
            when ap_ST_fsm_state109 => 
                ap_NS_fsm <= ap_ST_fsm_state110;
            when ap_ST_fsm_state110 => 
                ap_NS_fsm <= ap_ST_fsm_state111;
            when ap_ST_fsm_state111 => 
                ap_NS_fsm <= ap_ST_fsm_state112;
            when ap_ST_fsm_state112 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state112) and (empty_216_fu_5400_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state113;
                else
                    ap_NS_fsm <= ap_ST_fsm_state74;
                end if;
            when ap_ST_fsm_state113 => 
                ap_NS_fsm <= ap_ST_fsm_state114;
            when ap_ST_fsm_state114 => 
                ap_NS_fsm <= ap_ST_fsm_state115;
            when ap_ST_fsm_state115 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state115) and (empty_222_reg_7689 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state116;
                else
                    ap_NS_fsm <= ap_ST_fsm_state113;
                end if;
            when ap_ST_fsm_state116 => 
                if (((grp_HashInit_fu_3328_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state116))) then
                    ap_NS_fsm <= ap_ST_fsm_state117;
                else
                    ap_NS_fsm <= ap_ST_fsm_state116;
                end if;
            when ap_ST_fsm_state117 => 
                ap_NS_fsm <= ap_ST_fsm_state118;
            when ap_ST_fsm_state118 => 
                if (((grp_KeccakWidth1600_Spon_5_fu_3300_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state118))) then
                    ap_NS_fsm <= ap_ST_fsm_state119;
                else
                    ap_NS_fsm <= ap_ST_fsm_state118;
                end if;
            when ap_ST_fsm_state119 => 
                ap_NS_fsm <= ap_ST_fsm_state120;
            when ap_ST_fsm_state120 => 
                if (((grp_HashFinal_fu_3340_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state120))) then
                    ap_NS_fsm <= ap_ST_fsm_state121;
                else
                    ap_NS_fsm <= ap_ST_fsm_state120;
                end if;
            when ap_ST_fsm_state121 => 
                ap_NS_fsm <= ap_ST_fsm_state122;
            when ap_ST_fsm_state122 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state122) and (grp_KeccakWidth1600_Spon_fu_3258_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state123;
                else
                    ap_NS_fsm <= ap_ST_fsm_state122;
                end if;
            when ap_ST_fsm_state123 => 
                ap_NS_fsm <= ap_ST_fsm_state124;
            when ap_ST_fsm_state124 => 
                if (((grp_HashInit_fu_3328_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state124))) then
                    ap_NS_fsm <= ap_ST_fsm_state125;
                else
                    ap_NS_fsm <= ap_ST_fsm_state124;
                end if;
            when ap_ST_fsm_state125 => 
                ap_NS_fsm <= ap_ST_fsm_state126;
            when ap_ST_fsm_state126 => 
                if (((grp_KeccakWidth1600_Spon_6_fu_3286_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state126))) then
                    ap_NS_fsm <= ap_ST_fsm_state127;
                else
                    ap_NS_fsm <= ap_ST_fsm_state126;
                end if;
            when ap_ST_fsm_state127 => 
                ap_NS_fsm <= ap_ST_fsm_state128;
            when ap_ST_fsm_state128 => 
                if (((grp_HashUpdate_2_1_fu_3273_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state128))) then
                    ap_NS_fsm <= ap_ST_fsm_state129;
                else
                    ap_NS_fsm <= ap_ST_fsm_state128;
                end if;
            when ap_ST_fsm_state129 => 
                ap_NS_fsm <= ap_ST_fsm_state130;
            when ap_ST_fsm_state130 => 
                if (((grp_KeccakWidth1600_Spon_11_fu_3315_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state130))) then
                    ap_NS_fsm <= ap_ST_fsm_state131;
                else
                    ap_NS_fsm <= ap_ST_fsm_state130;
                end if;
            when ap_ST_fsm_state131 => 
                ap_NS_fsm <= ap_ST_fsm_state132;
            when ap_ST_fsm_state132 => 
                if (((grp_HashUpdate_2_1_fu_3273_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state132))) then
                    ap_NS_fsm <= ap_ST_fsm_state133;
                else
                    ap_NS_fsm <= ap_ST_fsm_state132;
                end if;
            when ap_ST_fsm_state133 => 
                ap_NS_fsm <= ap_ST_fsm_state134;
            when ap_ST_fsm_state134 => 
                if (((grp_HashFinal_fu_3340_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state134))) then
                    ap_NS_fsm <= ap_ST_fsm_state135;
                else
                    ap_NS_fsm <= ap_ST_fsm_state134;
                end if;
            when ap_ST_fsm_state135 => 
                ap_NS_fsm <= ap_ST_fsm_state136;
            when ap_ST_fsm_state136 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state136) and (grp_KeccakWidth1600_Spon_fu_3258_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state137;
                else
                    ap_NS_fsm <= ap_ST_fsm_state136;
                end if;
            when ap_ST_fsm_state137 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state137) and (icmp_ln1253_fu_5522_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state139;
                else
                    ap_NS_fsm <= ap_ST_fsm_state138;
                end if;
            when ap_ST_fsm_state138 => 
                ap_NS_fsm <= ap_ST_fsm_state137;
            when ap_ST_fsm_state139 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state139) and (icmp_ln1262_fu_5565_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state141;
                else
                    ap_NS_fsm <= ap_ST_fsm_state140;
                end if;
            when ap_ST_fsm_state140 => 
                ap_NS_fsm <= ap_ST_fsm_state139;
            when ap_ST_fsm_state141 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state141) and (icmp_ln1264_fu_5609_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state143;
                else
                    ap_NS_fsm <= ap_ST_fsm_state142;
                end if;
            when ap_ST_fsm_state142 => 
                ap_NS_fsm <= ap_ST_fsm_state141;
            when ap_ST_fsm_state143 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state143) and (icmp_ln1268_fu_5673_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state145;
                else
                    ap_NS_fsm <= ap_ST_fsm_state144;
                end if;
            when ap_ST_fsm_state144 => 
                ap_NS_fsm <= ap_ST_fsm_state143;
            when ap_ST_fsm_state145 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state145) and (icmp_ln1272_fu_5712_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state146;
                end if;
            when ap_ST_fsm_state146 => 
                ap_NS_fsm <= ap_ST_fsm_state145;
            when ap_ST_fsm_state147 => 
                if (((grp_H3_2_fu_3237_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state147))) then
                    ap_NS_fsm <= ap_ST_fsm_state148;
                else
                    ap_NS_fsm <= ap_ST_fsm_state147;
                end if;
            when ap_ST_fsm_state148 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state148) and (icmp_ln1286_fu_5759_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state149;
                end if;
            when ap_ST_fsm_state149 => 
                ap_NS_fsm <= ap_ST_fsm_state148;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln1236_fu_3395_p2 <= std_logic_vector(unsigned(phi_mul17_reg_3016) + unsigned(ap_const_lv15_4B));
    add_ln1241_fu_3435_p2 <= std_logic_vector(unsigned(phi_mul17_reg_3016) + unsigned(ap_const_lv15_4A));
    add_ln1251_fu_4504_p2 <= std_logic_vector(unsigned(zext_ln1251_fu_4501_p1) + unsigned(ap_const_lv3_1));
    add_ln1254_1_fu_5488_p2 <= std_logic_vector(signed(ap_const_lv3_7) + signed(zext_ln1251_reg_6780));
    add_ln1254_2_fu_5505_p2 <= std_logic_vector(unsigned(sub_ln1254_reg_5813) + unsigned(zext_ln1254_2_fu_5501_p1));
    add_ln1254_3_fu_5542_p2 <= std_logic_vector(unsigned(zext_ln1254_reg_5801) + unsigned(zext_ln1254_4_fu_5538_p1));
    add_ln1254_4_fu_5552_p2 <= std_logic_vector(unsigned(tmp_25_cast_reg_7719) + unsigned(zext_ln1254_3_fu_5534_p1));
    add_ln1254_fu_5477_p2 <= std_logic_vector(unsigned(ap_const_lv3_2) + unsigned(zext_ln1251_reg_6780));
    add_ln1263_1_fu_5581_p2 <= std_logic_vector(unsigned(zext_ln1254_1_reg_5806) + unsigned(zext_ln1263_fu_5577_p1));
    add_ln1263_fu_5557_p2 <= std_logic_vector(unsigned(zext_ln1250_cast_reg_5858) + unsigned(sub_ln1254_reg_5813));
    add_ln1265_1_fu_5625_p2 <= std_logic_vector(unsigned(zext_ln1254_1_reg_5806) + unsigned(zext_ln1265_fu_5621_p1));
    add_ln1265_fu_5591_p2 <= std_logic_vector(unsigned(zext_ln1251_1_cast_reg_6791) + unsigned(sub_ln1254_reg_5813));
    add_ln1269_1_fu_5662_p2 <= std_logic_vector(unsigned(zext_ln1254_1_reg_5806) + unsigned(zext_ln1269_1_fu_5658_p1));
    add_ln1269_fu_5702_p2 <= std_logic_vector(unsigned(zext_ln1268_reg_7783) + unsigned(view3Output_0_rec_reg_3004));
    add_ln1273_1_fu_5728_p2 <= std_logic_vector(unsigned(view3Output_0_rec_reg_3004) + unsigned(zext_ln1273_fu_5724_p1));
    add_ln1273_fu_5685_p2 <= std_logic_vector(unsigned(zext_ln1253_reg_7724) + unsigned(sub_ln1254_reg_5813));
    add_ln1275_fu_5739_p2 <= std_logic_vector(unsigned(view3Output_0_rec_reg_3004) + unsigned(ap_const_lv10_4));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state100 <= ap_CS_fsm(99);
    ap_CS_fsm_state101 <= ap_CS_fsm(100);
    ap_CS_fsm_state102 <= ap_CS_fsm(101);
    ap_CS_fsm_state103 <= ap_CS_fsm(102);
    ap_CS_fsm_state104 <= ap_CS_fsm(103);
    ap_CS_fsm_state105 <= ap_CS_fsm(104);
    ap_CS_fsm_state106 <= ap_CS_fsm(105);
    ap_CS_fsm_state107 <= ap_CS_fsm(106);
    ap_CS_fsm_state108 <= ap_CS_fsm(107);
    ap_CS_fsm_state109 <= ap_CS_fsm(108);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state110 <= ap_CS_fsm(109);
    ap_CS_fsm_state111 <= ap_CS_fsm(110);
    ap_CS_fsm_state112 <= ap_CS_fsm(111);
    ap_CS_fsm_state113 <= ap_CS_fsm(112);
    ap_CS_fsm_state114 <= ap_CS_fsm(113);
    ap_CS_fsm_state115 <= ap_CS_fsm(114);
    ap_CS_fsm_state116 <= ap_CS_fsm(115);
    ap_CS_fsm_state117 <= ap_CS_fsm(116);
    ap_CS_fsm_state118 <= ap_CS_fsm(117);
    ap_CS_fsm_state119 <= ap_CS_fsm(118);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state120 <= ap_CS_fsm(119);
    ap_CS_fsm_state121 <= ap_CS_fsm(120);
    ap_CS_fsm_state122 <= ap_CS_fsm(121);
    ap_CS_fsm_state123 <= ap_CS_fsm(122);
    ap_CS_fsm_state124 <= ap_CS_fsm(123);
    ap_CS_fsm_state125 <= ap_CS_fsm(124);
    ap_CS_fsm_state126 <= ap_CS_fsm(125);
    ap_CS_fsm_state127 <= ap_CS_fsm(126);
    ap_CS_fsm_state128 <= ap_CS_fsm(127);
    ap_CS_fsm_state129 <= ap_CS_fsm(128);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state130 <= ap_CS_fsm(129);
    ap_CS_fsm_state131 <= ap_CS_fsm(130);
    ap_CS_fsm_state132 <= ap_CS_fsm(131);
    ap_CS_fsm_state133 <= ap_CS_fsm(132);
    ap_CS_fsm_state134 <= ap_CS_fsm(133);
    ap_CS_fsm_state135 <= ap_CS_fsm(134);
    ap_CS_fsm_state136 <= ap_CS_fsm(135);
    ap_CS_fsm_state137 <= ap_CS_fsm(136);
    ap_CS_fsm_state138 <= ap_CS_fsm(137);
    ap_CS_fsm_state139 <= ap_CS_fsm(138);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state140 <= ap_CS_fsm(139);
    ap_CS_fsm_state141 <= ap_CS_fsm(140);
    ap_CS_fsm_state142 <= ap_CS_fsm(141);
    ap_CS_fsm_state143 <= ap_CS_fsm(142);
    ap_CS_fsm_state144 <= ap_CS_fsm(143);
    ap_CS_fsm_state145 <= ap_CS_fsm(144);
    ap_CS_fsm_state146 <= ap_CS_fsm(145);
    ap_CS_fsm_state147 <= ap_CS_fsm(146);
    ap_CS_fsm_state148 <= ap_CS_fsm(147);
    ap_CS_fsm_state149 <= ap_CS_fsm(148);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40);
    ap_CS_fsm_state42 <= ap_CS_fsm(41);
    ap_CS_fsm_state43 <= ap_CS_fsm(42);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_CS_fsm_state45 <= ap_CS_fsm(44);
    ap_CS_fsm_state46 <= ap_CS_fsm(45);
    ap_CS_fsm_state47 <= ap_CS_fsm(46);
    ap_CS_fsm_state48 <= ap_CS_fsm(47);
    ap_CS_fsm_state49 <= ap_CS_fsm(48);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state50 <= ap_CS_fsm(49);
    ap_CS_fsm_state51 <= ap_CS_fsm(50);
    ap_CS_fsm_state52 <= ap_CS_fsm(51);
    ap_CS_fsm_state53 <= ap_CS_fsm(52);
    ap_CS_fsm_state54 <= ap_CS_fsm(53);
    ap_CS_fsm_state55 <= ap_CS_fsm(54);
    ap_CS_fsm_state56 <= ap_CS_fsm(55);
    ap_CS_fsm_state57 <= ap_CS_fsm(56);
    ap_CS_fsm_state58 <= ap_CS_fsm(57);
    ap_CS_fsm_state59 <= ap_CS_fsm(58);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state60 <= ap_CS_fsm(59);
    ap_CS_fsm_state61 <= ap_CS_fsm(60);
    ap_CS_fsm_state62 <= ap_CS_fsm(61);
    ap_CS_fsm_state63 <= ap_CS_fsm(62);
    ap_CS_fsm_state64 <= ap_CS_fsm(63);
    ap_CS_fsm_state65 <= ap_CS_fsm(64);
    ap_CS_fsm_state66 <= ap_CS_fsm(65);
    ap_CS_fsm_state67 <= ap_CS_fsm(66);
    ap_CS_fsm_state68 <= ap_CS_fsm(67);
    ap_CS_fsm_state69 <= ap_CS_fsm(68);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state70 <= ap_CS_fsm(69);
    ap_CS_fsm_state71 <= ap_CS_fsm(70);
    ap_CS_fsm_state72 <= ap_CS_fsm(71);
    ap_CS_fsm_state73 <= ap_CS_fsm(72);
    ap_CS_fsm_state74 <= ap_CS_fsm(73);
    ap_CS_fsm_state75 <= ap_CS_fsm(74);
    ap_CS_fsm_state76 <= ap_CS_fsm(75);
    ap_CS_fsm_state77 <= ap_CS_fsm(76);
    ap_CS_fsm_state78 <= ap_CS_fsm(77);
    ap_CS_fsm_state79 <= ap_CS_fsm(78);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state80 <= ap_CS_fsm(79);
    ap_CS_fsm_state81 <= ap_CS_fsm(80);
    ap_CS_fsm_state82 <= ap_CS_fsm(81);
    ap_CS_fsm_state83 <= ap_CS_fsm(82);
    ap_CS_fsm_state84 <= ap_CS_fsm(83);
    ap_CS_fsm_state85 <= ap_CS_fsm(84);
    ap_CS_fsm_state86 <= ap_CS_fsm(85);
    ap_CS_fsm_state87 <= ap_CS_fsm(86);
    ap_CS_fsm_state88 <= ap_CS_fsm(87);
    ap_CS_fsm_state89 <= ap_CS_fsm(88);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_CS_fsm_state90 <= ap_CS_fsm(89);
    ap_CS_fsm_state91 <= ap_CS_fsm(90);
    ap_CS_fsm_state92 <= ap_CS_fsm(91);
    ap_CS_fsm_state93 <= ap_CS_fsm(92);
    ap_CS_fsm_state94 <= ap_CS_fsm(93);
    ap_CS_fsm_state95 <= ap_CS_fsm(94);
    ap_CS_fsm_state96 <= ap_CS_fsm(95);
    ap_CS_fsm_state97 <= ap_CS_fsm(96);
    ap_CS_fsm_state98 <= ap_CS_fsm(97);
    ap_CS_fsm_state99 <= ap_CS_fsm(98);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state148, icmp_ln1286_fu_5759_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state148) and (icmp_ln1286_fu_5759_p2 = ap_const_lv1_1)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state148, icmp_ln1286_fu_5759_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state148) and (icmp_ln1286_fu_5759_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_assign_proc : process(ap_CS_fsm_state148, icmp_ln1286_fu_5759_p2, status_0_reg_3186, ap_return_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state148) and (icmp_ln1286_fu_5759_p2 = ap_const_lv1_1))) then 
            ap_return <= status_0_reg_3186;
        else 
            ap_return <= ap_return_preg;
        end if; 
    end process;


    as_hashes_address0_assign_proc : process(ap_CS_fsm_state60, ap_CS_fsm_state126, ap_CS_fsm_state70, ap_CS_fsm_state136, grp_H3_2_fu_3237_as_hashes_address0, grp_KeccakWidth1600_Spon_fu_3258_data_address0, grp_KeccakWidth1600_Spon_6_fu_3286_data_address0, ap_CS_fsm_state138, ap_CS_fsm_state147, ap_CS_fsm_state56, ap_CS_fsm_state122, zext_ln1254_6_fu_5561_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state138)) then 
            as_hashes_address0 <= zext_ln1254_6_fu_5561_p1(15 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state126) or (ap_const_logic_1 = ap_CS_fsm_state60))) then 
            as_hashes_address0 <= grp_KeccakWidth1600_Spon_6_fu_3286_data_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state122) or (ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state136) or (ap_const_logic_1 = ap_CS_fsm_state70))) then 
            as_hashes_address0 <= grp_KeccakWidth1600_Spon_fu_3258_data_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state147)) then 
            as_hashes_address0 <= grp_H3_2_fu_3237_as_hashes_address0;
        else 
            as_hashes_address0 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    as_hashes_ce0_assign_proc : process(ap_CS_fsm_state60, ap_CS_fsm_state126, ap_CS_fsm_state70, ap_CS_fsm_state136, grp_H3_2_fu_3237_as_hashes_ce0, grp_KeccakWidth1600_Spon_fu_3258_data_ce0, grp_KeccakWidth1600_Spon_6_fu_3286_data_ce0, ap_CS_fsm_state138, ap_CS_fsm_state147, ap_CS_fsm_state56, ap_CS_fsm_state122)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state138)) then 
            as_hashes_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state126) or (ap_const_logic_1 = ap_CS_fsm_state60))) then 
            as_hashes_ce0 <= grp_KeccakWidth1600_Spon_6_fu_3286_data_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state122) or (ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state136) or (ap_const_logic_1 = ap_CS_fsm_state70))) then 
            as_hashes_ce0 <= grp_KeccakWidth1600_Spon_fu_3258_data_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state147)) then 
            as_hashes_ce0 <= grp_H3_2_fu_3237_as_hashes_ce0;
        else 
            as_hashes_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    as_hashes_d0_assign_proc : process(sig_0_proofs_view3C_q0, ap_CS_fsm_state70, ap_CS_fsm_state136, grp_KeccakWidth1600_Spon_fu_3258_data_d0, ap_CS_fsm_state138, ap_CS_fsm_state56, ap_CS_fsm_state122)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state138)) then 
            as_hashes_d0 <= sig_0_proofs_view3C_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state122) or (ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state136) or (ap_const_logic_1 = ap_CS_fsm_state70))) then 
            as_hashes_d0 <= grp_KeccakWidth1600_Spon_fu_3258_data_d0;
        else 
            as_hashes_d0 <= "XXXXXXXX";
        end if; 
    end process;


    as_hashes_we0_assign_proc : process(ap_CS_fsm_state70, ap_CS_fsm_state136, grp_KeccakWidth1600_Spon_fu_3258_data_we0, ap_CS_fsm_state138, ap_CS_fsm_state56, ap_CS_fsm_state122)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state138)) then 
            as_hashes_we0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state122) or (ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state136) or (ap_const_logic_1 = ap_CS_fsm_state70))) then 
            as_hashes_we0 <= grp_KeccakWidth1600_Spon_fu_3258_data_we0;
        else 
            as_hashes_we0 <= ap_const_logic_0;
        end if; 
    end process;

    bitNumber_assign_fu_3477_p3 <= (trunc_ln386_fu_3473_p1 & ap_const_lv1_0);
    challenge_fu_3554_p3 <= (trunc_ln386_2_reg_5840 & trunc_ln54_1_reg_5845);

    computed_challengebi_address0_assign_proc : process(ap_CS_fsm_state148, grp_H3_2_fu_3237_challengeBits_address0, ap_CS_fsm_state147, zext_ln1287_fu_5771_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state148)) then 
            computed_challengebi_address0 <= zext_ln1287_fu_5771_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state147)) then 
            computed_challengebi_address0 <= grp_H3_2_fu_3237_challengeBits_address0;
        else 
            computed_challengebi_address0 <= "XXXXXX";
        end if; 
    end process;


    computed_challengebi_ce0_assign_proc : process(ap_CS_fsm_state148, grp_H3_2_fu_3237_challengeBits_ce0, ap_CS_fsm_state147)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state148)) then 
            computed_challengebi_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state147)) then 
            computed_challengebi_ce0 <= grp_H3_2_fu_3237_challengeBits_ce0;
        else 
            computed_challengebi_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    computed_challengebi_we0_assign_proc : process(grp_H3_2_fu_3237_challengeBits_we0, ap_CS_fsm_state147)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state147)) then 
            computed_challengebi_we0 <= grp_H3_2_fu_3237_challengeBits_we0;
        else 
            computed_challengebi_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ctx_sponge_state_2_address0_assign_proc : process(ap_CS_fsm_state116, ap_CS_fsm_state124, ap_CS_fsm_state118, ap_CS_fsm_state120, ap_CS_fsm_state134, ap_CS_fsm_state126, ap_CS_fsm_state128, ap_CS_fsm_state132, ap_CS_fsm_state130, ap_CS_fsm_state136, grp_KeccakWidth1600_Spon_fu_3258_instance_state_address0, grp_HashUpdate_2_1_fu_3273_ctx_sponge_state_address0, grp_KeccakWidth1600_Spon_6_fu_3286_instance_state_address0, grp_KeccakWidth1600_Spon_5_fu_3300_instance_state_address0, grp_KeccakWidth1600_Spon_11_fu_3315_instance_state_address0, grp_HashInit_fu_3328_ctx_sponge_state_address0, grp_HashFinal_fu_3340_ctx_sponge_state_address0, ap_CS_fsm_state122)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state134) or (ap_const_logic_1 = ap_CS_fsm_state120))) then 
            ctx_sponge_state_2_address0 <= grp_HashFinal_fu_3340_ctx_sponge_state_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state124) or (ap_const_logic_1 = ap_CS_fsm_state116))) then 
            ctx_sponge_state_2_address0 <= grp_HashInit_fu_3328_ctx_sponge_state_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state130)) then 
            ctx_sponge_state_2_address0 <= grp_KeccakWidth1600_Spon_11_fu_3315_instance_state_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state118)) then 
            ctx_sponge_state_2_address0 <= grp_KeccakWidth1600_Spon_5_fu_3300_instance_state_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state126)) then 
            ctx_sponge_state_2_address0 <= grp_KeccakWidth1600_Spon_6_fu_3286_instance_state_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state132) or (ap_const_logic_1 = ap_CS_fsm_state128))) then 
            ctx_sponge_state_2_address0 <= grp_HashUpdate_2_1_fu_3273_ctx_sponge_state_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state122) or (ap_const_logic_1 = ap_CS_fsm_state136))) then 
            ctx_sponge_state_2_address0 <= grp_KeccakWidth1600_Spon_fu_3258_instance_state_address0;
        else 
            ctx_sponge_state_2_address0 <= "XXXXXXXX";
        end if; 
    end process;


    ctx_sponge_state_2_ce0_assign_proc : process(ap_CS_fsm_state116, ap_CS_fsm_state124, ap_CS_fsm_state118, ap_CS_fsm_state120, ap_CS_fsm_state134, ap_CS_fsm_state126, ap_CS_fsm_state128, ap_CS_fsm_state132, ap_CS_fsm_state130, ap_CS_fsm_state136, grp_KeccakWidth1600_Spon_fu_3258_instance_state_ce0, grp_HashUpdate_2_1_fu_3273_ctx_sponge_state_ce0, grp_KeccakWidth1600_Spon_6_fu_3286_instance_state_ce0, grp_KeccakWidth1600_Spon_5_fu_3300_instance_state_ce0, grp_KeccakWidth1600_Spon_11_fu_3315_instance_state_ce0, grp_HashInit_fu_3328_ctx_sponge_state_ce0, grp_HashFinal_fu_3340_ctx_sponge_state_ce0, ap_CS_fsm_state122)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state134) or (ap_const_logic_1 = ap_CS_fsm_state120))) then 
            ctx_sponge_state_2_ce0 <= grp_HashFinal_fu_3340_ctx_sponge_state_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state124) or (ap_const_logic_1 = ap_CS_fsm_state116))) then 
            ctx_sponge_state_2_ce0 <= grp_HashInit_fu_3328_ctx_sponge_state_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state130)) then 
            ctx_sponge_state_2_ce0 <= grp_KeccakWidth1600_Spon_11_fu_3315_instance_state_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state118)) then 
            ctx_sponge_state_2_ce0 <= grp_KeccakWidth1600_Spon_5_fu_3300_instance_state_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state126)) then 
            ctx_sponge_state_2_ce0 <= grp_KeccakWidth1600_Spon_6_fu_3286_instance_state_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state132) or (ap_const_logic_1 = ap_CS_fsm_state128))) then 
            ctx_sponge_state_2_ce0 <= grp_HashUpdate_2_1_fu_3273_ctx_sponge_state_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state122) or (ap_const_logic_1 = ap_CS_fsm_state136))) then 
            ctx_sponge_state_2_ce0 <= grp_KeccakWidth1600_Spon_fu_3258_instance_state_ce0;
        else 
            ctx_sponge_state_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ctx_sponge_state_2_d0_assign_proc : process(ap_CS_fsm_state116, ap_CS_fsm_state124, ap_CS_fsm_state118, ap_CS_fsm_state120, ap_CS_fsm_state134, ap_CS_fsm_state126, ap_CS_fsm_state128, ap_CS_fsm_state132, ap_CS_fsm_state130, ap_CS_fsm_state136, grp_KeccakWidth1600_Spon_fu_3258_instance_state_d0, grp_HashUpdate_2_1_fu_3273_ctx_sponge_state_d0, grp_KeccakWidth1600_Spon_6_fu_3286_instance_state_d0, grp_KeccakWidth1600_Spon_5_fu_3300_instance_state_d0, grp_KeccakWidth1600_Spon_11_fu_3315_instance_state_d0, grp_HashInit_fu_3328_ctx_sponge_state_d0, grp_HashFinal_fu_3340_ctx_sponge_state_d0, ap_CS_fsm_state122)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state134) or (ap_const_logic_1 = ap_CS_fsm_state120))) then 
            ctx_sponge_state_2_d0 <= grp_HashFinal_fu_3340_ctx_sponge_state_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state124) or (ap_const_logic_1 = ap_CS_fsm_state116))) then 
            ctx_sponge_state_2_d0 <= grp_HashInit_fu_3328_ctx_sponge_state_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state130)) then 
            ctx_sponge_state_2_d0 <= grp_KeccakWidth1600_Spon_11_fu_3315_instance_state_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state118)) then 
            ctx_sponge_state_2_d0 <= grp_KeccakWidth1600_Spon_5_fu_3300_instance_state_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state126)) then 
            ctx_sponge_state_2_d0 <= grp_KeccakWidth1600_Spon_6_fu_3286_instance_state_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state132) or (ap_const_logic_1 = ap_CS_fsm_state128))) then 
            ctx_sponge_state_2_d0 <= grp_HashUpdate_2_1_fu_3273_ctx_sponge_state_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state122) or (ap_const_logic_1 = ap_CS_fsm_state136))) then 
            ctx_sponge_state_2_d0 <= grp_KeccakWidth1600_Spon_fu_3258_instance_state_d0;
        else 
            ctx_sponge_state_2_d0 <= "XXXXXXXX";
        end if; 
    end process;


    ctx_sponge_state_2_we0_assign_proc : process(ap_CS_fsm_state116, ap_CS_fsm_state124, ap_CS_fsm_state118, ap_CS_fsm_state120, ap_CS_fsm_state134, ap_CS_fsm_state126, ap_CS_fsm_state128, ap_CS_fsm_state132, ap_CS_fsm_state130, ap_CS_fsm_state136, grp_KeccakWidth1600_Spon_fu_3258_instance_state_we0, grp_HashUpdate_2_1_fu_3273_ctx_sponge_state_we0, grp_KeccakWidth1600_Spon_6_fu_3286_instance_state_we0, grp_KeccakWidth1600_Spon_5_fu_3300_instance_state_we0, grp_KeccakWidth1600_Spon_11_fu_3315_instance_state_we0, grp_HashInit_fu_3328_ctx_sponge_state_we0, grp_HashFinal_fu_3340_ctx_sponge_state_we0, ap_CS_fsm_state122)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state134) or (ap_const_logic_1 = ap_CS_fsm_state120))) then 
            ctx_sponge_state_2_we0 <= grp_HashFinal_fu_3340_ctx_sponge_state_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state124) or (ap_const_logic_1 = ap_CS_fsm_state116))) then 
            ctx_sponge_state_2_we0 <= grp_HashInit_fu_3328_ctx_sponge_state_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state130)) then 
            ctx_sponge_state_2_we0 <= grp_KeccakWidth1600_Spon_11_fu_3315_instance_state_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state118)) then 
            ctx_sponge_state_2_we0 <= grp_KeccakWidth1600_Spon_5_fu_3300_instance_state_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state126)) then 
            ctx_sponge_state_2_we0 <= grp_KeccakWidth1600_Spon_6_fu_3286_instance_state_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state132) or (ap_const_logic_1 = ap_CS_fsm_state128))) then 
            ctx_sponge_state_2_we0 <= grp_HashUpdate_2_1_fu_3273_ctx_sponge_state_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state122) or (ap_const_logic_1 = ap_CS_fsm_state136))) then 
            ctx_sponge_state_2_we0 <= grp_KeccakWidth1600_Spon_fu_3258_instance_state_we0;
        else 
            ctx_sponge_state_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ctx_sponge_state_address0_assign_proc : process(ap_CS_fsm_state50, ap_CS_fsm_state58, ap_CS_fsm_state52, ap_CS_fsm_state54, ap_CS_fsm_state68, ap_CS_fsm_state60, ap_CS_fsm_state62, ap_CS_fsm_state66, ap_CS_fsm_state64, ap_CS_fsm_state70, grp_KeccakWidth1600_Spon_fu_3258_instance_state_address0, grp_HashUpdate_2_1_fu_3273_ctx_sponge_state_address0, grp_KeccakWidth1600_Spon_6_fu_3286_instance_state_address0, grp_KeccakWidth1600_Spon_5_fu_3300_instance_state_address0, grp_KeccakWidth1600_Spon_11_fu_3315_instance_state_address0, grp_HashInit_fu_3328_ctx_sponge_state_address0, grp_HashFinal_fu_3340_ctx_sponge_state_address0, ap_CS_fsm_state56)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state54))) then 
            ctx_sponge_state_address0 <= grp_HashFinal_fu_3340_ctx_sponge_state_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state50))) then 
            ctx_sponge_state_address0 <= grp_HashInit_fu_3328_ctx_sponge_state_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            ctx_sponge_state_address0 <= grp_KeccakWidth1600_Spon_11_fu_3315_instance_state_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            ctx_sponge_state_address0 <= grp_KeccakWidth1600_Spon_5_fu_3300_instance_state_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            ctx_sponge_state_address0 <= grp_KeccakWidth1600_Spon_6_fu_3286_instance_state_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state66) or (ap_const_logic_1 = ap_CS_fsm_state62))) then 
            ctx_sponge_state_address0 <= grp_HashUpdate_2_1_fu_3273_ctx_sponge_state_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state70))) then 
            ctx_sponge_state_address0 <= grp_KeccakWidth1600_Spon_fu_3258_instance_state_address0;
        else 
            ctx_sponge_state_address0 <= "XXXXXXXX";
        end if; 
    end process;


    ctx_sponge_state_ce0_assign_proc : process(ap_CS_fsm_state50, ap_CS_fsm_state58, ap_CS_fsm_state52, ap_CS_fsm_state54, ap_CS_fsm_state68, ap_CS_fsm_state60, ap_CS_fsm_state62, ap_CS_fsm_state66, ap_CS_fsm_state64, ap_CS_fsm_state70, grp_KeccakWidth1600_Spon_fu_3258_instance_state_ce0, grp_HashUpdate_2_1_fu_3273_ctx_sponge_state_ce0, grp_KeccakWidth1600_Spon_6_fu_3286_instance_state_ce0, grp_KeccakWidth1600_Spon_5_fu_3300_instance_state_ce0, grp_KeccakWidth1600_Spon_11_fu_3315_instance_state_ce0, grp_HashInit_fu_3328_ctx_sponge_state_ce0, grp_HashFinal_fu_3340_ctx_sponge_state_ce0, ap_CS_fsm_state56)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state54))) then 
            ctx_sponge_state_ce0 <= grp_HashFinal_fu_3340_ctx_sponge_state_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state50))) then 
            ctx_sponge_state_ce0 <= grp_HashInit_fu_3328_ctx_sponge_state_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            ctx_sponge_state_ce0 <= grp_KeccakWidth1600_Spon_11_fu_3315_instance_state_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            ctx_sponge_state_ce0 <= grp_KeccakWidth1600_Spon_5_fu_3300_instance_state_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            ctx_sponge_state_ce0 <= grp_KeccakWidth1600_Spon_6_fu_3286_instance_state_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state66) or (ap_const_logic_1 = ap_CS_fsm_state62))) then 
            ctx_sponge_state_ce0 <= grp_HashUpdate_2_1_fu_3273_ctx_sponge_state_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state70))) then 
            ctx_sponge_state_ce0 <= grp_KeccakWidth1600_Spon_fu_3258_instance_state_ce0;
        else 
            ctx_sponge_state_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ctx_sponge_state_d0_assign_proc : process(ap_CS_fsm_state50, ap_CS_fsm_state58, ap_CS_fsm_state52, ap_CS_fsm_state54, ap_CS_fsm_state68, ap_CS_fsm_state60, ap_CS_fsm_state62, ap_CS_fsm_state66, ap_CS_fsm_state64, ap_CS_fsm_state70, grp_KeccakWidth1600_Spon_fu_3258_instance_state_d0, grp_HashUpdate_2_1_fu_3273_ctx_sponge_state_d0, grp_KeccakWidth1600_Spon_6_fu_3286_instance_state_d0, grp_KeccakWidth1600_Spon_5_fu_3300_instance_state_d0, grp_KeccakWidth1600_Spon_11_fu_3315_instance_state_d0, grp_HashInit_fu_3328_ctx_sponge_state_d0, grp_HashFinal_fu_3340_ctx_sponge_state_d0, ap_CS_fsm_state56)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state54))) then 
            ctx_sponge_state_d0 <= grp_HashFinal_fu_3340_ctx_sponge_state_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state50))) then 
            ctx_sponge_state_d0 <= grp_HashInit_fu_3328_ctx_sponge_state_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            ctx_sponge_state_d0 <= grp_KeccakWidth1600_Spon_11_fu_3315_instance_state_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            ctx_sponge_state_d0 <= grp_KeccakWidth1600_Spon_5_fu_3300_instance_state_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            ctx_sponge_state_d0 <= grp_KeccakWidth1600_Spon_6_fu_3286_instance_state_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state66) or (ap_const_logic_1 = ap_CS_fsm_state62))) then 
            ctx_sponge_state_d0 <= grp_HashUpdate_2_1_fu_3273_ctx_sponge_state_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state70))) then 
            ctx_sponge_state_d0 <= grp_KeccakWidth1600_Spon_fu_3258_instance_state_d0;
        else 
            ctx_sponge_state_d0 <= "XXXXXXXX";
        end if; 
    end process;


    ctx_sponge_state_we0_assign_proc : process(ap_CS_fsm_state50, ap_CS_fsm_state58, ap_CS_fsm_state52, ap_CS_fsm_state54, ap_CS_fsm_state68, ap_CS_fsm_state60, ap_CS_fsm_state62, ap_CS_fsm_state66, ap_CS_fsm_state64, ap_CS_fsm_state70, grp_KeccakWidth1600_Spon_fu_3258_instance_state_we0, grp_HashUpdate_2_1_fu_3273_ctx_sponge_state_we0, grp_KeccakWidth1600_Spon_6_fu_3286_instance_state_we0, grp_KeccakWidth1600_Spon_5_fu_3300_instance_state_we0, grp_KeccakWidth1600_Spon_11_fu_3315_instance_state_we0, grp_HashInit_fu_3328_ctx_sponge_state_we0, grp_HashFinal_fu_3340_ctx_sponge_state_we0, ap_CS_fsm_state56)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state54))) then 
            ctx_sponge_state_we0 <= grp_HashFinal_fu_3340_ctx_sponge_state_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state50))) then 
            ctx_sponge_state_we0 <= grp_HashInit_fu_3328_ctx_sponge_state_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            ctx_sponge_state_we0 <= grp_KeccakWidth1600_Spon_11_fu_3315_instance_state_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            ctx_sponge_state_we0 <= grp_KeccakWidth1600_Spon_5_fu_3300_instance_state_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            ctx_sponge_state_we0 <= grp_KeccakWidth1600_Spon_6_fu_3286_instance_state_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state66) or (ap_const_logic_1 = ap_CS_fsm_state62))) then 
            ctx_sponge_state_we0 <= grp_HashUpdate_2_1_fu_3273_ctx_sponge_state_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state70))) then 
            ctx_sponge_state_we0 <= grp_KeccakWidth1600_Spon_fu_3258_instance_state_we0;
        else 
            ctx_sponge_state_we0 <= ap_const_logic_0;
        end if; 
    end process;


    data_assign_1_address0_assign_proc : process(ap_CS_fsm_state64, phi_mul_cast_reg_5918, p_cast167_reg_5928, ap_CS_fsm_state9, ap_CS_fsm_state10, p_cast164_reg_5953, ap_CS_fsm_state11, p_cast162_reg_5973, ap_CS_fsm_state12, p_cast160_reg_5993, ap_CS_fsm_state13, p_cast158_reg_6013, ap_CS_fsm_state14, p_cast156_reg_6033, ap_CS_fsm_state15, p_cast154_reg_6053, ap_CS_fsm_state16, p_cast152_reg_6073, ap_CS_fsm_state17, p_cast150_reg_6093, ap_CS_fsm_state18, p_cast148_reg_6113, ap_CS_fsm_state19, p_cast146_reg_6133, ap_CS_fsm_state20, p_cast144_reg_6153, ap_CS_fsm_state21, p_cast142_reg_6173, ap_CS_fsm_state22, p_cast140_reg_6193, ap_CS_fsm_state23, p_cast138_reg_6213, ap_CS_fsm_state24, p_cast136_reg_6233, ap_CS_fsm_state25, p_cast134_reg_6302, ap_CS_fsm_state26, p_cast132_reg_6322, ap_CS_fsm_state27, p_cast130_reg_6342, ap_CS_fsm_state28, p_cast128_reg_6362, ap_CS_fsm_state29, p_cast126_reg_6382, ap_CS_fsm_state30, p_cast124_reg_6402, ap_CS_fsm_state31, p_cast122_reg_6422, ap_CS_fsm_state32, p_cast120_reg_6442, ap_CS_fsm_state33, p_cast118_reg_6462, ap_CS_fsm_state34, p_cast116_reg_6482, ap_CS_fsm_state35, p_cast114_reg_6502, ap_CS_fsm_state36, p_cast112_reg_6522, ap_CS_fsm_state37, p_cast110_reg_6542, ap_CS_fsm_state38, p_cast108_reg_6562, ap_CS_fsm_state39, p_cast106_reg_6582, ap_CS_fsm_state40, p_cast104_reg_6602, ap_CS_fsm_state41, p_cast102_reg_6622, ap_CS_fsm_state42, p_cast100_reg_6642, ap_CS_fsm_state43, p_cast98_reg_6662, ap_CS_fsm_state44, p_cast96_reg_6682, ap_CS_fsm_state45, p_cast94_reg_6702, ap_CS_fsm_state46, grp_KeccakWidth1600_Spon_11_fu_3315_data_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            data_assign_1_address0 <= p_cast94_reg_6702(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            data_assign_1_address0 <= p_cast96_reg_6682(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            data_assign_1_address0 <= p_cast98_reg_6662(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            data_assign_1_address0 <= p_cast100_reg_6642(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            data_assign_1_address0 <= p_cast102_reg_6622(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            data_assign_1_address0 <= p_cast104_reg_6602(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            data_assign_1_address0 <= p_cast106_reg_6582(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            data_assign_1_address0 <= p_cast108_reg_6562(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            data_assign_1_address0 <= p_cast110_reg_6542(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            data_assign_1_address0 <= p_cast112_reg_6522(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            data_assign_1_address0 <= p_cast114_reg_6502(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            data_assign_1_address0 <= p_cast116_reg_6482(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            data_assign_1_address0 <= p_cast118_reg_6462(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            data_assign_1_address0 <= p_cast120_reg_6442(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            data_assign_1_address0 <= p_cast122_reg_6422(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            data_assign_1_address0 <= p_cast124_reg_6402(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            data_assign_1_address0 <= p_cast126_reg_6382(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            data_assign_1_address0 <= p_cast128_reg_6362(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            data_assign_1_address0 <= p_cast130_reg_6342(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            data_assign_1_address0 <= p_cast132_reg_6322(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            data_assign_1_address0 <= p_cast134_reg_6302(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            data_assign_1_address0 <= p_cast136_reg_6233(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            data_assign_1_address0 <= p_cast138_reg_6213(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            data_assign_1_address0 <= p_cast140_reg_6193(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            data_assign_1_address0 <= p_cast142_reg_6173(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            data_assign_1_address0 <= p_cast144_reg_6153(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            data_assign_1_address0 <= p_cast146_reg_6133(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            data_assign_1_address0 <= p_cast148_reg_6113(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            data_assign_1_address0 <= p_cast150_reg_6093(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            data_assign_1_address0 <= p_cast152_reg_6073(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            data_assign_1_address0 <= p_cast154_reg_6053(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            data_assign_1_address0 <= p_cast156_reg_6033(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            data_assign_1_address0 <= p_cast158_reg_6013(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            data_assign_1_address0 <= p_cast160_reg_5993(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            data_assign_1_address0 <= p_cast162_reg_5973(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            data_assign_1_address0 <= p_cast164_reg_5953(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            data_assign_1_address0 <= p_cast167_reg_5928(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            data_assign_1_address0 <= phi_mul_cast_reg_5918(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            data_assign_1_address0 <= grp_KeccakWidth1600_Spon_11_fu_3315_data_address0;
        else 
            data_assign_1_address0 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    data_assign_1_address1_assign_proc : process(p_cast166_reg_5933, p_cast165_reg_5948, ap_CS_fsm_state10, p_cast163_reg_5968, ap_CS_fsm_state11, p_cast161_reg_5988, ap_CS_fsm_state12, p_cast159_reg_6008, ap_CS_fsm_state13, p_cast157_reg_6028, ap_CS_fsm_state14, p_cast155_reg_6048, ap_CS_fsm_state15, p_cast153_reg_6068, ap_CS_fsm_state16, p_cast151_reg_6088, ap_CS_fsm_state17, p_cast149_reg_6108, ap_CS_fsm_state18, p_cast147_reg_6128, ap_CS_fsm_state19, p_cast145_reg_6148, ap_CS_fsm_state20, p_cast143_reg_6168, ap_CS_fsm_state21, p_cast141_reg_6188, ap_CS_fsm_state22, p_cast139_reg_6208, ap_CS_fsm_state23, p_cast137_reg_6228, ap_CS_fsm_state24, ap_CS_fsm_state25, p_cast135_reg_6297, p_cast133_reg_6317, ap_CS_fsm_state26, p_cast131_reg_6337, ap_CS_fsm_state27, p_cast129_reg_6357, ap_CS_fsm_state28, p_cast127_reg_6377, ap_CS_fsm_state29, p_cast125_reg_6397, ap_CS_fsm_state30, p_cast123_reg_6417, ap_CS_fsm_state31, p_cast121_reg_6437, ap_CS_fsm_state32, p_cast119_reg_6457, ap_CS_fsm_state33, p_cast117_reg_6477, ap_CS_fsm_state34, p_cast115_reg_6497, ap_CS_fsm_state35, p_cast113_reg_6517, ap_CS_fsm_state36, p_cast111_reg_6537, ap_CS_fsm_state37, p_cast109_reg_6557, ap_CS_fsm_state38, p_cast107_reg_6577, ap_CS_fsm_state39, p_cast105_reg_6597, ap_CS_fsm_state40, p_cast103_reg_6617, ap_CS_fsm_state41, p_cast101_reg_6637, ap_CS_fsm_state42, p_cast99_reg_6657, ap_CS_fsm_state43, p_cast97_reg_6677, ap_CS_fsm_state44, p_cast95_reg_6697, ap_CS_fsm_state45, ap_CS_fsm_state46)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            data_assign_1_address1 <= p_cast95_reg_6697(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            data_assign_1_address1 <= p_cast97_reg_6677(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            data_assign_1_address1 <= p_cast99_reg_6657(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            data_assign_1_address1 <= p_cast101_reg_6637(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            data_assign_1_address1 <= p_cast103_reg_6617(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            data_assign_1_address1 <= p_cast105_reg_6597(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            data_assign_1_address1 <= p_cast107_reg_6577(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            data_assign_1_address1 <= p_cast109_reg_6557(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            data_assign_1_address1 <= p_cast111_reg_6537(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            data_assign_1_address1 <= p_cast113_reg_6517(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            data_assign_1_address1 <= p_cast115_reg_6497(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            data_assign_1_address1 <= p_cast117_reg_6477(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            data_assign_1_address1 <= p_cast119_reg_6457(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            data_assign_1_address1 <= p_cast121_reg_6437(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            data_assign_1_address1 <= p_cast123_reg_6417(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            data_assign_1_address1 <= p_cast125_reg_6397(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            data_assign_1_address1 <= p_cast127_reg_6377(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            data_assign_1_address1 <= p_cast129_reg_6357(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            data_assign_1_address1 <= p_cast131_reg_6337(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            data_assign_1_address1 <= p_cast133_reg_6317(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            data_assign_1_address1 <= p_cast135_reg_6297(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            data_assign_1_address1 <= p_cast137_reg_6228(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            data_assign_1_address1 <= p_cast139_reg_6208(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            data_assign_1_address1 <= p_cast141_reg_6188(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            data_assign_1_address1 <= p_cast143_reg_6168(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            data_assign_1_address1 <= p_cast145_reg_6148(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            data_assign_1_address1 <= p_cast147_reg_6128(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            data_assign_1_address1 <= p_cast149_reg_6108(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            data_assign_1_address1 <= p_cast151_reg_6088(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            data_assign_1_address1 <= p_cast153_reg_6068(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            data_assign_1_address1 <= p_cast155_reg_6048(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            data_assign_1_address1 <= p_cast157_reg_6028(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            data_assign_1_address1 <= p_cast159_reg_6008(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            data_assign_1_address1 <= p_cast161_reg_5988(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            data_assign_1_address1 <= p_cast163_reg_5968(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            data_assign_1_address1 <= p_cast165_reg_5948(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            data_assign_1_address1 <= p_cast166_reg_5933(15 - 1 downto 0);
        else 
            data_assign_1_address1 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    data_assign_1_ce0_assign_proc : process(ap_CS_fsm_state64, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, grp_KeccakWidth1600_Spon_11_fu_3315_data_ce0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            data_assign_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            data_assign_1_ce0 <= grp_KeccakWidth1600_Spon_11_fu_3315_data_ce0;
        else 
            data_assign_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    data_assign_1_ce1_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            data_assign_1_ce1 <= ap_const_logic_1;
        else 
            data_assign_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    data_assign_1_we0_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            data_assign_1_we0 <= ap_const_logic_1;
        else 
            data_assign_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    data_assign_1_we1_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            data_assign_1_we1 <= ap_const_logic_1;
        else 
            data_assign_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    data_assign_2_address0_assign_proc : process(ap_CS_fsm_state130, phi_mul15_cast_reg_6851, p_cast92_reg_6861, ap_CS_fsm_state75, ap_CS_fsm_state76, p_cast89_reg_6886, ap_CS_fsm_state77, p_cast87_reg_6906, ap_CS_fsm_state78, p_cast85_reg_6926, ap_CS_fsm_state79, p_cast83_reg_6946, ap_CS_fsm_state80, p_cast81_reg_6966, ap_CS_fsm_state81, p_cast79_reg_6986, ap_CS_fsm_state82, p_cast77_reg_7006, ap_CS_fsm_state83, p_cast75_reg_7026, ap_CS_fsm_state84, p_cast73_reg_7046, ap_CS_fsm_state85, p_cast71_reg_7066, ap_CS_fsm_state86, p_cast69_reg_7086, ap_CS_fsm_state87, p_cast67_reg_7106, ap_CS_fsm_state88, p_cast65_reg_7126, ap_CS_fsm_state89, p_cast63_reg_7146, ap_CS_fsm_state90, p_cast61_reg_7166, ap_CS_fsm_state91, p_cast59_reg_7235, ap_CS_fsm_state92, p_cast57_reg_7255, ap_CS_fsm_state93, p_cast55_reg_7275, ap_CS_fsm_state94, p_cast53_reg_7295, ap_CS_fsm_state95, p_cast51_reg_7315, ap_CS_fsm_state96, p_cast49_reg_7335, ap_CS_fsm_state97, p_cast47_reg_7355, ap_CS_fsm_state98, p_cast45_reg_7375, ap_CS_fsm_state99, p_cast43_reg_7395, ap_CS_fsm_state100, p_cast41_reg_7415, ap_CS_fsm_state101, p_cast39_reg_7435, ap_CS_fsm_state102, p_cast37_reg_7455, ap_CS_fsm_state103, p_cast35_reg_7475, ap_CS_fsm_state104, p_cast33_reg_7495, ap_CS_fsm_state105, p_cast31_reg_7515, ap_CS_fsm_state106, p_cast29_reg_7535, ap_CS_fsm_state107, p_cast27_reg_7555, ap_CS_fsm_state108, p_cast25_reg_7575, ap_CS_fsm_state109, p_cast23_reg_7595, ap_CS_fsm_state110, p_cast21_reg_7615, ap_CS_fsm_state111, p_cast_reg_7635, ap_CS_fsm_state112, grp_KeccakWidth1600_Spon_11_fu_3315_data_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state112)) then 
            data_assign_2_address0 <= p_cast_reg_7635(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
            data_assign_2_address0 <= p_cast21_reg_7615(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state110)) then 
            data_assign_2_address0 <= p_cast23_reg_7595(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state109)) then 
            data_assign_2_address0 <= p_cast25_reg_7575(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state108)) then 
            data_assign_2_address0 <= p_cast27_reg_7555(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state107)) then 
            data_assign_2_address0 <= p_cast29_reg_7535(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state106)) then 
            data_assign_2_address0 <= p_cast31_reg_7515(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state105)) then 
            data_assign_2_address0 <= p_cast33_reg_7495(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state104)) then 
            data_assign_2_address0 <= p_cast35_reg_7475(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state103)) then 
            data_assign_2_address0 <= p_cast37_reg_7455(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state102)) then 
            data_assign_2_address0 <= p_cast39_reg_7435(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
            data_assign_2_address0 <= p_cast41_reg_7415(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state100)) then 
            data_assign_2_address0 <= p_cast43_reg_7395(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
            data_assign_2_address0 <= p_cast45_reg_7375(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state98)) then 
            data_assign_2_address0 <= p_cast47_reg_7355(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            data_assign_2_address0 <= p_cast49_reg_7335(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state96)) then 
            data_assign_2_address0 <= p_cast51_reg_7315(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state95)) then 
            data_assign_2_address0 <= p_cast53_reg_7295(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            data_assign_2_address0 <= p_cast55_reg_7275(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state93)) then 
            data_assign_2_address0 <= p_cast57_reg_7255(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            data_assign_2_address0 <= p_cast59_reg_7235(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state91)) then 
            data_assign_2_address0 <= p_cast61_reg_7166(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
            data_assign_2_address0 <= p_cast63_reg_7146(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
            data_assign_2_address0 <= p_cast65_reg_7126(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state88)) then 
            data_assign_2_address0 <= p_cast67_reg_7106(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
            data_assign_2_address0 <= p_cast69_reg_7086(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state86)) then 
            data_assign_2_address0 <= p_cast71_reg_7066(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            data_assign_2_address0 <= p_cast73_reg_7046(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            data_assign_2_address0 <= p_cast75_reg_7026(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
            data_assign_2_address0 <= p_cast77_reg_7006(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            data_assign_2_address0 <= p_cast79_reg_6986(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state81)) then 
            data_assign_2_address0 <= p_cast81_reg_6966(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            data_assign_2_address0 <= p_cast83_reg_6946(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state79)) then 
            data_assign_2_address0 <= p_cast85_reg_6926(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state78)) then 
            data_assign_2_address0 <= p_cast87_reg_6906(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            data_assign_2_address0 <= p_cast89_reg_6886(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            data_assign_2_address0 <= p_cast92_reg_6861(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            data_assign_2_address0 <= phi_mul15_cast_reg_6851(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state130)) then 
            data_assign_2_address0 <= grp_KeccakWidth1600_Spon_11_fu_3315_data_address0;
        else 
            data_assign_2_address0 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    data_assign_2_address1_assign_proc : process(p_cast91_reg_6866, p_cast90_reg_6881, ap_CS_fsm_state76, p_cast88_reg_6901, ap_CS_fsm_state77, p_cast86_reg_6921, ap_CS_fsm_state78, p_cast84_reg_6941, ap_CS_fsm_state79, p_cast82_reg_6961, ap_CS_fsm_state80, p_cast80_reg_6981, ap_CS_fsm_state81, p_cast78_reg_7001, ap_CS_fsm_state82, p_cast76_reg_7021, ap_CS_fsm_state83, p_cast74_reg_7041, ap_CS_fsm_state84, p_cast72_reg_7061, ap_CS_fsm_state85, p_cast70_reg_7081, ap_CS_fsm_state86, p_cast68_reg_7101, ap_CS_fsm_state87, p_cast66_reg_7121, ap_CS_fsm_state88, p_cast64_reg_7141, ap_CS_fsm_state89, p_cast62_reg_7161, ap_CS_fsm_state90, ap_CS_fsm_state91, p_cast60_reg_7230, p_cast58_reg_7250, ap_CS_fsm_state92, p_cast56_reg_7270, ap_CS_fsm_state93, p_cast54_reg_7290, ap_CS_fsm_state94, p_cast52_reg_7310, ap_CS_fsm_state95, p_cast50_reg_7330, ap_CS_fsm_state96, p_cast48_reg_7350, ap_CS_fsm_state97, p_cast46_reg_7370, ap_CS_fsm_state98, p_cast44_reg_7390, ap_CS_fsm_state99, p_cast42_reg_7410, ap_CS_fsm_state100, p_cast40_reg_7430, ap_CS_fsm_state101, p_cast38_reg_7450, ap_CS_fsm_state102, p_cast36_reg_7470, ap_CS_fsm_state103, p_cast34_reg_7490, ap_CS_fsm_state104, p_cast32_reg_7510, ap_CS_fsm_state105, p_cast30_reg_7530, ap_CS_fsm_state106, p_cast28_reg_7550, ap_CS_fsm_state107, p_cast26_reg_7570, ap_CS_fsm_state108, p_cast24_reg_7590, ap_CS_fsm_state109, p_cast22_reg_7610, ap_CS_fsm_state110, p_cast20_reg_7630, ap_CS_fsm_state111, ap_CS_fsm_state112)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state112)) then 
            data_assign_2_address1 <= p_cast20_reg_7630(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
            data_assign_2_address1 <= p_cast22_reg_7610(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state110)) then 
            data_assign_2_address1 <= p_cast24_reg_7590(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state109)) then 
            data_assign_2_address1 <= p_cast26_reg_7570(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state108)) then 
            data_assign_2_address1 <= p_cast28_reg_7550(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state107)) then 
            data_assign_2_address1 <= p_cast30_reg_7530(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state106)) then 
            data_assign_2_address1 <= p_cast32_reg_7510(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state105)) then 
            data_assign_2_address1 <= p_cast34_reg_7490(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state104)) then 
            data_assign_2_address1 <= p_cast36_reg_7470(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state103)) then 
            data_assign_2_address1 <= p_cast38_reg_7450(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state102)) then 
            data_assign_2_address1 <= p_cast40_reg_7430(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
            data_assign_2_address1 <= p_cast42_reg_7410(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state100)) then 
            data_assign_2_address1 <= p_cast44_reg_7390(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
            data_assign_2_address1 <= p_cast46_reg_7370(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state98)) then 
            data_assign_2_address1 <= p_cast48_reg_7350(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            data_assign_2_address1 <= p_cast50_reg_7330(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state96)) then 
            data_assign_2_address1 <= p_cast52_reg_7310(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state95)) then 
            data_assign_2_address1 <= p_cast54_reg_7290(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            data_assign_2_address1 <= p_cast56_reg_7270(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state93)) then 
            data_assign_2_address1 <= p_cast58_reg_7250(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            data_assign_2_address1 <= p_cast60_reg_7230(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state91)) then 
            data_assign_2_address1 <= p_cast62_reg_7161(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
            data_assign_2_address1 <= p_cast64_reg_7141(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
            data_assign_2_address1 <= p_cast66_reg_7121(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state88)) then 
            data_assign_2_address1 <= p_cast68_reg_7101(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
            data_assign_2_address1 <= p_cast70_reg_7081(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state86)) then 
            data_assign_2_address1 <= p_cast72_reg_7061(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            data_assign_2_address1 <= p_cast74_reg_7041(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            data_assign_2_address1 <= p_cast76_reg_7021(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
            data_assign_2_address1 <= p_cast78_reg_7001(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            data_assign_2_address1 <= p_cast80_reg_6981(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state81)) then 
            data_assign_2_address1 <= p_cast82_reg_6961(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            data_assign_2_address1 <= p_cast84_reg_6941(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state79)) then 
            data_assign_2_address1 <= p_cast86_reg_6921(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state78)) then 
            data_assign_2_address1 <= p_cast88_reg_6901(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            data_assign_2_address1 <= p_cast90_reg_6881(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            data_assign_2_address1 <= p_cast91_reg_6866(15 - 1 downto 0);
        else 
            data_assign_2_address1 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    data_assign_2_ce0_assign_proc : process(ap_CS_fsm_state130, ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state79, ap_CS_fsm_state80, ap_CS_fsm_state81, ap_CS_fsm_state82, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85, ap_CS_fsm_state86, ap_CS_fsm_state87, ap_CS_fsm_state88, ap_CS_fsm_state89, ap_CS_fsm_state90, ap_CS_fsm_state91, ap_CS_fsm_state92, ap_CS_fsm_state93, ap_CS_fsm_state94, ap_CS_fsm_state95, ap_CS_fsm_state96, ap_CS_fsm_state97, ap_CS_fsm_state98, ap_CS_fsm_state99, ap_CS_fsm_state100, ap_CS_fsm_state101, ap_CS_fsm_state102, ap_CS_fsm_state103, ap_CS_fsm_state104, ap_CS_fsm_state105, ap_CS_fsm_state106, ap_CS_fsm_state107, ap_CS_fsm_state108, ap_CS_fsm_state109, ap_CS_fsm_state110, ap_CS_fsm_state111, ap_CS_fsm_state112, grp_KeccakWidth1600_Spon_11_fu_3315_data_ce0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state112) or (ap_const_logic_1 = ap_CS_fsm_state111) or (ap_const_logic_1 = ap_CS_fsm_state110) or (ap_const_logic_1 = ap_CS_fsm_state109) or (ap_const_logic_1 = ap_CS_fsm_state108) or (ap_const_logic_1 = ap_CS_fsm_state107) or (ap_const_logic_1 = ap_CS_fsm_state106) or (ap_const_logic_1 = ap_CS_fsm_state105) or (ap_const_logic_1 = ap_CS_fsm_state104) or (ap_const_logic_1 = ap_CS_fsm_state103) or (ap_const_logic_1 = ap_CS_fsm_state102) or (ap_const_logic_1 = ap_CS_fsm_state101) or (ap_const_logic_1 = ap_CS_fsm_state100) or (ap_const_logic_1 = ap_CS_fsm_state99) or (ap_const_logic_1 = ap_CS_fsm_state98) or (ap_const_logic_1 = ap_CS_fsm_state97) or (ap_const_logic_1 = ap_CS_fsm_state96) or (ap_const_logic_1 = ap_CS_fsm_state95) or (ap_const_logic_1 = ap_CS_fsm_state94) or (ap_const_logic_1 = ap_CS_fsm_state93) or (ap_const_logic_1 = ap_CS_fsm_state92) or (ap_const_logic_1 = ap_CS_fsm_state91) or (ap_const_logic_1 = ap_CS_fsm_state90) or (ap_const_logic_1 = ap_CS_fsm_state89) or (ap_const_logic_1 = ap_CS_fsm_state88) or (ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state81) or (ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state75))) then 
            data_assign_2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state130)) then 
            data_assign_2_ce0 <= grp_KeccakWidth1600_Spon_11_fu_3315_data_ce0;
        else 
            data_assign_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    data_assign_2_ce1_assign_proc : process(ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state79, ap_CS_fsm_state80, ap_CS_fsm_state81, ap_CS_fsm_state82, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85, ap_CS_fsm_state86, ap_CS_fsm_state87, ap_CS_fsm_state88, ap_CS_fsm_state89, ap_CS_fsm_state90, ap_CS_fsm_state91, ap_CS_fsm_state92, ap_CS_fsm_state93, ap_CS_fsm_state94, ap_CS_fsm_state95, ap_CS_fsm_state96, ap_CS_fsm_state97, ap_CS_fsm_state98, ap_CS_fsm_state99, ap_CS_fsm_state100, ap_CS_fsm_state101, ap_CS_fsm_state102, ap_CS_fsm_state103, ap_CS_fsm_state104, ap_CS_fsm_state105, ap_CS_fsm_state106, ap_CS_fsm_state107, ap_CS_fsm_state108, ap_CS_fsm_state109, ap_CS_fsm_state110, ap_CS_fsm_state111, ap_CS_fsm_state112)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state112) or (ap_const_logic_1 = ap_CS_fsm_state111) or (ap_const_logic_1 = ap_CS_fsm_state110) or (ap_const_logic_1 = ap_CS_fsm_state109) or (ap_const_logic_1 = ap_CS_fsm_state108) or (ap_const_logic_1 = ap_CS_fsm_state107) or (ap_const_logic_1 = ap_CS_fsm_state106) or (ap_const_logic_1 = ap_CS_fsm_state105) or (ap_const_logic_1 = ap_CS_fsm_state104) or (ap_const_logic_1 = ap_CS_fsm_state103) or (ap_const_logic_1 = ap_CS_fsm_state102) or (ap_const_logic_1 = ap_CS_fsm_state101) or (ap_const_logic_1 = ap_CS_fsm_state100) or (ap_const_logic_1 = ap_CS_fsm_state99) or (ap_const_logic_1 = ap_CS_fsm_state98) or (ap_const_logic_1 = ap_CS_fsm_state97) or (ap_const_logic_1 = ap_CS_fsm_state96) or (ap_const_logic_1 = ap_CS_fsm_state95) or (ap_const_logic_1 = ap_CS_fsm_state94) or (ap_const_logic_1 = ap_CS_fsm_state93) or (ap_const_logic_1 = ap_CS_fsm_state92) or (ap_const_logic_1 = ap_CS_fsm_state91) or (ap_const_logic_1 = ap_CS_fsm_state90) or (ap_const_logic_1 = ap_CS_fsm_state89) or (ap_const_logic_1 = ap_CS_fsm_state88) or (ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state81) or (ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76))) then 
            data_assign_2_ce1 <= ap_const_logic_1;
        else 
            data_assign_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    data_assign_2_we0_assign_proc : process(ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state79, ap_CS_fsm_state80, ap_CS_fsm_state81, ap_CS_fsm_state82, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85, ap_CS_fsm_state86, ap_CS_fsm_state87, ap_CS_fsm_state88, ap_CS_fsm_state89, ap_CS_fsm_state90, ap_CS_fsm_state91, ap_CS_fsm_state92, ap_CS_fsm_state93, ap_CS_fsm_state94, ap_CS_fsm_state95, ap_CS_fsm_state96, ap_CS_fsm_state97, ap_CS_fsm_state98, ap_CS_fsm_state99, ap_CS_fsm_state100, ap_CS_fsm_state101, ap_CS_fsm_state102, ap_CS_fsm_state103, ap_CS_fsm_state104, ap_CS_fsm_state105, ap_CS_fsm_state106, ap_CS_fsm_state107, ap_CS_fsm_state108, ap_CS_fsm_state109, ap_CS_fsm_state110, ap_CS_fsm_state111, ap_CS_fsm_state112)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state112) or (ap_const_logic_1 = ap_CS_fsm_state111) or (ap_const_logic_1 = ap_CS_fsm_state110) or (ap_const_logic_1 = ap_CS_fsm_state109) or (ap_const_logic_1 = ap_CS_fsm_state108) or (ap_const_logic_1 = ap_CS_fsm_state107) or (ap_const_logic_1 = ap_CS_fsm_state106) or (ap_const_logic_1 = ap_CS_fsm_state105) or (ap_const_logic_1 = ap_CS_fsm_state104) or (ap_const_logic_1 = ap_CS_fsm_state103) or (ap_const_logic_1 = ap_CS_fsm_state102) or (ap_const_logic_1 = ap_CS_fsm_state101) or (ap_const_logic_1 = ap_CS_fsm_state100) or (ap_const_logic_1 = ap_CS_fsm_state99) or (ap_const_logic_1 = ap_CS_fsm_state98) or (ap_const_logic_1 = ap_CS_fsm_state97) or (ap_const_logic_1 = ap_CS_fsm_state96) or (ap_const_logic_1 = ap_CS_fsm_state95) or (ap_const_logic_1 = ap_CS_fsm_state94) or (ap_const_logic_1 = ap_CS_fsm_state93) or (ap_const_logic_1 = ap_CS_fsm_state92) or (ap_const_logic_1 = ap_CS_fsm_state91) or (ap_const_logic_1 = ap_CS_fsm_state90) or (ap_const_logic_1 = ap_CS_fsm_state89) or (ap_const_logic_1 = ap_CS_fsm_state88) or (ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state81) or (ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state75))) then 
            data_assign_2_we0 <= ap_const_logic_1;
        else 
            data_assign_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    data_assign_2_we1_assign_proc : process(ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state79, ap_CS_fsm_state80, ap_CS_fsm_state81, ap_CS_fsm_state82, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85, ap_CS_fsm_state86, ap_CS_fsm_state87, ap_CS_fsm_state88, ap_CS_fsm_state89, ap_CS_fsm_state90, ap_CS_fsm_state91, ap_CS_fsm_state92, ap_CS_fsm_state93, ap_CS_fsm_state94, ap_CS_fsm_state95, ap_CS_fsm_state96, ap_CS_fsm_state97, ap_CS_fsm_state98, ap_CS_fsm_state99, ap_CS_fsm_state100, ap_CS_fsm_state101, ap_CS_fsm_state102, ap_CS_fsm_state103, ap_CS_fsm_state104, ap_CS_fsm_state105, ap_CS_fsm_state106, ap_CS_fsm_state107, ap_CS_fsm_state108, ap_CS_fsm_state109, ap_CS_fsm_state110, ap_CS_fsm_state111, ap_CS_fsm_state112)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state112) or (ap_const_logic_1 = ap_CS_fsm_state111) or (ap_const_logic_1 = ap_CS_fsm_state110) or (ap_const_logic_1 = ap_CS_fsm_state109) or (ap_const_logic_1 = ap_CS_fsm_state108) or (ap_const_logic_1 = ap_CS_fsm_state107) or (ap_const_logic_1 = ap_CS_fsm_state106) or (ap_const_logic_1 = ap_CS_fsm_state105) or (ap_const_logic_1 = ap_CS_fsm_state104) or (ap_const_logic_1 = ap_CS_fsm_state103) or (ap_const_logic_1 = ap_CS_fsm_state102) or (ap_const_logic_1 = ap_CS_fsm_state101) or (ap_const_logic_1 = ap_CS_fsm_state100) or (ap_const_logic_1 = ap_CS_fsm_state99) or (ap_const_logic_1 = ap_CS_fsm_state98) or (ap_const_logic_1 = ap_CS_fsm_state97) or (ap_const_logic_1 = ap_CS_fsm_state96) or (ap_const_logic_1 = ap_CS_fsm_state95) or (ap_const_logic_1 = ap_CS_fsm_state94) or (ap_const_logic_1 = ap_CS_fsm_state93) or (ap_const_logic_1 = ap_CS_fsm_state92) or (ap_const_logic_1 = ap_CS_fsm_state91) or (ap_const_logic_1 = ap_CS_fsm_state90) or (ap_const_logic_1 = ap_CS_fsm_state89) or (ap_const_logic_1 = ap_CS_fsm_state88) or (ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state81) or (ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76))) then 
            data_assign_2_we1 <= ap_const_logic_1;
        else 
            data_assign_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    empty_100_fu_4141_p2 <= std_logic_vector(unsigned(phi_mul_cast168_reg_6248) + unsigned(ap_const_lv15_2F));
    empty_101_fu_4151_p2 <= std_logic_vector(unsigned(phi_mul_cast168_reg_6248) + unsigned(ap_const_lv15_30));
    empty_102_fu_4161_p2 <= std_logic_vector(unsigned(phi_mul_cast168_reg_6248) + unsigned(ap_const_lv15_31));
    empty_103_fu_4171_p2 <= std_logic_vector(unsigned(phi_mul_cast168_reg_6248) + unsigned(ap_const_lv15_32));
    empty_104_fu_4181_p2 <= std_logic_vector(unsigned(phi_mul_cast168_reg_6248) + unsigned(ap_const_lv15_33));
    empty_105_fu_4191_p2 <= std_logic_vector(unsigned(phi_mul_cast168_reg_6248) + unsigned(ap_const_lv15_34));
    empty_106_fu_4201_p2 <= std_logic_vector(unsigned(phi_mul_cast168_reg_6248) + unsigned(ap_const_lv15_35));
    empty_107_fu_4211_p2 <= std_logic_vector(unsigned(phi_mul_cast168_reg_6248) + unsigned(ap_const_lv15_36));
    empty_108_fu_4221_p2 <= std_logic_vector(unsigned(phi_mul_cast168_reg_6248) + unsigned(ap_const_lv15_37));
    empty_109_fu_4231_p2 <= std_logic_vector(unsigned(phi_mul_cast168_reg_6248) + unsigned(ap_const_lv15_38));
    empty_110_fu_4241_p2 <= std_logic_vector(unsigned(phi_mul_cast168_reg_6248) + unsigned(ap_const_lv15_39));
    empty_111_fu_4251_p2 <= std_logic_vector(unsigned(phi_mul_cast168_reg_6248) + unsigned(ap_const_lv15_3A));
    empty_112_fu_4261_p2 <= std_logic_vector(unsigned(phi_mul_cast168_reg_6248) + unsigned(ap_const_lv15_3B));
    empty_113_fu_4271_p2 <= std_logic_vector(unsigned(phi_mul_cast168_reg_6248) + unsigned(ap_const_lv15_3C));
    empty_114_fu_4281_p2 <= std_logic_vector(unsigned(phi_mul_cast168_reg_6248) + unsigned(ap_const_lv15_3D));
    empty_115_fu_4291_p2 <= std_logic_vector(unsigned(phi_mul_cast168_reg_6248) + unsigned(ap_const_lv15_3E));
    empty_116_fu_4301_p2 <= std_logic_vector(unsigned(phi_mul_cast168_reg_6248) + unsigned(ap_const_lv15_3F));
    empty_117_fu_4311_p2 <= std_logic_vector(unsigned(phi_mul_cast168_reg_6248) + unsigned(ap_const_lv15_40));
    empty_118_fu_4321_p2 <= std_logic_vector(unsigned(phi_mul_cast168_reg_6248) + unsigned(ap_const_lv15_41));
    empty_119_fu_4331_p2 <= std_logic_vector(unsigned(phi_mul_cast168_reg_6248) + unsigned(ap_const_lv15_42));
    empty_120_fu_4341_p2 <= std_logic_vector(unsigned(phi_mul_cast168_reg_6248) + unsigned(ap_const_lv15_43));
    empty_121_fu_4351_p2 <= std_logic_vector(unsigned(phi_mul_cast168_reg_6248) + unsigned(ap_const_lv15_44));
    empty_122_fu_4361_p2 <= std_logic_vector(unsigned(phi_mul_cast168_reg_6248) + unsigned(ap_const_lv15_45));
    empty_123_fu_4371_p2 <= std_logic_vector(unsigned(phi_mul_cast168_reg_6248) + unsigned(ap_const_lv15_46));
    empty_124_fu_4381_p2 <= std_logic_vector(unsigned(phi_mul_cast168_reg_6248) + unsigned(ap_const_lv15_47));
    empty_125_fu_4391_p2 <= std_logic_vector(unsigned(phi_mul_cast168_reg_6248) + unsigned(ap_const_lv15_48));
    empty_126_fu_4401_p2 <= std_logic_vector(unsigned(phi_mul_cast168_reg_6248) + unsigned(ap_const_lv15_49));
    empty_127_fu_4411_p2 <= std_logic_vector(unsigned(phi_mul_cast168_reg_6248) + unsigned(ap_const_lv15_4A));
    empty_128_fu_4427_p2 <= "1" when (indvar8_reg_3050 = ap_const_lv8_DA) else "0";
    empty_130_fu_4447_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_4439_p3),64));
    empty_131_fu_4452_p2 <= (tmp_2_fu_4439_p3 or ap_const_lv10_1);
    empty_132_fu_4473_p2 <= (tmp_2_reg_6730 or ap_const_lv10_2);
    empty_133_fu_4487_p2 <= (tmp_2_reg_6730 or ap_const_lv10_3);
    empty_134_fu_4467_p2 <= "1" when (indvar87_reg_3061 = ap_const_lv8_DA) else "0";
    empty_136_fu_4551_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_10_fu_4543_p3),64));
    empty_137_fu_4556_p2 <= (tmp_10_fu_4543_p3 or ap_const_lv10_1);
    empty_138_fu_4577_p2 <= (tmp_10_reg_6801 or ap_const_lv10_2);
    empty_139_fu_4591_p2 <= (tmp_10_reg_6801 or ap_const_lv10_3);
    empty_140_fu_4571_p2 <= "1" when (indvar95_reg_3072 = ap_const_lv8_DA) else "0";
    empty_142_fu_4610_p2 <= std_logic_vector(unsigned(phi_mul15_reg_3083) + unsigned(ap_const_lv14_1));
    empty_143_fu_4621_p2 <= std_logic_vector(unsigned(phi_mul15_reg_3083) + unsigned(ap_const_lv14_2));
    empty_144_fu_4632_p2 <= std_logic_vector(unsigned(phi_mul15_reg_3083) + unsigned(ap_const_lv14_3));
    empty_145_fu_4643_p2 <= std_logic_vector(unsigned(phi_mul15_reg_3083) + unsigned(ap_const_lv14_4));
    empty_146_fu_4654_p2 <= std_logic_vector(unsigned(phi_mul15_reg_3083) + unsigned(ap_const_lv14_5));
    empty_147_fu_4665_p2 <= std_logic_vector(unsigned(phi_mul15_reg_3083) + unsigned(ap_const_lv14_6));
    empty_148_fu_4676_p2 <= std_logic_vector(unsigned(phi_mul15_reg_3083) + unsigned(ap_const_lv14_7));
    empty_149_fu_4687_p2 <= std_logic_vector(unsigned(phi_mul15_reg_3083) + unsigned(ap_const_lv14_8));
    empty_150_fu_4698_p2 <= std_logic_vector(unsigned(phi_mul15_reg_3083) + unsigned(ap_const_lv14_9));
    empty_151_fu_4709_p2 <= std_logic_vector(unsigned(phi_mul15_reg_3083) + unsigned(ap_const_lv14_A));
    empty_152_fu_4720_p2 <= std_logic_vector(unsigned(phi_mul15_reg_3083) + unsigned(ap_const_lv14_B));
    empty_153_fu_4731_p2 <= std_logic_vector(unsigned(phi_mul15_reg_3083) + unsigned(ap_const_lv14_C));
    empty_154_fu_4742_p2 <= std_logic_vector(unsigned(phi_mul15_reg_3083) + unsigned(ap_const_lv14_D));
    empty_155_fu_4753_p2 <= std_logic_vector(unsigned(phi_mul15_reg_3083) + unsigned(ap_const_lv14_E));
    empty_156_fu_4764_p2 <= std_logic_vector(unsigned(phi_mul15_reg_3083) + unsigned(ap_const_lv14_F));
    empty_157_fu_4775_p2 <= std_logic_vector(unsigned(phi_mul15_reg_3083) + unsigned(ap_const_lv14_10));
    empty_158_fu_4786_p2 <= std_logic_vector(unsigned(phi_mul15_reg_3083) + unsigned(ap_const_lv14_11));
    empty_159_fu_4797_p2 <= std_logic_vector(unsigned(phi_mul15_reg_3083) + unsigned(ap_const_lv14_12));
    empty_160_fu_4808_p2 <= std_logic_vector(unsigned(phi_mul15_reg_3083) + unsigned(ap_const_lv14_13));
    empty_161_fu_4819_p2 <= std_logic_vector(unsigned(phi_mul15_reg_3083) + unsigned(ap_const_lv14_14));
    empty_162_fu_4830_p2 <= std_logic_vector(unsigned(phi_mul15_reg_3083) + unsigned(ap_const_lv14_15));
    empty_163_fu_4841_p2 <= std_logic_vector(unsigned(phi_mul15_reg_3083) + unsigned(ap_const_lv14_16));
    empty_164_fu_4852_p2 <= std_logic_vector(unsigned(phi_mul15_reg_3083) + unsigned(ap_const_lv14_17));
    empty_165_fu_4863_p2 <= std_logic_vector(unsigned(phi_mul15_reg_3083) + unsigned(ap_const_lv14_18));
    empty_166_fu_4874_p2 <= std_logic_vector(unsigned(phi_mul15_reg_3083) + unsigned(ap_const_lv14_19));
    empty_167_fu_4885_p2 <= std_logic_vector(unsigned(phi_mul15_reg_3083) + unsigned(ap_const_lv14_1A));
    empty_168_fu_4896_p2 <= std_logic_vector(unsigned(phi_mul15_reg_3083) + unsigned(ap_const_lv14_1B));
    empty_169_fu_4907_p2 <= std_logic_vector(unsigned(phi_mul15_reg_3083) + unsigned(ap_const_lv14_1C));
    empty_170_fu_4918_p2 <= std_logic_vector(unsigned(phi_mul15_reg_3083) + unsigned(ap_const_lv14_1D));
    empty_171_fu_4929_p2 <= std_logic_vector(unsigned(phi_mul15_reg_3083) + unsigned(ap_const_lv14_1E));
    empty_172_fu_4940_p2 <= std_logic_vector(unsigned(phi_mul15_reg_3083) + unsigned(ap_const_lv14_1F));
    empty_173_fu_4951_p2 <= std_logic_vector(unsigned(phi_mul15_reg_3083) + unsigned(ap_const_lv14_20));
    empty_174_fu_4972_p2 <= std_logic_vector(unsigned(phi_mul15_reg_3083) + unsigned(ap_const_lv14_21));
    empty_175_fu_4983_p2 <= std_logic_vector(unsigned(phi_mul15_cast93_fu_4962_p1) + unsigned(ap_const_lv15_22));
    empty_176_fu_4994_p2 <= std_logic_vector(unsigned(phi_mul15_cast93_reg_7181) + unsigned(ap_const_lv15_23));
    empty_177_fu_5004_p2 <= std_logic_vector(unsigned(phi_mul15_cast93_reg_7181) + unsigned(ap_const_lv15_24));
    empty_178_fu_5014_p2 <= std_logic_vector(unsigned(phi_mul15_cast93_reg_7181) + unsigned(ap_const_lv15_25));
    empty_179_fu_5024_p2 <= std_logic_vector(unsigned(phi_mul15_cast93_reg_7181) + unsigned(ap_const_lv15_26));
    empty_180_fu_5034_p2 <= std_logic_vector(unsigned(phi_mul15_cast93_reg_7181) + unsigned(ap_const_lv15_27));
    empty_181_fu_5044_p2 <= std_logic_vector(unsigned(phi_mul15_cast93_reg_7181) + unsigned(ap_const_lv15_28));
    empty_182_fu_5054_p2 <= std_logic_vector(unsigned(phi_mul15_cast93_reg_7181) + unsigned(ap_const_lv15_29));
    empty_183_fu_5064_p2 <= std_logic_vector(unsigned(phi_mul15_cast93_reg_7181) + unsigned(ap_const_lv15_2A));
    empty_184_fu_5074_p2 <= std_logic_vector(unsigned(phi_mul15_cast93_reg_7181) + unsigned(ap_const_lv15_2B));
    empty_185_fu_5084_p2 <= std_logic_vector(unsigned(phi_mul15_cast93_reg_7181) + unsigned(ap_const_lv15_2C));
    empty_186_fu_5094_p2 <= std_logic_vector(unsigned(phi_mul15_cast93_reg_7181) + unsigned(ap_const_lv15_2D));
    empty_187_fu_5104_p2 <= std_logic_vector(unsigned(phi_mul15_cast93_reg_7181) + unsigned(ap_const_lv15_2E));
    empty_188_fu_5114_p2 <= std_logic_vector(unsigned(phi_mul15_cast93_reg_7181) + unsigned(ap_const_lv15_2F));
    empty_189_fu_5124_p2 <= std_logic_vector(unsigned(phi_mul15_cast93_reg_7181) + unsigned(ap_const_lv15_30));
    empty_190_fu_5134_p2 <= std_logic_vector(unsigned(phi_mul15_cast93_reg_7181) + unsigned(ap_const_lv15_31));
    empty_191_fu_5144_p2 <= std_logic_vector(unsigned(phi_mul15_cast93_reg_7181) + unsigned(ap_const_lv15_32));
    empty_192_fu_5154_p2 <= std_logic_vector(unsigned(phi_mul15_cast93_reg_7181) + unsigned(ap_const_lv15_33));
    empty_193_fu_5164_p2 <= std_logic_vector(unsigned(phi_mul15_cast93_reg_7181) + unsigned(ap_const_lv15_34));
    empty_194_fu_5174_p2 <= std_logic_vector(unsigned(phi_mul15_cast93_reg_7181) + unsigned(ap_const_lv15_35));
    empty_195_fu_5184_p2 <= std_logic_vector(unsigned(phi_mul15_cast93_reg_7181) + unsigned(ap_const_lv15_36));
    empty_196_fu_5194_p2 <= std_logic_vector(unsigned(phi_mul15_cast93_reg_7181) + unsigned(ap_const_lv15_37));
    empty_197_fu_5204_p2 <= std_logic_vector(unsigned(phi_mul15_cast93_reg_7181) + unsigned(ap_const_lv15_38));
    empty_198_fu_5214_p2 <= std_logic_vector(unsigned(phi_mul15_cast93_reg_7181) + unsigned(ap_const_lv15_39));
    empty_199_fu_5224_p2 <= std_logic_vector(unsigned(phi_mul15_cast93_reg_7181) + unsigned(ap_const_lv15_3A));
    empty_200_fu_5234_p2 <= std_logic_vector(unsigned(phi_mul15_cast93_reg_7181) + unsigned(ap_const_lv15_3B));
    empty_201_fu_5244_p2 <= std_logic_vector(unsigned(phi_mul15_cast93_reg_7181) + unsigned(ap_const_lv15_3C));
    empty_202_fu_5254_p2 <= std_logic_vector(unsigned(phi_mul15_cast93_reg_7181) + unsigned(ap_const_lv15_3D));
    empty_203_fu_5264_p2 <= std_logic_vector(unsigned(phi_mul15_cast93_reg_7181) + unsigned(ap_const_lv15_3E));
    empty_204_fu_5274_p2 <= std_logic_vector(unsigned(phi_mul15_cast93_reg_7181) + unsigned(ap_const_lv15_3F));
    empty_205_fu_5284_p2 <= std_logic_vector(unsigned(phi_mul15_cast93_reg_7181) + unsigned(ap_const_lv15_40));
    empty_206_fu_5294_p2 <= std_logic_vector(unsigned(phi_mul15_cast93_reg_7181) + unsigned(ap_const_lv15_41));
    empty_207_fu_5304_p2 <= std_logic_vector(unsigned(phi_mul15_cast93_reg_7181) + unsigned(ap_const_lv15_42));
    empty_208_fu_5314_p2 <= std_logic_vector(unsigned(phi_mul15_cast93_reg_7181) + unsigned(ap_const_lv15_43));
    empty_209_fu_5324_p2 <= std_logic_vector(unsigned(phi_mul15_cast93_reg_7181) + unsigned(ap_const_lv15_44));
    empty_210_fu_5334_p2 <= std_logic_vector(unsigned(phi_mul15_cast93_reg_7181) + unsigned(ap_const_lv15_45));
    empty_211_fu_5344_p2 <= std_logic_vector(unsigned(phi_mul15_cast93_reg_7181) + unsigned(ap_const_lv15_46));
    empty_212_fu_5354_p2 <= std_logic_vector(unsigned(phi_mul15_cast93_reg_7181) + unsigned(ap_const_lv15_47));
    empty_213_fu_5364_p2 <= std_logic_vector(unsigned(phi_mul15_cast93_reg_7181) + unsigned(ap_const_lv15_48));
    empty_214_fu_5374_p2 <= std_logic_vector(unsigned(phi_mul15_cast93_reg_7181) + unsigned(ap_const_lv15_49));
    empty_215_fu_5384_p2 <= std_logic_vector(unsigned(phi_mul15_cast93_reg_7181) + unsigned(ap_const_lv15_4A));
    empty_216_fu_5400_p2 <= "1" when (indvar103_reg_3095 = ap_const_lv8_DA) else "0";
    empty_218_fu_5420_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_14_fu_5412_p3),64));
    empty_219_fu_5425_p2 <= (tmp_14_fu_5412_p3 or ap_const_lv10_1);
    empty_220_fu_5446_p2 <= (tmp_14_reg_7663 or ap_const_lv10_2);
    empty_221_fu_5460_p2 <= (tmp_14_reg_7663 or ap_const_lv10_3);
    empty_222_fu_5440_p2 <= "1" when (indvar182_reg_3106 = ap_const_lv8_DA) else "0";
    empty_48_fu_3578_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_3570_p3),64));
    empty_49_fu_3583_p2 <= (tmp_8_fu_3570_p3 or ap_const_lv10_1);
    empty_50_fu_3604_p2 <= (tmp_8_reg_5868 or ap_const_lv10_2);
    empty_51_fu_3618_p2 <= (tmp_8_reg_5868 or ap_const_lv10_3);
    empty_52_fu_3598_p2 <= "1" when (indvar_reg_3027 = ap_const_lv8_DA) else "0";
    empty_54_fu_3637_p2 <= std_logic_vector(unsigned(phi_mul_reg_3038) + unsigned(ap_const_lv14_1));
    empty_55_fu_3648_p2 <= std_logic_vector(unsigned(phi_mul_reg_3038) + unsigned(ap_const_lv14_2));
    empty_56_fu_3659_p2 <= std_logic_vector(unsigned(phi_mul_reg_3038) + unsigned(ap_const_lv14_3));
    empty_57_fu_3670_p2 <= std_logic_vector(unsigned(phi_mul_reg_3038) + unsigned(ap_const_lv14_4));
    empty_58_fu_3681_p2 <= std_logic_vector(unsigned(phi_mul_reg_3038) + unsigned(ap_const_lv14_5));
    empty_59_fu_3692_p2 <= std_logic_vector(unsigned(phi_mul_reg_3038) + unsigned(ap_const_lv14_6));
    empty_60_fu_3703_p2 <= std_logic_vector(unsigned(phi_mul_reg_3038) + unsigned(ap_const_lv14_7));
    empty_61_fu_3714_p2 <= std_logic_vector(unsigned(phi_mul_reg_3038) + unsigned(ap_const_lv14_8));
    empty_62_fu_3725_p2 <= std_logic_vector(unsigned(phi_mul_reg_3038) + unsigned(ap_const_lv14_9));
    empty_63_fu_3736_p2 <= std_logic_vector(unsigned(phi_mul_reg_3038) + unsigned(ap_const_lv14_A));
    empty_64_fu_3747_p2 <= std_logic_vector(unsigned(phi_mul_reg_3038) + unsigned(ap_const_lv14_B));
    empty_65_fu_3758_p2 <= std_logic_vector(unsigned(phi_mul_reg_3038) + unsigned(ap_const_lv14_C));
    empty_66_fu_3769_p2 <= std_logic_vector(unsigned(phi_mul_reg_3038) + unsigned(ap_const_lv14_D));
    empty_67_fu_3780_p2 <= std_logic_vector(unsigned(phi_mul_reg_3038) + unsigned(ap_const_lv14_E));
    empty_68_fu_3791_p2 <= std_logic_vector(unsigned(phi_mul_reg_3038) + unsigned(ap_const_lv14_F));
    empty_69_fu_3802_p2 <= std_logic_vector(unsigned(phi_mul_reg_3038) + unsigned(ap_const_lv14_10));
    empty_70_fu_3813_p2 <= std_logic_vector(unsigned(phi_mul_reg_3038) + unsigned(ap_const_lv14_11));
    empty_71_fu_3824_p2 <= std_logic_vector(unsigned(phi_mul_reg_3038) + unsigned(ap_const_lv14_12));
    empty_72_fu_3835_p2 <= std_logic_vector(unsigned(phi_mul_reg_3038) + unsigned(ap_const_lv14_13));
    empty_73_fu_3846_p2 <= std_logic_vector(unsigned(phi_mul_reg_3038) + unsigned(ap_const_lv14_14));
    empty_74_fu_3857_p2 <= std_logic_vector(unsigned(phi_mul_reg_3038) + unsigned(ap_const_lv14_15));
    empty_75_fu_3868_p2 <= std_logic_vector(unsigned(phi_mul_reg_3038) + unsigned(ap_const_lv14_16));
    empty_76_fu_3879_p2 <= std_logic_vector(unsigned(phi_mul_reg_3038) + unsigned(ap_const_lv14_17));
    empty_77_fu_3890_p2 <= std_logic_vector(unsigned(phi_mul_reg_3038) + unsigned(ap_const_lv14_18));
    empty_78_fu_3901_p2 <= std_logic_vector(unsigned(phi_mul_reg_3038) + unsigned(ap_const_lv14_19));
    empty_79_fu_3912_p2 <= std_logic_vector(unsigned(phi_mul_reg_3038) + unsigned(ap_const_lv14_1A));
    empty_80_fu_3923_p2 <= std_logic_vector(unsigned(phi_mul_reg_3038) + unsigned(ap_const_lv14_1B));
    empty_81_fu_3934_p2 <= std_logic_vector(unsigned(phi_mul_reg_3038) + unsigned(ap_const_lv14_1C));
    empty_82_fu_3945_p2 <= std_logic_vector(unsigned(phi_mul_reg_3038) + unsigned(ap_const_lv14_1D));
    empty_83_fu_3956_p2 <= std_logic_vector(unsigned(phi_mul_reg_3038) + unsigned(ap_const_lv14_1E));
    empty_84_fu_3967_p2 <= std_logic_vector(unsigned(phi_mul_reg_3038) + unsigned(ap_const_lv14_1F));
    empty_85_fu_3978_p2 <= std_logic_vector(unsigned(phi_mul_reg_3038) + unsigned(ap_const_lv14_20));
    empty_86_fu_3999_p2 <= std_logic_vector(unsigned(phi_mul_reg_3038) + unsigned(ap_const_lv14_21));
    empty_87_fu_4010_p2 <= std_logic_vector(unsigned(phi_mul_cast168_fu_3989_p1) + unsigned(ap_const_lv15_22));
    empty_88_fu_4021_p2 <= std_logic_vector(unsigned(phi_mul_cast168_reg_6248) + unsigned(ap_const_lv15_23));
    empty_89_fu_4031_p2 <= std_logic_vector(unsigned(phi_mul_cast168_reg_6248) + unsigned(ap_const_lv15_24));
    empty_90_fu_4041_p2 <= std_logic_vector(unsigned(phi_mul_cast168_reg_6248) + unsigned(ap_const_lv15_25));
    empty_91_fu_4051_p2 <= std_logic_vector(unsigned(phi_mul_cast168_reg_6248) + unsigned(ap_const_lv15_26));
    empty_92_fu_4061_p2 <= std_logic_vector(unsigned(phi_mul_cast168_reg_6248) + unsigned(ap_const_lv15_27));
    empty_93_fu_4071_p2 <= std_logic_vector(unsigned(phi_mul_cast168_reg_6248) + unsigned(ap_const_lv15_28));
    empty_94_fu_4081_p2 <= std_logic_vector(unsigned(phi_mul_cast168_reg_6248) + unsigned(ap_const_lv15_29));
    empty_95_fu_4091_p2 <= std_logic_vector(unsigned(phi_mul_cast168_reg_6248) + unsigned(ap_const_lv15_2A));
    empty_96_fu_4101_p2 <= std_logic_vector(unsigned(phi_mul_cast168_reg_6248) + unsigned(ap_const_lv15_2B));
    empty_97_fu_4111_p2 <= std_logic_vector(unsigned(phi_mul_cast168_reg_6248) + unsigned(ap_const_lv15_2C));
    empty_98_fu_4121_p2 <= std_logic_vector(unsigned(phi_mul_cast168_reg_6248) + unsigned(ap_const_lv15_2D));
    empty_99_fu_4131_p2 <= std_logic_vector(unsigned(phi_mul_cast168_reg_6248) + unsigned(ap_const_lv15_2E));
    grp_H3_2_fu_3237_ap_start <= grp_H3_2_fu_3237_ap_start_reg;
    grp_HashFinal_fu_3340_ap_start <= grp_HashFinal_fu_3340_ap_start_reg;

    grp_HashFinal_fu_3340_ctx_sponge_byteIOInd_assign_proc : process(reg_3364, ap_CS_fsm_state54, ap_CS_fsm_state68, ap_CS_fsm_state120, ap_CS_fsm_state134, reg_3384)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state134) or (ap_const_logic_1 = ap_CS_fsm_state68))) then 
            grp_HashFinal_fu_3340_ctx_sponge_byteIOInd <= reg_3384;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state120) or (ap_const_logic_1 = ap_CS_fsm_state54))) then 
            grp_HashFinal_fu_3340_ctx_sponge_byteIOInd <= reg_3364;
        else 
            grp_HashFinal_fu_3340_ctx_sponge_byteIOInd <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_HashFinal_fu_3340_ctx_sponge_state_q0_assign_proc : process(ap_CS_fsm_state54, ap_CS_fsm_state68, ap_CS_fsm_state120, ap_CS_fsm_state134, ctx_sponge_state_2_q0, ctx_sponge_state_q0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state134) or (ap_const_logic_1 = ap_CS_fsm_state120))) then 
            grp_HashFinal_fu_3340_ctx_sponge_state_q0 <= ctx_sponge_state_2_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state54))) then 
            grp_HashFinal_fu_3340_ctx_sponge_state_q0 <= ctx_sponge_state_q0;
        else 
            grp_HashFinal_fu_3340_ctx_sponge_state_q0 <= "XXXXXXXX";
        end if; 
    end process;

    grp_HashInit_fu_3328_ap_start <= grp_HashInit_fu_3328_ap_start_reg;

    grp_HashInit_fu_3328_ctx_sponge_state_q0_assign_proc : process(ap_CS_fsm_state50, ap_CS_fsm_state58, ap_CS_fsm_state116, ap_CS_fsm_state124, ctx_sponge_state_2_q0, ctx_sponge_state_q0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state124) or (ap_const_logic_1 = ap_CS_fsm_state116))) then 
            grp_HashInit_fu_3328_ctx_sponge_state_q0 <= ctx_sponge_state_2_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state50))) then 
            grp_HashInit_fu_3328_ctx_sponge_state_q0 <= ctx_sponge_state_q0;
        else 
            grp_HashInit_fu_3328_ctx_sponge_state_q0 <= "XXXXXXXX";
        end if; 
    end process;


    grp_HashInit_fu_3328_hashPrefix_assign_proc : process(ap_CS_fsm_state50, ap_CS_fsm_state58, ap_CS_fsm_state116, ap_CS_fsm_state124)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state124) or (ap_const_logic_1 = ap_CS_fsm_state58))) then 
            grp_HashInit_fu_3328_hashPrefix <= ap_const_lv4_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state116) or (ap_const_logic_1 = ap_CS_fsm_state50))) then 
            grp_HashInit_fu_3328_hashPrefix <= ap_const_lv4_4;
        else 
            grp_HashInit_fu_3328_hashPrefix <= "XXXX";
        end if; 
    end process;

    grp_HashUpdate_2_1_fu_3273_ap_start <= grp_HashUpdate_2_1_fu_3273_ap_start_reg;

    grp_HashUpdate_2_1_fu_3273_ctx_sponge_byteIOInd_assign_proc : process(reg_3379, ap_CS_fsm_state62, ap_CS_fsm_state66, ap_CS_fsm_state128, ap_CS_fsm_state132, reg_3390)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state132) or (ap_const_logic_1 = ap_CS_fsm_state66))) then 
            grp_HashUpdate_2_1_fu_3273_ctx_sponge_byteIOInd <= reg_3390;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state128) or (ap_const_logic_1 = ap_CS_fsm_state62))) then 
            grp_HashUpdate_2_1_fu_3273_ctx_sponge_byteIOInd <= reg_3379;
        else 
            grp_HashUpdate_2_1_fu_3273_ctx_sponge_byteIOInd <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_HashUpdate_2_1_fu_3273_ctx_sponge_state_q0_assign_proc : process(ap_CS_fsm_state62, ap_CS_fsm_state66, ap_CS_fsm_state128, ap_CS_fsm_state132, ctx_sponge_state_2_q0, ctx_sponge_state_q0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state132) or (ap_const_logic_1 = ap_CS_fsm_state128))) then 
            grp_HashUpdate_2_1_fu_3273_ctx_sponge_state_q0 <= ctx_sponge_state_2_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state66) or (ap_const_logic_1 = ap_CS_fsm_state62))) then 
            grp_HashUpdate_2_1_fu_3273_ctx_sponge_state_q0 <= ctx_sponge_state_q0;
        else 
            grp_HashUpdate_2_1_fu_3273_ctx_sponge_state_q0 <= "XXXXXXXX";
        end if; 
    end process;


    grp_HashUpdate_2_1_fu_3273_data_q0_assign_proc : process(ap_CS_fsm_state62, ap_CS_fsm_state66, ap_CS_fsm_state128, ap_CS_fsm_state132, view2s_outputShare18_q0, view2s_inputShare93_q0, view1s_outputShare85_q0, view1s_inputShare1_q0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state132)) then 
            grp_HashUpdate_2_1_fu_3273_data_q0 <= view2s_outputShare18_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state128)) then 
            grp_HashUpdate_2_1_fu_3273_data_q0 <= view2s_inputShare93_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            grp_HashUpdate_2_1_fu_3273_data_q0 <= view1s_outputShare85_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            grp_HashUpdate_2_1_fu_3273_data_q0 <= view1s_inputShare1_q0;
        else 
            grp_HashUpdate_2_1_fu_3273_data_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_KeccakWidth1600_Spon_11_fu_3315_ap_start <= grp_KeccakWidth1600_Spon_11_fu_3315_ap_start_reg;

    grp_KeccakWidth1600_Spon_11_fu_3315_data_q0_assign_proc : process(ap_CS_fsm_state64, ap_CS_fsm_state130, data_assign_2_q0, data_assign_1_q0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state130)) then 
            grp_KeccakWidth1600_Spon_11_fu_3315_data_q0 <= data_assign_2_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            grp_KeccakWidth1600_Spon_11_fu_3315_data_q0 <= data_assign_1_q0;
        else 
            grp_KeccakWidth1600_Spon_11_fu_3315_data_q0 <= "XXXXXXXX";
        end if; 
    end process;


    grp_KeccakWidth1600_Spon_11_fu_3315_instance_state_q0_assign_proc : process(ap_CS_fsm_state64, ap_CS_fsm_state130, ctx_sponge_state_2_q0, ctx_sponge_state_q0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state130)) then 
            grp_KeccakWidth1600_Spon_11_fu_3315_instance_state_q0 <= ctx_sponge_state_2_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            grp_KeccakWidth1600_Spon_11_fu_3315_instance_state_q0 <= ctx_sponge_state_q0;
        else 
            grp_KeccakWidth1600_Spon_11_fu_3315_instance_state_q0 <= "XXXXXXXX";
        end if; 
    end process;

    grp_KeccakWidth1600_Spon_5_fu_3300_ap_start <= grp_KeccakWidth1600_Spon_5_fu_3300_ap_start_reg;

    grp_KeccakWidth1600_Spon_5_fu_3300_data_0_q0_assign_proc : process(sig_0_proofs_seed1_q0, sig_0_proofs_seed2_q0, ap_CS_fsm_state52, ap_CS_fsm_state118)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state118)) then 
            grp_KeccakWidth1600_Spon_5_fu_3300_data_0_q0 <= sig_0_proofs_seed2_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            grp_KeccakWidth1600_Spon_5_fu_3300_data_0_q0 <= sig_0_proofs_seed1_q0;
        else 
            grp_KeccakWidth1600_Spon_5_fu_3300_data_0_q0 <= "XXXXXXXX";
        end if; 
    end process;


    grp_KeccakWidth1600_Spon_5_fu_3300_instance_state_q0_assign_proc : process(ap_CS_fsm_state52, ap_CS_fsm_state118, ctx_sponge_state_2_q0, ctx_sponge_state_q0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state118)) then 
            grp_KeccakWidth1600_Spon_5_fu_3300_instance_state_q0 <= ctx_sponge_state_2_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            grp_KeccakWidth1600_Spon_5_fu_3300_instance_state_q0 <= ctx_sponge_state_q0;
        else 
            grp_KeccakWidth1600_Spon_5_fu_3300_instance_state_q0 <= "XXXXXXXX";
        end if; 
    end process;

    grp_KeccakWidth1600_Spon_6_fu_3286_ap_start <= grp_KeccakWidth1600_Spon_6_fu_3286_ap_start_reg;

    grp_KeccakWidth1600_Spon_6_fu_3286_data_offset1_assign_proc : process(ap_CS_fsm_state60, ap_CS_fsm_state126, challenge_reg_5850, trunc_ln81_reg_7713)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state126)) then 
            grp_KeccakWidth1600_Spon_6_fu_3286_data_offset1 <= trunc_ln81_reg_7713;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            grp_KeccakWidth1600_Spon_6_fu_3286_data_offset1 <= challenge_reg_5850;
        else 
            grp_KeccakWidth1600_Spon_6_fu_3286_data_offset1 <= "XX";
        end if; 
    end process;


    grp_KeccakWidth1600_Spon_6_fu_3286_instance_state_q0_assign_proc : process(ap_CS_fsm_state60, ap_CS_fsm_state126, ctx_sponge_state_2_q0, ctx_sponge_state_q0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state126)) then 
            grp_KeccakWidth1600_Spon_6_fu_3286_instance_state_q0 <= ctx_sponge_state_2_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            grp_KeccakWidth1600_Spon_6_fu_3286_instance_state_q0 <= ctx_sponge_state_q0;
        else 
            grp_KeccakWidth1600_Spon_6_fu_3286_instance_state_q0 <= "XXXXXXXX";
        end if; 
    end process;

    grp_KeccakWidth1600_Spon_fu_3258_ap_start <= grp_KeccakWidth1600_Spon_fu_3258_ap_start_reg;

    grp_KeccakWidth1600_Spon_fu_3258_data_offset1_assign_proc : process(challenge_reg_5850, ap_CS_fsm_state70, trunc_ln81_reg_7713, ap_CS_fsm_state136, ap_CS_fsm_state56, ap_CS_fsm_state122)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state122) or (ap_const_logic_1 = ap_CS_fsm_state136))) then 
            grp_KeccakWidth1600_Spon_fu_3258_data_offset1 <= trunc_ln81_reg_7713;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state70))) then 
            grp_KeccakWidth1600_Spon_fu_3258_data_offset1 <= challenge_reg_5850;
        else 
            grp_KeccakWidth1600_Spon_fu_3258_data_offset1 <= "XX";
        end if; 
    end process;


    grp_KeccakWidth1600_Spon_fu_3258_instance_state_q0_assign_proc : process(ap_CS_fsm_state70, ap_CS_fsm_state136, ctx_sponge_state_2_q0, ctx_sponge_state_q0, ap_CS_fsm_state56, ap_CS_fsm_state122)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state122) or (ap_const_logic_1 = ap_CS_fsm_state136))) then 
            grp_KeccakWidth1600_Spon_fu_3258_instance_state_q0 <= ctx_sponge_state_2_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state70))) then 
            grp_KeccakWidth1600_Spon_fu_3258_instance_state_q0 <= ctx_sponge_state_q0;
        else 
            grp_KeccakWidth1600_Spon_fu_3258_instance_state_q0 <= "XXXXXXXX";
        end if; 
    end process;

    grp_verifyProof_23_fu_3198_ap_start <= grp_verifyProof_23_fu_3198_ap_start_reg;
    i_fu_3452_p2 <= std_logic_vector(unsigned(round_assign_reg_2992) + unsigned(ap_const_lv8_1));
    icmp_ln1236_fu_3446_p2 <= "1" when (round_assign_reg_2992 = ap_const_lv8_DB) else "0";
    icmp_ln1251_fu_4510_p2 <= "1" when (unsigned(add_ln1251_fu_4504_p2) < unsigned(ap_const_lv3_3)) else "0";
    icmp_ln1253_fu_5522_p2 <= "1" when (loop_0_reg_3117 = ap_const_lv6_20) else "0";
    icmp_ln1254_fu_5482_p2 <= "1" when (unsigned(add_ln1254_fu_5477_p2) < unsigned(ap_const_lv3_3)) else "0";
    icmp_ln1262_fu_5565_p2 <= "1" when (loop_1_reg_3128 = ap_const_lv3_4) else "0";
    icmp_ln1264_fu_5609_p2 <= "1" when (loop_2_reg_3140 = ap_const_lv3_4) else "0";
    icmp_ln1268_fu_5673_p2 <= "1" when (j_0_reg_3152 = ap_const_lv3_4) else "0";
    icmp_ln1272_fu_5712_p2 <= "1" when (loop_3_reg_3163 = ap_const_lv3_4) else "0";
    icmp_ln1286_fu_5759_p2 <= "1" when (loop_4_reg_3175 = ap_const_lv6_37) else "0";
    icmp_ln1287_fu_5777_p2 <= "1" when (sig_0_challengeBits_q0 = computed_challengebi_q0) else "0";
    indvarinc104_fu_5394_p2 <= std_logic_vector(unsigned(indvar103_reg_3095) + unsigned(ap_const_lv8_1));
    indvarinc183_fu_5406_p2 <= std_logic_vector(unsigned(indvar182_reg_3106) + unsigned(ap_const_lv8_1));
    indvarinc88_fu_4433_p2 <= std_logic_vector(unsigned(indvar87_reg_3061) + unsigned(ap_const_lv8_1));
    indvarinc96_fu_4537_p2 <= std_logic_vector(unsigned(indvar95_reg_3072) + unsigned(ap_const_lv8_1));
    indvarinc9_fu_4421_p2 <= std_logic_vector(unsigned(indvar8_reg_3050) + unsigned(ap_const_lv8_1));
    indvarinc_fu_3564_p2 <= std_logic_vector(unsigned(indvar_reg_3027) + unsigned(ap_const_lv8_1));
    j_fu_5679_p2 <= std_logic_vector(unsigned(j_0_reg_3152) + unsigned(ap_const_lv3_1));
    loop_21_fu_5765_p2 <= std_logic_vector(unsigned(loop_4_reg_3175) + unsigned(ap_const_lv6_1));
    loop_22_fu_5571_p2 <= std_logic_vector(unsigned(loop_1_reg_3128) + unsigned(ap_const_lv3_1));
    loop_23_fu_5615_p2 <= std_logic_vector(unsigned(loop_2_reg_3140) + unsigned(ap_const_lv3_1));
    loop_24_fu_5718_p2 <= std_logic_vector(unsigned(loop_3_reg_3163) + unsigned(ap_const_lv3_1));
    loop_fu_5528_p2 <= std_logic_vector(unsigned(loop_0_reg_3117) + unsigned(ap_const_lv6_1));
    lshr_ln54_1_fu_3515_p2 <= std_logic_vector(shift_right(unsigned(sig_0_challengeBits_q0),to_integer(unsigned('0' & zext_ln54_2_fu_3511_p1(8-1 downto 0)))));
    lshr_ln54_2_fu_3534_p2 <= std_logic_vector(shift_right(unsigned(sig_0_challengeBits_q1),to_integer(unsigned('0' & zext_ln54_1_fu_3491_p1(8-1 downto 0)))));
    lshr_ln54_3_fu_3544_p2 <= std_logic_vector(shift_right(unsigned(sig_0_challengeBits_q1),to_integer(unsigned('0' & zext_ln54_2_fu_3511_p1(8-1 downto 0)))));
    lshr_ln54_fu_3495_p2 <= std_logic_vector(shift_right(unsigned(sig_0_challengeBits_q0),to_integer(unsigned('0' & zext_ln54_1_fu_3491_p1(8-1 downto 0)))));
    message_address0 <= grp_H3_2_fu_3237_message_address0;
    message_ce0 <= grp_H3_2_fu_3237_message_ce0;
    next_mul16_fu_4966_p2 <= std_logic_vector(unsigned(phi_mul15_reg_3083) + unsigned(ap_const_lv14_4B));
    next_mul_fu_3993_p2 <= std_logic_vector(unsigned(phi_mul_reg_3038) + unsigned(ap_const_lv14_4B));
    or_ln_fu_3525_p3 <= (trunc_ln386_1_fu_3501_p1 & trunc_ln54_fu_3521_p1);
    p_cast100_fu_4356_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_121_fu_4351_p2),64));
    p_cast101_fu_4346_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_120_fu_4341_p2),64));
    p_cast102_fu_4336_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_119_fu_4331_p2),64));
    p_cast103_fu_4326_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_118_fu_4321_p2),64));
    p_cast104_fu_4316_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_117_fu_4311_p2),64));
    p_cast105_fu_4306_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_116_fu_4301_p2),64));
    p_cast106_fu_4296_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_115_fu_4291_p2),64));
    p_cast107_fu_4286_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_114_fu_4281_p2),64));
    p_cast108_fu_4276_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_113_fu_4271_p2),64));
    p_cast109_fu_4266_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_112_fu_4261_p2),64));
    p_cast110_fu_4256_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_111_fu_4251_p2),64));
    p_cast111_fu_4246_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_110_fu_4241_p2),64));
    p_cast112_fu_4236_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_109_fu_4231_p2),64));
    p_cast113_fu_4226_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_108_fu_4221_p2),64));
    p_cast114_fu_4216_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_107_fu_4211_p2),64));
    p_cast115_fu_4206_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_106_fu_4201_p2),64));
    p_cast116_fu_4196_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_105_fu_4191_p2),64));
    p_cast117_fu_4186_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_104_fu_4181_p2),64));
    p_cast118_fu_4176_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_103_fu_4171_p2),64));
    p_cast119_fu_4166_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_102_fu_4161_p2),64));
    p_cast120_fu_4156_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_101_fu_4151_p2),64));
    p_cast121_fu_4146_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_100_fu_4141_p2),64));
    p_cast122_fu_4136_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_99_fu_4131_p2),64));
    p_cast123_fu_4126_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_98_fu_4121_p2),64));
    p_cast124_fu_4116_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_97_fu_4111_p2),64));
    p_cast125_fu_4106_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_96_fu_4101_p2),64));
    p_cast126_fu_4096_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_95_fu_4091_p2),64));
    p_cast127_fu_4086_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_94_fu_4081_p2),64));
    p_cast128_fu_4076_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_93_fu_4071_p2),64));
    p_cast129_fu_4066_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_92_fu_4061_p2),64));
    p_cast130_fu_4056_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_91_fu_4051_p2),64));
    p_cast131_fu_4046_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_90_fu_4041_p2),64));
    p_cast132_fu_4036_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_89_fu_4031_p2),64));
    p_cast133_fu_4026_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_88_fu_4021_p2),64));
    p_cast134_fu_4016_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_87_fu_4010_p2),64));
    p_cast135_fu_4005_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_86_fu_3999_p2),64));
    p_cast136_fu_3984_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_85_fu_3978_p2),64));
    p_cast137_fu_3973_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_84_fu_3967_p2),64));
    p_cast138_fu_3962_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_83_fu_3956_p2),64));
    p_cast139_fu_3951_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_82_fu_3945_p2),64));
    p_cast140_fu_3940_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_81_fu_3934_p2),64));
    p_cast141_fu_3929_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_80_fu_3923_p2),64));
    p_cast142_fu_3918_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_79_fu_3912_p2),64));
    p_cast143_fu_3907_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_78_fu_3901_p2),64));
    p_cast144_fu_3896_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_77_fu_3890_p2),64));
    p_cast145_fu_3885_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_76_fu_3879_p2),64));
    p_cast146_fu_3874_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_75_fu_3868_p2),64));
    p_cast147_fu_3863_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_74_fu_3857_p2),64));
    p_cast148_fu_3852_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_73_fu_3846_p2),64));
    p_cast149_fu_3841_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_72_fu_3835_p2),64));
    p_cast150_fu_3830_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_71_fu_3824_p2),64));
    p_cast151_fu_3819_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_70_fu_3813_p2),64));
    p_cast152_fu_3808_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_69_fu_3802_p2),64));
    p_cast153_fu_3797_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_68_fu_3791_p2),64));
    p_cast154_fu_3786_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_67_fu_3780_p2),64));
    p_cast155_fu_3775_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_66_fu_3769_p2),64));
    p_cast156_fu_3764_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_65_fu_3758_p2),64));
    p_cast157_fu_3753_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_64_fu_3747_p2),64));
    p_cast158_fu_3742_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_63_fu_3736_p2),64));
    p_cast159_fu_3731_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_62_fu_3725_p2),64));
    p_cast160_fu_3720_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_61_fu_3714_p2),64));
    p_cast161_fu_3709_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_60_fu_3703_p2),64));
    p_cast162_fu_3698_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_59_fu_3692_p2),64));
    p_cast163_fu_3687_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_58_fu_3681_p2),64));
    p_cast164_fu_3676_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_57_fu_3670_p2),64));
    p_cast165_fu_3665_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_56_fu_3659_p2),64));
    p_cast166_fu_3654_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_55_fu_3648_p2),64));
    p_cast167_fu_3643_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_54_fu_3637_p2),64));
    p_cast20_fu_5379_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_214_fu_5374_p2),64));
    p_cast21_fu_5369_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_213_fu_5364_p2),64));
    p_cast22_fu_5359_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_212_fu_5354_p2),64));
    p_cast23_fu_5349_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_211_fu_5344_p2),64));
    p_cast24_fu_5339_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_210_fu_5334_p2),64));
    p_cast25_fu_5329_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_209_fu_5324_p2),64));
    p_cast26_fu_5319_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_208_fu_5314_p2),64));
    p_cast27_fu_5309_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_207_fu_5304_p2),64));
    p_cast28_fu_5299_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_206_fu_5294_p2),64));
    p_cast29_fu_5289_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_205_fu_5284_p2),64));
    p_cast30_fu_5279_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_204_fu_5274_p2),64));
    p_cast31_fu_5269_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_203_fu_5264_p2),64));
    p_cast32_fu_5259_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_202_fu_5254_p2),64));
    p_cast33_fu_5249_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_201_fu_5244_p2),64));
    p_cast34_fu_5239_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_200_fu_5234_p2),64));
    p_cast35_fu_5229_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_199_fu_5224_p2),64));
    p_cast36_fu_5219_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_198_fu_5214_p2),64));
    p_cast37_fu_5209_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_197_fu_5204_p2),64));
    p_cast38_fu_5199_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_196_fu_5194_p2),64));
    p_cast39_fu_5189_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_195_fu_5184_p2),64));
    p_cast40_fu_5179_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_194_fu_5174_p2),64));
    p_cast41_fu_5169_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_193_fu_5164_p2),64));
    p_cast42_fu_5159_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_192_fu_5154_p2),64));
    p_cast43_fu_5149_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_191_fu_5144_p2),64));
    p_cast44_fu_5139_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_190_fu_5134_p2),64));
    p_cast45_fu_5129_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_189_fu_5124_p2),64));
    p_cast46_fu_5119_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_188_fu_5114_p2),64));
    p_cast47_fu_5109_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_187_fu_5104_p2),64));
    p_cast48_fu_5099_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_186_fu_5094_p2),64));
    p_cast49_fu_5089_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_185_fu_5084_p2),64));
    p_cast50_fu_5079_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_184_fu_5074_p2),64));
    p_cast51_fu_5069_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_183_fu_5064_p2),64));
    p_cast52_fu_5059_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_182_fu_5054_p2),64));
    p_cast53_fu_5049_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_181_fu_5044_p2),64));
    p_cast54_fu_5039_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_180_fu_5034_p2),64));
    p_cast55_fu_5029_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_179_fu_5024_p2),64));
    p_cast56_fu_5019_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_178_fu_5014_p2),64));
    p_cast57_fu_5009_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_177_fu_5004_p2),64));
    p_cast58_fu_4999_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_176_fu_4994_p2),64));
    p_cast59_fu_4989_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_175_fu_4983_p2),64));
    p_cast60_fu_4978_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_174_fu_4972_p2),64));
    p_cast61_fu_4957_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_173_fu_4951_p2),64));
    p_cast62_fu_4946_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_172_fu_4940_p2),64));
    p_cast63_fu_4935_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_171_fu_4929_p2),64));
    p_cast64_fu_4924_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_170_fu_4918_p2),64));
    p_cast65_fu_4913_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_169_fu_4907_p2),64));
    p_cast66_fu_4902_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_168_fu_4896_p2),64));
    p_cast67_fu_4891_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_167_fu_4885_p2),64));
    p_cast68_fu_4880_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_166_fu_4874_p2),64));
    p_cast69_fu_4869_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_165_fu_4863_p2),64));
    p_cast70_fu_4858_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_164_fu_4852_p2),64));
    p_cast71_fu_4847_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_163_fu_4841_p2),64));
    p_cast72_fu_4836_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_162_fu_4830_p2),64));
    p_cast73_fu_4825_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_161_fu_4819_p2),64));
    p_cast74_fu_4814_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_160_fu_4808_p2),64));
    p_cast75_fu_4803_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_159_fu_4797_p2),64));
    p_cast76_fu_4792_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_158_fu_4786_p2),64));
    p_cast77_fu_4781_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_157_fu_4775_p2),64));
    p_cast78_fu_4770_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_156_fu_4764_p2),64));
    p_cast79_fu_4759_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_155_fu_4753_p2),64));
    p_cast80_fu_4748_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_154_fu_4742_p2),64));
    p_cast81_fu_4737_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_153_fu_4731_p2),64));
    p_cast82_fu_4726_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_152_fu_4720_p2),64));
    p_cast83_fu_4715_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_151_fu_4709_p2),64));
    p_cast84_fu_4704_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_150_fu_4698_p2),64));
    p_cast85_fu_4693_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_149_fu_4687_p2),64));
    p_cast86_fu_4682_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_148_fu_4676_p2),64));
    p_cast87_fu_4671_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_147_fu_4665_p2),64));
    p_cast88_fu_4660_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_146_fu_4654_p2),64));
    p_cast89_fu_4649_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_145_fu_4643_p2),64));
    p_cast90_fu_4638_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_144_fu_4632_p2),64));
    p_cast91_fu_4627_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_143_fu_4621_p2),64));
    p_cast92_fu_4616_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_142_fu_4610_p2),64));
    p_cast94_fu_4416_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_127_fu_4411_p2),64));
    p_cast95_fu_4406_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_126_fu_4401_p2),64));
    p_cast96_fu_4396_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_125_fu_4391_p2),64));
    p_cast97_fu_4386_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_124_fu_4381_p2),64));
    p_cast98_fu_4376_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_123_fu_4371_p2),64));
    p_cast99_fu_4366_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_122_fu_4361_p2),64));
    p_cast_fu_5389_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_215_fu_5384_p2),64));
    phi_mul15_cast93_fu_4962_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(phi_mul15_reg_3083),15));
    phi_mul15_cast_fu_4605_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(phi_mul15_reg_3083),64));
    phi_mul_cast168_fu_3989_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(phi_mul_reg_3038),15));
    phi_mul_cast_fu_3632_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(phi_mul_reg_3038),64));

    plaintext_address0_assign_proc : process(ap_CS_fsm_state4, grp_verifyProof_23_fu_3198_plaintext_address0, grp_H3_2_fu_3237_plaintext_address0, ap_CS_fsm_state147)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state147)) then 
            plaintext_address0 <= grp_H3_2_fu_3237_plaintext_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            plaintext_address0 <= grp_verifyProof_23_fu_3198_plaintext_address0;
        else 
            plaintext_address0 <= "XXX";
        end if; 
    end process;


    plaintext_ce0_assign_proc : process(ap_CS_fsm_state4, grp_verifyProof_23_fu_3198_plaintext_ce0, grp_H3_2_fu_3237_plaintext_ce0, ap_CS_fsm_state147)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state147)) then 
            plaintext_ce0 <= grp_H3_2_fu_3237_plaintext_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            plaintext_ce0 <= grp_verifyProof_23_fu_3198_plaintext_ce0;
        else 
            plaintext_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    pubKey_address0_assign_proc : process(ap_CS_fsm_state143, grp_H3_2_fu_3237_circuitOutput_address0, ap_CS_fsm_state147, zext_ln1268_1_fu_5653_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state143)) then 
            pubKey_address0 <= zext_ln1268_1_fu_5653_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state147)) then 
            pubKey_address0 <= grp_H3_2_fu_3237_circuitOutput_address0;
        else 
            pubKey_address0 <= "XXX";
        end if; 
    end process;


    pubKey_ce0_assign_proc : process(ap_CS_fsm_state143, grp_H3_2_fu_3237_circuitOutput_ce0, ap_CS_fsm_state147)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state143)) then 
            pubKey_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state147)) then 
            pubKey_ce0 <= grp_H3_2_fu_3237_circuitOutput_ce0;
        else 
            pubKey_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln1251_fu_4525_p3 <= 
        add_ln1251_fu_4504_p2 when (icmp_ln1251_fu_4510_p2(0) = '1') else 
        sext_ln1251_fu_4521_p1;
    select_ln1254_fu_5493_p3 <= 
        add_ln1254_fu_5477_p2 when (icmp_ln1254_fu_5482_p2(0) = '1') else 
        add_ln1254_1_fu_5488_p2;
    select_ln1287_fu_5783_p3 <= 
        status_0_reg_3186 when (icmp_ln1287_fu_5777_p2(0) = '1') else 
        ap_const_lv32_1;
        sext_ln1251_fu_4521_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(xor_ln1251_fu_4516_p2),3));

        sext_ln1263_fu_5604_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_18_fu_5595_p4),64));

        sext_ln1265_fu_5644_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_19_fu_5635_p4),64));

        sext_ln1273_fu_5754_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_20_fu_5745_p4),64));


    sig_0_challengeBits_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state148, zext_ln54_fu_3468_p1, zext_ln1287_fu_5771_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state148)) then 
            sig_0_challengeBits_address0 <= zext_ln1287_fu_5771_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            sig_0_challengeBits_address0 <= zext_ln54_fu_3468_p1(6 - 1 downto 0);
        else 
            sig_0_challengeBits_address0 <= "XXXXXX";
        end if; 
    end process;

    sig_0_challengeBits_address1 <= zext_ln54_fu_3468_p1(6 - 1 downto 0);

    sig_0_challengeBits_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state148)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state148))) then 
            sig_0_challengeBits_ce0 <= ap_const_logic_1;
        else 
            sig_0_challengeBits_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sig_0_challengeBits_ce1_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            sig_0_challengeBits_ce1 <= ap_const_logic_1;
        else 
            sig_0_challengeBits_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    sig_0_proofs_commun_address0 <= grp_verifyProof_23_fu_3198_proof_0_communicatedBits_address0;
    sig_0_proofs_commun_ce0 <= grp_verifyProof_23_fu_3198_proof_0_communicatedBits_ce0;
    sig_0_proofs_inputS_address0 <= grp_verifyProof_23_fu_3198_proof_0_inputShare_address0;
    sig_0_proofs_inputS_ce0 <= grp_verifyProof_23_fu_3198_proof_0_inputShare_ce0;

    sig_0_proofs_seed1_address0_assign_proc : process(ap_CS_fsm_state52, ap_CS_fsm_state4, grp_verifyProof_23_fu_3198_proof_0_seed1_address0, grp_KeccakWidth1600_Spon_5_fu_3300_data_0_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            sig_0_proofs_seed1_address0 <= grp_KeccakWidth1600_Spon_5_fu_3300_data_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            sig_0_proofs_seed1_address0 <= grp_verifyProof_23_fu_3198_proof_0_seed1_address0;
        else 
            sig_0_proofs_seed1_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    sig_0_proofs_seed1_ce0_assign_proc : process(ap_CS_fsm_state52, ap_CS_fsm_state4, grp_verifyProof_23_fu_3198_proof_0_seed1_ce0, grp_KeccakWidth1600_Spon_5_fu_3300_data_0_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            sig_0_proofs_seed1_ce0 <= grp_KeccakWidth1600_Spon_5_fu_3300_data_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            sig_0_proofs_seed1_ce0 <= grp_verifyProof_23_fu_3198_proof_0_seed1_ce0;
        else 
            sig_0_proofs_seed1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sig_0_proofs_seed2_address0_assign_proc : process(ap_CS_fsm_state118, ap_CS_fsm_state4, grp_verifyProof_23_fu_3198_proof_0_seed2_address0, grp_KeccakWidth1600_Spon_5_fu_3300_data_0_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state118)) then 
            sig_0_proofs_seed2_address0 <= grp_KeccakWidth1600_Spon_5_fu_3300_data_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            sig_0_proofs_seed2_address0 <= grp_verifyProof_23_fu_3198_proof_0_seed2_address0;
        else 
            sig_0_proofs_seed2_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    sig_0_proofs_seed2_ce0_assign_proc : process(ap_CS_fsm_state118, ap_CS_fsm_state4, grp_verifyProof_23_fu_3198_proof_0_seed2_ce0, grp_KeccakWidth1600_Spon_5_fu_3300_data_0_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state118)) then 
            sig_0_proofs_seed2_ce0 <= grp_KeccakWidth1600_Spon_5_fu_3300_data_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            sig_0_proofs_seed2_ce0 <= grp_verifyProof_23_fu_3198_proof_0_seed2_ce0;
        else 
            sig_0_proofs_seed2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sig_0_proofs_view3C_address0 <= zext_ln1254_5_fu_5547_p1(13 - 1 downto 0);

    sig_0_proofs_view3C_ce0_assign_proc : process(ap_CS_fsm_state137)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state137)) then 
            sig_0_proofs_view3C_ce0 <= ap_const_logic_1;
        else 
            sig_0_proofs_view3C_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sig_0_salt_address0_assign_proc : process(ap_CS_fsm_state4, grp_verifyProof_23_fu_3198_salt_0_address0, grp_H3_2_fu_3237_salt_0_address0, ap_CS_fsm_state147)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state147)) then 
            sig_0_salt_address0 <= grp_H3_2_fu_3237_salt_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            sig_0_salt_address0 <= grp_verifyProof_23_fu_3198_salt_0_address0;
        else 
            sig_0_salt_address0 <= "XXXXX";
        end if; 
    end process;


    sig_0_salt_ce0_assign_proc : process(ap_CS_fsm_state4, grp_verifyProof_23_fu_3198_salt_0_ce0, grp_H3_2_fu_3237_salt_0_ce0, ap_CS_fsm_state147)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state147)) then 
            sig_0_salt_ce0 <= grp_H3_2_fu_3237_salt_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            sig_0_salt_ce0 <= grp_verifyProof_23_fu_3198_salt_0_ce0;
        else 
            sig_0_salt_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln1254_fu_3429_p2 <= std_logic_vector(unsigned(zext_ln1254_1_fu_3425_p1) - unsigned(zext_ln1236_fu_3401_p1));
    tmp_10_fu_4543_p3 <= (indvar95_reg_3072 & ap_const_lv2_0);
    tmp_11_fu_4562_p3 <= (ap_const_lv54_0 & empty_137_fu_4556_p2);
    tmp_12_fu_4582_p3 <= (ap_const_lv54_0 & empty_138_fu_4577_p2);
    tmp_13_fu_4596_p3 <= (ap_const_lv54_0 & empty_139_fu_4591_p2);
    tmp_14_fu_5412_p3 <= (indvar182_reg_3106 & ap_const_lv2_0);
    tmp_15_fu_5431_p3 <= (ap_const_lv54_0 & empty_219_fu_5425_p2);
    tmp_16_fu_5451_p3 <= (ap_const_lv54_0 & empty_220_fu_5446_p2);
    tmp_17_fu_5465_p3 <= (ap_const_lv54_0 & empty_221_fu_5460_p2);
    tmp_18_fu_5595_p4 <= ((add_ln1263_reg_7747 & ap_const_lv1_0) & loop_1_reg_3128);
    tmp_19_fu_5635_p4 <= ((add_ln1265_reg_7765 & ap_const_lv1_0) & loop_2_reg_3140);
    tmp_1_fu_3623_p3 <= (ap_const_lv54_0 & empty_51_fu_3618_p2);
    tmp_20_fu_5745_p4 <= ((add_ln1273_reg_7811 & ap_const_lv1_0) & loop_3_reg_3163);
    tmp_25_cast_fu_5510_p3 <= (add_ln1254_2_fu_5505_p2 & ap_const_lv5_0);
    tmp_2_fu_4439_p3 <= (indvar87_reg_3061 & ap_const_lv2_0);
    tmp_3_fu_4458_p3 <= (ap_const_lv54_0 & empty_131_fu_4452_p2);
    tmp_4_fu_3405_p3 <= (round_assign_reg_2992 & ap_const_lv5_0);
    tmp_5_fu_3417_p3 <= (round_assign_reg_2992 & ap_const_lv2_0);
    tmp_6_fu_4478_p3 <= (ap_const_lv54_0 & empty_132_fu_4473_p2);
    tmp_7_fu_4492_p3 <= (ap_const_lv54_0 & empty_133_fu_4487_p2);
    tmp_8_fu_3570_p3 <= (indvar_reg_3027 & ap_const_lv2_0);
    tmp_9_fu_3589_p3 <= (ap_const_lv54_0 & empty_49_fu_3583_p2);
    tmp_s_fu_3609_p3 <= (ap_const_lv54_0 & empty_50_fu_3604_p2);
    trunc_ln386_1_fu_3501_p1 <= lshr_ln54_fu_3495_p2(1 - 1 downto 0);
    trunc_ln386_2_fu_3540_p1 <= lshr_ln54_2_fu_3534_p2(1 - 1 downto 0);
    trunc_ln386_fu_3473_p1 <= round_assign_reg_2992(2 - 1 downto 0);
    trunc_ln54_1_fu_3550_p1 <= lshr_ln54_3_fu_3544_p2(1 - 1 downto 0);
    trunc_ln54_fu_3521_p1 <= lshr_ln54_1_fu_3515_p2(1 - 1 downto 0);
    trunc_ln81_fu_5474_p1 <= select_ln1251_reg_6786(2 - 1 downto 0);
    trunc_ln_fu_3458_p4 <= round_assign_reg_2992(7 downto 2);

    view1s_communicatedB_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, phi_mul_cast_fu_3632_p1, ap_CS_fsm_state8, p_cast167_fu_3643_p1, ap_CS_fsm_state9, ap_CS_fsm_state10, p_cast164_fu_3676_p1, ap_CS_fsm_state11, p_cast162_fu_3698_p1, ap_CS_fsm_state12, p_cast160_fu_3720_p1, ap_CS_fsm_state13, p_cast158_fu_3742_p1, ap_CS_fsm_state14, p_cast156_fu_3764_p1, ap_CS_fsm_state15, p_cast154_fu_3786_p1, ap_CS_fsm_state16, p_cast152_fu_3808_p1, ap_CS_fsm_state17, p_cast150_fu_3830_p1, ap_CS_fsm_state18, p_cast148_fu_3852_p1, ap_CS_fsm_state19, p_cast146_fu_3874_p1, ap_CS_fsm_state20, p_cast144_fu_3896_p1, ap_CS_fsm_state21, p_cast142_fu_3918_p1, ap_CS_fsm_state22, p_cast140_fu_3940_p1, ap_CS_fsm_state23, p_cast138_fu_3962_p1, ap_CS_fsm_state24, p_cast136_fu_3984_p1, ap_CS_fsm_state25, p_cast134_fu_4016_p1, ap_CS_fsm_state26, p_cast132_fu_4036_p1, ap_CS_fsm_state27, p_cast130_fu_4056_p1, ap_CS_fsm_state28, p_cast128_fu_4076_p1, ap_CS_fsm_state29, p_cast126_fu_4096_p1, ap_CS_fsm_state30, p_cast124_fu_4116_p1, ap_CS_fsm_state31, p_cast122_fu_4136_p1, ap_CS_fsm_state32, p_cast120_fu_4156_p1, ap_CS_fsm_state33, p_cast118_fu_4176_p1, ap_CS_fsm_state34, p_cast116_fu_4196_p1, ap_CS_fsm_state35, p_cast114_fu_4216_p1, ap_CS_fsm_state36, p_cast112_fu_4236_p1, ap_CS_fsm_state37, p_cast110_fu_4256_p1, ap_CS_fsm_state38, p_cast108_fu_4276_p1, ap_CS_fsm_state39, p_cast106_fu_4296_p1, ap_CS_fsm_state40, p_cast104_fu_4316_p1, ap_CS_fsm_state41, p_cast102_fu_4336_p1, ap_CS_fsm_state42, p_cast100_fu_4356_p1, ap_CS_fsm_state43, p_cast98_fu_4376_p1, ap_CS_fsm_state44, p_cast96_fu_4396_p1, ap_CS_fsm_state45, p_cast94_fu_4416_p1, grp_verifyProof_23_fu_3198_view1_communicatedBits_address0, zext_ln1241_fu_3441_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            view1s_communicatedB_address0 <= p_cast94_fu_4416_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            view1s_communicatedB_address0 <= p_cast96_fu_4396_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            view1s_communicatedB_address0 <= p_cast98_fu_4376_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            view1s_communicatedB_address0 <= p_cast100_fu_4356_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            view1s_communicatedB_address0 <= p_cast102_fu_4336_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            view1s_communicatedB_address0 <= p_cast104_fu_4316_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            view1s_communicatedB_address0 <= p_cast106_fu_4296_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            view1s_communicatedB_address0 <= p_cast108_fu_4276_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            view1s_communicatedB_address0 <= p_cast110_fu_4256_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            view1s_communicatedB_address0 <= p_cast112_fu_4236_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            view1s_communicatedB_address0 <= p_cast114_fu_4216_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            view1s_communicatedB_address0 <= p_cast116_fu_4196_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            view1s_communicatedB_address0 <= p_cast118_fu_4176_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            view1s_communicatedB_address0 <= p_cast120_fu_4156_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            view1s_communicatedB_address0 <= p_cast122_fu_4136_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            view1s_communicatedB_address0 <= p_cast124_fu_4116_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            view1s_communicatedB_address0 <= p_cast126_fu_4096_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            view1s_communicatedB_address0 <= p_cast128_fu_4076_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            view1s_communicatedB_address0 <= p_cast130_fu_4056_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            view1s_communicatedB_address0 <= p_cast132_fu_4036_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            view1s_communicatedB_address0 <= p_cast134_fu_4016_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            view1s_communicatedB_address0 <= p_cast136_fu_3984_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            view1s_communicatedB_address0 <= p_cast138_fu_3962_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            view1s_communicatedB_address0 <= p_cast140_fu_3940_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            view1s_communicatedB_address0 <= p_cast142_fu_3918_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            view1s_communicatedB_address0 <= p_cast144_fu_3896_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            view1s_communicatedB_address0 <= p_cast146_fu_3874_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            view1s_communicatedB_address0 <= p_cast148_fu_3852_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            view1s_communicatedB_address0 <= p_cast150_fu_3830_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            view1s_communicatedB_address0 <= p_cast152_fu_3808_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            view1s_communicatedB_address0 <= p_cast154_fu_3786_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            view1s_communicatedB_address0 <= p_cast156_fu_3764_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            view1s_communicatedB_address0 <= p_cast158_fu_3742_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            view1s_communicatedB_address0 <= p_cast160_fu_3720_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            view1s_communicatedB_address0 <= p_cast162_fu_3698_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            view1s_communicatedB_address0 <= p_cast164_fu_3676_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            view1s_communicatedB_address0 <= p_cast167_fu_3643_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            view1s_communicatedB_address0 <= phi_mul_cast_fu_3632_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            view1s_communicatedB_address0 <= zext_ln1241_fu_3441_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            view1s_communicatedB_address0 <= grp_verifyProof_23_fu_3198_view1_communicatedBits_address0;
        else 
            view1s_communicatedB_address0 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    view1s_communicatedB_address1_assign_proc : process(ap_CS_fsm_state9, p_cast166_fu_3654_p1, p_cast165_fu_3665_p1, ap_CS_fsm_state10, p_cast163_fu_3687_p1, ap_CS_fsm_state11, p_cast161_fu_3709_p1, ap_CS_fsm_state12, p_cast159_fu_3731_p1, ap_CS_fsm_state13, p_cast157_fu_3753_p1, ap_CS_fsm_state14, p_cast155_fu_3775_p1, ap_CS_fsm_state15, p_cast153_fu_3797_p1, ap_CS_fsm_state16, p_cast151_fu_3819_p1, ap_CS_fsm_state17, p_cast149_fu_3841_p1, ap_CS_fsm_state18, p_cast147_fu_3863_p1, ap_CS_fsm_state19, p_cast145_fu_3885_p1, ap_CS_fsm_state20, p_cast143_fu_3907_p1, ap_CS_fsm_state21, p_cast141_fu_3929_p1, ap_CS_fsm_state22, p_cast139_fu_3951_p1, ap_CS_fsm_state23, p_cast137_fu_3973_p1, ap_CS_fsm_state24, ap_CS_fsm_state25, p_cast135_fu_4005_p1, p_cast133_fu_4026_p1, ap_CS_fsm_state26, p_cast131_fu_4046_p1, ap_CS_fsm_state27, p_cast129_fu_4066_p1, ap_CS_fsm_state28, p_cast127_fu_4086_p1, ap_CS_fsm_state29, p_cast125_fu_4106_p1, ap_CS_fsm_state30, p_cast123_fu_4126_p1, ap_CS_fsm_state31, p_cast121_fu_4146_p1, ap_CS_fsm_state32, p_cast119_fu_4166_p1, ap_CS_fsm_state33, p_cast117_fu_4186_p1, ap_CS_fsm_state34, p_cast115_fu_4206_p1, ap_CS_fsm_state35, p_cast113_fu_4226_p1, ap_CS_fsm_state36, p_cast111_fu_4246_p1, ap_CS_fsm_state37, p_cast109_fu_4266_p1, ap_CS_fsm_state38, p_cast107_fu_4286_p1, ap_CS_fsm_state39, p_cast105_fu_4306_p1, ap_CS_fsm_state40, p_cast103_fu_4326_p1, ap_CS_fsm_state41, p_cast101_fu_4346_p1, ap_CS_fsm_state42, p_cast99_fu_4366_p1, ap_CS_fsm_state43, p_cast97_fu_4386_p1, ap_CS_fsm_state44, p_cast95_fu_4406_p1, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            view1s_communicatedB_address1 <= p_cast95_fu_4406_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            view1s_communicatedB_address1 <= p_cast97_fu_4386_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            view1s_communicatedB_address1 <= p_cast99_fu_4366_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            view1s_communicatedB_address1 <= p_cast101_fu_4346_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            view1s_communicatedB_address1 <= p_cast103_fu_4326_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            view1s_communicatedB_address1 <= p_cast105_fu_4306_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            view1s_communicatedB_address1 <= p_cast107_fu_4286_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            view1s_communicatedB_address1 <= p_cast109_fu_4266_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            view1s_communicatedB_address1 <= p_cast111_fu_4246_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            view1s_communicatedB_address1 <= p_cast113_fu_4226_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            view1s_communicatedB_address1 <= p_cast115_fu_4206_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            view1s_communicatedB_address1 <= p_cast117_fu_4186_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            view1s_communicatedB_address1 <= p_cast119_fu_4166_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            view1s_communicatedB_address1 <= p_cast121_fu_4146_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            view1s_communicatedB_address1 <= p_cast123_fu_4126_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            view1s_communicatedB_address1 <= p_cast125_fu_4106_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            view1s_communicatedB_address1 <= p_cast127_fu_4086_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            view1s_communicatedB_address1 <= p_cast129_fu_4066_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            view1s_communicatedB_address1 <= p_cast131_fu_4046_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            view1s_communicatedB_address1 <= p_cast133_fu_4026_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            view1s_communicatedB_address1 <= p_cast135_fu_4005_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            view1s_communicatedB_address1 <= p_cast137_fu_3973_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            view1s_communicatedB_address1 <= p_cast139_fu_3951_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            view1s_communicatedB_address1 <= p_cast141_fu_3929_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            view1s_communicatedB_address1 <= p_cast143_fu_3907_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            view1s_communicatedB_address1 <= p_cast145_fu_3885_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            view1s_communicatedB_address1 <= p_cast147_fu_3863_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            view1s_communicatedB_address1 <= p_cast149_fu_3841_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            view1s_communicatedB_address1 <= p_cast151_fu_3819_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            view1s_communicatedB_address1 <= p_cast153_fu_3797_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            view1s_communicatedB_address1 <= p_cast155_fu_3775_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            view1s_communicatedB_address1 <= p_cast157_fu_3753_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            view1s_communicatedB_address1 <= p_cast159_fu_3731_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            view1s_communicatedB_address1 <= p_cast161_fu_3709_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            view1s_communicatedB_address1 <= p_cast163_fu_3687_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            view1s_communicatedB_address1 <= p_cast165_fu_3665_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            view1s_communicatedB_address1 <= p_cast166_fu_3654_p1(15 - 1 downto 0);
        else 
            view1s_communicatedB_address1 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    view1s_communicatedB_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, grp_verifyProof_23_fu_3198_view1_communicatedBits_ce0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            view1s_communicatedB_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            view1s_communicatedB_ce0 <= grp_verifyProof_23_fu_3198_view1_communicatedBits_ce0;
        else 
            view1s_communicatedB_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    view1s_communicatedB_ce1_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            view1s_communicatedB_ce1 <= ap_const_logic_1;
        else 
            view1s_communicatedB_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    view1s_communicatedB_d0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, grp_verifyProof_23_fu_3198_view1_communicatedBits_d0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            view1s_communicatedB_d0 <= ap_const_lv8_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            view1s_communicatedB_d0 <= grp_verifyProof_23_fu_3198_view1_communicatedBits_d0;
        else 
            view1s_communicatedB_d0 <= "XXXXXXXX";
        end if; 
    end process;


    view1s_communicatedB_we0_assign_proc : process(ap_CS_fsm_state2, icmp_ln1236_fu_3446_p2, ap_CS_fsm_state4, grp_verifyProof_23_fu_3198_view1_communicatedBits_we0)
    begin
        if (((icmp_ln1236_fu_3446_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            view1s_communicatedB_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            view1s_communicatedB_we0 <= grp_verifyProof_23_fu_3198_view1_communicatedBits_we0;
        else 
            view1s_communicatedB_we0 <= ap_const_logic_0;
        end if; 
    end process;


    view1s_inputShare1_address0_assign_proc : process(ap_CS_fsm_state62, empty_48_reg_5874, tmp_s_reg_5898, ap_CS_fsm_state6, grp_HashUpdate_2_1_fu_3273_data_address0, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            view1s_inputShare1_address0 <= tmp_s_reg_5898(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            view1s_inputShare1_address0 <= empty_48_reg_5874(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            view1s_inputShare1_address0 <= grp_HashUpdate_2_1_fu_3273_data_address0;
        else 
            view1s_inputShare1_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    view1s_inputShare1_address1_assign_proc : process(tmp_9_reg_5879, ap_CS_fsm_state6, tmp_1_reg_5903, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            view1s_inputShare1_address1 <= tmp_1_reg_5903(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            view1s_inputShare1_address1 <= tmp_9_reg_5879(10 - 1 downto 0);
        else 
            view1s_inputShare1_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    view1s_inputShare1_ce0_assign_proc : process(ap_CS_fsm_state62, ap_CS_fsm_state6, grp_HashUpdate_2_1_fu_3273_data_ce0, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            view1s_inputShare1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            view1s_inputShare1_ce0 <= grp_HashUpdate_2_1_fu_3273_data_ce0;
        else 
            view1s_inputShare1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    view1s_inputShare1_ce1_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            view1s_inputShare1_ce1 <= ap_const_logic_1;
        else 
            view1s_inputShare1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    view1s_inputShare1_we0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            view1s_inputShare1_we0 <= ap_const_logic_1;
        else 
            view1s_inputShare1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    view1s_inputShare1_we1_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            view1s_inputShare1_we1 <= ap_const_logic_1;
        else 
            view1s_inputShare1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    view1s_inputShare_address0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, empty_48_fu_3578_p1, tmp_s_fu_3609_p3, ap_CS_fsm_state6, grp_verifyProof_23_fu_3198_view1_inputShare_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            view1s_inputShare_address0 <= tmp_s_fu_3609_p3(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            view1s_inputShare_address0 <= empty_48_fu_3578_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            view1s_inputShare_address0 <= grp_verifyProof_23_fu_3198_view1_inputShare_address0;
        else 
            view1s_inputShare_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    view1s_inputShare_address1_assign_proc : process(ap_CS_fsm_state5, tmp_9_fu_3589_p3, ap_CS_fsm_state6, tmp_1_fu_3623_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            view1s_inputShare_address1 <= tmp_1_fu_3623_p3(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            view1s_inputShare_address1 <= tmp_9_fu_3589_p3(10 - 1 downto 0);
        else 
            view1s_inputShare_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    view1s_inputShare_ce0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, grp_verifyProof_23_fu_3198_view1_inputShare_ce0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            view1s_inputShare_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            view1s_inputShare_ce0 <= grp_verifyProof_23_fu_3198_view1_inputShare_ce0;
        else 
            view1s_inputShare_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    view1s_inputShare_ce1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            view1s_inputShare_ce1 <= ap_const_logic_1;
        else 
            view1s_inputShare_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    view1s_inputShare_we0_assign_proc : process(ap_CS_fsm_state4, grp_verifyProof_23_fu_3198_view1_inputShare_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            view1s_inputShare_we0 <= grp_verifyProof_23_fu_3198_view1_inputShare_we0;
        else 
            view1s_inputShare_we0 <= ap_const_logic_0;
        end if; 
    end process;


    view1s_outputShare85_address0_assign_proc : process(ap_CS_fsm_state66, empty_130_reg_6736, tmp_6_reg_6760, ap_CS_fsm_state48, grp_HashUpdate_2_1_fu_3273_data_address0, ap_CS_fsm_state49)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            view1s_outputShare85_address0 <= tmp_6_reg_6760(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            view1s_outputShare85_address0 <= empty_130_reg_6736(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            view1s_outputShare85_address0 <= grp_HashUpdate_2_1_fu_3273_data_address0;
        else 
            view1s_outputShare85_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    view1s_outputShare85_address1_assign_proc : process(tmp_3_reg_6741, ap_CS_fsm_state48, tmp_7_reg_6765, ap_CS_fsm_state49)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            view1s_outputShare85_address1 <= tmp_7_reg_6765(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            view1s_outputShare85_address1 <= tmp_3_reg_6741(10 - 1 downto 0);
        else 
            view1s_outputShare85_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    view1s_outputShare85_ce0_assign_proc : process(ap_CS_fsm_state66, ap_CS_fsm_state48, grp_HashUpdate_2_1_fu_3273_data_ce0, ap_CS_fsm_state49)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state48))) then 
            view1s_outputShare85_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            view1s_outputShare85_ce0 <= grp_HashUpdate_2_1_fu_3273_data_ce0;
        else 
            view1s_outputShare85_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    view1s_outputShare85_ce1_assign_proc : process(ap_CS_fsm_state48, ap_CS_fsm_state49)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state48))) then 
            view1s_outputShare85_ce1 <= ap_const_logic_1;
        else 
            view1s_outputShare85_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    view1s_outputShare85_we0_assign_proc : process(ap_CS_fsm_state48, ap_CS_fsm_state49)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state48))) then 
            view1s_outputShare85_we0 <= ap_const_logic_1;
        else 
            view1s_outputShare85_we0 <= ap_const_logic_0;
        end if; 
    end process;


    view1s_outputShare85_we1_assign_proc : process(ap_CS_fsm_state48, ap_CS_fsm_state49)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state48))) then 
            view1s_outputShare85_we1 <= ap_const_logic_1;
        else 
            view1s_outputShare85_we1 <= ap_const_logic_0;
        end if; 
    end process;


    view1s_outputShare_address0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state47, empty_130_fu_4447_p1, tmp_6_fu_4478_p3, ap_CS_fsm_state48, ap_CS_fsm_state139, grp_verifyProof_23_fu_3198_view1_outputShare_address0, zext_ln1263_1_fu_5586_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state139)) then 
            view1s_outputShare_address0 <= zext_ln1263_1_fu_5586_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            view1s_outputShare_address0 <= tmp_6_fu_4478_p3(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            view1s_outputShare_address0 <= empty_130_fu_4447_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            view1s_outputShare_address0 <= grp_verifyProof_23_fu_3198_view1_outputShare_address0;
        else 
            view1s_outputShare_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    view1s_outputShare_address1_assign_proc : process(ap_CS_fsm_state47, tmp_3_fu_4458_p3, ap_CS_fsm_state48, tmp_7_fu_4492_p3, ap_CS_fsm_state143, zext_ln1269_2_fu_5667_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state143)) then 
            view1s_outputShare_address1 <= zext_ln1269_2_fu_5667_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            view1s_outputShare_address1 <= tmp_7_fu_4492_p3(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            view1s_outputShare_address1 <= tmp_3_fu_4458_p3(10 - 1 downto 0);
        else 
            view1s_outputShare_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    view1s_outputShare_ce0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state139, grp_verifyProof_23_fu_3198_view1_outputShare_ce0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state139) or (ap_const_logic_1 = ap_CS_fsm_state48))) then 
            view1s_outputShare_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            view1s_outputShare_ce0 <= grp_verifyProof_23_fu_3198_view1_outputShare_ce0;
        else 
            view1s_outputShare_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    view1s_outputShare_ce1_assign_proc : process(ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state143)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state143) or (ap_const_logic_1 = ap_CS_fsm_state48))) then 
            view1s_outputShare_ce1 <= ap_const_logic_1;
        else 
            view1s_outputShare_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    view1s_outputShare_we0_assign_proc : process(ap_CS_fsm_state4, grp_verifyProof_23_fu_3198_view1_outputShare_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            view1s_outputShare_we0 <= grp_verifyProof_23_fu_3198_view1_outputShare_we0;
        else 
            view1s_outputShare_we0 <= ap_const_logic_0;
        end if; 
    end process;


    view2s_communicatedB_address0_assign_proc : process(ap_CS_fsm_state4, phi_mul15_cast_fu_4605_p1, ap_CS_fsm_state74, p_cast92_fu_4616_p1, ap_CS_fsm_state75, ap_CS_fsm_state76, p_cast89_fu_4649_p1, ap_CS_fsm_state77, p_cast87_fu_4671_p1, ap_CS_fsm_state78, p_cast85_fu_4693_p1, ap_CS_fsm_state79, p_cast83_fu_4715_p1, ap_CS_fsm_state80, p_cast81_fu_4737_p1, ap_CS_fsm_state81, p_cast79_fu_4759_p1, ap_CS_fsm_state82, p_cast77_fu_4781_p1, ap_CS_fsm_state83, p_cast75_fu_4803_p1, ap_CS_fsm_state84, p_cast73_fu_4825_p1, ap_CS_fsm_state85, p_cast71_fu_4847_p1, ap_CS_fsm_state86, p_cast69_fu_4869_p1, ap_CS_fsm_state87, p_cast67_fu_4891_p1, ap_CS_fsm_state88, p_cast65_fu_4913_p1, ap_CS_fsm_state89, p_cast63_fu_4935_p1, ap_CS_fsm_state90, p_cast61_fu_4957_p1, ap_CS_fsm_state91, p_cast59_fu_4989_p1, ap_CS_fsm_state92, p_cast57_fu_5009_p1, ap_CS_fsm_state93, p_cast55_fu_5029_p1, ap_CS_fsm_state94, p_cast53_fu_5049_p1, ap_CS_fsm_state95, p_cast51_fu_5069_p1, ap_CS_fsm_state96, p_cast49_fu_5089_p1, ap_CS_fsm_state97, p_cast47_fu_5109_p1, ap_CS_fsm_state98, p_cast45_fu_5129_p1, ap_CS_fsm_state99, p_cast43_fu_5149_p1, ap_CS_fsm_state100, p_cast41_fu_5169_p1, ap_CS_fsm_state101, p_cast39_fu_5189_p1, ap_CS_fsm_state102, p_cast37_fu_5209_p1, ap_CS_fsm_state103, p_cast35_fu_5229_p1, ap_CS_fsm_state104, p_cast33_fu_5249_p1, ap_CS_fsm_state105, p_cast31_fu_5269_p1, ap_CS_fsm_state106, p_cast29_fu_5289_p1, ap_CS_fsm_state107, p_cast27_fu_5309_p1, ap_CS_fsm_state108, p_cast25_fu_5329_p1, ap_CS_fsm_state109, p_cast23_fu_5349_p1, ap_CS_fsm_state110, p_cast21_fu_5369_p1, ap_CS_fsm_state111, p_cast_fu_5389_p1, grp_verifyProof_23_fu_3198_view2_communicatedBits_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
            view2s_communicatedB_address0 <= p_cast_fu_5389_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state110)) then 
            view2s_communicatedB_address0 <= p_cast21_fu_5369_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state109)) then 
            view2s_communicatedB_address0 <= p_cast23_fu_5349_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state108)) then 
            view2s_communicatedB_address0 <= p_cast25_fu_5329_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state107)) then 
            view2s_communicatedB_address0 <= p_cast27_fu_5309_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state106)) then 
            view2s_communicatedB_address0 <= p_cast29_fu_5289_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state105)) then 
            view2s_communicatedB_address0 <= p_cast31_fu_5269_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state104)) then 
            view2s_communicatedB_address0 <= p_cast33_fu_5249_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state103)) then 
            view2s_communicatedB_address0 <= p_cast35_fu_5229_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state102)) then 
            view2s_communicatedB_address0 <= p_cast37_fu_5209_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
            view2s_communicatedB_address0 <= p_cast39_fu_5189_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state100)) then 
            view2s_communicatedB_address0 <= p_cast41_fu_5169_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
            view2s_communicatedB_address0 <= p_cast43_fu_5149_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state98)) then 
            view2s_communicatedB_address0 <= p_cast45_fu_5129_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            view2s_communicatedB_address0 <= p_cast47_fu_5109_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state96)) then 
            view2s_communicatedB_address0 <= p_cast49_fu_5089_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state95)) then 
            view2s_communicatedB_address0 <= p_cast51_fu_5069_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            view2s_communicatedB_address0 <= p_cast53_fu_5049_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state93)) then 
            view2s_communicatedB_address0 <= p_cast55_fu_5029_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            view2s_communicatedB_address0 <= p_cast57_fu_5009_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state91)) then 
            view2s_communicatedB_address0 <= p_cast59_fu_4989_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
            view2s_communicatedB_address0 <= p_cast61_fu_4957_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
            view2s_communicatedB_address0 <= p_cast63_fu_4935_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state88)) then 
            view2s_communicatedB_address0 <= p_cast65_fu_4913_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
            view2s_communicatedB_address0 <= p_cast67_fu_4891_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state86)) then 
            view2s_communicatedB_address0 <= p_cast69_fu_4869_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            view2s_communicatedB_address0 <= p_cast71_fu_4847_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            view2s_communicatedB_address0 <= p_cast73_fu_4825_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
            view2s_communicatedB_address0 <= p_cast75_fu_4803_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            view2s_communicatedB_address0 <= p_cast77_fu_4781_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state81)) then 
            view2s_communicatedB_address0 <= p_cast79_fu_4759_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            view2s_communicatedB_address0 <= p_cast81_fu_4737_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state79)) then 
            view2s_communicatedB_address0 <= p_cast83_fu_4715_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state78)) then 
            view2s_communicatedB_address0 <= p_cast85_fu_4693_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            view2s_communicatedB_address0 <= p_cast87_fu_4671_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            view2s_communicatedB_address0 <= p_cast89_fu_4649_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            view2s_communicatedB_address0 <= p_cast92_fu_4616_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            view2s_communicatedB_address0 <= phi_mul15_cast_fu_4605_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            view2s_communicatedB_address0 <= grp_verifyProof_23_fu_3198_view2_communicatedBits_address0;
        else 
            view2s_communicatedB_address0 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    view2s_communicatedB_address1_assign_proc : process(ap_CS_fsm_state75, p_cast91_fu_4627_p1, p_cast90_fu_4638_p1, ap_CS_fsm_state76, p_cast88_fu_4660_p1, ap_CS_fsm_state77, p_cast86_fu_4682_p1, ap_CS_fsm_state78, p_cast84_fu_4704_p1, ap_CS_fsm_state79, p_cast82_fu_4726_p1, ap_CS_fsm_state80, p_cast80_fu_4748_p1, ap_CS_fsm_state81, p_cast78_fu_4770_p1, ap_CS_fsm_state82, p_cast76_fu_4792_p1, ap_CS_fsm_state83, p_cast74_fu_4814_p1, ap_CS_fsm_state84, p_cast72_fu_4836_p1, ap_CS_fsm_state85, p_cast70_fu_4858_p1, ap_CS_fsm_state86, p_cast68_fu_4880_p1, ap_CS_fsm_state87, p_cast66_fu_4902_p1, ap_CS_fsm_state88, p_cast64_fu_4924_p1, ap_CS_fsm_state89, p_cast62_fu_4946_p1, ap_CS_fsm_state90, ap_CS_fsm_state91, p_cast60_fu_4978_p1, p_cast58_fu_4999_p1, ap_CS_fsm_state92, p_cast56_fu_5019_p1, ap_CS_fsm_state93, p_cast54_fu_5039_p1, ap_CS_fsm_state94, p_cast52_fu_5059_p1, ap_CS_fsm_state95, p_cast50_fu_5079_p1, ap_CS_fsm_state96, p_cast48_fu_5099_p1, ap_CS_fsm_state97, p_cast46_fu_5119_p1, ap_CS_fsm_state98, p_cast44_fu_5139_p1, ap_CS_fsm_state99, p_cast42_fu_5159_p1, ap_CS_fsm_state100, p_cast40_fu_5179_p1, ap_CS_fsm_state101, p_cast38_fu_5199_p1, ap_CS_fsm_state102, p_cast36_fu_5219_p1, ap_CS_fsm_state103, p_cast34_fu_5239_p1, ap_CS_fsm_state104, p_cast32_fu_5259_p1, ap_CS_fsm_state105, p_cast30_fu_5279_p1, ap_CS_fsm_state106, p_cast28_fu_5299_p1, ap_CS_fsm_state107, p_cast26_fu_5319_p1, ap_CS_fsm_state108, p_cast24_fu_5339_p1, ap_CS_fsm_state109, p_cast22_fu_5359_p1, ap_CS_fsm_state110, p_cast20_fu_5379_p1, ap_CS_fsm_state111)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
            view2s_communicatedB_address1 <= p_cast20_fu_5379_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state110)) then 
            view2s_communicatedB_address1 <= p_cast22_fu_5359_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state109)) then 
            view2s_communicatedB_address1 <= p_cast24_fu_5339_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state108)) then 
            view2s_communicatedB_address1 <= p_cast26_fu_5319_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state107)) then 
            view2s_communicatedB_address1 <= p_cast28_fu_5299_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state106)) then 
            view2s_communicatedB_address1 <= p_cast30_fu_5279_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state105)) then 
            view2s_communicatedB_address1 <= p_cast32_fu_5259_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state104)) then 
            view2s_communicatedB_address1 <= p_cast34_fu_5239_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state103)) then 
            view2s_communicatedB_address1 <= p_cast36_fu_5219_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state102)) then 
            view2s_communicatedB_address1 <= p_cast38_fu_5199_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
            view2s_communicatedB_address1 <= p_cast40_fu_5179_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state100)) then 
            view2s_communicatedB_address1 <= p_cast42_fu_5159_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
            view2s_communicatedB_address1 <= p_cast44_fu_5139_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state98)) then 
            view2s_communicatedB_address1 <= p_cast46_fu_5119_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            view2s_communicatedB_address1 <= p_cast48_fu_5099_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state96)) then 
            view2s_communicatedB_address1 <= p_cast50_fu_5079_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state95)) then 
            view2s_communicatedB_address1 <= p_cast52_fu_5059_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            view2s_communicatedB_address1 <= p_cast54_fu_5039_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state93)) then 
            view2s_communicatedB_address1 <= p_cast56_fu_5019_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            view2s_communicatedB_address1 <= p_cast58_fu_4999_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state91)) then 
            view2s_communicatedB_address1 <= p_cast60_fu_4978_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
            view2s_communicatedB_address1 <= p_cast62_fu_4946_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
            view2s_communicatedB_address1 <= p_cast64_fu_4924_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state88)) then 
            view2s_communicatedB_address1 <= p_cast66_fu_4902_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
            view2s_communicatedB_address1 <= p_cast68_fu_4880_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state86)) then 
            view2s_communicatedB_address1 <= p_cast70_fu_4858_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            view2s_communicatedB_address1 <= p_cast72_fu_4836_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            view2s_communicatedB_address1 <= p_cast74_fu_4814_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
            view2s_communicatedB_address1 <= p_cast76_fu_4792_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            view2s_communicatedB_address1 <= p_cast78_fu_4770_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state81)) then 
            view2s_communicatedB_address1 <= p_cast80_fu_4748_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            view2s_communicatedB_address1 <= p_cast82_fu_4726_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state79)) then 
            view2s_communicatedB_address1 <= p_cast84_fu_4704_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state78)) then 
            view2s_communicatedB_address1 <= p_cast86_fu_4682_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            view2s_communicatedB_address1 <= p_cast88_fu_4660_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            view2s_communicatedB_address1 <= p_cast90_fu_4638_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            view2s_communicatedB_address1 <= p_cast91_fu_4627_p1(15 - 1 downto 0);
        else 
            view2s_communicatedB_address1 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    view2s_communicatedB_ce0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state74, ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state79, ap_CS_fsm_state80, ap_CS_fsm_state81, ap_CS_fsm_state82, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85, ap_CS_fsm_state86, ap_CS_fsm_state87, ap_CS_fsm_state88, ap_CS_fsm_state89, ap_CS_fsm_state90, ap_CS_fsm_state91, ap_CS_fsm_state92, ap_CS_fsm_state93, ap_CS_fsm_state94, ap_CS_fsm_state95, ap_CS_fsm_state96, ap_CS_fsm_state97, ap_CS_fsm_state98, ap_CS_fsm_state99, ap_CS_fsm_state100, ap_CS_fsm_state101, ap_CS_fsm_state102, ap_CS_fsm_state103, ap_CS_fsm_state104, ap_CS_fsm_state105, ap_CS_fsm_state106, ap_CS_fsm_state107, ap_CS_fsm_state108, ap_CS_fsm_state109, ap_CS_fsm_state110, ap_CS_fsm_state111, grp_verifyProof_23_fu_3198_view2_communicatedBits_ce0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state111) or (ap_const_logic_1 = ap_CS_fsm_state110) or (ap_const_logic_1 = ap_CS_fsm_state109) or (ap_const_logic_1 = ap_CS_fsm_state108) or (ap_const_logic_1 = ap_CS_fsm_state107) or (ap_const_logic_1 = ap_CS_fsm_state106) or (ap_const_logic_1 = ap_CS_fsm_state105) or (ap_const_logic_1 = ap_CS_fsm_state104) or (ap_const_logic_1 = ap_CS_fsm_state103) or (ap_const_logic_1 = ap_CS_fsm_state102) or (ap_const_logic_1 = ap_CS_fsm_state101) or (ap_const_logic_1 = ap_CS_fsm_state100) or (ap_const_logic_1 = ap_CS_fsm_state99) or (ap_const_logic_1 = ap_CS_fsm_state98) or (ap_const_logic_1 = ap_CS_fsm_state97) or (ap_const_logic_1 = ap_CS_fsm_state96) or (ap_const_logic_1 = ap_CS_fsm_state95) or (ap_const_logic_1 = ap_CS_fsm_state94) or (ap_const_logic_1 = ap_CS_fsm_state93) or (ap_const_logic_1 = ap_CS_fsm_state92) or (ap_const_logic_1 = ap_CS_fsm_state91) or (ap_const_logic_1 = ap_CS_fsm_state90) or (ap_const_logic_1 = ap_CS_fsm_state89) or (ap_const_logic_1 = ap_CS_fsm_state88) or (ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state81) or (ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state75) or (ap_const_logic_1 = ap_CS_fsm_state74))) then 
            view2s_communicatedB_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            view2s_communicatedB_ce0 <= grp_verifyProof_23_fu_3198_view2_communicatedBits_ce0;
        else 
            view2s_communicatedB_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    view2s_communicatedB_ce1_assign_proc : process(ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state79, ap_CS_fsm_state80, ap_CS_fsm_state81, ap_CS_fsm_state82, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85, ap_CS_fsm_state86, ap_CS_fsm_state87, ap_CS_fsm_state88, ap_CS_fsm_state89, ap_CS_fsm_state90, ap_CS_fsm_state91, ap_CS_fsm_state92, ap_CS_fsm_state93, ap_CS_fsm_state94, ap_CS_fsm_state95, ap_CS_fsm_state96, ap_CS_fsm_state97, ap_CS_fsm_state98, ap_CS_fsm_state99, ap_CS_fsm_state100, ap_CS_fsm_state101, ap_CS_fsm_state102, ap_CS_fsm_state103, ap_CS_fsm_state104, ap_CS_fsm_state105, ap_CS_fsm_state106, ap_CS_fsm_state107, ap_CS_fsm_state108, ap_CS_fsm_state109, ap_CS_fsm_state110, ap_CS_fsm_state111)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state111) or (ap_const_logic_1 = ap_CS_fsm_state110) or (ap_const_logic_1 = ap_CS_fsm_state109) or (ap_const_logic_1 = ap_CS_fsm_state108) or (ap_const_logic_1 = ap_CS_fsm_state107) or (ap_const_logic_1 = ap_CS_fsm_state106) or (ap_const_logic_1 = ap_CS_fsm_state105) or (ap_const_logic_1 = ap_CS_fsm_state104) or (ap_const_logic_1 = ap_CS_fsm_state103) or (ap_const_logic_1 = ap_CS_fsm_state102) or (ap_const_logic_1 = ap_CS_fsm_state101) or (ap_const_logic_1 = ap_CS_fsm_state100) or (ap_const_logic_1 = ap_CS_fsm_state99) or (ap_const_logic_1 = ap_CS_fsm_state98) or (ap_const_logic_1 = ap_CS_fsm_state97) or (ap_const_logic_1 = ap_CS_fsm_state96) or (ap_const_logic_1 = ap_CS_fsm_state95) or (ap_const_logic_1 = ap_CS_fsm_state94) or (ap_const_logic_1 = ap_CS_fsm_state93) or (ap_const_logic_1 = ap_CS_fsm_state92) or (ap_const_logic_1 = ap_CS_fsm_state91) or (ap_const_logic_1 = ap_CS_fsm_state90) or (ap_const_logic_1 = ap_CS_fsm_state89) or (ap_const_logic_1 = ap_CS_fsm_state88) or (ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state81) or (ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state75))) then 
            view2s_communicatedB_ce1 <= ap_const_logic_1;
        else 
            view2s_communicatedB_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    view2s_communicatedB_we0_assign_proc : process(ap_CS_fsm_state4, grp_verifyProof_23_fu_3198_view2_communicatedBits_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            view2s_communicatedB_we0 <= grp_verifyProof_23_fu_3198_view2_communicatedBits_we0;
        else 
            view2s_communicatedB_we0 <= ap_const_logic_0;
        end if; 
    end process;


    view2s_inputShare93_address0_assign_proc : process(ap_CS_fsm_state128, empty_136_reg_6807, tmp_12_reg_6831, ap_CS_fsm_state72, grp_HashUpdate_2_1_fu_3273_data_address0, ap_CS_fsm_state73)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            view2s_inputShare93_address0 <= tmp_12_reg_6831(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            view2s_inputShare93_address0 <= empty_136_reg_6807(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state128)) then 
            view2s_inputShare93_address0 <= grp_HashUpdate_2_1_fu_3273_data_address0;
        else 
            view2s_inputShare93_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    view2s_inputShare93_address1_assign_proc : process(tmp_11_reg_6812, ap_CS_fsm_state72, tmp_13_reg_6836, ap_CS_fsm_state73)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            view2s_inputShare93_address1 <= tmp_13_reg_6836(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            view2s_inputShare93_address1 <= tmp_11_reg_6812(10 - 1 downto 0);
        else 
            view2s_inputShare93_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    view2s_inputShare93_ce0_assign_proc : process(ap_CS_fsm_state128, ap_CS_fsm_state72, grp_HashUpdate_2_1_fu_3273_data_ce0, ap_CS_fsm_state73)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state72))) then 
            view2s_inputShare93_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state128)) then 
            view2s_inputShare93_ce0 <= grp_HashUpdate_2_1_fu_3273_data_ce0;
        else 
            view2s_inputShare93_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    view2s_inputShare93_ce1_assign_proc : process(ap_CS_fsm_state72, ap_CS_fsm_state73)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state72))) then 
            view2s_inputShare93_ce1 <= ap_const_logic_1;
        else 
            view2s_inputShare93_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    view2s_inputShare93_we0_assign_proc : process(ap_CS_fsm_state72, ap_CS_fsm_state73)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state72))) then 
            view2s_inputShare93_we0 <= ap_const_logic_1;
        else 
            view2s_inputShare93_we0 <= ap_const_logic_0;
        end if; 
    end process;


    view2s_inputShare93_we1_assign_proc : process(ap_CS_fsm_state72, ap_CS_fsm_state73)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state72))) then 
            view2s_inputShare93_we1 <= ap_const_logic_1;
        else 
            view2s_inputShare93_we1 <= ap_const_logic_0;
        end if; 
    end process;


    view2s_inputShare_address0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state71, empty_136_fu_4551_p1, tmp_12_fu_4582_p3, ap_CS_fsm_state72, grp_verifyProof_23_fu_3198_view2_inputShare_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            view2s_inputShare_address0 <= tmp_12_fu_4582_p3(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
            view2s_inputShare_address0 <= empty_136_fu_4551_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            view2s_inputShare_address0 <= grp_verifyProof_23_fu_3198_view2_inputShare_address0;
        else 
            view2s_inputShare_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    view2s_inputShare_address1_assign_proc : process(ap_CS_fsm_state71, tmp_11_fu_4562_p3, ap_CS_fsm_state72, tmp_13_fu_4596_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            view2s_inputShare_address1 <= tmp_13_fu_4596_p3(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
            view2s_inputShare_address1 <= tmp_11_fu_4562_p3(10 - 1 downto 0);
        else 
            view2s_inputShare_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    view2s_inputShare_ce0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state71, ap_CS_fsm_state72, grp_verifyProof_23_fu_3198_view2_inputShare_ce0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state71))) then 
            view2s_inputShare_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            view2s_inputShare_ce0 <= grp_verifyProof_23_fu_3198_view2_inputShare_ce0;
        else 
            view2s_inputShare_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    view2s_inputShare_ce1_assign_proc : process(ap_CS_fsm_state71, ap_CS_fsm_state72)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state71))) then 
            view2s_inputShare_ce1 <= ap_const_logic_1;
        else 
            view2s_inputShare_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    view2s_inputShare_we0_assign_proc : process(ap_CS_fsm_state4, grp_verifyProof_23_fu_3198_view2_inputShare_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            view2s_inputShare_we0 <= grp_verifyProof_23_fu_3198_view2_inputShare_we0;
        else 
            view2s_inputShare_we0 <= ap_const_logic_0;
        end if; 
    end process;


    view2s_outputShare18_address0_assign_proc : process(ap_CS_fsm_state132, empty_218_reg_7669, tmp_16_reg_7693, ap_CS_fsm_state114, ap_CS_fsm_state115, grp_HashUpdate_2_1_fu_3273_data_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state115)) then 
            view2s_outputShare18_address0 <= tmp_16_reg_7693(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state114)) then 
            view2s_outputShare18_address0 <= empty_218_reg_7669(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state132)) then 
            view2s_outputShare18_address0 <= grp_HashUpdate_2_1_fu_3273_data_address0;
        else 
            view2s_outputShare18_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    view2s_outputShare18_address1_assign_proc : process(tmp_15_reg_7674, ap_CS_fsm_state114, tmp_17_reg_7698, ap_CS_fsm_state115)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state115)) then 
            view2s_outputShare18_address1 <= tmp_17_reg_7698(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state114)) then 
            view2s_outputShare18_address1 <= tmp_15_reg_7674(10 - 1 downto 0);
        else 
            view2s_outputShare18_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    view2s_outputShare18_ce0_assign_proc : process(ap_CS_fsm_state132, ap_CS_fsm_state114, ap_CS_fsm_state115, grp_HashUpdate_2_1_fu_3273_data_ce0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state115) or (ap_const_logic_1 = ap_CS_fsm_state114))) then 
            view2s_outputShare18_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state132)) then 
            view2s_outputShare18_ce0 <= grp_HashUpdate_2_1_fu_3273_data_ce0;
        else 
            view2s_outputShare18_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    view2s_outputShare18_ce1_assign_proc : process(ap_CS_fsm_state114, ap_CS_fsm_state115)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state115) or (ap_const_logic_1 = ap_CS_fsm_state114))) then 
            view2s_outputShare18_ce1 <= ap_const_logic_1;
        else 
            view2s_outputShare18_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    view2s_outputShare18_we0_assign_proc : process(ap_CS_fsm_state114, ap_CS_fsm_state115)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state115) or (ap_const_logic_1 = ap_CS_fsm_state114))) then 
            view2s_outputShare18_we0 <= ap_const_logic_1;
        else 
            view2s_outputShare18_we0 <= ap_const_logic_0;
        end if; 
    end process;


    view2s_outputShare18_we1_assign_proc : process(ap_CS_fsm_state114, ap_CS_fsm_state115)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state115) or (ap_const_logic_1 = ap_CS_fsm_state114))) then 
            view2s_outputShare18_we1 <= ap_const_logic_1;
        else 
            view2s_outputShare18_we1 <= ap_const_logic_0;
        end if; 
    end process;


    view2s_outputShare_address0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state113, empty_218_fu_5420_p1, tmp_16_fu_5451_p3, ap_CS_fsm_state114, ap_CS_fsm_state141, grp_verifyProof_23_fu_3198_view2_outputShare_address0, zext_ln1265_1_fu_5630_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state141)) then 
            view2s_outputShare_address0 <= zext_ln1265_1_fu_5630_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state114)) then 
            view2s_outputShare_address0 <= tmp_16_fu_5451_p3(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state113)) then 
            view2s_outputShare_address0 <= empty_218_fu_5420_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            view2s_outputShare_address0 <= grp_verifyProof_23_fu_3198_view2_outputShare_address0;
        else 
            view2s_outputShare_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    view2s_outputShare_address1_assign_proc : process(ap_CS_fsm_state113, tmp_15_fu_5431_p3, ap_CS_fsm_state114, tmp_17_fu_5465_p3, ap_CS_fsm_state143, zext_ln1269_2_fu_5667_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state143)) then 
            view2s_outputShare_address1 <= zext_ln1269_2_fu_5667_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state114)) then 
            view2s_outputShare_address1 <= tmp_17_fu_5465_p3(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state113)) then 
            view2s_outputShare_address1 <= tmp_15_fu_5431_p3(10 - 1 downto 0);
        else 
            view2s_outputShare_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    view2s_outputShare_ce0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state113, ap_CS_fsm_state114, ap_CS_fsm_state141, grp_verifyProof_23_fu_3198_view2_outputShare_ce0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state141) or (ap_const_logic_1 = ap_CS_fsm_state114) or (ap_const_logic_1 = ap_CS_fsm_state113))) then 
            view2s_outputShare_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            view2s_outputShare_ce0 <= grp_verifyProof_23_fu_3198_view2_outputShare_ce0;
        else 
            view2s_outputShare_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    view2s_outputShare_ce1_assign_proc : process(ap_CS_fsm_state113, ap_CS_fsm_state114, ap_CS_fsm_state143)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state143) or (ap_const_logic_1 = ap_CS_fsm_state114) or (ap_const_logic_1 = ap_CS_fsm_state113))) then 
            view2s_outputShare_ce1 <= ap_const_logic_1;
        else 
            view2s_outputShare_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    view2s_outputShare_we0_assign_proc : process(ap_CS_fsm_state4, grp_verifyProof_23_fu_3198_view2_outputShare_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            view2s_outputShare_we0 <= grp_verifyProof_23_fu_3198_view2_outputShare_we0;
        else 
            view2s_outputShare_we0 <= ap_const_logic_0;
        end if; 
    end process;


    view3Slab_address0_assign_proc : process(ap_CS_fsm_state145, ap_CS_fsm_state144, zext_ln1269_fu_5707_p1, zext_ln1273_1_fu_5734_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state145)) then 
            view3Slab_address0 <= zext_ln1273_1_fu_5734_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state144)) then 
            view3Slab_address0 <= zext_ln1269_fu_5707_p1(12 - 1 downto 0);
        else 
            view3Slab_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    view3Slab_ce0_assign_proc : process(ap_CS_fsm_state145, ap_CS_fsm_state144)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state144) or (ap_const_logic_1 = ap_CS_fsm_state145))) then 
            view3Slab_ce0 <= ap_const_logic_1;
        else 
            view3Slab_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    view3Slab_d0 <= (xor_ln1269_fu_5689_p2 xor view2s_outputShare_q1);

    view3Slab_we0_assign_proc : process(ap_CS_fsm_state144)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state144)) then 
            view3Slab_we0 <= ap_const_logic_1;
        else 
            view3Slab_we0 <= ap_const_logic_0;
        end if; 
    end process;


    viewOutputs_address0_assign_proc : process(grp_H3_2_fu_3237_viewOutputs_address0, ap_CS_fsm_state140, ap_CS_fsm_state142, ap_CS_fsm_state146, ap_CS_fsm_state147, sext_ln1263_fu_5604_p1, sext_ln1265_fu_5644_p1, sext_ln1273_fu_5754_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            viewOutputs_address0 <= sext_ln1273_fu_5754_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state142)) then 
            viewOutputs_address0 <= sext_ln1265_fu_5644_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state140)) then 
            viewOutputs_address0 <= sext_ln1263_fu_5604_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state147)) then 
            viewOutputs_address0 <= grp_H3_2_fu_3237_viewOutputs_address0;
        else 
            viewOutputs_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    viewOutputs_ce0_assign_proc : process(grp_H3_2_fu_3237_viewOutputs_ce0, ap_CS_fsm_state140, ap_CS_fsm_state142, ap_CS_fsm_state146, ap_CS_fsm_state147)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state146) or (ap_const_logic_1 = ap_CS_fsm_state142) or (ap_const_logic_1 = ap_CS_fsm_state140))) then 
            viewOutputs_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state147)) then 
            viewOutputs_ce0 <= grp_H3_2_fu_3237_viewOutputs_ce0;
        else 
            viewOutputs_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    viewOutputs_d0_assign_proc : process(view3Slab_q0, view1s_outputShare_q0, view2s_outputShare_q0, ap_CS_fsm_state140, ap_CS_fsm_state142, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            viewOutputs_d0 <= view3Slab_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state142)) then 
            viewOutputs_d0 <= view2s_outputShare_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state140)) then 
            viewOutputs_d0 <= view1s_outputShare_q0;
        else 
            viewOutputs_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    viewOutputs_we0_assign_proc : process(ap_CS_fsm_state140, ap_CS_fsm_state142, ap_CS_fsm_state146)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state146) or (ap_const_logic_1 = ap_CS_fsm_state142) or (ap_const_logic_1 = ap_CS_fsm_state140))) then 
            viewOutputs_we0 <= ap_const_logic_1;
        else 
            viewOutputs_we0 <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln1251_fu_4516_p2 <= (challenge_reg_5850 xor ap_const_lv2_2);
    xor_ln1269_fu_5689_p2 <= (view1s_outputShare_q1 xor pubKey_q0);
    xor_ln54_1_fu_3505_p2 <= (bitNumber_assign_fu_3477_p3 xor ap_const_lv3_7);
    xor_ln54_fu_3485_p2 <= (bitNumber_assign_fu_3477_p3 xor ap_const_lv3_6);
    zext_ln1236_fu_3401_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(round_assign_reg_2992),11));
    zext_ln1241_fu_3441_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1241_fu_3435_p2),64));
    zext_ln1250_cast_fu_3560_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(challenge_fu_3554_p3),11));
    zext_ln1251_1_cast_fu_4533_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln1251_fu_4525_p3),11));
    zext_ln1251_fu_4501_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(challenge_reg_5850),3));
    zext_ln1253_fu_5518_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln1254_fu_5493_p3),11));
    zext_ln1254_1_fu_3425_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_3417_p3),11));
    zext_ln1254_2_fu_5501_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln1254_fu_5493_p3),11));
    zext_ln1254_3_fu_5534_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loop_0_reg_3117),16));
    zext_ln1254_4_fu_5538_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loop_0_reg_3117),14));
    zext_ln1254_5_fu_5547_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1254_3_fu_5542_p2),64));
    zext_ln1254_6_fu_5561_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1254_4_reg_7742),64));
    zext_ln1254_fu_3413_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_3405_p3),14));
    zext_ln1263_1_fu_5586_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1263_1_fu_5581_p2),64));
    zext_ln1263_fu_5577_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loop_1_reg_3128),11));
    zext_ln1265_1_fu_5630_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1265_1_fu_5625_p2),64));
    zext_ln1265_fu_5621_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loop_2_reg_3140),11));
    zext_ln1268_1_fu_5653_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_0_reg_3152),64));
    zext_ln1268_fu_5649_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_0_reg_3152),10));
    zext_ln1269_1_fu_5658_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_0_reg_3152),11));
    zext_ln1269_2_fu_5667_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1269_1_fu_5662_p2),64));
    zext_ln1269_fu_5707_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1269_fu_5702_p2),64));
    zext_ln1273_1_fu_5734_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1273_1_fu_5728_p2),64));
    zext_ln1273_fu_5724_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loop_3_reg_3163),10));
    zext_ln1287_fu_5771_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loop_4_reg_3175),64));
    zext_ln54_1_fu_3491_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln54_fu_3485_p2),8));
    zext_ln54_2_fu_3511_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln54_1_fu_3505_p2),8));
    zext_ln54_fu_3468_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln_fu_3458_p4),64));
end behav;
