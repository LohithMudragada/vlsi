// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _HashUpdate_2_1_HH_
#define _HashUpdate_2_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "KeccakWidth1600_Spon_9.h"
#include "HashUpdate_2_1_temp.h"

namespace ap_rtl {

struct HashUpdate_2_1 : public sc_module {
    // Port declarations 17
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<8> > ctx_sponge_state_address0;
    sc_out< sc_logic > ctx_sponge_state_ce0;
    sc_out< sc_logic > ctx_sponge_state_we0;
    sc_out< sc_lv<8> > ctx_sponge_state_d0;
    sc_in< sc_lv<8> > ctx_sponge_state_q0;
    sc_in< sc_lv<32> > ctx_sponge_byteIOInd;
    sc_out< sc_lv<10> > data_address0;
    sc_out< sc_logic > data_ce0;
    sc_in< sc_lv<32> > data_q0;
    sc_in< sc_lv<8> > data_offset;
    sc_out< sc_lv<32> > ap_return;


    // Module declarations
    HashUpdate_2_1(sc_module_name name);
    SC_HAS_PROCESS(HashUpdate_2_1);

    ~HashUpdate_2_1();

    sc_trace_file* mVcdFile;

    HashUpdate_2_1_temp* temp_U;
    KeccakWidth1600_Spon_9* grp_KeccakWidth1600_Spon_9_fu_174;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<7> > add_ln34_fu_186_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<64> > zext_ln37_fu_203_p1;
    sc_signal< sc_lv<64> > zext_ln37_reg_331;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > tmp_52_fu_207_p3;
    sc_signal< sc_lv<4> > trunc_ln37_fu_237_p1;
    sc_signal< sc_lv<4> > trunc_ln37_reg_344;
    sc_signal< sc_lv<5> > loop_fu_241_p2;
    sc_signal< sc_lv<5> > loop_reg_351;
    sc_signal< sc_lv<8> > trunc_ln2_reg_356;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<8> > trunc_ln3_reg_361;
    sc_signal< sc_lv<7> > temp_address0;
    sc_signal< sc_logic > temp_ce0;
    sc_signal< sc_logic > temp_we0;
    sc_signal< sc_lv<8> > temp_d0;
    sc_signal< sc_lv<8> > temp_q0;
    sc_signal< sc_lv<7> > temp_address1;
    sc_signal< sc_logic > temp_ce1;
    sc_signal< sc_logic > temp_we1;
    sc_signal< sc_lv<8> > temp_d1;
    sc_signal< sc_logic > grp_KeccakWidth1600_Spon_9_fu_174_ap_start;
    sc_signal< sc_logic > grp_KeccakWidth1600_Spon_9_fu_174_ap_done;
    sc_signal< sc_logic > grp_KeccakWidth1600_Spon_9_fu_174_ap_idle;
    sc_signal< sc_logic > grp_KeccakWidth1600_Spon_9_fu_174_ap_ready;
    sc_signal< sc_lv<8> > grp_KeccakWidth1600_Spon_9_fu_174_instance_state_address0;
    sc_signal< sc_logic > grp_KeccakWidth1600_Spon_9_fu_174_instance_state_ce0;
    sc_signal< sc_logic > grp_KeccakWidth1600_Spon_9_fu_174_instance_state_we0;
    sc_signal< sc_lv<8> > grp_KeccakWidth1600_Spon_9_fu_174_instance_state_d0;
    sc_signal< sc_lv<7> > grp_KeccakWidth1600_Spon_9_fu_174_data_address0;
    sc_signal< sc_logic > grp_KeccakWidth1600_Spon_9_fu_174_data_ce0;
    sc_signal< sc_lv<32> > grp_KeccakWidth1600_Spon_9_fu_174_ap_return;
    sc_signal< sc_lv<7> > phi_ln34_reg_152;
    sc_signal< sc_lv<1> > icmp_ln34_fu_197_p2;
    sc_signal< sc_lv<5> > loop_0_reg_163;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > grp_KeccakWidth1600_Spon_9_fu_174_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<64> > zext_ln34_fu_192_p1;
    sc_signal< sc_lv<64> > zext_ln38_fu_232_p1;
    sc_signal< sc_lv<64> > zext_ln41_fu_268_p1;
    sc_signal< sc_lv<64> > zext_ln43_fu_298_p1;
    sc_signal< sc_lv<64> > zext_ln45_fu_308_p1;
    sc_signal< sc_lv<8> > trunc_ln39_fu_247_p1;
    sc_signal< sc_lv<2> > trunc_ln_fu_215_p4;
    sc_signal< sc_lv<10> > tmp_fu_225_p3;
    sc_signal< sc_lv<4> > or_ln41_fu_263_p2;
    sc_signal< sc_lv<4> > or_ln43_fu_293_p2;
    sc_signal< sc_lv<4> > or_ln45_fu_303_p2;
    sc_signal< sc_lv<32> > ap_return_preg;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_state2;
    static const sc_lv<6> ap_ST_fsm_state3;
    static const sc_lv<6> ap_ST_fsm_state4;
    static const sc_lv<6> ap_ST_fsm_state5;
    static const sc_lv<6> ap_ST_fsm_state6;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<7> ap_const_lv7_4A;
    static const sc_lv<5> ap_const_lv5_4;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<4> ap_const_lv4_2;
    static const sc_lv<4> ap_const_lv4_3;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln34_fu_186_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_ctx_sponge_state_address0();
    void thread_ctx_sponge_state_ce0();
    void thread_ctx_sponge_state_d0();
    void thread_ctx_sponge_state_we0();
    void thread_data_address0();
    void thread_data_ce0();
    void thread_grp_KeccakWidth1600_Spon_9_fu_174_ap_start();
    void thread_icmp_ln34_fu_197_p2();
    void thread_loop_fu_241_p2();
    void thread_or_ln41_fu_263_p2();
    void thread_or_ln43_fu_293_p2();
    void thread_or_ln45_fu_303_p2();
    void thread_temp_address0();
    void thread_temp_address1();
    void thread_temp_ce0();
    void thread_temp_ce1();
    void thread_temp_d0();
    void thread_temp_d1();
    void thread_temp_we0();
    void thread_temp_we1();
    void thread_tmp_52_fu_207_p3();
    void thread_tmp_fu_225_p3();
    void thread_trunc_ln37_fu_237_p1();
    void thread_trunc_ln39_fu_247_p1();
    void thread_trunc_ln_fu_215_p4();
    void thread_zext_ln34_fu_192_p1();
    void thread_zext_ln37_fu_203_p1();
    void thread_zext_ln38_fu_232_p1();
    void thread_zext_ln41_fu_268_p1();
    void thread_zext_ln43_fu_298_p1();
    void thread_zext_ln45_fu_308_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
