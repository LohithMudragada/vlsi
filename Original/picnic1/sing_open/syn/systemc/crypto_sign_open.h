// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _crypto_sign_open_HH_
#define _crypto_sign_open_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "picnic_verify.h"
#include "crypto_sign_open_JfO.h"

namespace ap_rtl {

struct crypto_sign_open : public sc_module {
    // Port declarations 30
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<12> > m_address0;
    sc_out< sc_logic > m_ce0;
    sc_out< sc_logic > m_we0;
    sc_out< sc_lv<8> > m_d0;
    sc_out< sc_lv<1> > mlen_address0;
    sc_out< sc_logic > mlen_ce0;
    sc_out< sc_logic > mlen_we0;
    sc_out< sc_lv<64> > mlen_d0;
    sc_out< sc_lv<16> > sm_address0;
    sc_out< sc_logic > sm_ce0;
    sc_in< sc_lv<8> > sm_q0;
    sc_out< sc_lv<16> > sm_address1;
    sc_out< sc_logic > sm_ce1;
    sc_in< sc_lv<8> > sm_q1;
    sc_in< sc_lv<64> > smlen;
    sc_out< sc_lv<6> > pk_address0;
    sc_out< sc_logic > pk_ce0;
    sc_in< sc_lv<8> > pk_q0;
    sc_out< sc_lv<14> > viewOutputs_address0;
    sc_out< sc_logic > viewOutputs_ce0;
    sc_out< sc_logic > viewOutputs_we0;
    sc_out< sc_lv<32> > viewOutputs_d0;
    sc_in< sc_lv<32> > viewOutputs_q0;
    sc_out< sc_lv<32> > ap_return;


    // Module declarations
    crypto_sign_open(sc_module_name name);
    SC_HAS_PROCESS(crypto_sign_open);

    ~crypto_sign_open();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    crypto_sign_open_JfO* pubkey_0_plaintext_U;
    crypto_sign_open_JfO* pubkey_0_ciphertext_U;
    picnic_verify* grp_picnic_verify_fu_288;
    sc_signal< sc_lv<14> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<4> > pubkey_0_params_fu_312_p1;
    sc_signal< sc_lv<4> > pubkey_0_params_reg_534;
    sc_signal< sc_lv<5> > loop_34_fu_400_p2;
    sc_signal< sc_lv<5> > loop_34_reg_545;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > icmp_ln576_fu_394_p2;
    sc_signal< sc_lv<5> > loop_35_fu_426_p2;
    sc_signal< sc_lv<5> > loop_35_reg_558;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > icmp_ln581_fu_420_p2;
    sc_signal< sc_lv<8> > sm_load_reg_578;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<8> > sm_load_1_reg_583;
    sc_signal< sc_lv<32> > signature_len_fu_448_p5;
    sc_signal< sc_lv<32> > signature_len_reg_593;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<64> > sub_ln146_fu_473_p2;
    sc_signal< sc_lv<64> > sub_ln146_reg_601;
    sc_signal< sc_lv<1> > icmp_ln142_fu_467_p2;
    sc_signal< sc_lv<64> > message_len_fu_478_p2;
    sc_signal< sc_lv<64> > message_len_reg_607;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<64> > sext_ln154_fu_483_p1;
    sc_signal< sc_lv<64> > sext_ln154_reg_617;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<32> > loop_fu_492_p2;
    sc_signal< sc_lv<32> > loop_reg_625;
    sc_signal< sc_lv<1> > icmp_ln154_fu_487_p2;
    sc_signal< sc_lv<5> > pubkey_0_plaintext_address0;
    sc_signal< sc_logic > pubkey_0_plaintext_ce0;
    sc_signal< sc_logic > pubkey_0_plaintext_we0;
    sc_signal< sc_lv<8> > pubkey_0_plaintext_q0;
    sc_signal< sc_logic > pubkey_0_plaintext_ce1;
    sc_signal< sc_lv<8> > pubkey_0_plaintext_q1;
    sc_signal< sc_lv<5> > pubkey_0_ciphertext_address0;
    sc_signal< sc_logic > pubkey_0_ciphertext_ce0;
    sc_signal< sc_logic > pubkey_0_ciphertext_we0;
    sc_signal< sc_lv<8> > pubkey_0_ciphertext_q0;
    sc_signal< sc_logic > pubkey_0_ciphertext_ce1;
    sc_signal< sc_lv<8> > pubkey_0_ciphertext_q1;
    sc_signal< sc_logic > grp_picnic_verify_fu_288_ap_start;
    sc_signal< sc_logic > grp_picnic_verify_fu_288_ap_done;
    sc_signal< sc_logic > grp_picnic_verify_fu_288_ap_idle;
    sc_signal< sc_logic > grp_picnic_verify_fu_288_ap_ready;
    sc_signal< sc_lv<5> > grp_picnic_verify_fu_288_pk_0_plaintext_address0;
    sc_signal< sc_logic > grp_picnic_verify_fu_288_pk_0_plaintext_ce0;
    sc_signal< sc_lv<5> > grp_picnic_verify_fu_288_pk_0_plaintext_address1;
    sc_signal< sc_logic > grp_picnic_verify_fu_288_pk_0_plaintext_ce1;
    sc_signal< sc_lv<5> > grp_picnic_verify_fu_288_pk_0_ciphertext_address0;
    sc_signal< sc_logic > grp_picnic_verify_fu_288_pk_0_ciphertext_ce0;
    sc_signal< sc_lv<5> > grp_picnic_verify_fu_288_pk_0_ciphertext_address1;
    sc_signal< sc_logic > grp_picnic_verify_fu_288_pk_0_ciphertext_ce1;
    sc_signal< sc_lv<16> > grp_picnic_verify_fu_288_message_address0;
    sc_signal< sc_logic > grp_picnic_verify_fu_288_message_ce0;
    sc_signal< sc_lv<16> > grp_picnic_verify_fu_288_message_address1;
    sc_signal< sc_logic > grp_picnic_verify_fu_288_message_ce1;
    sc_signal< sc_lv<14> > grp_picnic_verify_fu_288_viewOutputs_address0;
    sc_signal< sc_logic > grp_picnic_verify_fu_288_viewOutputs_ce0;
    sc_signal< sc_logic > grp_picnic_verify_fu_288_viewOutputs_we0;
    sc_signal< sc_lv<32> > grp_picnic_verify_fu_288_viewOutputs_d0;
    sc_signal< sc_lv<1> > grp_picnic_verify_fu_288_ap_return;
    sc_signal< sc_lv<5> > loop_0_i_reg_233;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > empty_282_fu_388_p2;
    sc_signal< sc_lv<5> > loop_1_i_reg_245;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<32> > loop_0_reg_257;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<2> > p_0_reg_268;
    sc_signal< sc_logic > grp_picnic_verify_fu_288_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<64> > zext_ln577_fu_406_p1;
    sc_signal< sc_lv<64> > zext_ln577_1_fu_411_p1;
    sc_signal< sc_lv<64> > zext_ln582_fu_438_p1;
    sc_signal< sc_lv<64> > zext_ln582_1_fu_443_p1;
    sc_signal< sc_lv<64> > sext_ln155_fu_504_p1;
    sc_signal< sc_lv<1> > empty_271_fu_322_p2;
    sc_signal< sc_lv<1> > empty_fu_316_p2;
    sc_signal< sc_lv<1> > empty_273_fu_334_p2;
    sc_signal< sc_lv<1> > empty_272_fu_328_p2;
    sc_signal< sc_lv<1> > empty_275_fu_346_p2;
    sc_signal< sc_lv<1> > empty_274_fu_340_p2;
    sc_signal< sc_lv<1> > empty_277_fu_358_p2;
    sc_signal< sc_lv<1> > empty_276_fu_352_p2;
    sc_signal< sc_lv<1> > empty_279_fu_370_p2;
    sc_signal< sc_lv<1> > empty_278_fu_364_p2;
    sc_signal< sc_lv<1> > empty_281_fu_382_p2;
    sc_signal< sc_lv<1> > empty_280_fu_376_p2;
    sc_signal< sc_lv<6> > zext_ln581_fu_416_p1;
    sc_signal< sc_lv<6> > add_ln582_1_fu_432_p2;
    sc_signal< sc_lv<64> > zext_ln142_fu_458_p1;
    sc_signal< sc_lv<64> > add_ln142_fu_462_p2;
    sc_signal< sc_lv<32> > add_ln155_fu_498_p2;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<14> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<14> ap_ST_fsm_state1;
    static const sc_lv<14> ap_ST_fsm_state2;
    static const sc_lv<14> ap_ST_fsm_state3;
    static const sc_lv<14> ap_ST_fsm_state4;
    static const sc_lv<14> ap_ST_fsm_state5;
    static const sc_lv<14> ap_ST_fsm_state6;
    static const sc_lv<14> ap_ST_fsm_state7;
    static const sc_lv<14> ap_ST_fsm_state8;
    static const sc_lv<14> ap_ST_fsm_state9;
    static const sc_lv<14> ap_ST_fsm_state10;
    static const sc_lv<14> ap_ST_fsm_state11;
    static const sc_lv<14> ap_ST_fsm_state12;
    static const sc_lv<14> ap_ST_fsm_state13;
    static const sc_lv<14> ap_ST_fsm_state14;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<64> ap_const_lv64_3;
    static const sc_lv<64> ap_const_lv64_2;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<4> ap_const_lv4_E;
    static const sc_lv<4> ap_const_lv4_D;
    static const sc_lv<4> ap_const_lv4_C;
    static const sc_lv<4> ap_const_lv4_B;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<6> ap_const_lv6_11;
    static const sc_lv<64> ap_const_lv64_FFFFFFFFFFFFFFFB;
    static const sc_lv<64> ap_const_lv64_FFFFFFFFFFFFFFFC;
    static const sc_lv<32> ap_const_lv32_D;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln142_fu_462_p2();
    void thread_add_ln155_fu_498_p2();
    void thread_add_ln582_1_fu_432_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_empty_271_fu_322_p2();
    void thread_empty_272_fu_328_p2();
    void thread_empty_273_fu_334_p2();
    void thread_empty_274_fu_340_p2();
    void thread_empty_275_fu_346_p2();
    void thread_empty_276_fu_352_p2();
    void thread_empty_277_fu_358_p2();
    void thread_empty_278_fu_364_p2();
    void thread_empty_279_fu_370_p2();
    void thread_empty_280_fu_376_p2();
    void thread_empty_281_fu_382_p2();
    void thread_empty_282_fu_388_p2();
    void thread_empty_fu_316_p2();
    void thread_grp_picnic_verify_fu_288_ap_start();
    void thread_icmp_ln142_fu_467_p2();
    void thread_icmp_ln154_fu_487_p2();
    void thread_icmp_ln576_fu_394_p2();
    void thread_icmp_ln581_fu_420_p2();
    void thread_loop_34_fu_400_p2();
    void thread_loop_35_fu_426_p2();
    void thread_loop_fu_492_p2();
    void thread_m_address0();
    void thread_m_ce0();
    void thread_m_d0();
    void thread_m_we0();
    void thread_message_len_fu_478_p2();
    void thread_mlen_address0();
    void thread_mlen_ce0();
    void thread_mlen_d0();
    void thread_mlen_we0();
    void thread_pk_address0();
    void thread_pk_ce0();
    void thread_pubkey_0_ciphertext_address0();
    void thread_pubkey_0_ciphertext_ce0();
    void thread_pubkey_0_ciphertext_ce1();
    void thread_pubkey_0_ciphertext_we0();
    void thread_pubkey_0_params_fu_312_p1();
    void thread_pubkey_0_plaintext_address0();
    void thread_pubkey_0_plaintext_ce0();
    void thread_pubkey_0_plaintext_ce1();
    void thread_pubkey_0_plaintext_we0();
    void thread_sext_ln154_fu_483_p1();
    void thread_sext_ln155_fu_504_p1();
    void thread_signature_len_fu_448_p5();
    void thread_sm_address0();
    void thread_sm_address1();
    void thread_sm_ce0();
    void thread_sm_ce1();
    void thread_sub_ln146_fu_473_p2();
    void thread_viewOutputs_address0();
    void thread_viewOutputs_ce0();
    void thread_viewOutputs_d0();
    void thread_viewOutputs_we0();
    void thread_zext_ln142_fu_458_p1();
    void thread_zext_ln577_1_fu_411_p1();
    void thread_zext_ln577_fu_406_p1();
    void thread_zext_ln581_fu_416_p1();
    void thread_zext_ln582_1_fu_443_p1();
    void thread_zext_ln582_fu_438_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
