// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module mpc_LowMC_verify_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        view1_inputShare_address0,
        view1_inputShare_ce0,
        view1_inputShare_q0,
        view1_inputShare_offset,
        view1_communicatedBi_address0,
        view1_communicatedBi_ce0,
        view1_communicatedBi_we0,
        view1_communicatedBi_d0,
        view1_communicatedBi_q0,
        view1_outputShare_address0,
        view1_outputShare_ce0,
        view1_outputShare_we0,
        view1_outputShare_d0,
        view2_inputShare_address0,
        view2_inputShare_ce0,
        view2_inputShare_q0,
        view2_communicatedBi_address0,
        view2_communicatedBi_ce0,
        view2_communicatedBi_q0,
        view2_outputShare_address0,
        view2_outputShare_ce0,
        view2_outputShare_we0,
        view2_outputShare_d0,
        tapes_0_tape_address0,
        tapes_0_tape_ce0,
        tapes_0_tape_q0,
        tapes_0_tape_address1,
        tapes_0_tape_ce1,
        tapes_0_tape_q1,
        tmp_address0,
        tmp_ce0,
        tmp_we0,
        tmp_d0,
        tmp_q0,
        tmp_address1,
        tmp_ce1,
        tmp_we1,
        tmp_d1,
        tmp_q1,
        plaintext_address0,
        plaintext_ce0,
        plaintext_q0,
        challenge
);

parameter    ap_ST_fsm_state1 = 43'd1;
parameter    ap_ST_fsm_state2 = 43'd2;
parameter    ap_ST_fsm_state3 = 43'd4;
parameter    ap_ST_fsm_state4 = 43'd8;
parameter    ap_ST_fsm_state5 = 43'd16;
parameter    ap_ST_fsm_state6 = 43'd32;
parameter    ap_ST_fsm_state7 = 43'd64;
parameter    ap_ST_fsm_state8 = 43'd128;
parameter    ap_ST_fsm_state9 = 43'd256;
parameter    ap_ST_fsm_state10 = 43'd512;
parameter    ap_ST_fsm_state11 = 43'd1024;
parameter    ap_ST_fsm_state12 = 43'd2048;
parameter    ap_ST_fsm_state13 = 43'd4096;
parameter    ap_ST_fsm_state14 = 43'd8192;
parameter    ap_ST_fsm_state15 = 43'd16384;
parameter    ap_ST_fsm_state16 = 43'd32768;
parameter    ap_ST_fsm_state17 = 43'd65536;
parameter    ap_ST_fsm_state18 = 43'd131072;
parameter    ap_ST_fsm_state19 = 43'd262144;
parameter    ap_ST_fsm_state20 = 43'd524288;
parameter    ap_ST_fsm_state21 = 43'd1048576;
parameter    ap_ST_fsm_state22 = 43'd2097152;
parameter    ap_ST_fsm_state23 = 43'd4194304;
parameter    ap_ST_fsm_state24 = 43'd8388608;
parameter    ap_ST_fsm_state25 = 43'd16777216;
parameter    ap_ST_fsm_state26 = 43'd33554432;
parameter    ap_ST_fsm_state27 = 43'd67108864;
parameter    ap_ST_fsm_state28 = 43'd134217728;
parameter    ap_ST_fsm_state29 = 43'd268435456;
parameter    ap_ST_fsm_state30 = 43'd536870912;
parameter    ap_ST_fsm_state31 = 43'd1073741824;
parameter    ap_ST_fsm_state32 = 43'd2147483648;
parameter    ap_ST_fsm_state33 = 43'd4294967296;
parameter    ap_ST_fsm_state34 = 43'd8589934592;
parameter    ap_ST_fsm_state35 = 43'd17179869184;
parameter    ap_ST_fsm_state36 = 43'd34359738368;
parameter    ap_ST_fsm_state37 = 43'd68719476736;
parameter    ap_ST_fsm_state38 = 43'd137438953472;
parameter    ap_ST_fsm_state39 = 43'd274877906944;
parameter    ap_ST_fsm_state40 = 43'd549755813888;
parameter    ap_ST_fsm_state41 = 43'd1099511627776;
parameter    ap_ST_fsm_state42 = 43'd2199023255552;
parameter    ap_ST_fsm_state43 = 43'd4398046511104;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] view1_inputShare_address0;
output   view1_inputShare_ce0;
input  [31:0] view1_inputShare_q0;
input  [7:0] view1_inputShare_offset;
output  [14:0] view1_communicatedBi_address0;
output   view1_communicatedBi_ce0;
output   view1_communicatedBi_we0;
output  [7:0] view1_communicatedBi_d0;
input  [7:0] view1_communicatedBi_q0;
output  [9:0] view1_outputShare_address0;
output   view1_outputShare_ce0;
output   view1_outputShare_we0;
output  [31:0] view1_outputShare_d0;
output  [9:0] view2_inputShare_address0;
output   view2_inputShare_ce0;
input  [31:0] view2_inputShare_q0;
output  [14:0] view2_communicatedBi_address0;
output   view2_communicatedBi_ce0;
input  [7:0] view2_communicatedBi_q0;
output  [9:0] view2_outputShare_address0;
output   view2_outputShare_ce0;
output   view2_outputShare_we0;
output  [31:0] view2_outputShare_d0;
output  [8:0] tapes_0_tape_address0;
output   tapes_0_tape_ce0;
input  [7:0] tapes_0_tape_q0;
output  [8:0] tapes_0_tape_address1;
output   tapes_0_tape_ce1;
input  [7:0] tapes_0_tape_q1;
output  [4:0] tmp_address0;
output   tmp_ce0;
output  [3:0] tmp_we0;
output  [31:0] tmp_d0;
input  [31:0] tmp_q0;
output  [4:0] tmp_address1;
output   tmp_ce1;
output  [3:0] tmp_we1;
output  [31:0] tmp_d1;
input  [31:0] tmp_q1;
output  [2:0] plaintext_address0;
output   plaintext_ce0;
input  [31:0] plaintext_q0;
input  [1:0] challenge;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg view1_inputShare_ce0;
reg view1_communicatedBi_ce0;
reg view1_communicatedBi_we0;
reg view1_outputShare_ce0;
reg view1_outputShare_we0;
reg view2_inputShare_ce0;
reg view2_communicatedBi_ce0;
reg view2_outputShare_ce0;
reg view2_outputShare_we0;
reg tapes_0_tape_ce0;
reg tapes_0_tape_ce1;
reg[4:0] tmp_address0;
reg tmp_ce0;
reg[3:0] tmp_we0;
reg[31:0] tmp_d0;
reg[4:0] tmp_address1;
reg tmp_ce1;
reg[3:0] tmp_we1;
reg[31:0] tmp_d1;
reg[2:0] plaintext_address0;
reg plaintext_ce0;

(* fsm_encoding = "none" *) reg   [42:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [6:0] temp_matrix3_address0;
reg    temp_matrix3_ce0;
wire   [31:0] temp_matrix3_q0;
reg   [31:0] reg_825;
wire    ap_CS_fsm_state20;
wire    grp_mpc_AND_verify_2_fu_717_ap_ready;
wire    grp_mpc_AND_verify_2_fu_717_ap_done;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state24;
wire   [10:0] zext_ln933_1_cast_fu_838_p1;
reg   [10:0] zext_ln933_1_cast_reg_2848;
wire   [3:0] loop_fu_848_p2;
wire    ap_CS_fsm_state2;
wire   [3:0] loop_25_fu_865_p2;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln266_fu_882_p2;
reg   [0:0] icmp_ln266_reg_2870;
wire   [0:0] icmp_ln901_fu_859_p2;
wire   [0:0] grp_fu_746_p2;
reg   [0:0] icmp_ln269_reg_2874;
wire   [2:0] i_2_fu_893_p2;
reg   [2:0] i_2_reg_2881;
wire    ap_CS_fsm_state4;
reg   [4:0] tmp_addr_18_reg_2886;
wire   [0:0] icmp_ln108_3_fu_887_p2;
wire   [2:0] i_1_fu_925_p2;
reg   [2:0] i_1_reg_2899;
reg   [4:0] tmp_addr_17_reg_2904;
wire   [0:0] icmp_ln108_1_fu_919_p2;
wire   [1:0] i_3_fu_955_p2;
reg   [1:0] i_3_reg_2917;
wire    ap_CS_fsm_state10;
wire   [0:0] trunc_ln253_fu_961_p1;
reg   [0:0] trunc_ln253_reg_2922;
wire   [0:0] icmp_ln252_fu_949_p2;
wire   [2:0] select_ln109_fu_965_p3;
reg   [2:0] select_ln109_reg_2927;
reg   [0:0] icmp_ln925_reg_2939;
wire   [2:0] i_4_fu_984_p2;
reg   [2:0] i_4_reg_2946;
wire    ap_CS_fsm_state11;
reg   [4:0] tmp_addr_19_reg_2951;
wire   [0:0] icmp_ln108_4_fu_978_p2;
wire   [13:0] shl_ln_fu_1040_p3;
reg   [13:0] shl_ln_reg_2965;
wire    ap_CS_fsm_state13;
wire   [0:0] icmp_ln913_fu_1034_p2;
wire   [4:0] add_ln804_fu_1059_p2;
reg   [4:0] add_ln804_reg_2974;
wire    ap_CS_fsm_state17;
wire   [0:0] icmp_ln797_fu_1053_p2;
wire   [4:0] add_ln805_fu_1065_p2;
reg   [4:0] add_ln805_reg_2979;
wire   [7:0] zext_ln54_fu_1077_p1;
reg   [7:0] zext_ln54_reg_2984;
wire   [7:0] zext_ln54_3_fu_1087_p1;
reg   [7:0] zext_ln54_3_reg_2991;
wire   [7:0] zext_ln54_4_fu_1097_p1;
reg   [7:0] zext_ln54_4_reg_2998;
wire   [13:0] add_ln919_fu_1101_p2;
reg   [13:0] add_ln919_reg_3005;
wire   [1:0] j_fu_1113_p2;
reg   [1:0] j_reg_3013;
wire    ap_CS_fsm_state18;
wire   [0:0] trunc_ln804_fu_1119_p1;
reg   [0:0] trunc_ln804_reg_3018;
wire   [0:0] icmp_ln803_fu_1107_p2;
wire   [7:0] a_1_1_fu_1265_p3;
wire    ap_CS_fsm_state19;
wire   [7:0] a_1_2_fu_1272_p3;
wire   [7:0] b_1_1_fu_1408_p3;
wire   [7:0] b_1_2_fu_1415_p3;
wire   [7:0] c_1_1_fu_1551_p3;
wire   [7:0] c_1_2_fu_1558_p3;
reg   [7:0] ab_0_reg_3068;
reg   [7:0] ab_1_reg_3073;
reg   [7:0] bc_0_reg_3078;
reg   [7:0] bc_1_reg_3083;
reg   [7:0] ca_0_reg_3088;
reg   [7:0] ca_1_reg_3093;
wire   [7:0] xor_ln66_fu_1570_p2;
reg   [7:0] xor_ln66_reg_3098;
wire   [7:0] xor_ln66_1_fu_1581_p2;
reg   [7:0] xor_ln66_1_reg_3103;
wire   [7:0] xor_ln66_2_fu_1592_p2;
reg   [7:0] xor_ln66_2_reg_3108;
wire   [1:0] j_1_fu_1604_p2;
reg   [1:0] j_1_reg_3116;
wire    ap_CS_fsm_state25;
wire   [1:0] grp_fu_766_p4;
reg   [1:0] tmp_21_reg_3121;
wire   [0:0] icmp_ln817_fu_1598_p2;
reg   [4:0] tmp_addr_24_reg_3127;
wire   [7:0] shl_ln66_3_fu_1643_p2;
reg   [7:0] shl_ln66_3_reg_3133;
wire   [7:0] xor_ln819_fu_1662_p2;
reg   [7:0] xor_ln819_reg_3138;
wire   [1:0] grp_fu_775_p4;
reg   [1:0] tmp_25_reg_3143;
wire   [7:0] shl_ln66_4_fu_1674_p2;
reg   [7:0] shl_ln66_4_reg_3148;
wire   [7:0] xor_ln820_fu_1693_p2;
reg   [7:0] xor_ln820_reg_3153;
wire   [1:0] grp_fu_784_p4;
reg   [1:0] tmp_28_reg_3158;
wire   [4:0] add_ln797_fu_1699_p2;
wire   [4:0] cast_offset3_fu_1710_p3;
reg   [4:0] cast_offset3_reg_3168;
wire    ap_CS_fsm_state26;
reg   [31:0] ldvalue424_reg_3176;
wire   [4:0] or_ln66_3_fu_1718_p2;
reg   [4:0] or_ln66_3_reg_3181;
wire   [7:0] or_ln66_fu_1826_p2;
reg   [7:0] or_ln66_reg_3189;
wire   [31:0] or_ln66_4_fu_2067_p2;
reg   [31:0] or_ln66_4_reg_3195;
wire    ap_CS_fsm_state27;
wire   [4:0] cast_offset4_fu_2073_p3;
reg   [4:0] cast_offset4_reg_3200;
wire   [4:0] or_ln66_5_fu_2081_p2;
reg   [4:0] or_ln66_5_reg_3206;
wire   [5:0] sub_ln66_5_fu_2148_p2;
reg   [5:0] sub_ln66_5_reg_3212;
wire   [31:0] lshr_ln66_4_fu_2158_p2;
reg   [31:0] lshr_ln66_4_reg_3217;
wire   [7:0] or_ln66_1_fu_2187_p2;
reg   [7:0] or_ln66_1_reg_3222;
wire    ap_CS_fsm_state28;
wire   [31:0] or_ln66_6_fu_2308_p2;
reg   [31:0] or_ln66_6_reg_3227;
wire    ap_CS_fsm_state29;
wire   [4:0] cast_offset5_fu_2315_p3;
reg   [4:0] cast_offset5_reg_3232;
wire   [4:0] or_ln66_7_fu_2323_p2;
reg   [4:0] or_ln66_7_reg_3238;
wire   [5:0] sub_ln66_8_fu_2390_p2;
reg   [5:0] sub_ln66_8_reg_3244;
wire   [31:0] lshr_ln66_7_fu_2400_p2;
reg   [31:0] lshr_ln66_7_reg_3249;
wire   [6:0] add_ln926_fu_2576_p2;
reg   [6:0] add_ln926_reg_3254;
wire    ap_CS_fsm_state33;
wire    grp_matrix_mul_1_fu_705_ap_ready;
wire    grp_matrix_mul_1_fu_705_ap_done;
wire   [6:0] add_ln923_fu_2590_p2;
reg   [6:0] add_ln923_reg_3259;
wire   [2:0] i_5_fu_2602_p2;
reg   [2:0] i_5_reg_3267;
wire    ap_CS_fsm_state34;
reg   [4:0] tmp_addr_16_reg_3272;
wire   [0:0] icmp_ln108_2_fu_2596_p2;
wire   [2:0] i_fu_2643_p2;
reg   [2:0] i_reg_3286;
reg   [4:0] tmp_addr_15_reg_3291;
wire   [0:0] icmp_ln108_fu_2637_p2;
wire   [1:0] i_6_fu_2682_p2;
reg   [1:0] i_6_reg_3305;
wire    ap_CS_fsm_state37;
wire   [0:0] trunc_ln253_1_fu_2688_p1;
reg   [0:0] trunc_ln253_1_reg_3310;
wire   [0:0] icmp_ln252_1_fu_2676_p2;
wire   [2:0] select_ln109_2_fu_2692_p3;
reg   [2:0] select_ln109_2_reg_3315;
wire   [4:0] r_fu_2700_p2;
wire   [2:0] i_7_fu_2712_p2;
reg   [2:0] i_7_reg_3328;
wire    ap_CS_fsm_state38;
reg   [4:0] tmp_addr_25_reg_3333;
wire   [0:0] icmp_ln108_5_fu_2706_p2;
wire   [4:0] loop_26_fu_2768_p2;
reg   [4:0] loop_26_reg_3346;
wire    ap_CS_fsm_state40;
wire   [0:0] icmp_ln932_fu_2762_p2;
wire   [4:0] loop_27_fu_2805_p2;
reg   [4:0] loop_27_reg_3359;
wire    ap_CS_fsm_state42;
wire   [10:0] add_ln936_fu_2815_p2;
reg   [10:0] add_ln936_reg_3364;
wire   [0:0] icmp_ln935_fu_2799_p2;
wire    grp_matrix_mul_fu_688_ap_start;
wire    grp_matrix_mul_fu_688_ap_done;
wire    grp_matrix_mul_fu_688_ap_idle;
wire    grp_matrix_mul_fu_688_ap_ready;
wire   [4:0] grp_matrix_mul_fu_688_output_r_address0;
wire    grp_matrix_mul_fu_688_output_r_ce0;
wire   [3:0] grp_matrix_mul_fu_688_output_r_we0;
wire   [31:0] grp_matrix_mul_fu_688_output_r_d0;
reg   [4:0] grp_matrix_mul_fu_688_output_offset;
wire   [9:0] grp_matrix_mul_fu_688_state_address0;
wire    grp_matrix_mul_fu_688_state_ce0;
reg   [31:0] grp_matrix_mul_fu_688_state_q0;
reg   [13:0] grp_matrix_mul_fu_688_matrix_offset;
wire    grp_matrix_mul_1_fu_705_ap_start;
wire    grp_matrix_mul_1_fu_705_ap_idle;
wire   [4:0] grp_matrix_mul_1_fu_705_output_r_address0;
wire    grp_matrix_mul_1_fu_705_output_r_ce0;
wire   [3:0] grp_matrix_mul_1_fu_705_output_r_we0;
wire   [31:0] grp_matrix_mul_1_fu_705_output_r_d0;
reg   [4:0] grp_matrix_mul_1_fu_705_state_offset;
wire    grp_mpc_AND_verify_2_fu_717_ap_start;
wire    grp_mpc_AND_verify_2_fu_717_ap_idle;
reg   [7:0] grp_mpc_AND_verify_2_fu_717_in1_0_read;
reg   [7:0] grp_mpc_AND_verify_2_fu_717_in1_1_read;
reg   [7:0] grp_mpc_AND_verify_2_fu_717_in2_0_read;
reg   [7:0] grp_mpc_AND_verify_2_fu_717_in2_1_read;
wire   [8:0] grp_mpc_AND_verify_2_fu_717_rand_0_tape_address0;
wire    grp_mpc_AND_verify_2_fu_717_rand_0_tape_ce0;
wire   [8:0] grp_mpc_AND_verify_2_fu_717_rand_0_tape_address1;
wire    grp_mpc_AND_verify_2_fu_717_rand_0_tape_ce1;
reg   [31:0] grp_mpc_AND_verify_2_fu_717_rand_0_pos_read;
wire   [14:0] grp_mpc_AND_verify_2_fu_717_view1_communicatedBi_address0;
wire    grp_mpc_AND_verify_2_fu_717_view1_communicatedBi_ce0;
wire    grp_mpc_AND_verify_2_fu_717_view1_communicatedBi_we0;
wire   [7:0] grp_mpc_AND_verify_2_fu_717_view1_communicatedBi_d0;
wire   [14:0] grp_mpc_AND_verify_2_fu_717_view2_communicatedBi_address0;
wire    grp_mpc_AND_verify_2_fu_717_view2_communicatedBi_ce0;
wire   [31:0] grp_mpc_AND_verify_2_fu_717_ap_return_0;
wire   [7:0] grp_mpc_AND_verify_2_fu_717_ap_return_1;
wire   [7:0] grp_mpc_AND_verify_2_fu_717_ap_return_2;
reg   [3:0] loop_0_reg_365;
wire   [0:0] icmp_ln896_fu_842_p2;
reg   [3:0] loop_1_reg_376;
reg   [2:0] i_0_i8_i_reg_387;
wire    ap_CS_fsm_state5;
reg   [2:0] i_0_i_i_reg_398;
wire    ap_CS_fsm_state6;
reg   [1:0] i_0_i2_reg_409;
wire    ap_CS_fsm_state9;
reg   [2:0] i_0_i_i4_reg_420;
wire    ap_CS_fsm_state12;
reg   [4:0] r_0_reg_431;
reg   [7:0] c_1_1_i_reg_527;
reg   [7:0] c_1_06_i_reg_443;
reg   [7:0] c_0_1_i_reg_539;
reg   [7:0] c_0_05_i_reg_455;
reg   [7:0] b_1_1_i_reg_551;
reg   [7:0] b_1_04_i_reg_467;
reg   [7:0] b_0_1_i_reg_563;
reg   [7:0] b_0_03_i_reg_479;
reg   [7:0] a_1_1_i_reg_575;
reg   [7:0] a_1_02_i_reg_491;
reg   [7:0] a_0_1_i_reg_587;
reg   [7:0] a_0_01_i_reg_503;
reg   [4:0] bitNumber_assign_2_i_reg_515;
wire    ap_CS_fsm_state16;
reg   [1:0] j_0_i_reg_599;
reg   [1:0] j_1_i_reg_610;
wire    ap_CS_fsm_state30;
reg   [2:0] i_0_i1_reg_621;
wire    ap_CS_fsm_state35;
reg   [2:0] i_0_i_reg_632;
wire    ap_CS_fsm_state36;
reg   [1:0] i_0_i14_reg_643;
reg   [2:0] i_0_i_i24_reg_654;
wire    ap_CS_fsm_state39;
reg   [4:0] loop_2_reg_665;
wire    ap_CS_fsm_state41;
reg   [4:0] loop_3_reg_677;
wire    ap_CS_fsm_state43;
reg    grp_matrix_mul_fu_688_ap_start_reg;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state14;
reg    grp_matrix_mul_1_fu_705_ap_start_reg;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state31;
reg    grp_mpc_AND_verify_2_fu_717_ap_start_reg;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state23;
wire   [63:0] zext_ln897_fu_854_p1;
wire   [63:0] zext_ln902_fu_877_p1;
wire   [63:0] zext_ln109_9_fu_914_p1;
wire   [63:0] zext_ln109_2_fu_899_p1;
wire   [63:0] zext_ln109_8_fu_944_p1;
wire   [63:0] zext_ln109_1_fu_931_p1;
wire   [63:0] zext_ln109_11_fu_1013_p1;
wire   [63:0] zext_ln109_12_fu_1029_p1;
wire   [63:0] select_ln54_fu_1123_p3;
wire   [63:0] select_ln66_fu_1634_p3;
wire   [63:0] zext_ln109_6_fu_2622_p1;
wire   [63:0] zext_ln109_7_fu_2632_p1;
wire   [63:0] zext_ln109_3_fu_2661_p1;
wire   [63:0] zext_ln109_4_fu_2671_p1;
wire   [63:0] zext_ln109_14_fu_2741_p1;
wire   [63:0] zext_ln109_15_fu_2757_p1;
wire   [63:0] zext_ln933_2_fu_2780_p1;
wire   [63:0] zext_ln933_1_fu_2794_p1;
wire   [63:0] zext_ln936_2_fu_2826_p1;
wire   [63:0] zext_ln936_1_fu_2831_p1;
reg   [31:0] tapes_pos_0_0_fu_160;
wire   [31:0] grp_fu_751_p2;
wire   [31:0] grp_fu_758_p2;
wire   [31:0] and_ln66_5_fu_1930_p2;
wire   [3:0] shl_ln66_8_fu_1940_p2;
wire   [31:0] or_ln66_8_fu_2561_p2;
wire   [31:0] grp_fu_818_p2;
reg   [4:0] grp_fu_806_p0;
reg   [4:0] grp_fu_806_p1;
reg   [4:0] grp_fu_810_p0;
reg   [4:0] grp_fu_810_p1;
reg   [4:0] grp_fu_814_p0;
reg   [4:0] grp_fu_814_p1;
wire   [9:0] tmp_s_fu_830_p3;
wire   [3:0] xor_ln902_fu_871_p2;
wire   [2:0] xor_ln109_7_fu_904_p2;
wire  signed [3:0] sext_ln109_1_fu_910_p1;
wire   [3:0] state_0_sum1_fu_936_p3;
wire   [3:0] zext_ln109_10_fu_990_p1;
wire   [3:0] select_ln109_1_fu_994_p3;
wire   [3:0] add_ln109_2_fu_1001_p2;
wire   [3:0] add_ln109_3_fu_1007_p2;
wire   [2:0] add_ln109_4_fu_1018_p2;
wire   [2:0] add_ln109_5_fu_1023_p2;
wire   [2:0] trunc_ln797_fu_1049_p1;
wire   [2:0] sub_ln54_fu_1071_p2;
wire   [2:0] sub_ln54_1_fu_1081_p2;
wire   [2:0] xor_ln54_fu_1091_p2;
wire   [4:0] cast_offset_fu_1136_p3;
wire   [4:0] or_ln54_fu_1144_p2;
wire   [5:0] zext_ln54_5_fu_1156_p1;
wire   [5:0] zext_ln54_6_fu_1160_p1;
wire   [0:0] icmp_ln54_fu_1150_p2;
wire   [5:0] sub_ln54_2_fu_1174_p2;
wire   [5:0] sub_ln54_3_fu_1186_p2;
reg   [31:0] tmp_16_fu_1164_p4;
wire   [5:0] xor_ln54_2_fu_1180_p2;
wire   [5:0] select_ln54_1_fu_1192_p3;
wire   [5:0] select_ln54_3_fu_1208_p3;
wire   [5:0] sub_ln54_4_fu_1216_p2;
wire   [31:0] select_ln54_2_fu_1200_p3;
wire   [31:0] zext_ln54_7_fu_1222_p1;
wire   [31:0] zext_ln54_11_fu_1226_p1;
wire   [31:0] lshr_ln54_6_fu_1230_p2;
wire   [31:0] lshr_ln54_7_fu_1236_p2;
wire   [31:0] and_ln54_fu_1242_p2;
wire   [7:0] trunc_ln54_fu_1248_p1;
wire   [7:0] lshr_ln54_fu_1252_p2;
wire   [0:0] a_0_fu_1257_p1;
wire   [7:0] zext_ln54_8_fu_1261_p1;
wire   [4:0] cast_offset1_fu_1279_p3;
wire   [4:0] or_ln54_1_fu_1287_p2;
wire   [5:0] zext_ln54_12_fu_1299_p1;
wire   [5:0] zext_ln54_13_fu_1303_p1;
wire   [0:0] icmp_ln54_1_fu_1293_p2;
wire   [5:0] sub_ln54_5_fu_1317_p2;
wire   [5:0] sub_ln54_6_fu_1329_p2;
reg   [31:0] tmp_18_fu_1307_p4;
wire   [5:0] xor_ln54_3_fu_1323_p2;
wire   [5:0] select_ln54_4_fu_1335_p3;
wire   [5:0] select_ln54_6_fu_1351_p3;
wire   [5:0] sub_ln54_7_fu_1359_p2;
wire   [31:0] select_ln54_5_fu_1343_p3;
wire   [31:0] zext_ln54_14_fu_1365_p1;
wire   [31:0] zext_ln54_15_fu_1369_p1;
wire   [31:0] lshr_ln54_8_fu_1373_p2;
wire   [31:0] lshr_ln54_9_fu_1379_p2;
wire   [31:0] and_ln54_1_fu_1385_p2;
wire   [7:0] trunc_ln54_3_fu_1391_p1;
wire   [7:0] lshr_ln54_4_fu_1395_p2;
wire   [0:0] b_0_fu_1400_p1;
wire   [7:0] zext_ln54_9_fu_1404_p1;
wire   [4:0] cast_offset2_fu_1422_p3;
wire   [4:0] or_ln54_2_fu_1430_p2;
wire   [5:0] zext_ln54_16_fu_1442_p1;
wire   [5:0] zext_ln54_17_fu_1446_p1;
wire   [0:0] icmp_ln54_2_fu_1436_p2;
wire   [5:0] sub_ln54_8_fu_1460_p2;
wire   [5:0] sub_ln54_9_fu_1472_p2;
reg   [31:0] tmp_20_fu_1450_p4;
wire   [5:0] xor_ln54_4_fu_1466_p2;
wire   [5:0] select_ln54_7_fu_1478_p3;
wire   [5:0] select_ln54_9_fu_1494_p3;
wire   [5:0] sub_ln54_10_fu_1502_p2;
wire   [31:0] select_ln54_8_fu_1486_p3;
wire   [31:0] zext_ln54_18_fu_1508_p1;
wire   [31:0] zext_ln54_19_fu_1512_p1;
wire   [31:0] lshr_ln54_10_fu_1516_p2;
wire   [31:0] lshr_ln54_11_fu_1522_p2;
wire   [31:0] and_ln54_2_fu_1528_p2;
wire   [7:0] trunc_ln54_5_fu_1534_p1;
wire   [7:0] lshr_ln54_5_fu_1538_p2;
wire   [0:0] c_0_fu_1543_p1;
wire   [7:0] zext_ln54_10_fu_1547_p1;
wire   [7:0] shl_ln66_fu_1565_p2;
wire   [7:0] shl_ln66_1_fu_1576_p2;
wire   [7:0] shl_ln66_2_fu_1587_p2;
wire   [0:0] trunc_ln818_fu_1610_p1;
wire   [7:0] select_ln818_1_fu_1622_p3;
wire   [7:0] select_ln818_fu_1614_p3;
wire   [7:0] xor_ln818_fu_1628_p2;
wire   [7:0] select_ln819_fu_1648_p3;
wire   [7:0] select_ln819_1_fu_1656_p3;
wire   [7:0] xor_ln819_1_fu_1668_p2;
wire   [7:0] select_ln820_fu_1679_p3;
wire   [7:0] select_ln820_1_fu_1687_p3;
wire   [5:0] zext_ln66_fu_1725_p1;
wire   [5:0] zext_ln66_1_fu_1729_p1;
wire   [0:0] grp_fu_806_p2;
wire   [5:0] sub_ln66_fu_1743_p2;
wire   [5:0] sub_ln66_1_fu_1755_p2;
reg   [31:0] tmp_22_fu_1733_p4;
wire   [5:0] xor_ln66_3_fu_1749_p2;
wire   [5:0] select_ln66_1_fu_1761_p3;
wire   [5:0] select_ln66_3_fu_1777_p3;
wire   [5:0] sub_ln66_2_fu_1785_p2;
wire   [31:0] select_ln66_2_fu_1769_p3;
wire   [31:0] zext_ln66_2_fu_1791_p1;
wire   [31:0] zext_ln66_3_fu_1795_p1;
wire   [31:0] lshr_ln66_fu_1799_p2;
wire   [31:0] lshr_ln66_1_fu_1805_p2;
wire   [31:0] and_ln66_3_fu_1811_p2;
wire   [7:0] trunc_ln66_fu_1817_p1;
wire   [7:0] and_ln66_fu_1821_p2;
wire   [5:0] zext_ln66_4_fu_1831_p1;
wire   [5:0] zext_ln66_5_fu_1834_p1;
wire   [5:0] xor_ln66_4_fu_1840_p2;
wire   [5:0] select_ln66_4_fu_1846_p3;
wire   [5:0] select_ln66_6_fu_1862_p3;
wire   [5:0] select_ln66_5_fu_1854_p3;
wire   [5:0] xor_ln66_5_fu_1870_p2;
wire   [31:0] zext_ln66_6_fu_1837_p1;
wire   [31:0] zext_ln66_7_fu_1876_p1;
wire   [31:0] shl_ln66_6_fu_1888_p2;
reg   [31:0] tmp_23_fu_1894_p4;
wire   [31:0] zext_ln66_8_fu_1880_p1;
wire   [31:0] zext_ln66_9_fu_1884_p1;
wire   [31:0] shl_ln66_7_fu_1912_p2;
wire   [31:0] lshr_ln66_2_fu_1918_p2;
wire   [31:0] select_ln66_7_fu_1904_p3;
wire   [31:0] and_ln66_4_fu_1924_p2;
wire   [3:0] zext_ln66_10_fu_1937_p1;
wire   [5:0] zext_ln66_11_fu_1951_p1;
wire   [0:0] icmp_ln66_2_fu_1947_p2;
wire   [5:0] zext_ln66_12_fu_1954_p1;
wire   [5:0] xor_ln66_6_fu_1960_p2;
wire   [5:0] select_ln66_8_fu_1966_p3;
wire   [5:0] select_ln66_10_fu_1982_p3;
wire   [5:0] select_ln66_9_fu_1974_p3;
wire   [5:0] xor_ln66_7_fu_1990_p2;
wire   [31:0] zext_ln66_13_fu_1957_p1;
wire   [31:0] zext_ln66_14_fu_1996_p1;
wire   [31:0] shl_ln66_9_fu_2008_p2;
reg   [31:0] tmp_24_fu_2014_p4;
wire   [31:0] zext_ln66_15_fu_2000_p1;
wire   [31:0] zext_ln66_16_fu_2004_p1;
wire   [31:0] shl_ln66_10_fu_2032_p2;
wire   [31:0] lshr_ln66_3_fu_2038_p2;
wire   [31:0] and_ln66_6_fu_2044_p2;
wire   [31:0] xor_ln66_8_fu_2050_p2;
wire   [31:0] select_ln66_11_fu_2024_p3;
wire   [31:0] and_ln66_7_fu_2056_p2;
wire   [31:0] and_ln66_8_fu_2061_p2;
wire   [5:0] zext_ln66_17_fu_2088_p1;
wire   [5:0] zext_ln66_18_fu_2092_p1;
wire   [0:0] grp_fu_810_p2;
wire   [5:0] sub_ln66_3_fu_2106_p2;
wire   [5:0] sub_ln66_4_fu_2118_p2;
reg   [31:0] tmp_26_fu_2096_p4;
wire   [5:0] xor_ln66_9_fu_2112_p2;
wire   [5:0] select_ln66_12_fu_2124_p3;
wire   [5:0] select_ln66_14_fu_2140_p3;
wire   [31:0] select_ln66_13_fu_2132_p3;
wire   [31:0] zext_ln66_19_fu_2154_p1;
wire   [31:0] zext_ln66_20_fu_2164_p1;
wire   [31:0] lshr_ln66_5_fu_2167_p2;
wire   [31:0] and_ln66_9_fu_2173_p2;
wire   [7:0] trunc_ln66_1_fu_2178_p1;
wire   [7:0] and_ln66_1_fu_2182_p2;
wire   [5:0] zext_ln66_21_fu_2192_p1;
wire   [5:0] zext_ln66_22_fu_2195_p1;
wire   [5:0] xor_ln66_10_fu_2201_p2;
wire   [5:0] select_ln66_15_fu_2207_p3;
wire   [5:0] select_ln66_17_fu_2223_p3;
wire   [5:0] select_ln66_16_fu_2215_p3;
wire   [5:0] xor_ln66_11_fu_2231_p2;
wire   [31:0] zext_ln66_23_fu_2198_p1;
wire   [31:0] zext_ln66_24_fu_2237_p1;
wire   [31:0] shl_ln66_11_fu_2249_p2;
reg   [31:0] tmp_27_fu_2255_p4;
wire   [31:0] zext_ln66_25_fu_2241_p1;
wire   [31:0] zext_ln66_26_fu_2245_p1;
wire   [31:0] shl_ln66_12_fu_2273_p2;
wire   [31:0] lshr_ln66_6_fu_2279_p2;
wire   [31:0] and_ln66_10_fu_2285_p2;
wire   [31:0] xor_ln66_12_fu_2291_p2;
wire   [31:0] select_ln66_18_fu_2265_p3;
wire   [31:0] and_ln66_11_fu_2297_p2;
wire   [31:0] and_ln66_12_fu_2302_p2;
wire   [5:0] zext_ln66_27_fu_2330_p1;
wire   [5:0] zext_ln66_28_fu_2334_p1;
wire   [0:0] grp_fu_814_p2;
wire   [5:0] sub_ln66_6_fu_2348_p2;
wire   [5:0] sub_ln66_7_fu_2360_p2;
reg   [31:0] tmp_29_fu_2338_p4;
wire   [5:0] xor_ln66_13_fu_2354_p2;
wire   [5:0] select_ln66_19_fu_2366_p3;
wire   [5:0] select_ln66_21_fu_2382_p3;
wire   [31:0] select_ln66_20_fu_2374_p3;
wire   [31:0] zext_ln66_29_fu_2396_p1;
wire   [31:0] zext_ln66_30_fu_2410_p1;
wire   [31:0] lshr_ln66_8_fu_2413_p2;
wire   [31:0] and_ln66_13_fu_2419_p2;
wire   [7:0] xor_ln820_1_fu_2406_p2;
wire   [7:0] trunc_ln66_2_fu_2424_p1;
wire   [7:0] and_ln66_2_fu_2433_p2;
wire   [7:0] shl_ln66_5_fu_2428_p2;
wire   [7:0] or_ln66_2_fu_2438_p2;
wire   [5:0] zext_ln66_31_fu_2444_p1;
wire   [5:0] zext_ln66_32_fu_2447_p1;
wire   [5:0] xor_ln66_14_fu_2454_p2;
wire   [5:0] select_ln66_22_fu_2460_p3;
wire   [5:0] select_ln66_24_fu_2476_p3;
wire   [5:0] select_ln66_23_fu_2468_p3;
wire   [5:0] xor_ln66_15_fu_2484_p2;
wire   [31:0] zext_ln66_33_fu_2450_p1;
wire   [31:0] zext_ln66_34_fu_2490_p1;
wire   [31:0] shl_ln66_13_fu_2502_p2;
reg   [31:0] tmp_30_fu_2508_p4;
wire   [31:0] zext_ln66_35_fu_2494_p1;
wire   [31:0] zext_ln66_36_fu_2498_p1;
wire   [31:0] shl_ln66_14_fu_2526_p2;
wire   [31:0] lshr_ln66_9_fu_2532_p2;
wire   [31:0] and_ln66_14_fu_2538_p2;
wire   [31:0] xor_ln66_16_fu_2544_p2;
wire   [31:0] select_ln66_25_fu_2518_p3;
wire   [31:0] and_ln66_15_fu_2550_p2;
wire   [31:0] and_ln66_16_fu_2555_p2;
wire   [6:0] shl_ln4_fu_2568_p3;
wire   [6:0] shl_ln3_fu_2582_p3;
wire   [2:0] xor_ln109_3_fu_2612_p2;
wire  signed [3:0] sext_ln109_fu_2618_p1;
wire   [6:0] zext_ln109_5_fu_2608_p1;
wire   [6:0] add_ln109_1_fu_2627_p2;
wire   [3:0] or_ln_fu_2653_p3;
wire   [6:0] zext_ln109_fu_2649_p1;
wire   [6:0] add_ln109_fu_2666_p2;
wire   [3:0] zext_ln109_13_fu_2718_p1;
wire   [3:0] select_ln109_3_fu_2722_p3;
wire   [3:0] add_ln109_6_fu_2729_p2;
wire   [3:0] add_ln109_7_fu_2735_p2;
wire   [2:0] add_ln109_8_fu_2746_p2;
wire   [2:0] add_ln109_9_fu_2751_p2;
wire   [4:0] add_ln933_1_fu_2774_p2;
wire   [10:0] zext_ln933_fu_2785_p1;
wire   [10:0] add_ln933_fu_2789_p2;
wire   [10:0] zext_ln936_fu_2811_p1;
wire   [4:0] add_ln936_1_fu_2820_p2;
reg   [42:0] ap_NS_fsm;
reg    ap_condition_215;
reg    ap_condition_452;

// power-on initialization
initial begin
#0 ap_CS_fsm = 43'd1;
#0 grp_matrix_mul_fu_688_ap_start_reg = 1'b0;
#0 grp_matrix_mul_1_fu_705_ap_start_reg = 1'b0;
#0 grp_mpc_AND_verify_2_fu_717_ap_start_reg = 1'b0;
end

mpc_LowMC_verify_jbC #(
    .DataWidth( 32 ),
    .AddressRange( 80 ),
    .AddressWidth( 7 ))
temp_matrix3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(temp_matrix3_address0),
    .ce0(temp_matrix3_ce0),
    .q0(temp_matrix3_q0)
);

matrix_mul grp_matrix_mul_fu_688(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_matrix_mul_fu_688_ap_start),
    .ap_done(grp_matrix_mul_fu_688_ap_done),
    .ap_idle(grp_matrix_mul_fu_688_ap_idle),
    .ap_ready(grp_matrix_mul_fu_688_ap_ready),
    .output_r_address0(grp_matrix_mul_fu_688_output_r_address0),
    .output_r_ce0(grp_matrix_mul_fu_688_output_r_ce0),
    .output_r_we0(grp_matrix_mul_fu_688_output_r_we0),
    .output_r_d0(grp_matrix_mul_fu_688_output_r_d0),
    .output_offset(grp_matrix_mul_fu_688_output_offset),
    .state_address0(grp_matrix_mul_fu_688_state_address0),
    .state_ce0(grp_matrix_mul_fu_688_state_ce0),
    .state_q0(grp_matrix_mul_fu_688_state_q0),
    .state_offset(view1_inputShare_offset),
    .matrix_offset(grp_matrix_mul_fu_688_matrix_offset)
);

matrix_mul_1 grp_matrix_mul_1_fu_705(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_matrix_mul_1_fu_705_ap_start),
    .ap_done(grp_matrix_mul_1_fu_705_ap_done),
    .ap_idle(grp_matrix_mul_1_fu_705_ap_idle),
    .ap_ready(grp_matrix_mul_1_fu_705_ap_ready),
    .output_r_address0(grp_matrix_mul_1_fu_705_output_r_address0),
    .output_r_ce0(grp_matrix_mul_1_fu_705_output_r_ce0),
    .output_r_we0(grp_matrix_mul_1_fu_705_output_r_we0),
    .output_r_d0(grp_matrix_mul_1_fu_705_output_r_d0),
    .output_r_q0(tmp_q0),
    .state_offset(grp_matrix_mul_1_fu_705_state_offset),
    .matrix_offset(add_ln919_reg_3005)
);

mpc_AND_verify_2 grp_mpc_AND_verify_2_fu_717(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_mpc_AND_verify_2_fu_717_ap_start),
    .ap_done(grp_mpc_AND_verify_2_fu_717_ap_done),
    .ap_idle(grp_mpc_AND_verify_2_fu_717_ap_idle),
    .ap_ready(grp_mpc_AND_verify_2_fu_717_ap_ready),
    .in1_0_read(grp_mpc_AND_verify_2_fu_717_in1_0_read),
    .in1_1_read(grp_mpc_AND_verify_2_fu_717_in1_1_read),
    .in2_0_read(grp_mpc_AND_verify_2_fu_717_in2_0_read),
    .in2_1_read(grp_mpc_AND_verify_2_fu_717_in2_1_read),
    .rand_0_tape_address0(grp_mpc_AND_verify_2_fu_717_rand_0_tape_address0),
    .rand_0_tape_ce0(grp_mpc_AND_verify_2_fu_717_rand_0_tape_ce0),
    .rand_0_tape_q0(tapes_0_tape_q0),
    .rand_0_tape_address1(grp_mpc_AND_verify_2_fu_717_rand_0_tape_address1),
    .rand_0_tape_ce1(grp_mpc_AND_verify_2_fu_717_rand_0_tape_ce1),
    .rand_0_tape_q1(tapes_0_tape_q1),
    .rand_0_pos_read(grp_mpc_AND_verify_2_fu_717_rand_0_pos_read),
    .view1_communicatedBi_address0(grp_mpc_AND_verify_2_fu_717_view1_communicatedBi_address0),
    .view1_communicatedBi_ce0(grp_mpc_AND_verify_2_fu_717_view1_communicatedBi_ce0),
    .view1_communicatedBi_we0(grp_mpc_AND_verify_2_fu_717_view1_communicatedBi_we0),
    .view1_communicatedBi_d0(grp_mpc_AND_verify_2_fu_717_view1_communicatedBi_d0),
    .view1_communicatedBi_q0(view1_communicatedBi_q0),
    .view1_communicatedBits_offset(view1_inputShare_offset),
    .view2_communicatedBi_address0(grp_mpc_AND_verify_2_fu_717_view2_communicatedBi_address0),
    .view2_communicatedBi_ce0(grp_mpc_AND_verify_2_fu_717_view2_communicatedBi_ce0),
    .view2_communicatedBi_q0(view2_communicatedBi_q0),
    .view2_communicatedBits_offset(view1_inputShare_offset),
    .ap_return_0(grp_mpc_AND_verify_2_fu_717_ap_return_0),
    .ap_return_1(grp_mpc_AND_verify_2_fu_717_ap_return_1),
    .ap_return_2(grp_mpc_AND_verify_2_fu_717_ap_return_2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_matrix_mul_1_fu_705_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state32) | ((1'b1 == ap_CS_fsm_state17) & (icmp_ln797_fu_1053_p2 == 1'd0)))) begin
            grp_matrix_mul_1_fu_705_ap_start_reg <= 1'b1;
        end else if ((grp_matrix_mul_1_fu_705_ap_ready == 1'b1)) begin
            grp_matrix_mul_1_fu_705_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_matrix_mul_fu_688_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state8) | ((1'b1 == ap_CS_fsm_state13) & (icmp_ln913_fu_1034_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state4) & ((((icmp_ln108_1_fu_919_p2 == 1'd1) & (icmp_ln266_reg_2870 == 1'd1)) | ((icmp_ln108_3_fu_887_p2 == 1'd1) & (icmp_ln266_reg_2870 == 1'd0))) | ((icmp_ln269_reg_2874 == 1'd0) & (icmp_ln266_reg_2870 == 1'd0)))))) begin
            grp_matrix_mul_fu_688_ap_start_reg <= 1'b1;
        end else if ((grp_matrix_mul_fu_688_ap_ready == 1'b1)) begin
            grp_matrix_mul_fu_688_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_mpc_AND_verify_2_fu_717_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21) | ((1'b1 == ap_CS_fsm_state18) & (icmp_ln803_fu_1107_p2 == 1'd1)))) begin
            grp_mpc_AND_verify_2_fu_717_ap_start_reg <= 1'b1;
        end else if ((grp_mpc_AND_verify_2_fu_717_ap_ready == 1'b1)) begin
            grp_mpc_AND_verify_2_fu_717_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        a_0_1_i_reg_587 <= a_1_2_fu_1272_p3;
    end else if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln797_fu_1053_p2 == 1'd1))) begin
        a_0_1_i_reg_587 <= a_0_01_i_reg_503;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        a_1_1_i_reg_575 <= a_1_1_fu_1265_p3;
    end else if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln797_fu_1053_p2 == 1'd1))) begin
        a_1_1_i_reg_575 <= a_1_02_i_reg_491;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        b_0_1_i_reg_563 <= b_1_2_fu_1415_p3;
    end else if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln797_fu_1053_p2 == 1'd1))) begin
        b_0_1_i_reg_563 <= b_0_03_i_reg_479;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        b_1_1_i_reg_551 <= b_1_1_fu_1408_p3;
    end else if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln797_fu_1053_p2 == 1'd1))) begin
        b_1_1_i_reg_551 <= b_1_04_i_reg_467;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) & (icmp_ln817_fu_1598_p2 == 1'd1))) begin
        bitNumber_assign_2_i_reg_515 <= add_ln797_fu_1699_p2;
    end else if (((grp_matrix_mul_fu_688_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
        bitNumber_assign_2_i_reg_515 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        c_0_1_i_reg_539 <= c_1_2_fu_1558_p3;
    end else if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln797_fu_1053_p2 == 1'd1))) begin
        c_0_1_i_reg_539 <= c_0_05_i_reg_455;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        c_1_1_i_reg_527 <= c_1_1_fu_1551_p3;
    end else if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln797_fu_1053_p2 == 1'd1))) begin
        c_1_1_i_reg_527 <= c_1_06_i_reg_443;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state38) & (icmp_ln108_5_fu_2706_p2 == 1'd1))) begin
        i_0_i14_reg_643 <= i_6_reg_3305;
    end else if (((1'b1 == ap_CS_fsm_state34) & ((((icmp_ln108_fu_2637_p2 == 1'd1) & (icmp_ln266_reg_2870 == 1'd1)) | ((icmp_ln108_2_fu_2596_p2 == 1'd1) & (icmp_ln266_reg_2870 == 1'd0))) | ((icmp_ln925_reg_2939 == 1'd0) & (icmp_ln266_reg_2870 == 1'd0))))) begin
        i_0_i14_reg_643 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        i_0_i1_reg_621 <= i_5_reg_3267;
    end else if (((grp_matrix_mul_1_fu_705_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state33) & (icmp_ln925_reg_2939 == 1'd1) & (icmp_ln266_reg_2870 == 1'd0))) begin
        i_0_i1_reg_621 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln108_4_fu_978_p2 == 1'd1))) begin
        i_0_i2_reg_409 <= i_3_reg_2917;
    end else if (((grp_matrix_mul_fu_688_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        i_0_i2_reg_409 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (grp_fu_746_p2 == 1'd1) & (icmp_ln901_fu_859_p2 == 1'd1) & (icmp_ln266_fu_882_p2 == 1'd0))) begin
        i_0_i8_i_reg_387 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        i_0_i8_i_reg_387 <= i_2_reg_2881;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        i_0_i_i24_reg_654 <= i_7_reg_3328;
    end else if (((1'b1 == ap_CS_fsm_state37) & (icmp_ln252_1_fu_2676_p2 == 1'd0))) begin
        i_0_i_i24_reg_654 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        i_0_i_i4_reg_420 <= i_4_reg_2946;
    end else if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln252_fu_949_p2 == 1'd0))) begin
        i_0_i_i4_reg_420 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln901_fu_859_p2 == 1'd1) & (icmp_ln266_fu_882_p2 == 1'd1))) begin
        i_0_i_i_reg_398 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        i_0_i_i_reg_398 <= i_1_reg_2899;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        i_0_i_reg_632 <= i_reg_3286;
    end else if (((grp_matrix_mul_1_fu_705_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state33) & (icmp_ln266_reg_2870 == 1'd1))) begin
        i_0_i_reg_632 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        j_0_i_reg_599 <= j_reg_3013;
    end else if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln797_fu_1053_p2 == 1'd1))) begin
        j_0_i_reg_599 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        j_1_i_reg_610 <= j_1_reg_3116;
    end else if (((1'b1 == ap_CS_fsm_state24) & (grp_mpc_AND_verify_2_fu_717_ap_done == 1'b1))) begin
        j_1_i_reg_610 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln896_fu_842_p2 == 1'd0))) begin
        loop_0_reg_365 <= loop_fu_848_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        loop_0_reg_365 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln896_fu_842_p2 == 1'd1))) begin
        loop_1_reg_376 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln901_fu_859_p2 == 1'd0))) begin
        loop_1_reg_376 <= loop_25_fu_865_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln913_fu_1034_p2 == 1'd1))) begin
        loop_2_reg_665 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        loop_2_reg_665 <= loop_26_reg_3346;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state40) & (icmp_ln932_fu_2762_p2 == 1'd1))) begin
        loop_3_reg_677 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        loop_3_reg_677 <= loop_27_reg_3359;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state37) & (icmp_ln252_1_fu_2676_p2 == 1'd1))) begin
        r_0_reg_431 <= r_fu_2700_p2;
    end else if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln252_fu_949_p2 == 1'd1))) begin
        r_0_reg_431 <= 5'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) & (icmp_ln817_fu_1598_p2 == 1'd1))) begin
        tapes_pos_0_0_fu_160 <= reg_825;
    end else if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln252_fu_949_p2 == 1'd1))) begin
        tapes_pos_0_0_fu_160 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) & (icmp_ln817_fu_1598_p2 == 1'd1))) begin
        a_0_01_i_reg_503 <= a_0_1_i_reg_587;
        a_1_02_i_reg_491 <= a_1_1_i_reg_575;
        b_0_03_i_reg_479 <= b_0_1_i_reg_563;
        b_1_04_i_reg_467 <= b_1_1_i_reg_551;
        c_0_05_i_reg_455 <= c_0_1_i_reg_539;
        c_1_06_i_reg_443 <= c_1_1_i_reg_527;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (grp_mpc_AND_verify_2_fu_717_ap_done == 1'b1))) begin
        ab_0_reg_3068 <= grp_mpc_AND_verify_2_fu_717_ap_return_1;
        ab_1_reg_3073 <= grp_mpc_AND_verify_2_fu_717_ap_return_2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln797_fu_1053_p2 == 1'd1))) begin
        add_ln804_reg_2974 <= add_ln804_fu_1059_p2;
        add_ln805_reg_2979 <= add_ln805_fu_1065_p2;
        zext_ln54_3_reg_2991[2 : 0] <= zext_ln54_3_fu_1087_p1[2 : 0];
        zext_ln54_4_reg_2998[2 : 0] <= zext_ln54_4_fu_1097_p1[2 : 0];
        zext_ln54_reg_2984[2 : 0] <= zext_ln54_fu_1077_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln797_fu_1053_p2 == 1'd0))) begin
        add_ln919_reg_3005[13 : 9] <= add_ln919_fu_1101_p2[13 : 9];
    end
end

always @ (posedge ap_clk) begin
    if (((grp_matrix_mul_1_fu_705_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state33) & (icmp_ln266_reg_2870 == 1'd1))) begin
        add_ln923_reg_3259[6 : 2] <= add_ln923_fu_2590_p2[6 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((grp_matrix_mul_1_fu_705_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state33) & (icmp_ln925_reg_2939 == 1'd1) & (icmp_ln266_reg_2870 == 1'd0))) begin
        add_ln926_reg_3254[6 : 2] <= add_ln926_fu_2576_p2[6 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state42) & (icmp_ln935_fu_2799_p2 == 1'd0))) begin
        add_ln936_reg_3364 <= add_ln936_fu_2815_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) & (grp_mpc_AND_verify_2_fu_717_ap_done == 1'b1))) begin
        bc_0_reg_3078 <= grp_mpc_AND_verify_2_fu_717_ap_return_1;
        bc_1_reg_3083 <= grp_mpc_AND_verify_2_fu_717_ap_return_2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state24) & (grp_mpc_AND_verify_2_fu_717_ap_done == 1'b1))) begin
        ca_0_reg_3088 <= grp_mpc_AND_verify_2_fu_717_ap_return_1;
        ca_1_reg_3093 <= grp_mpc_AND_verify_2_fu_717_ap_return_2;
        xor_ln66_1_reg_3103 <= xor_ln66_1_fu_1581_p2;
        xor_ln66_2_reg_3108 <= xor_ln66_2_fu_1592_p2;
        xor_ln66_reg_3098 <= xor_ln66_fu_1570_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        cast_offset3_reg_3168[4 : 3] <= cast_offset3_fu_1710_p3[4 : 3];
        ldvalue424_reg_3176 <= tmp_q1;
        or_ln66_3_reg_3181[4 : 3] <= or_ln66_3_fu_1718_p2[4 : 3];
        or_ln66_reg_3189 <= or_ln66_fu_1826_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        cast_offset4_reg_3200[4 : 3] <= cast_offset4_fu_2073_p3[4 : 3];
        lshr_ln66_4_reg_3217 <= lshr_ln66_4_fu_2158_p2;
        or_ln66_4_reg_3195 <= or_ln66_4_fu_2067_p2;
        or_ln66_5_reg_3206[4 : 3] <= or_ln66_5_fu_2081_p2[4 : 3];
        sub_ln66_5_reg_3212[5 : 1] <= sub_ln66_5_fu_2148_p2[5 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        cast_offset5_reg_3232[4 : 3] <= cast_offset5_fu_2315_p3[4 : 3];
        lshr_ln66_7_reg_3249 <= lshr_ln66_7_fu_2400_p2;
        or_ln66_6_reg_3227 <= or_ln66_6_fu_2308_p2;
        or_ln66_7_reg_3238[4 : 3] <= or_ln66_7_fu_2323_p2[4 : 3];
        sub_ln66_8_reg_3244[5 : 1] <= sub_ln66_8_fu_2390_p2[5 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln266_reg_2870 == 1'd1))) begin
        i_1_reg_2899 <= i_1_fu_925_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln269_reg_2874 == 1'd1) & (icmp_ln266_reg_2870 == 1'd0))) begin
        i_2_reg_2881 <= i_2_fu_893_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        i_3_reg_2917 <= i_3_fu_955_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        i_4_reg_2946 <= i_4_fu_984_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state34) & (icmp_ln925_reg_2939 == 1'd1) & (icmp_ln266_reg_2870 == 1'd0))) begin
        i_5_reg_3267 <= i_5_fu_2602_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        i_6_reg_3305 <= i_6_fu_2682_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        i_7_reg_3328 <= i_7_fu_2712_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state34) & (icmp_ln266_reg_2870 == 1'd1))) begin
        i_reg_3286 <= i_fu_2643_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln901_fu_859_p2 == 1'd1))) begin
        icmp_ln266_reg_2870 <= icmp_ln266_fu_882_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln901_fu_859_p2 == 1'd1) & (icmp_ln266_fu_882_p2 == 1'd0))) begin
        icmp_ln269_reg_2874 <= grp_fu_746_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln252_fu_949_p2 == 1'd1))) begin
        icmp_ln925_reg_2939 <= grp_fu_746_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        j_1_reg_3116 <= j_1_fu_1604_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        j_reg_3013 <= j_fu_1113_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        loop_26_reg_3346 <= loop_26_fu_2768_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        loop_27_reg_3359 <= loop_27_fu_2805_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        or_ln66_1_reg_3222 <= or_ln66_1_fu_2187_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state24) & (grp_mpc_AND_verify_2_fu_717_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state22) & (grp_mpc_AND_verify_2_fu_717_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state20) & (grp_mpc_AND_verify_2_fu_717_ap_done == 1'b1)))) begin
        reg_825 <= grp_mpc_AND_verify_2_fu_717_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state37) & (icmp_ln252_1_fu_2676_p2 == 1'd0))) begin
        select_ln109_2_reg_3315[2] <= select_ln109_2_fu_2692_p3[2];
        trunc_ln253_1_reg_3310 <= trunc_ln253_1_fu_2688_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln252_fu_949_p2 == 1'd0))) begin
        select_ln109_reg_2927[2] <= select_ln109_fu_965_p3[2];
        trunc_ln253_reg_2922 <= trunc_ln253_fu_961_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) & (icmp_ln817_fu_1598_p2 == 1'd0))) begin
        shl_ln66_3_reg_3133 <= shl_ln66_3_fu_1643_p2;
        shl_ln66_4_reg_3148 <= shl_ln66_4_fu_1674_p2;
        tmp_21_reg_3121 <= {{add_ln804_reg_2974[4:3]}};
        tmp_25_reg_3143 <= {{add_ln805_reg_2979[4:3]}};
        tmp_28_reg_3158 <= {{bitNumber_assign_2_i_reg_515[4:3]}};
        tmp_addr_24_reg_3127[2] <= select_ln66_fu_1634_p3[2];
        xor_ln819_reg_3138 <= xor_ln819_fu_1662_p2;
        xor_ln820_reg_3153 <= xor_ln820_fu_1693_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln913_fu_1034_p2 == 1'd0))) begin
        shl_ln_reg_2965[13 : 9] <= shl_ln_fu_1040_p3[13 : 9];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state34) & (icmp_ln108_fu_2637_p2 == 1'd0) & (icmp_ln266_reg_2870 == 1'd1))) begin
        tmp_addr_15_reg_3291[2 : 0] <= zext_ln109_3_fu_2661_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state34) & (icmp_ln108_2_fu_2596_p2 == 1'd0) & (icmp_ln925_reg_2939 == 1'd1) & (icmp_ln266_reg_2870 == 1'd0))) begin
        tmp_addr_16_reg_3272[3 : 0] <= zext_ln109_6_fu_2622_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln108_1_fu_919_p2 == 1'd0) & (icmp_ln266_reg_2870 == 1'd1))) begin
        tmp_addr_17_reg_2904[2 : 0] <= zext_ln109_8_fu_944_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln108_3_fu_887_p2 == 1'd0) & (icmp_ln269_reg_2874 == 1'd1) & (icmp_ln266_reg_2870 == 1'd0))) begin
        tmp_addr_18_reg_2886[3 : 0] <= zext_ln109_9_fu_914_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln108_4_fu_978_p2 == 1'd0))) begin
        tmp_addr_19_reg_2951[3 : 0] <= zext_ln109_11_fu_1013_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state38) & (icmp_ln108_5_fu_2706_p2 == 1'd0))) begin
        tmp_addr_25_reg_3333[3 : 0] <= zext_ln109_14_fu_2741_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (icmp_ln803_fu_1107_p2 == 1'd0))) begin
        trunc_ln804_reg_3018 <= trunc_ln804_fu_1119_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        zext_ln933_1_cast_reg_2848[9 : 2] <= zext_ln933_1_cast_fu_838_p1[9 : 2];
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state42) & (icmp_ln935_fu_2799_p2 == 1'd1)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state42) & (icmp_ln935_fu_2799_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_806_p0 = cast_offset3_reg_3168;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_806_p0 = cast_offset3_fu_1710_p3;
    end else begin
        grp_fu_806_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_806_p1 = or_ln66_3_reg_3181;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_806_p1 = or_ln66_3_fu_1718_p2;
    end else begin
        grp_fu_806_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_810_p0 = cast_offset4_reg_3200;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_810_p0 = cast_offset4_fu_2073_p3;
    end else begin
        grp_fu_810_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_810_p1 = or_ln66_5_reg_3206;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_810_p1 = or_ln66_5_fu_2081_p2;
    end else begin
        grp_fu_810_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_fu_814_p0 = cast_offset5_reg_3232;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_814_p0 = cast_offset5_fu_2315_p3;
    end else begin
        grp_fu_814_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_fu_814_p1 = or_ln66_7_reg_3238;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_814_p1 = or_ln66_7_fu_2323_p2;
    end else begin
        grp_fu_814_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        grp_matrix_mul_1_fu_705_state_offset = 5'd12;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_matrix_mul_1_fu_705_state_offset = 5'd8;
    end else begin
        grp_matrix_mul_1_fu_705_state_offset = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_matrix_mul_fu_688_matrix_offset = shl_ln_reg_2965;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_matrix_mul_fu_688_matrix_offset = 14'd0;
    end else begin
        grp_matrix_mul_fu_688_matrix_offset = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_matrix_mul_fu_688_output_offset = 5'd4;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state7))) begin
        grp_matrix_mul_fu_688_output_offset = 5'd0;
    end else begin
        grp_matrix_mul_fu_688_output_offset = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_matrix_mul_fu_688_state_q0 = view2_inputShare_q0;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state7))) begin
        grp_matrix_mul_fu_688_state_q0 = view1_inputShare_q0;
    end else begin
        grp_matrix_mul_fu_688_state_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_mpc_AND_verify_2_fu_717_in1_0_read = c_0_1_i_reg_539;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_mpc_AND_verify_2_fu_717_in1_0_read = b_0_1_i_reg_563;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_mpc_AND_verify_2_fu_717_in1_0_read = a_0_1_i_reg_587;
    end else begin
        grp_mpc_AND_verify_2_fu_717_in1_0_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_mpc_AND_verify_2_fu_717_in1_1_read = c_1_1_i_reg_527;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_mpc_AND_verify_2_fu_717_in1_1_read = b_1_1_i_reg_551;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_mpc_AND_verify_2_fu_717_in1_1_read = a_1_1_i_reg_575;
    end else begin
        grp_mpc_AND_verify_2_fu_717_in1_1_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_mpc_AND_verify_2_fu_717_in2_0_read = a_0_1_i_reg_587;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_mpc_AND_verify_2_fu_717_in2_0_read = c_0_1_i_reg_539;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_mpc_AND_verify_2_fu_717_in2_0_read = b_0_1_i_reg_563;
    end else begin
        grp_mpc_AND_verify_2_fu_717_in2_0_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_mpc_AND_verify_2_fu_717_in2_1_read = a_1_1_i_reg_575;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_mpc_AND_verify_2_fu_717_in2_1_read = c_1_1_i_reg_527;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_mpc_AND_verify_2_fu_717_in2_1_read = b_1_1_i_reg_551;
    end else begin
        grp_mpc_AND_verify_2_fu_717_in2_1_read = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state22))) begin
        grp_mpc_AND_verify_2_fu_717_rand_0_pos_read = reg_825;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_mpc_AND_verify_2_fu_717_rand_0_pos_read = tapes_pos_0_0_fu_160;
    end else begin
        grp_mpc_AND_verify_2_fu_717_rand_0_pos_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        if (((icmp_ln108_1_fu_919_p2 == 1'd0) & (icmp_ln266_reg_2870 == 1'd1))) begin
            plaintext_address0 = zext_ln109_1_fu_931_p1;
        end else if ((1'b1 == ap_condition_215)) begin
            plaintext_address0 = zext_ln109_2_fu_899_p1;
        end else begin
            plaintext_address0 = 'bx;
        end
    end else begin
        plaintext_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state4) & (icmp_ln108_1_fu_919_p2 == 1'd0) & (icmp_ln266_reg_2870 == 1'd1)) | ((1'b1 == ap_CS_fsm_state4) & (icmp_ln108_3_fu_887_p2 == 1'd0) & (icmp_ln269_reg_2874 == 1'd1) & (icmp_ln266_reg_2870 == 1'd0)))) begin
        plaintext_ce0 = 1'b1;
    end else begin
        plaintext_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20))) begin
        tapes_0_tape_ce0 = grp_mpc_AND_verify_2_fu_717_rand_0_tape_ce0;
    end else begin
        tapes_0_tape_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20))) begin
        tapes_0_tape_ce1 = grp_mpc_AND_verify_2_fu_717_rand_0_tape_ce1;
    end else begin
        tapes_0_tape_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        if (((icmp_ln108_fu_2637_p2 == 1'd0) & (icmp_ln266_reg_2870 == 1'd1))) begin
            temp_matrix3_address0 = zext_ln109_4_fu_2671_p1;
        end else if ((1'b1 == ap_condition_452)) begin
            temp_matrix3_address0 = zext_ln109_7_fu_2632_p1;
        end else begin
            temp_matrix3_address0 = 'bx;
        end
    end else begin
        temp_matrix3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state34) & (icmp_ln108_fu_2637_p2 == 1'd0) & (icmp_ln266_reg_2870 == 1'd1)) | ((1'b1 == ap_CS_fsm_state34) & (icmp_ln108_2_fu_2596_p2 == 1'd0) & (icmp_ln925_reg_2939 == 1'd1) & (icmp_ln266_reg_2870 == 1'd0)))) begin
        temp_matrix3_ce0 = 1'b1;
    end else begin
        temp_matrix3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        tmp_address0 = zext_ln936_2_fu_2826_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        tmp_address0 = tmp_addr_25_reg_3333;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        tmp_address0 = zext_ln109_14_fu_2741_p1;
    end else if (((1'b1 == ap_CS_fsm_state34) & (icmp_ln108_fu_2637_p2 == 1'd0) & (icmp_ln266_reg_2870 == 1'd1))) begin
        tmp_address0 = zext_ln109_3_fu_2661_p1;
    end else if (((1'b1 == ap_CS_fsm_state34) & (icmp_ln108_2_fu_2596_p2 == 1'd0) & (icmp_ln925_reg_2939 == 1'd1) & (icmp_ln266_reg_2870 == 1'd0))) begin
        tmp_address0 = zext_ln109_6_fu_2622_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        tmp_address0 = zext_ln109_11_fu_1013_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        tmp_address0 = tmp_addr_17_reg_2904;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_address0 = tmp_addr_18_reg_2886;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln108_1_fu_919_p2 == 1'd0) & (icmp_ln266_reg_2870 == 1'd1))) begin
        tmp_address0 = zext_ln109_8_fu_944_p1;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln108_3_fu_887_p2 == 1'd0) & (icmp_ln269_reg_2874 == 1'd1) & (icmp_ln266_reg_2870 == 1'd0))) begin
        tmp_address0 = zext_ln109_9_fu_914_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_address0 = zext_ln902_fu_877_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_address0 = zext_ln897_fu_854_p1;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state33))) begin
        tmp_address0 = grp_matrix_mul_1_fu_705_output_r_address0;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state9))) begin
        tmp_address0 = grp_matrix_mul_fu_688_output_r_address0;
    end else begin
        tmp_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        tmp_address1 = zext_ln933_2_fu_2780_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        tmp_address1 = zext_ln109_15_fu_2757_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        tmp_address1 = tmp_addr_15_reg_3291;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        tmp_address1 = tmp_addr_16_reg_3272;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state27))) begin
        tmp_address1 = tmp_addr_24_reg_3127;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        tmp_address1 = select_ln66_fu_1634_p3;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        tmp_address1 = select_ln54_fu_1123_p3;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_address1 = tmp_addr_19_reg_2951;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        tmp_address1 = zext_ln109_12_fu_1029_p1;
    end else begin
        tmp_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state34) & (icmp_ln108_fu_2637_p2 == 1'd0) & (icmp_ln266_reg_2870 == 1'd1)) | ((1'b1 == ap_CS_fsm_state34) & (icmp_ln108_2_fu_2596_p2 == 1'd0) & (icmp_ln925_reg_2939 == 1'd1) & (icmp_ln266_reg_2870 == 1'd0)) | ((1'b1 == ap_CS_fsm_state4) & (icmp_ln108_1_fu_919_p2 == 1'd0) & (icmp_ln266_reg_2870 == 1'd1)) | ((1'b1 == ap_CS_fsm_state4) & (icmp_ln108_3_fu_887_p2 == 1'd0) & (icmp_ln269_reg_2874 == 1'd1) & (icmp_ln266_reg_2870 == 1'd0)))) begin
        tmp_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state33))) begin
        tmp_ce0 = grp_matrix_mul_1_fu_705_output_r_ce0;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state9))) begin
        tmp_ce0 = grp_matrix_mul_fu_688_output_r_ce0;
    end else begin
        tmp_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state11))) begin
        tmp_ce1 = 1'b1;
    end else begin
        tmp_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        tmp_d0 = grp_fu_758_p2;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        tmp_d0 = grp_fu_751_p2;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        tmp_d0 = 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state33))) begin
        tmp_d0 = grp_matrix_mul_1_fu_705_output_r_d0;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state9))) begin
        tmp_d0 = grp_matrix_mul_fu_688_output_r_d0;
    end else begin
        tmp_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35))) begin
        tmp_d1 = grp_fu_818_p2;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        tmp_d1 = or_ln66_8_fu_2561_p2;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        tmp_d1 = or_ln66_6_fu_2308_p2;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        tmp_d1 = and_ln66_5_fu_1930_p2;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_d1 = grp_fu_758_p2;
    end else begin
        tmp_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | ((1'b1 == ap_CS_fsm_state3) & (icmp_ln901_fu_859_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln896_fu_842_p2 == 1'd0)))) begin
        tmp_we0 = 4'd15;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state33))) begin
        tmp_we0 = grp_matrix_mul_1_fu_705_output_r_we0;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state9))) begin
        tmp_we0 = grp_matrix_mul_fu_688_output_r_we0;
    end else begin
        tmp_we0 = 4'd0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        tmp_we1 = shl_ln66_8_fu_1940_p2;
    end else if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state29))) begin
        tmp_we1 = 4'd15;
    end else begin
        tmp_we1 = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20))) begin
        view1_communicatedBi_ce0 = grp_mpc_AND_verify_2_fu_717_view1_communicatedBi_ce0;
    end else begin
        view1_communicatedBi_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20))) begin
        view1_communicatedBi_we0 = grp_mpc_AND_verify_2_fu_717_view1_communicatedBi_we0;
    end else begin
        view1_communicatedBi_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state7))) begin
        view1_inputShare_ce0 = grp_matrix_mul_fu_688_state_ce0;
    end else begin
        view1_inputShare_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        view1_outputShare_ce0 = 1'b1;
    end else begin
        view1_outputShare_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        view1_outputShare_we0 = 1'b1;
    end else begin
        view1_outputShare_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20))) begin
        view2_communicatedBi_ce0 = grp_mpc_AND_verify_2_fu_717_view2_communicatedBi_ce0;
    end else begin
        view2_communicatedBi_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state9))) begin
        view2_inputShare_ce0 = grp_matrix_mul_fu_688_state_ce0;
    end else begin
        view2_inputShare_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        view2_outputShare_ce0 = 1'b1;
    end else begin
        view2_outputShare_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        view2_outputShare_we0 = 1'b1;
    end else begin
        view2_outputShare_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln896_fu_842_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln901_fu_859_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln108_1_fu_919_p2 == 1'd0) & (icmp_ln266_reg_2870 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else if (((1'b1 == ap_CS_fsm_state4) & ((((icmp_ln108_1_fu_919_p2 == 1'd1) & (icmp_ln266_reg_2870 == 1'd1)) | ((icmp_ln108_3_fu_887_p2 == 1'd1) & (icmp_ln266_reg_2870 == 1'd0))) | ((icmp_ln269_reg_2874 == 1'd0) & (icmp_ln266_reg_2870 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state7 : begin
            if (((grp_matrix_mul_fu_688_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((grp_matrix_mul_fu_688_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln252_fu_949_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln108_4_fu_978_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln913_fu_1034_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((grp_matrix_mul_fu_688_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((grp_matrix_mul_fu_688_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln797_fu_1053_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((1'b1 == ap_CS_fsm_state18) & (icmp_ln803_fu_1107_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state20 : begin
            if (((1'b1 == ap_CS_fsm_state20) & (grp_mpc_AND_verify_2_fu_717_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            if (((1'b1 == ap_CS_fsm_state22) & (grp_mpc_AND_verify_2_fu_717_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            if (((1'b1 == ap_CS_fsm_state24) & (grp_mpc_AND_verify_2_fu_717_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state25 : begin
            if (((1'b1 == ap_CS_fsm_state25) & (icmp_ln817_fu_1598_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state31 : begin
            if (((grp_matrix_mul_1_fu_705_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            if (((grp_matrix_mul_1_fu_705_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state33))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state34 : begin
            if (((1'b1 == ap_CS_fsm_state34) & ((((icmp_ln108_fu_2637_p2 == 1'd1) & (icmp_ln266_reg_2870 == 1'd1)) | ((icmp_ln108_2_fu_2596_p2 == 1'd1) & (icmp_ln266_reg_2870 == 1'd0))) | ((icmp_ln925_reg_2939 == 1'd0) & (icmp_ln266_reg_2870 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else if (((1'b1 == ap_CS_fsm_state34) & (icmp_ln108_fu_2637_p2 == 1'd0) & (icmp_ln266_reg_2870 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state37 : begin
            if (((1'b1 == ap_CS_fsm_state37) & (icmp_ln252_1_fu_2676_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state38 : begin
            if (((1'b1 == ap_CS_fsm_state38) & (icmp_ln108_5_fu_2706_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state40 : begin
            if (((1'b1 == ap_CS_fsm_state40) & (icmp_ln932_fu_2762_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state42 : begin
            if (((1'b1 == ap_CS_fsm_state42) & (icmp_ln935_fu_2799_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_0_fu_1257_p1 = lshr_ln54_fu_1252_p2[0:0];

assign a_1_1_fu_1265_p3 = ((trunc_ln804_reg_3018[0:0] === 1'b1) ? zext_ln54_8_fu_1261_p1 : a_1_1_i_reg_575);

assign a_1_2_fu_1272_p3 = ((trunc_ln804_reg_3018[0:0] === 1'b1) ? a_0_1_i_reg_587 : zext_ln54_8_fu_1261_p1);

assign add_ln109_1_fu_2627_p2 = (zext_ln109_5_fu_2608_p1 + add_ln926_reg_3254);

assign add_ln109_2_fu_1001_p2 = (zext_ln109_10_fu_990_p1 + select_ln109_1_fu_994_p3);

assign add_ln109_3_fu_1007_p2 = ($signed(add_ln109_2_fu_1001_p2) + $signed(4'd15));

assign add_ln109_4_fu_1018_p2 = (i_0_i_i4_reg_420 + select_ln109_reg_2927);

assign add_ln109_5_fu_1023_p2 = ($signed(add_ln109_4_fu_1018_p2) + $signed(3'd7));

assign add_ln109_6_fu_2729_p2 = (zext_ln109_13_fu_2718_p1 + select_ln109_3_fu_2722_p3);

assign add_ln109_7_fu_2735_p2 = ($signed(add_ln109_6_fu_2729_p2) + $signed(4'd15));

assign add_ln109_8_fu_2746_p2 = (i_0_i_i24_reg_654 + select_ln109_2_reg_3315);

assign add_ln109_9_fu_2751_p2 = ($signed(add_ln109_8_fu_2746_p2) + $signed(3'd7));

assign add_ln109_fu_2666_p2 = (zext_ln109_fu_2649_p1 + add_ln923_reg_3259);

assign add_ln797_fu_1699_p2 = (bitNumber_assign_2_i_reg_515 + 5'd3);

assign add_ln804_fu_1059_p2 = (bitNumber_assign_2_i_reg_515 + 5'd2);

assign add_ln805_fu_1065_p2 = (bitNumber_assign_2_i_reg_515 + 5'd1);

assign add_ln919_fu_1101_p2 = ($signed(shl_ln_reg_2965) + $signed(14'd15872));

assign add_ln923_fu_2590_p2 = ($signed(shl_ln3_fu_2582_p3) + $signed(7'd124));

assign add_ln926_fu_2576_p2 = ($signed(shl_ln4_fu_2568_p3) + $signed(7'd124));

assign add_ln933_1_fu_2774_p2 = (loop_2_reg_665 + 5'd8);

assign add_ln933_fu_2789_p2 = (zext_ln933_1_cast_reg_2848 + zext_ln933_fu_2785_p1);

assign add_ln936_1_fu_2820_p2 = (loop_3_reg_677 + 5'd12);

assign add_ln936_fu_2815_p2 = (zext_ln933_1_cast_reg_2848 + zext_ln936_fu_2811_p1);

assign and_ln54_1_fu_1385_p2 = (lshr_ln54_9_fu_1379_p2 & lshr_ln54_8_fu_1373_p2);

assign and_ln54_2_fu_1528_p2 = (lshr_ln54_11_fu_1522_p2 & lshr_ln54_10_fu_1516_p2);

assign and_ln54_fu_1242_p2 = (lshr_ln54_7_fu_1236_p2 & lshr_ln54_6_fu_1230_p2);

assign and_ln66_10_fu_2285_p2 = (shl_ln66_12_fu_2273_p2 & lshr_ln66_6_fu_2279_p2);

assign and_ln66_11_fu_2297_p2 = (xor_ln66_12_fu_2291_p2 & or_ln66_4_reg_3195);

assign and_ln66_12_fu_2302_p2 = (select_ln66_18_fu_2265_p3 & and_ln66_10_fu_2285_p2);

assign and_ln66_13_fu_2419_p2 = (lshr_ln66_8_fu_2413_p2 & lshr_ln66_7_reg_3249);

assign and_ln66_14_fu_2538_p2 = (shl_ln66_14_fu_2526_p2 & lshr_ln66_9_fu_2532_p2);

assign and_ln66_15_fu_2550_p2 = (xor_ln66_16_fu_2544_p2 & or_ln66_6_reg_3227);

assign and_ln66_16_fu_2555_p2 = (select_ln66_25_fu_2518_p3 & and_ln66_14_fu_2538_p2);

assign and_ln66_1_fu_2182_p2 = (xor_ln66_1_reg_3103 & trunc_ln66_1_fu_2178_p1);

assign and_ln66_2_fu_2433_p2 = (xor_ln66_2_reg_3108 & trunc_ln66_2_fu_2424_p1);

assign and_ln66_3_fu_1811_p2 = (lshr_ln66_fu_1799_p2 & lshr_ln66_1_fu_1805_p2);

assign and_ln66_4_fu_1924_p2 = (shl_ln66_7_fu_1912_p2 & lshr_ln66_2_fu_1918_p2);

assign and_ln66_5_fu_1930_p2 = (select_ln66_7_fu_1904_p3 & and_ln66_4_fu_1924_p2);

assign and_ln66_6_fu_2044_p2 = (shl_ln66_10_fu_2032_p2 & lshr_ln66_3_fu_2038_p2);

assign and_ln66_7_fu_2056_p2 = (xor_ln66_8_fu_2050_p2 & ldvalue424_reg_3176);

assign and_ln66_8_fu_2061_p2 = (select_ln66_11_fu_2024_p3 & and_ln66_6_fu_2044_p2);

assign and_ln66_9_fu_2173_p2 = (lshr_ln66_5_fu_2167_p2 & lshr_ln66_4_reg_3217);

assign and_ln66_fu_1821_p2 = (xor_ln66_reg_3098 & trunc_ln66_fu_1817_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_condition_215 = ((icmp_ln108_3_fu_887_p2 == 1'd0) & (icmp_ln269_reg_2874 == 1'd1) & (icmp_ln266_reg_2870 == 1'd0));
end

always @ (*) begin
    ap_condition_452 = ((icmp_ln108_2_fu_2596_p2 == 1'd0) & (icmp_ln925_reg_2939 == 1'd1) & (icmp_ln266_reg_2870 == 1'd0));
end

assign b_0_fu_1400_p1 = lshr_ln54_4_fu_1395_p2[0:0];

assign b_1_1_fu_1408_p3 = ((trunc_ln804_reg_3018[0:0] === 1'b1) ? zext_ln54_9_fu_1404_p1 : b_1_1_i_reg_551);

assign b_1_2_fu_1415_p3 = ((trunc_ln804_reg_3018[0:0] === 1'b1) ? b_0_1_i_reg_563 : zext_ln54_9_fu_1404_p1);

assign c_0_fu_1543_p1 = lshr_ln54_5_fu_1538_p2[0:0];

assign c_1_1_fu_1551_p3 = ((trunc_ln804_reg_3018[0:0] === 1'b1) ? zext_ln54_10_fu_1547_p1 : c_1_1_i_reg_527);

assign c_1_2_fu_1558_p3 = ((trunc_ln804_reg_3018[0:0] === 1'b1) ? c_0_1_i_reg_539 : zext_ln54_10_fu_1547_p1);

assign cast_offset1_fu_1279_p3 = {{grp_fu_775_p4}, {3'd0}};

assign cast_offset2_fu_1422_p3 = {{grp_fu_784_p4}, {3'd0}};

assign cast_offset3_fu_1710_p3 = {{tmp_21_reg_3121}, {3'd0}};

assign cast_offset4_fu_2073_p3 = {{tmp_25_reg_3143}, {3'd0}};

assign cast_offset5_fu_2315_p3 = {{tmp_28_reg_3158}, {3'd0}};

assign cast_offset_fu_1136_p3 = {{grp_fu_766_p4}, {3'd0}};

assign grp_fu_746_p2 = ((challenge == 2'd2) ? 1'b1 : 1'b0);

assign grp_fu_751_p2 = (tmp_q0 ^ plaintext_q0);

assign grp_fu_758_p2 = (tmp_q1 ^ tmp_q0);

assign grp_fu_766_p4 = {{add_ln804_reg_2974[4:3]}};

assign grp_fu_775_p4 = {{add_ln805_reg_2979[4:3]}};

assign grp_fu_784_p4 = {{bitNumber_assign_2_i_reg_515[4:3]}};

assign grp_fu_806_p2 = ((grp_fu_806_p0 > grp_fu_806_p1) ? 1'b1 : 1'b0);

assign grp_fu_810_p2 = ((grp_fu_810_p0 > grp_fu_810_p1) ? 1'b1 : 1'b0);

assign grp_fu_814_p2 = ((grp_fu_814_p0 > grp_fu_814_p1) ? 1'b1 : 1'b0);

assign grp_fu_818_p2 = (tmp_q0 ^ temp_matrix3_q0);

assign grp_matrix_mul_1_fu_705_ap_start = grp_matrix_mul_1_fu_705_ap_start_reg;

assign grp_matrix_mul_fu_688_ap_start = grp_matrix_mul_fu_688_ap_start_reg;

assign grp_mpc_AND_verify_2_fu_717_ap_start = grp_mpc_AND_verify_2_fu_717_ap_start_reg;

assign i_1_fu_925_p2 = (i_0_i_i_reg_398 + 3'd1);

assign i_2_fu_893_p2 = (i_0_i8_i_reg_387 + 3'd1);

assign i_3_fu_955_p2 = (i_0_i2_reg_409 + 2'd1);

assign i_4_fu_984_p2 = (i_0_i_i4_reg_420 + 3'd1);

assign i_5_fu_2602_p2 = (i_0_i1_reg_621 + 3'd1);

assign i_6_fu_2682_p2 = (i_0_i14_reg_643 + 2'd1);

assign i_7_fu_2712_p2 = (i_0_i_i24_reg_654 + 3'd1);

assign i_fu_2643_p2 = (i_0_i_reg_632 + 3'd1);

assign icmp_ln108_1_fu_919_p2 = ((i_0_i_i_reg_398 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln108_2_fu_2596_p2 = ((i_0_i1_reg_621 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln108_3_fu_887_p2 = ((i_0_i8_i_reg_387 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln108_4_fu_978_p2 = ((i_0_i_i4_reg_420 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln108_5_fu_2706_p2 = ((i_0_i_i24_reg_654 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln108_fu_2637_p2 = ((i_0_i_reg_632 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln252_1_fu_2676_p2 = ((i_0_i14_reg_643 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln252_fu_949_p2 = ((i_0_i2_reg_409 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln266_fu_882_p2 = ((challenge == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln54_1_fu_1293_p2 = ((cast_offset1_fu_1279_p3 > or_ln54_1_fu_1287_p2) ? 1'b1 : 1'b0);

assign icmp_ln54_2_fu_1436_p2 = ((cast_offset2_fu_1422_p3 > or_ln54_2_fu_1430_p2) ? 1'b1 : 1'b0);

assign icmp_ln54_fu_1150_p2 = ((cast_offset_fu_1136_p3 > or_ln54_fu_1144_p2) ? 1'b1 : 1'b0);

assign icmp_ln66_2_fu_1947_p2 = ((cast_offset3_reg_3168 > or_ln66_3_reg_3181) ? 1'b1 : 1'b0);

assign icmp_ln797_fu_1053_p2 = ((bitNumber_assign_2_i_reg_515 < 5'd30) ? 1'b1 : 1'b0);

assign icmp_ln803_fu_1107_p2 = ((j_0_i_reg_599 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln817_fu_1598_p2 = ((j_1_i_reg_610 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln896_fu_842_p2 = ((loop_0_reg_365 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln901_fu_859_p2 = ((loop_1_reg_376 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln913_fu_1034_p2 = ((r_0_reg_431 == 5'd21) ? 1'b1 : 1'b0);

assign icmp_ln932_fu_2762_p2 = ((loop_2_reg_665 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln935_fu_2799_p2 = ((loop_3_reg_677 == 5'd16) ? 1'b1 : 1'b0);

assign j_1_fu_1604_p2 = (j_1_i_reg_610 + 2'd1);

assign j_fu_1113_p2 = (j_0_i_reg_599 + 2'd1);

assign loop_25_fu_865_p2 = (loop_1_reg_376 + 4'd1);

assign loop_26_fu_2768_p2 = (loop_2_reg_665 + 5'd1);

assign loop_27_fu_2805_p2 = (loop_3_reg_677 + 5'd1);

assign loop_fu_848_p2 = (loop_0_reg_365 + 4'd1);

assign lshr_ln54_10_fu_1516_p2 = select_ln54_8_fu_1486_p3 >> zext_ln54_18_fu_1508_p1;

assign lshr_ln54_11_fu_1522_p2 = 32'd4294967295 >> zext_ln54_19_fu_1512_p1;

assign lshr_ln54_4_fu_1395_p2 = trunc_ln54_3_fu_1391_p1 >> zext_ln54_3_reg_2991;

assign lshr_ln54_5_fu_1538_p2 = trunc_ln54_5_fu_1534_p1 >> zext_ln54_4_reg_2998;

assign lshr_ln54_6_fu_1230_p2 = select_ln54_2_fu_1200_p3 >> zext_ln54_7_fu_1222_p1;

assign lshr_ln54_7_fu_1236_p2 = 32'd4294967295 >> zext_ln54_11_fu_1226_p1;

assign lshr_ln54_8_fu_1373_p2 = select_ln54_5_fu_1343_p3 >> zext_ln54_14_fu_1365_p1;

assign lshr_ln54_9_fu_1379_p2 = 32'd4294967295 >> zext_ln54_15_fu_1369_p1;

assign lshr_ln54_fu_1252_p2 = trunc_ln54_fu_1248_p1 >> zext_ln54_reg_2984;

assign lshr_ln66_1_fu_1805_p2 = 32'd4294967295 >> zext_ln66_3_fu_1795_p1;

assign lshr_ln66_2_fu_1918_p2 = 32'd4294967295 >> zext_ln66_9_fu_1884_p1;

assign lshr_ln66_3_fu_2038_p2 = 32'd4294967295 >> zext_ln66_16_fu_2004_p1;

assign lshr_ln66_4_fu_2158_p2 = select_ln66_13_fu_2132_p3 >> zext_ln66_19_fu_2154_p1;

assign lshr_ln66_5_fu_2167_p2 = 32'd4294967295 >> zext_ln66_20_fu_2164_p1;

assign lshr_ln66_6_fu_2279_p2 = 32'd4294967295 >> zext_ln66_26_fu_2245_p1;

assign lshr_ln66_7_fu_2400_p2 = select_ln66_20_fu_2374_p3 >> zext_ln66_29_fu_2396_p1;

assign lshr_ln66_8_fu_2413_p2 = 32'd4294967295 >> zext_ln66_30_fu_2410_p1;

assign lshr_ln66_9_fu_2532_p2 = 32'd4294967295 >> zext_ln66_36_fu_2498_p1;

assign lshr_ln66_fu_1799_p2 = select_ln66_2_fu_1769_p3 >> zext_ln66_2_fu_1791_p1;

assign or_ln54_1_fu_1287_p2 = (cast_offset1_fu_1279_p3 | 5'd7);

assign or_ln54_2_fu_1430_p2 = (cast_offset2_fu_1422_p3 | 5'd7);

assign or_ln54_fu_1144_p2 = (cast_offset_fu_1136_p3 | 5'd7);

assign or_ln66_1_fu_2187_p2 = (shl_ln66_4_reg_3148 | and_ln66_1_fu_2182_p2);

assign or_ln66_2_fu_2438_p2 = (shl_ln66_5_fu_2428_p2 | and_ln66_2_fu_2433_p2);

assign or_ln66_3_fu_1718_p2 = (cast_offset3_fu_1710_p3 | 5'd7);

assign or_ln66_4_fu_2067_p2 = (and_ln66_8_fu_2061_p2 | and_ln66_7_fu_2056_p2);

assign or_ln66_5_fu_2081_p2 = (cast_offset4_fu_2073_p3 | 5'd7);

assign or_ln66_6_fu_2308_p2 = (and_ln66_12_fu_2302_p2 | and_ln66_11_fu_2297_p2);

assign or_ln66_7_fu_2323_p2 = (cast_offset5_fu_2315_p3 | 5'd7);

assign or_ln66_8_fu_2561_p2 = (and_ln66_16_fu_2555_p2 | and_ln66_15_fu_2550_p2);

assign or_ln66_fu_1826_p2 = (shl_ln66_3_reg_3133 | and_ln66_fu_1821_p2);

assign or_ln_fu_2653_p3 = {{1'd1}, {i_0_i_reg_632}};

assign r_fu_2700_p2 = (r_0_reg_431 + 5'd1);

assign select_ln109_1_fu_994_p3 = ((trunc_ln253_reg_2922[0:0] === 1'b1) ? 4'd13 : 4'd9);

assign select_ln109_2_fu_2692_p3 = ((trunc_ln253_1_fu_2688_p1[0:0] === 1'b1) ? 3'd5 : 3'd1);

assign select_ln109_3_fu_2722_p3 = ((trunc_ln253_1_reg_3310[0:0] === 1'b1) ? 4'd13 : 4'd9);

assign select_ln109_fu_965_p3 = ((trunc_ln253_fu_961_p1[0:0] === 1'b1) ? 3'd5 : 3'd1);

assign select_ln54_1_fu_1192_p3 = ((icmp_ln54_fu_1150_p2[0:0] === 1'b1) ? sub_ln54_2_fu_1174_p2 : sub_ln54_3_fu_1186_p2);

assign select_ln54_2_fu_1200_p3 = ((icmp_ln54_fu_1150_p2[0:0] === 1'b1) ? tmp_16_fu_1164_p4 : tmp_q1);

assign select_ln54_3_fu_1208_p3 = ((icmp_ln54_fu_1150_p2[0:0] === 1'b1) ? xor_ln54_2_fu_1180_p2 : zext_ln54_5_fu_1156_p1);

assign select_ln54_4_fu_1335_p3 = ((icmp_ln54_1_fu_1293_p2[0:0] === 1'b1) ? sub_ln54_5_fu_1317_p2 : sub_ln54_6_fu_1329_p2);

assign select_ln54_5_fu_1343_p3 = ((icmp_ln54_1_fu_1293_p2[0:0] === 1'b1) ? tmp_18_fu_1307_p4 : tmp_q1);

assign select_ln54_6_fu_1351_p3 = ((icmp_ln54_1_fu_1293_p2[0:0] === 1'b1) ? xor_ln54_3_fu_1323_p2 : zext_ln54_12_fu_1299_p1);

assign select_ln54_7_fu_1478_p3 = ((icmp_ln54_2_fu_1436_p2[0:0] === 1'b1) ? sub_ln54_8_fu_1460_p2 : sub_ln54_9_fu_1472_p2);

assign select_ln54_8_fu_1486_p3 = ((icmp_ln54_2_fu_1436_p2[0:0] === 1'b1) ? tmp_20_fu_1450_p4 : tmp_q1);

assign select_ln54_9_fu_1494_p3 = ((icmp_ln54_2_fu_1436_p2[0:0] === 1'b1) ? xor_ln54_4_fu_1466_p2 : zext_ln54_16_fu_1442_p1);

assign select_ln54_fu_1123_p3 = ((trunc_ln804_fu_1119_p1[0:0] === 1'b1) ? 64'd12 : 64'd8);

assign select_ln66_10_fu_1982_p3 = ((icmp_ln66_2_fu_1947_p2[0:0] === 1'b1) ? xor_ln66_6_fu_1960_p2 : zext_ln66_11_fu_1951_p1);

assign select_ln66_11_fu_2024_p3 = ((icmp_ln66_2_fu_1947_p2[0:0] === 1'b1) ? tmp_24_fu_2014_p4 : shl_ln66_9_fu_2008_p2);

assign select_ln66_12_fu_2124_p3 = ((grp_fu_810_p2[0:0] === 1'b1) ? sub_ln66_3_fu_2106_p2 : sub_ln66_4_fu_2118_p2);

assign select_ln66_13_fu_2132_p3 = ((grp_fu_810_p2[0:0] === 1'b1) ? tmp_26_fu_2096_p4 : or_ln66_4_fu_2067_p2);

assign select_ln66_14_fu_2140_p3 = ((grp_fu_810_p2[0:0] === 1'b1) ? xor_ln66_9_fu_2112_p2 : zext_ln66_17_fu_2088_p1);

assign select_ln66_15_fu_2207_p3 = ((grp_fu_810_p2[0:0] === 1'b1) ? zext_ln66_21_fu_2192_p1 : zext_ln66_22_fu_2195_p1);

assign select_ln66_16_fu_2215_p3 = ((grp_fu_810_p2[0:0] === 1'b1) ? zext_ln66_22_fu_2195_p1 : zext_ln66_21_fu_2192_p1);

assign select_ln66_17_fu_2223_p3 = ((grp_fu_810_p2[0:0] === 1'b1) ? xor_ln66_10_fu_2201_p2 : zext_ln66_21_fu_2192_p1);

assign select_ln66_18_fu_2265_p3 = ((grp_fu_810_p2[0:0] === 1'b1) ? tmp_27_fu_2255_p4 : shl_ln66_11_fu_2249_p2);

assign select_ln66_19_fu_2366_p3 = ((grp_fu_814_p2[0:0] === 1'b1) ? sub_ln66_6_fu_2348_p2 : sub_ln66_7_fu_2360_p2);

assign select_ln66_1_fu_1761_p3 = ((grp_fu_806_p2[0:0] === 1'b1) ? sub_ln66_fu_1743_p2 : sub_ln66_1_fu_1755_p2);

assign select_ln66_20_fu_2374_p3 = ((grp_fu_814_p2[0:0] === 1'b1) ? tmp_29_fu_2338_p4 : or_ln66_6_fu_2308_p2);

assign select_ln66_21_fu_2382_p3 = ((grp_fu_814_p2[0:0] === 1'b1) ? xor_ln66_13_fu_2354_p2 : zext_ln66_27_fu_2330_p1);

assign select_ln66_22_fu_2460_p3 = ((grp_fu_814_p2[0:0] === 1'b1) ? zext_ln66_31_fu_2444_p1 : zext_ln66_32_fu_2447_p1);

assign select_ln66_23_fu_2468_p3 = ((grp_fu_814_p2[0:0] === 1'b1) ? zext_ln66_32_fu_2447_p1 : zext_ln66_31_fu_2444_p1);

assign select_ln66_24_fu_2476_p3 = ((grp_fu_814_p2[0:0] === 1'b1) ? xor_ln66_14_fu_2454_p2 : zext_ln66_31_fu_2444_p1);

assign select_ln66_25_fu_2518_p3 = ((grp_fu_814_p2[0:0] === 1'b1) ? tmp_30_fu_2508_p4 : shl_ln66_13_fu_2502_p2);

assign select_ln66_2_fu_1769_p3 = ((grp_fu_806_p2[0:0] === 1'b1) ? tmp_22_fu_1733_p4 : tmp_q1);

assign select_ln66_3_fu_1777_p3 = ((grp_fu_806_p2[0:0] === 1'b1) ? xor_ln66_3_fu_1749_p2 : zext_ln66_fu_1725_p1);

assign select_ln66_4_fu_1846_p3 = ((grp_fu_806_p2[0:0] === 1'b1) ? zext_ln66_4_fu_1831_p1 : zext_ln66_5_fu_1834_p1);

assign select_ln66_5_fu_1854_p3 = ((grp_fu_806_p2[0:0] === 1'b1) ? zext_ln66_5_fu_1834_p1 : zext_ln66_4_fu_1831_p1);

assign select_ln66_6_fu_1862_p3 = ((grp_fu_806_p2[0:0] === 1'b1) ? xor_ln66_4_fu_1840_p2 : zext_ln66_4_fu_1831_p1);

assign select_ln66_7_fu_1904_p3 = ((grp_fu_806_p2[0:0] === 1'b1) ? tmp_23_fu_1894_p4 : shl_ln66_6_fu_1888_p2);

assign select_ln66_8_fu_1966_p3 = ((icmp_ln66_2_fu_1947_p2[0:0] === 1'b1) ? zext_ln66_11_fu_1951_p1 : zext_ln66_12_fu_1954_p1);

assign select_ln66_9_fu_1974_p3 = ((icmp_ln66_2_fu_1947_p2[0:0] === 1'b1) ? zext_ln66_12_fu_1954_p1 : zext_ln66_11_fu_1951_p1);

assign select_ln66_fu_1634_p3 = ((trunc_ln818_fu_1610_p1[0:0] === 1'b1) ? 64'd12 : 64'd8);

assign select_ln818_1_fu_1622_p3 = ((trunc_ln818_fu_1610_p1[0:0] === 1'b1) ? bc_1_reg_3083 : bc_0_reg_3078);

assign select_ln818_fu_1614_p3 = ((trunc_ln818_fu_1610_p1[0:0] === 1'b1) ? a_1_1_i_reg_575 : a_0_1_i_reg_587);

assign select_ln819_1_fu_1656_p3 = ((trunc_ln818_fu_1610_p1[0:0] === 1'b1) ? ca_1_reg_3093 : ca_0_reg_3088);

assign select_ln819_fu_1648_p3 = ((trunc_ln818_fu_1610_p1[0:0] === 1'b1) ? b_1_1_i_reg_551 : b_0_1_i_reg_563);

assign select_ln820_1_fu_1687_p3 = ((trunc_ln818_fu_1610_p1[0:0] === 1'b1) ? ab_1_reg_3073 : ab_0_reg_3068);

assign select_ln820_fu_1679_p3 = ((trunc_ln818_fu_1610_p1[0:0] === 1'b1) ? c_1_1_i_reg_527 : c_0_1_i_reg_539);

assign sext_ln109_1_fu_910_p1 = $signed(xor_ln109_7_fu_904_p2);

assign sext_ln109_fu_2618_p1 = $signed(xor_ln109_3_fu_2612_p2);

assign shl_ln3_fu_2582_p3 = {{r_0_reg_431}, {2'd0}};

assign shl_ln4_fu_2568_p3 = {{r_0_reg_431}, {2'd0}};

assign shl_ln66_10_fu_2032_p2 = 32'd4294967295 << zext_ln66_15_fu_2000_p1;

assign shl_ln66_11_fu_2249_p2 = zext_ln66_23_fu_2198_p1 << zext_ln66_24_fu_2237_p1;

assign shl_ln66_12_fu_2273_p2 = 32'd4294967295 << zext_ln66_25_fu_2241_p1;

assign shl_ln66_13_fu_2502_p2 = zext_ln66_33_fu_2450_p1 << zext_ln66_34_fu_2490_p1;

assign shl_ln66_14_fu_2526_p2 = 32'd4294967295 << zext_ln66_35_fu_2494_p1;

assign shl_ln66_1_fu_1576_p2 = 8'd1 << zext_ln54_3_reg_2991;

assign shl_ln66_2_fu_1587_p2 = 8'd1 << zext_ln54_4_reg_2998;

assign shl_ln66_3_fu_1643_p2 = xor_ln818_fu_1628_p2 << zext_ln54_reg_2984;

assign shl_ln66_4_fu_1674_p2 = xor_ln819_1_fu_1668_p2 << zext_ln54_3_reg_2991;

assign shl_ln66_5_fu_2428_p2 = xor_ln820_1_fu_2406_p2 << zext_ln54_4_reg_2998;

assign shl_ln66_6_fu_1888_p2 = zext_ln66_6_fu_1837_p1 << zext_ln66_7_fu_1876_p1;

assign shl_ln66_7_fu_1912_p2 = 32'd4294967295 << zext_ln66_8_fu_1880_p1;

assign shl_ln66_8_fu_1940_p2 = 4'd1 << zext_ln66_10_fu_1937_p1;

assign shl_ln66_9_fu_2008_p2 = zext_ln66_13_fu_1957_p1 << zext_ln66_14_fu_1996_p1;

assign shl_ln66_fu_1565_p2 = 8'd1 << zext_ln54_reg_2984;

assign shl_ln_fu_1040_p3 = {{r_0_reg_431}, {9'd0}};

assign state_0_sum1_fu_936_p3 = {{1'd1}, {i_0_i_i_reg_398}};

assign sub_ln54_10_fu_1502_p2 = (6'd31 - select_ln54_7_fu_1478_p3);

assign sub_ln54_1_fu_1081_p2 = ($signed(3'd6) - $signed(trunc_ln797_fu_1049_p1));

assign sub_ln54_2_fu_1174_p2 = (zext_ln54_5_fu_1156_p1 - zext_ln54_6_fu_1160_p1);

assign sub_ln54_3_fu_1186_p2 = (zext_ln54_6_fu_1160_p1 - zext_ln54_5_fu_1156_p1);

assign sub_ln54_4_fu_1216_p2 = (6'd31 - select_ln54_1_fu_1192_p3);

assign sub_ln54_5_fu_1317_p2 = (zext_ln54_12_fu_1299_p1 - zext_ln54_13_fu_1303_p1);

assign sub_ln54_6_fu_1329_p2 = (zext_ln54_13_fu_1303_p1 - zext_ln54_12_fu_1299_p1);

assign sub_ln54_7_fu_1359_p2 = (6'd31 - select_ln54_4_fu_1335_p3);

assign sub_ln54_8_fu_1460_p2 = (zext_ln54_16_fu_1442_p1 - zext_ln54_17_fu_1446_p1);

assign sub_ln54_9_fu_1472_p2 = (zext_ln54_17_fu_1446_p1 - zext_ln54_16_fu_1442_p1);

assign sub_ln54_fu_1071_p2 = ($signed(3'd5) - $signed(trunc_ln797_fu_1049_p1));

assign sub_ln66_1_fu_1755_p2 = (zext_ln66_1_fu_1729_p1 - zext_ln66_fu_1725_p1);

assign sub_ln66_2_fu_1785_p2 = (6'd31 - select_ln66_1_fu_1761_p3);

assign sub_ln66_3_fu_2106_p2 = (zext_ln66_17_fu_2088_p1 - zext_ln66_18_fu_2092_p1);

assign sub_ln66_4_fu_2118_p2 = (zext_ln66_18_fu_2092_p1 - zext_ln66_17_fu_2088_p1);

assign sub_ln66_5_fu_2148_p2 = (6'd31 - select_ln66_12_fu_2124_p3);

assign sub_ln66_6_fu_2348_p2 = (zext_ln66_27_fu_2330_p1 - zext_ln66_28_fu_2334_p1);

assign sub_ln66_7_fu_2360_p2 = (zext_ln66_28_fu_2334_p1 - zext_ln66_27_fu_2330_p1);

assign sub_ln66_8_fu_2390_p2 = (6'd31 - select_ln66_19_fu_2366_p3);

assign sub_ln66_fu_1743_p2 = (zext_ln66_fu_1725_p1 - zext_ln66_1_fu_1729_p1);

assign tapes_0_tape_address0 = grp_mpc_AND_verify_2_fu_717_rand_0_tape_address0;

assign tapes_0_tape_address1 = grp_mpc_AND_verify_2_fu_717_rand_0_tape_address1;

integer ap_tvar_int_0;

always @ (tmp_q1) begin
    for (ap_tvar_int_0 = 32 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 31 - 0) begin
            tmp_16_fu_1164_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_16_fu_1164_p4[ap_tvar_int_0] = tmp_q1[31 - ap_tvar_int_0];
        end
    end
end

integer ap_tvar_int_1;

always @ (tmp_q1) begin
    for (ap_tvar_int_1 = 32 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 31 - 0) begin
            tmp_18_fu_1307_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            tmp_18_fu_1307_p4[ap_tvar_int_1] = tmp_q1[31 - ap_tvar_int_1];
        end
    end
end

integer ap_tvar_int_2;

always @ (tmp_q1) begin
    for (ap_tvar_int_2 = 32 - 1; ap_tvar_int_2 >= 0; ap_tvar_int_2 = ap_tvar_int_2 - 1) begin
        if (ap_tvar_int_2 > 31 - 0) begin
            tmp_20_fu_1450_p4[ap_tvar_int_2] = 1'b0;
        end else begin
            tmp_20_fu_1450_p4[ap_tvar_int_2] = tmp_q1[31 - ap_tvar_int_2];
        end
    end
end

integer ap_tvar_int_3;

always @ (tmp_q1) begin
    for (ap_tvar_int_3 = 32 - 1; ap_tvar_int_3 >= 0; ap_tvar_int_3 = ap_tvar_int_3 - 1) begin
        if (ap_tvar_int_3 > 31 - 0) begin
            tmp_22_fu_1733_p4[ap_tvar_int_3] = 1'b0;
        end else begin
            tmp_22_fu_1733_p4[ap_tvar_int_3] = tmp_q1[31 - ap_tvar_int_3];
        end
    end
end

integer ap_tvar_int_4;

always @ (shl_ln66_6_fu_1888_p2) begin
    for (ap_tvar_int_4 = 32 - 1; ap_tvar_int_4 >= 0; ap_tvar_int_4 = ap_tvar_int_4 - 1) begin
        if (ap_tvar_int_4 > 31 - 0) begin
            tmp_23_fu_1894_p4[ap_tvar_int_4] = 1'b0;
        end else begin
            tmp_23_fu_1894_p4[ap_tvar_int_4] = shl_ln66_6_fu_1888_p2[31 - ap_tvar_int_4];
        end
    end
end

integer ap_tvar_int_5;

always @ (shl_ln66_9_fu_2008_p2) begin
    for (ap_tvar_int_5 = 32 - 1; ap_tvar_int_5 >= 0; ap_tvar_int_5 = ap_tvar_int_5 - 1) begin
        if (ap_tvar_int_5 > 31 - 0) begin
            tmp_24_fu_2014_p4[ap_tvar_int_5] = 1'b0;
        end else begin
            tmp_24_fu_2014_p4[ap_tvar_int_5] = shl_ln66_9_fu_2008_p2[31 - ap_tvar_int_5];
        end
    end
end

integer ap_tvar_int_6;

always @ (or_ln66_4_fu_2067_p2) begin
    for (ap_tvar_int_6 = 32 - 1; ap_tvar_int_6 >= 0; ap_tvar_int_6 = ap_tvar_int_6 - 1) begin
        if (ap_tvar_int_6 > 31 - 0) begin
            tmp_26_fu_2096_p4[ap_tvar_int_6] = 1'b0;
        end else begin
            tmp_26_fu_2096_p4[ap_tvar_int_6] = or_ln66_4_fu_2067_p2[31 - ap_tvar_int_6];
        end
    end
end

integer ap_tvar_int_7;

always @ (shl_ln66_11_fu_2249_p2) begin
    for (ap_tvar_int_7 = 32 - 1; ap_tvar_int_7 >= 0; ap_tvar_int_7 = ap_tvar_int_7 - 1) begin
        if (ap_tvar_int_7 > 31 - 0) begin
            tmp_27_fu_2255_p4[ap_tvar_int_7] = 1'b0;
        end else begin
            tmp_27_fu_2255_p4[ap_tvar_int_7] = shl_ln66_11_fu_2249_p2[31 - ap_tvar_int_7];
        end
    end
end

integer ap_tvar_int_8;

always @ (or_ln66_6_fu_2308_p2) begin
    for (ap_tvar_int_8 = 32 - 1; ap_tvar_int_8 >= 0; ap_tvar_int_8 = ap_tvar_int_8 - 1) begin
        if (ap_tvar_int_8 > 31 - 0) begin
            tmp_29_fu_2338_p4[ap_tvar_int_8] = 1'b0;
        end else begin
            tmp_29_fu_2338_p4[ap_tvar_int_8] = or_ln66_6_fu_2308_p2[31 - ap_tvar_int_8];
        end
    end
end

integer ap_tvar_int_9;

always @ (shl_ln66_13_fu_2502_p2) begin
    for (ap_tvar_int_9 = 32 - 1; ap_tvar_int_9 >= 0; ap_tvar_int_9 = ap_tvar_int_9 - 1) begin
        if (ap_tvar_int_9 > 31 - 0) begin
            tmp_30_fu_2508_p4[ap_tvar_int_9] = 1'b0;
        end else begin
            tmp_30_fu_2508_p4[ap_tvar_int_9] = shl_ln66_13_fu_2502_p2[31 - ap_tvar_int_9];
        end
    end
end

assign tmp_s_fu_830_p3 = {{view1_inputShare_offset}, {2'd0}};

assign trunc_ln253_1_fu_2688_p1 = i_0_i14_reg_643[0:0];

assign trunc_ln253_fu_961_p1 = i_0_i2_reg_409[0:0];

assign trunc_ln54_3_fu_1391_p1 = and_ln54_1_fu_1385_p2[7:0];

assign trunc_ln54_5_fu_1534_p1 = and_ln54_2_fu_1528_p2[7:0];

assign trunc_ln54_fu_1248_p1 = and_ln54_fu_1242_p2[7:0];

assign trunc_ln66_1_fu_2178_p1 = and_ln66_9_fu_2173_p2[7:0];

assign trunc_ln66_2_fu_2424_p1 = and_ln66_13_fu_2419_p2[7:0];

assign trunc_ln66_fu_1817_p1 = and_ln66_3_fu_1811_p2[7:0];

assign trunc_ln797_fu_1049_p1 = bitNumber_assign_2_i_reg_515[2:0];

assign trunc_ln804_fu_1119_p1 = j_0_i_reg_599[0:0];

assign trunc_ln818_fu_1610_p1 = j_1_i_reg_610[0:0];

assign view1_communicatedBi_address0 = grp_mpc_AND_verify_2_fu_717_view1_communicatedBi_address0;

assign view1_communicatedBi_d0 = grp_mpc_AND_verify_2_fu_717_view1_communicatedBi_d0;

assign view1_inputShare_address0 = grp_matrix_mul_fu_688_state_address0;

assign view1_outputShare_address0 = zext_ln933_1_fu_2794_p1;

assign view1_outputShare_d0 = tmp_q1;

assign view2_communicatedBi_address0 = grp_mpc_AND_verify_2_fu_717_view2_communicatedBi_address0;

assign view2_inputShare_address0 = grp_matrix_mul_fu_688_state_address0;

assign view2_outputShare_address0 = zext_ln936_1_fu_2831_p1;

assign view2_outputShare_d0 = tmp_q0;

assign xor_ln109_3_fu_2612_p2 = (i_0_i1_reg_621 ^ 3'd4);

assign xor_ln109_7_fu_904_p2 = (i_0_i8_i_reg_387 ^ 3'd4);

assign xor_ln54_2_fu_1180_p2 = (zext_ln54_5_fu_1156_p1 ^ 6'd31);

assign xor_ln54_3_fu_1323_p2 = (zext_ln54_12_fu_1299_p1 ^ 6'd31);

assign xor_ln54_4_fu_1466_p2 = (zext_ln54_16_fu_1442_p1 ^ 6'd31);

assign xor_ln54_fu_1091_p2 = (trunc_ln797_fu_1049_p1 ^ 3'd7);

assign xor_ln66_10_fu_2201_p2 = (zext_ln66_21_fu_2192_p1 ^ 6'd31);

assign xor_ln66_11_fu_2231_p2 = (select_ln66_15_fu_2207_p3 ^ 6'd31);

assign xor_ln66_12_fu_2291_p2 = (32'd4294967295 ^ and_ln66_10_fu_2285_p2);

assign xor_ln66_13_fu_2354_p2 = (zext_ln66_27_fu_2330_p1 ^ 6'd31);

assign xor_ln66_14_fu_2454_p2 = (zext_ln66_31_fu_2444_p1 ^ 6'd31);

assign xor_ln66_15_fu_2484_p2 = (select_ln66_22_fu_2460_p3 ^ 6'd31);

assign xor_ln66_16_fu_2544_p2 = (32'd4294967295 ^ and_ln66_14_fu_2538_p2);

assign xor_ln66_1_fu_1581_p2 = (shl_ln66_1_fu_1576_p2 ^ 8'd255);

assign xor_ln66_2_fu_1592_p2 = (shl_ln66_2_fu_1587_p2 ^ 8'd255);

assign xor_ln66_3_fu_1749_p2 = (zext_ln66_fu_1725_p1 ^ 6'd31);

assign xor_ln66_4_fu_1840_p2 = (zext_ln66_4_fu_1831_p1 ^ 6'd31);

assign xor_ln66_5_fu_1870_p2 = (select_ln66_4_fu_1846_p3 ^ 6'd31);

assign xor_ln66_6_fu_1960_p2 = (zext_ln66_11_fu_1951_p1 ^ 6'd31);

assign xor_ln66_7_fu_1990_p2 = (select_ln66_8_fu_1966_p3 ^ 6'd31);

assign xor_ln66_8_fu_2050_p2 = (32'd4294967295 ^ and_ln66_6_fu_2044_p2);

assign xor_ln66_9_fu_2112_p2 = (zext_ln66_17_fu_2088_p1 ^ 6'd31);

assign xor_ln66_fu_1570_p2 = (shl_ln66_fu_1565_p2 ^ 8'd255);

assign xor_ln818_fu_1628_p2 = (select_ln818_fu_1614_p3 ^ select_ln818_1_fu_1622_p3);

assign xor_ln819_1_fu_1668_p2 = (xor_ln819_fu_1662_p2 ^ select_ln819_1_fu_1656_p3);

assign xor_ln819_fu_1662_p2 = (select_ln819_fu_1648_p3 ^ select_ln818_fu_1614_p3);

assign xor_ln820_1_fu_2406_p2 = (xor_ln820_reg_3153 ^ xor_ln819_reg_3138);

assign xor_ln820_fu_1693_p2 = (select_ln820_fu_1679_p3 ^ select_ln820_1_fu_1687_p3);

assign xor_ln902_fu_871_p2 = (loop_1_reg_376 ^ 4'd8);

assign zext_ln109_10_fu_990_p1 = i_0_i_i4_reg_420;

assign zext_ln109_11_fu_1013_p1 = add_ln109_3_fu_1007_p2;

assign zext_ln109_12_fu_1029_p1 = add_ln109_5_fu_1023_p2;

assign zext_ln109_13_fu_2718_p1 = i_0_i_i24_reg_654;

assign zext_ln109_14_fu_2741_p1 = add_ln109_7_fu_2735_p2;

assign zext_ln109_15_fu_2757_p1 = add_ln109_9_fu_2751_p2;

assign zext_ln109_1_fu_931_p1 = i_0_i_i_reg_398;

assign zext_ln109_2_fu_899_p1 = i_0_i8_i_reg_387;

assign zext_ln109_3_fu_2661_p1 = or_ln_fu_2653_p3;

assign zext_ln109_4_fu_2671_p1 = add_ln109_fu_2666_p2;

assign zext_ln109_5_fu_2608_p1 = i_0_i1_reg_621;

assign zext_ln109_6_fu_2622_p1 = $unsigned(sext_ln109_fu_2618_p1);

assign zext_ln109_7_fu_2632_p1 = add_ln109_1_fu_2627_p2;

assign zext_ln109_8_fu_944_p1 = state_0_sum1_fu_936_p3;

assign zext_ln109_9_fu_914_p1 = $unsigned(sext_ln109_1_fu_910_p1);

assign zext_ln109_fu_2649_p1 = i_0_i_reg_632;

assign zext_ln54_10_fu_1547_p1 = c_0_fu_1543_p1;

assign zext_ln54_11_fu_1226_p1 = sub_ln54_4_fu_1216_p2;

assign zext_ln54_12_fu_1299_p1 = cast_offset1_fu_1279_p3;

assign zext_ln54_13_fu_1303_p1 = or_ln54_1_fu_1287_p2;

assign zext_ln54_14_fu_1365_p1 = select_ln54_6_fu_1351_p3;

assign zext_ln54_15_fu_1369_p1 = sub_ln54_7_fu_1359_p2;

assign zext_ln54_16_fu_1442_p1 = cast_offset2_fu_1422_p3;

assign zext_ln54_17_fu_1446_p1 = or_ln54_2_fu_1430_p2;

assign zext_ln54_18_fu_1508_p1 = select_ln54_9_fu_1494_p3;

assign zext_ln54_19_fu_1512_p1 = sub_ln54_10_fu_1502_p2;

assign zext_ln54_3_fu_1087_p1 = sub_ln54_1_fu_1081_p2;

assign zext_ln54_4_fu_1097_p1 = xor_ln54_fu_1091_p2;

assign zext_ln54_5_fu_1156_p1 = cast_offset_fu_1136_p3;

assign zext_ln54_6_fu_1160_p1 = or_ln54_fu_1144_p2;

assign zext_ln54_7_fu_1222_p1 = select_ln54_3_fu_1208_p3;

assign zext_ln54_8_fu_1261_p1 = a_0_fu_1257_p1;

assign zext_ln54_9_fu_1404_p1 = b_0_fu_1400_p1;

assign zext_ln54_fu_1077_p1 = sub_ln54_fu_1071_p2;

assign zext_ln66_10_fu_1937_p1 = tmp_21_reg_3121;

assign zext_ln66_11_fu_1951_p1 = cast_offset3_reg_3168;

assign zext_ln66_12_fu_1954_p1 = or_ln66_3_reg_3181;

assign zext_ln66_13_fu_1957_p1 = or_ln66_reg_3189;

assign zext_ln66_14_fu_1996_p1 = select_ln66_10_fu_1982_p3;

assign zext_ln66_15_fu_2000_p1 = select_ln66_9_fu_1974_p3;

assign zext_ln66_16_fu_2004_p1 = xor_ln66_7_fu_1990_p2;

assign zext_ln66_17_fu_2088_p1 = cast_offset4_fu_2073_p3;

assign zext_ln66_18_fu_2092_p1 = or_ln66_5_fu_2081_p2;

assign zext_ln66_19_fu_2154_p1 = select_ln66_14_fu_2140_p3;

assign zext_ln66_1_fu_1729_p1 = or_ln66_3_fu_1718_p2;

assign zext_ln66_20_fu_2164_p1 = sub_ln66_5_reg_3212;

assign zext_ln66_21_fu_2192_p1 = cast_offset4_reg_3200;

assign zext_ln66_22_fu_2195_p1 = or_ln66_5_reg_3206;

assign zext_ln66_23_fu_2198_p1 = or_ln66_1_reg_3222;

assign zext_ln66_24_fu_2237_p1 = select_ln66_17_fu_2223_p3;

assign zext_ln66_25_fu_2241_p1 = select_ln66_16_fu_2215_p3;

assign zext_ln66_26_fu_2245_p1 = xor_ln66_11_fu_2231_p2;

assign zext_ln66_27_fu_2330_p1 = cast_offset5_fu_2315_p3;

assign zext_ln66_28_fu_2334_p1 = or_ln66_7_fu_2323_p2;

assign zext_ln66_29_fu_2396_p1 = select_ln66_21_fu_2382_p3;

assign zext_ln66_2_fu_1791_p1 = select_ln66_3_fu_1777_p3;

assign zext_ln66_30_fu_2410_p1 = sub_ln66_8_reg_3244;

assign zext_ln66_31_fu_2444_p1 = cast_offset5_reg_3232;

assign zext_ln66_32_fu_2447_p1 = or_ln66_7_reg_3238;

assign zext_ln66_33_fu_2450_p1 = or_ln66_2_fu_2438_p2;

assign zext_ln66_34_fu_2490_p1 = select_ln66_24_fu_2476_p3;

assign zext_ln66_35_fu_2494_p1 = select_ln66_23_fu_2468_p3;

assign zext_ln66_36_fu_2498_p1 = xor_ln66_15_fu_2484_p2;

assign zext_ln66_3_fu_1795_p1 = sub_ln66_2_fu_1785_p2;

assign zext_ln66_4_fu_1831_p1 = cast_offset3_reg_3168;

assign zext_ln66_5_fu_1834_p1 = or_ln66_3_reg_3181;

assign zext_ln66_6_fu_1837_p1 = or_ln66_reg_3189;

assign zext_ln66_7_fu_1876_p1 = select_ln66_6_fu_1862_p3;

assign zext_ln66_8_fu_1880_p1 = select_ln66_5_fu_1854_p3;

assign zext_ln66_9_fu_1884_p1 = xor_ln66_5_fu_1870_p2;

assign zext_ln66_fu_1725_p1 = cast_offset3_fu_1710_p3;

assign zext_ln897_fu_854_p1 = loop_0_reg_365;

assign zext_ln902_fu_877_p1 = xor_ln902_fu_871_p2;

assign zext_ln933_1_cast_fu_838_p1 = tmp_s_fu_830_p3;

assign zext_ln933_1_fu_2794_p1 = add_ln933_fu_2789_p2;

assign zext_ln933_2_fu_2780_p1 = add_ln933_1_fu_2774_p2;

assign zext_ln933_fu_2785_p1 = loop_2_reg_665;

assign zext_ln936_1_fu_2831_p1 = add_ln936_reg_3364;

assign zext_ln936_2_fu_2826_p1 = add_ln936_1_fu_2820_p2;

assign zext_ln936_fu_2811_p1 = loop_3_reg_677;

always @ (posedge ap_clk) begin
    zext_ln933_1_cast_reg_2848[1:0] <= 2'b00;
    zext_ln933_1_cast_reg_2848[10] <= 1'b0;
    tmp_addr_18_reg_2886[4] <= 1'b0;
    tmp_addr_17_reg_2904[4:3] <= 2'b01;
    select_ln109_reg_2927[1:0] <= 2'b01;
    tmp_addr_19_reg_2951[4] <= 1'b0;
    shl_ln_reg_2965[8:0] <= 9'b000000000;
    zext_ln54_reg_2984[7:3] <= 5'b00000;
    zext_ln54_3_reg_2991[7:3] <= 5'b00000;
    zext_ln54_4_reg_2998[7:3] <= 5'b00000;
    add_ln919_reg_3005[8:0] <= 9'b000000000;
    tmp_addr_24_reg_3127[1:0] <= 2'b00;
    tmp_addr_24_reg_3127[4:3] <= 2'b01;
    cast_offset3_reg_3168[2:0] <= 3'b000;
    or_ln66_3_reg_3181[2:0] <= 3'b111;
    cast_offset4_reg_3200[2:0] <= 3'b000;
    or_ln66_5_reg_3206[2:0] <= 3'b111;
    sub_ln66_5_reg_3212[0] <= 1'b0;
    cast_offset5_reg_3232[2:0] <= 3'b000;
    or_ln66_7_reg_3238[2:0] <= 3'b111;
    sub_ln66_8_reg_3244[0] <= 1'b0;
    add_ln926_reg_3254[1:0] <= 2'b00;
    add_ln923_reg_3259[1:0] <= 2'b00;
    tmp_addr_16_reg_3272[4] <= 1'b0;
    tmp_addr_15_reg_3291[4:3] <= 2'b01;
    select_ln109_2_reg_3315[1:0] <= 2'b01;
    tmp_addr_25_reg_3333[4] <= 1'b0;
end

endmodule //mpc_LowMC_verify_2
