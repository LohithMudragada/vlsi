// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module mpc_LowMC_verify_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        view1_inputShare_address0,
        view1_inputShare_ce0,
        view1_inputShare_q0,
        view1_inputShare_offset,
        view1_communicatedBi_address0,
        view1_communicatedBi_ce0,
        view1_communicatedBi_we0,
        view1_communicatedBi_d0,
        view1_communicatedBi_q0,
        view1_outputShare_address0,
        view1_outputShare_ce0,
        view1_outputShare_we0,
        view1_outputShare_d0,
        view2_inputShare_address0,
        view2_inputShare_ce0,
        view2_inputShare_q0,
        view2_communicatedBi_address0,
        view2_communicatedBi_ce0,
        view2_communicatedBi_q0,
        view2_outputShare_address0,
        view2_outputShare_ce0,
        view2_outputShare_we0,
        view2_outputShare_d0,
        tapes_0_tape_address0,
        tapes_0_tape_ce0,
        tapes_0_tape_q0,
        tapes_0_tape_address1,
        tapes_0_tape_ce1,
        tapes_0_tape_q1,
        tmp_address0,
        tmp_ce0,
        tmp_we0,
        tmp_d0,
        tmp_q0,
        tmp_address1,
        tmp_ce1,
        tmp_we1,
        tmp_d1,
        tmp_q1,
        plaintext_address0,
        plaintext_ce0,
        plaintext_q0,
        challenge
);

parameter    ap_ST_fsm_state1 = 43'd1;
parameter    ap_ST_fsm_state2 = 43'd2;
parameter    ap_ST_fsm_state3 = 43'd4;
parameter    ap_ST_fsm_state4 = 43'd8;
parameter    ap_ST_fsm_state5 = 43'd16;
parameter    ap_ST_fsm_state6 = 43'd32;
parameter    ap_ST_fsm_state7 = 43'd64;
parameter    ap_ST_fsm_state8 = 43'd128;
parameter    ap_ST_fsm_state9 = 43'd256;
parameter    ap_ST_fsm_state10 = 43'd512;
parameter    ap_ST_fsm_state11 = 43'd1024;
parameter    ap_ST_fsm_state12 = 43'd2048;
parameter    ap_ST_fsm_state13 = 43'd4096;
parameter    ap_ST_fsm_state14 = 43'd8192;
parameter    ap_ST_fsm_state15 = 43'd16384;
parameter    ap_ST_fsm_state16 = 43'd32768;
parameter    ap_ST_fsm_state17 = 43'd65536;
parameter    ap_ST_fsm_state18 = 43'd131072;
parameter    ap_ST_fsm_state19 = 43'd262144;
parameter    ap_ST_fsm_state20 = 43'd524288;
parameter    ap_ST_fsm_state21 = 43'd1048576;
parameter    ap_ST_fsm_state22 = 43'd2097152;
parameter    ap_ST_fsm_state23 = 43'd4194304;
parameter    ap_ST_fsm_state24 = 43'd8388608;
parameter    ap_ST_fsm_state25 = 43'd16777216;
parameter    ap_ST_fsm_state26 = 43'd33554432;
parameter    ap_ST_fsm_state27 = 43'd67108864;
parameter    ap_ST_fsm_state28 = 43'd134217728;
parameter    ap_ST_fsm_state29 = 43'd268435456;
parameter    ap_ST_fsm_state30 = 43'd536870912;
parameter    ap_ST_fsm_state31 = 43'd1073741824;
parameter    ap_ST_fsm_state32 = 43'd2147483648;
parameter    ap_ST_fsm_state33 = 43'd4294967296;
parameter    ap_ST_fsm_state34 = 43'd8589934592;
parameter    ap_ST_fsm_state35 = 43'd17179869184;
parameter    ap_ST_fsm_state36 = 43'd34359738368;
parameter    ap_ST_fsm_state37 = 43'd68719476736;
parameter    ap_ST_fsm_state38 = 43'd137438953472;
parameter    ap_ST_fsm_state39 = 43'd274877906944;
parameter    ap_ST_fsm_state40 = 43'd549755813888;
parameter    ap_ST_fsm_state41 = 43'd1099511627776;
parameter    ap_ST_fsm_state42 = 43'd2199023255552;
parameter    ap_ST_fsm_state43 = 43'd4398046511104;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] view1_inputShare_address0;
output   view1_inputShare_ce0;
input  [31:0] view1_inputShare_q0;
input  [7:0] view1_inputShare_offset;
output  [14:0] view1_communicatedBi_address0;
output   view1_communicatedBi_ce0;
output   view1_communicatedBi_we0;
output  [7:0] view1_communicatedBi_d0;
input  [7:0] view1_communicatedBi_q0;
output  [9:0] view1_outputShare_address0;
output   view1_outputShare_ce0;
output   view1_outputShare_we0;
output  [31:0] view1_outputShare_d0;
output  [9:0] view2_inputShare_address0;
output   view2_inputShare_ce0;
input  [31:0] view2_inputShare_q0;
output  [14:0] view2_communicatedBi_address0;
output   view2_communicatedBi_ce0;
input  [7:0] view2_communicatedBi_q0;
output  [9:0] view2_outputShare_address0;
output   view2_outputShare_ce0;
output   view2_outputShare_we0;
output  [31:0] view2_outputShare_d0;
output  [8:0] tapes_0_tape_address0;
output   tapes_0_tape_ce0;
input  [7:0] tapes_0_tape_q0;
output  [8:0] tapes_0_tape_address1;
output   tapes_0_tape_ce1;
input  [7:0] tapes_0_tape_q1;
output  [4:0] tmp_address0;
output   tmp_ce0;
output  [3:0] tmp_we0;
output  [31:0] tmp_d0;
input  [31:0] tmp_q0;
output  [4:0] tmp_address1;
output   tmp_ce1;
output  [3:0] tmp_we1;
output  [31:0] tmp_d1;
input  [31:0] tmp_q1;
output  [2:0] plaintext_address0;
output   plaintext_ce0;
input  [31:0] plaintext_q0;
input  [1:0] challenge;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg view1_inputShare_ce0;
reg view1_communicatedBi_ce0;
reg view1_communicatedBi_we0;
reg view1_outputShare_ce0;
reg view1_outputShare_we0;
reg view2_inputShare_ce0;
reg view2_communicatedBi_ce0;
reg view2_outputShare_ce0;
reg view2_outputShare_we0;
reg tapes_0_tape_ce0;
reg tapes_0_tape_ce1;
reg[4:0] tmp_address0;
reg tmp_ce0;
reg[3:0] tmp_we0;
reg[31:0] tmp_d0;
reg[4:0] tmp_address1;
reg tmp_ce1;
reg[3:0] tmp_we1;
reg[31:0] tmp_d1;
reg[2:0] plaintext_address0;
reg plaintext_ce0;

(* fsm_encoding = "none" *) reg   [42:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [6:0] temp_matrix3_address0;
reg    temp_matrix3_ce0;
wire   [31:0] temp_matrix3_q0;
reg   [31:0] reg_829;
wire    ap_CS_fsm_state20;
wire    grp_mpc_AND_verify_2_fu_721_ap_ready;
wire    grp_mpc_AND_verify_2_fu_721_ap_done;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state24;
wire   [10:0] zext_ln933_1_cast_fu_842_p1;
reg   [10:0] zext_ln933_1_cast_reg_2852;
wire   [3:0] loop_fu_852_p2;
wire    ap_CS_fsm_state2;
wire   [3:0] loop_29_fu_869_p2;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln266_fu_886_p2;
reg   [0:0] icmp_ln266_reg_2874;
wire   [0:0] icmp_ln901_fu_863_p2;
wire   [0:0] grp_fu_750_p2;
reg   [0:0] icmp_ln269_reg_2878;
wire   [2:0] i_12_fu_897_p2;
reg   [2:0] i_12_reg_2885;
wire    ap_CS_fsm_state4;
reg   [4:0] tmp_addr_5_reg_2890;
wire   [0:0] icmp_ln108_3_fu_891_p2;
wire   [2:0] i_6_fu_929_p2;
reg   [2:0] i_6_reg_2903;
reg   [4:0] tmp_addr_4_reg_2908;
wire   [0:0] icmp_ln108_1_fu_923_p2;
wire   [1:0] i_13_fu_959_p2;
reg   [1:0] i_13_reg_2921;
wire    ap_CS_fsm_state10;
wire   [0:0] trunc_ln253_fu_965_p1;
reg   [0:0] trunc_ln253_reg_2926;
wire   [0:0] icmp_ln252_fu_953_p2;
wire   [2:0] select_ln109_fu_969_p3;
reg   [2:0] select_ln109_reg_2931;
reg   [0:0] icmp_ln925_reg_2943;
wire   [2:0] i_14_fu_988_p2;
reg   [2:0] i_14_reg_2950;
wire    ap_CS_fsm_state11;
reg   [4:0] tmp_addr_6_reg_2955;
wire   [0:0] icmp_ln108_4_fu_982_p2;
wire   [13:0] shl_ln_fu_1044_p3;
reg   [13:0] shl_ln_reg_2969;
wire    ap_CS_fsm_state13;
wire   [0:0] icmp_ln913_fu_1038_p2;
wire   [4:0] add_ln804_fu_1063_p2;
reg   [4:0] add_ln804_reg_2978;
wire    ap_CS_fsm_state17;
wire   [0:0] icmp_ln797_fu_1057_p2;
wire   [4:0] add_ln805_fu_1069_p2;
reg   [4:0] add_ln805_reg_2983;
wire   [7:0] zext_ln54_fu_1081_p1;
reg   [7:0] zext_ln54_reg_2988;
wire   [7:0] zext_ln54_3_fu_1091_p1;
reg   [7:0] zext_ln54_3_reg_2995;
wire   [7:0] zext_ln54_4_fu_1101_p1;
reg   [7:0] zext_ln54_4_reg_3002;
wire   [13:0] add_ln919_fu_1105_p2;
reg   [13:0] add_ln919_reg_3009;
wire   [1:0] j_fu_1117_p2;
reg   [1:0] j_reg_3017;
wire    ap_CS_fsm_state18;
wire   [0:0] trunc_ln804_fu_1123_p1;
reg   [0:0] trunc_ln804_reg_3022;
wire   [0:0] icmp_ln803_fu_1111_p2;
wire   [7:0] a_1_1_fu_1269_p3;
wire    ap_CS_fsm_state19;
wire   [7:0] a_1_2_fu_1276_p3;
wire   [7:0] b_1_1_fu_1412_p3;
wire   [7:0] b_1_2_fu_1419_p3;
wire   [7:0] c_1_1_fu_1555_p3;
wire   [7:0] c_1_2_fu_1562_p3;
reg   [7:0] ab_0_reg_3072;
reg   [7:0] ab_1_reg_3077;
reg   [7:0] bc_0_reg_3082;
reg   [7:0] bc_1_reg_3087;
reg   [7:0] ca_0_reg_3092;
reg   [7:0] ca_1_reg_3097;
wire   [7:0] xor_ln66_fu_1574_p2;
reg   [7:0] xor_ln66_reg_3102;
wire   [7:0] xor_ln66_4_fu_1585_p2;
reg   [7:0] xor_ln66_4_reg_3107;
wire   [7:0] xor_ln66_5_fu_1596_p2;
reg   [7:0] xor_ln66_5_reg_3112;
wire   [1:0] j_4_fu_1608_p2;
reg   [1:0] j_4_reg_3120;
wire    ap_CS_fsm_state25;
wire   [1:0] grp_fu_770_p4;
reg   [1:0] tmp_38_reg_3125;
wire   [0:0] icmp_ln817_fu_1602_p2;
reg   [4:0] tmp_addr_11_reg_3131;
wire   [7:0] shl_ln66_6_fu_1647_p2;
reg   [7:0] shl_ln66_6_reg_3137;
wire   [7:0] xor_ln819_fu_1666_p2;
reg   [7:0] xor_ln819_reg_3142;
wire   [1:0] grp_fu_779_p4;
reg   [1:0] tmp_42_reg_3147;
wire   [7:0] shl_ln66_7_fu_1678_p2;
reg   [7:0] shl_ln66_7_reg_3152;
wire   [7:0] xor_ln820_fu_1697_p2;
reg   [7:0] xor_ln820_reg_3157;
wire   [1:0] grp_fu_788_p4;
reg   [1:0] tmp_45_reg_3162;
wire   [4:0] add_ln797_fu_1703_p2;
wire   [4:0] cast_offset3_fu_1714_p3;
reg   [4:0] cast_offset3_reg_3172;
wire    ap_CS_fsm_state26;
reg   [31:0] ldvalue424_reg_3180;
wire   [4:0] or_ln66_4_fu_1722_p2;
reg   [4:0] or_ln66_4_reg_3185;
wire   [7:0] or_ln66_fu_1830_p2;
reg   [7:0] or_ln66_reg_3193;
wire   [31:0] or_ln66_5_fu_2071_p2;
reg   [31:0] or_ln66_5_reg_3199;
wire    ap_CS_fsm_state27;
wire   [4:0] cast_offset4_fu_2077_p3;
reg   [4:0] cast_offset4_reg_3204;
wire   [4:0] or_ln66_6_fu_2085_p2;
reg   [4:0] or_ln66_6_reg_3210;
wire   [5:0] sub_ln66_5_fu_2152_p2;
reg   [5:0] sub_ln66_5_reg_3216;
wire   [31:0] lshr_ln66_4_fu_2162_p2;
reg   [31:0] lshr_ln66_4_reg_3221;
wire   [7:0] or_ln66_2_fu_2191_p2;
reg   [7:0] or_ln66_2_reg_3226;
wire    ap_CS_fsm_state28;
wire   [31:0] or_ln66_7_fu_2312_p2;
reg   [31:0] or_ln66_7_reg_3231;
wire    ap_CS_fsm_state29;
wire   [4:0] cast_offset5_fu_2319_p3;
reg   [4:0] cast_offset5_reg_3236;
wire   [4:0] or_ln66_8_fu_2327_p2;
reg   [4:0] or_ln66_8_reg_3242;
wire   [5:0] sub_ln66_8_fu_2394_p2;
reg   [5:0] sub_ln66_8_reg_3248;
wire   [31:0] lshr_ln66_7_fu_2404_p2;
reg   [31:0] lshr_ln66_7_reg_3253;
wire   [6:0] add_ln926_fu_2580_p2;
reg   [6:0] add_ln926_reg_3258;
wire    ap_CS_fsm_state33;
wire    grp_matrix_mul_1_fu_709_ap_ready;
wire    grp_matrix_mul_1_fu_709_ap_done;
wire   [6:0] add_ln923_fu_2594_p2;
reg   [6:0] add_ln923_reg_3263;
wire   [2:0] i_15_fu_2606_p2;
reg   [2:0] i_15_reg_3271;
wire    ap_CS_fsm_state34;
reg   [4:0] tmp_addr_3_reg_3276;
wire   [0:0] icmp_ln108_2_fu_2600_p2;
wire   [2:0] i_fu_2647_p2;
reg   [2:0] i_reg_3290;
reg   [4:0] tmp_addr_2_reg_3295;
wire   [0:0] icmp_ln108_fu_2641_p2;
wire   [1:0] i_16_fu_2686_p2;
reg   [1:0] i_16_reg_3309;
wire    ap_CS_fsm_state37;
wire   [0:0] trunc_ln253_1_fu_2692_p1;
reg   [0:0] trunc_ln253_1_reg_3314;
wire   [0:0] icmp_ln252_1_fu_2680_p2;
wire   [2:0] select_ln109_2_fu_2696_p3;
reg   [2:0] select_ln109_2_reg_3319;
wire   [4:0] r_fu_2704_p2;
wire   [2:0] i_17_fu_2716_p2;
reg   [2:0] i_17_reg_3332;
wire    ap_CS_fsm_state38;
reg   [4:0] tmp_addr_12_reg_3337;
wire   [0:0] icmp_ln108_5_fu_2710_p2;
wire   [4:0] loop_30_fu_2772_p2;
reg   [4:0] loop_30_reg_3350;
wire    ap_CS_fsm_state40;
wire   [0:0] icmp_ln932_fu_2766_p2;
wire   [4:0] loop_31_fu_2809_p2;
reg   [4:0] loop_31_reg_3363;
wire    ap_CS_fsm_state42;
wire   [10:0] add_ln936_fu_2819_p2;
reg   [10:0] add_ln936_reg_3368;
wire   [0:0] icmp_ln935_fu_2803_p2;
wire    grp_matrix_mul_fu_692_ap_start;
wire    grp_matrix_mul_fu_692_ap_done;
wire    grp_matrix_mul_fu_692_ap_idle;
wire    grp_matrix_mul_fu_692_ap_ready;
wire   [4:0] grp_matrix_mul_fu_692_output_r_address0;
wire    grp_matrix_mul_fu_692_output_r_ce0;
wire   [3:0] grp_matrix_mul_fu_692_output_r_we0;
wire   [31:0] grp_matrix_mul_fu_692_output_r_d0;
reg   [4:0] grp_matrix_mul_fu_692_output_offset;
wire   [9:0] grp_matrix_mul_fu_692_state_address0;
wire    grp_matrix_mul_fu_692_state_ce0;
reg   [31:0] grp_matrix_mul_fu_692_state_q0;
reg   [13:0] grp_matrix_mul_fu_692_matrix_offset;
wire    grp_matrix_mul_1_fu_709_ap_start;
wire    grp_matrix_mul_1_fu_709_ap_idle;
wire   [4:0] grp_matrix_mul_1_fu_709_output_r_address0;
wire    grp_matrix_mul_1_fu_709_output_r_ce0;
wire   [3:0] grp_matrix_mul_1_fu_709_output_r_we0;
wire   [31:0] grp_matrix_mul_1_fu_709_output_r_d0;
reg   [4:0] grp_matrix_mul_1_fu_709_state_offset;
wire    grp_mpc_AND_verify_2_fu_721_ap_start;
wire    grp_mpc_AND_verify_2_fu_721_ap_idle;
reg   [7:0] grp_mpc_AND_verify_2_fu_721_in1_0_read;
reg   [7:0] grp_mpc_AND_verify_2_fu_721_in1_1_read;
reg   [7:0] grp_mpc_AND_verify_2_fu_721_in2_0_read;
reg   [7:0] grp_mpc_AND_verify_2_fu_721_in2_1_read;
wire   [8:0] grp_mpc_AND_verify_2_fu_721_rand_0_tape_address0;
wire    grp_mpc_AND_verify_2_fu_721_rand_0_tape_ce0;
wire   [8:0] grp_mpc_AND_verify_2_fu_721_rand_0_tape_address1;
wire    grp_mpc_AND_verify_2_fu_721_rand_0_tape_ce1;
reg   [31:0] grp_mpc_AND_verify_2_fu_721_rand_0_pos_read;
wire   [14:0] grp_mpc_AND_verify_2_fu_721_view1_communicatedBi_address0;
wire    grp_mpc_AND_verify_2_fu_721_view1_communicatedBi_ce0;
wire    grp_mpc_AND_verify_2_fu_721_view1_communicatedBi_we0;
wire   [7:0] grp_mpc_AND_verify_2_fu_721_view1_communicatedBi_d0;
wire   [14:0] grp_mpc_AND_verify_2_fu_721_view2_communicatedBi_address0;
wire    grp_mpc_AND_verify_2_fu_721_view2_communicatedBi_ce0;
wire   [31:0] grp_mpc_AND_verify_2_fu_721_ap_return_0;
wire   [7:0] grp_mpc_AND_verify_2_fu_721_ap_return_1;
wire   [7:0] grp_mpc_AND_verify_2_fu_721_ap_return_2;
reg   [3:0] loop_0_reg_369;
wire   [0:0] icmp_ln896_fu_846_p2;
reg   [3:0] loop_1_reg_380;
reg   [2:0] i_0_i8_i_reg_391;
wire    ap_CS_fsm_state5;
reg   [2:0] i_0_i_i_reg_402;
wire    ap_CS_fsm_state6;
reg   [1:0] i_0_i2_reg_413;
wire    ap_CS_fsm_state9;
reg   [2:0] i_0_i_i4_reg_424;
wire    ap_CS_fsm_state12;
reg   [4:0] r_0_reg_435;
reg   [7:0] c_1_1_i_reg_531;
reg   [7:0] c_1_06_i_reg_447;
reg   [7:0] c_0_1_i_reg_543;
reg   [7:0] c_0_05_i_reg_459;
reg   [7:0] b_1_1_i_reg_555;
reg   [7:0] b_1_04_i_reg_471;
reg   [7:0] b_0_1_i_reg_567;
reg   [7:0] b_0_03_i_reg_483;
reg   [7:0] a_1_1_i_reg_579;
reg   [7:0] a_1_02_i_reg_495;
reg   [7:0] a_0_1_i_reg_591;
reg   [7:0] a_0_01_i_reg_507;
reg   [4:0] bitNumber_assign_3_i_reg_519;
wire    ap_CS_fsm_state16;
reg   [1:0] j_0_i_reg_603;
reg   [1:0] j_1_i_reg_614;
wire    ap_CS_fsm_state30;
reg   [2:0] i_0_i1_reg_625;
wire    ap_CS_fsm_state35;
reg   [2:0] i_0_i_reg_636;
wire    ap_CS_fsm_state36;
reg   [1:0] i_0_i14_reg_647;
reg   [2:0] i_0_i_i24_reg_658;
wire    ap_CS_fsm_state39;
reg   [4:0] loop_2_reg_669;
wire    ap_CS_fsm_state41;
reg   [4:0] loop_3_reg_681;
wire    ap_CS_fsm_state43;
reg    grp_matrix_mul_fu_692_ap_start_reg;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state14;
reg    grp_matrix_mul_1_fu_709_ap_start_reg;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state31;
reg    grp_mpc_AND_verify_2_fu_721_ap_start_reg;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state23;
wire   [63:0] zext_ln897_fu_858_p1;
wire   [63:0] zext_ln902_fu_881_p1;
wire   [63:0] zext_ln109_9_fu_918_p1;
wire   [63:0] zext_ln109_2_fu_903_p1;
wire   [63:0] zext_ln109_8_fu_948_p1;
wire   [63:0] zext_ln109_1_fu_935_p1;
wire   [63:0] zext_ln109_11_fu_1017_p1;
wire   [63:0] zext_ln109_12_fu_1033_p1;
wire   [63:0] select_ln54_fu_1127_p3;
wire   [63:0] select_ln66_fu_1638_p3;
wire   [63:0] zext_ln109_6_fu_2626_p1;
wire   [63:0] zext_ln109_7_fu_2636_p1;
wire   [63:0] zext_ln109_3_fu_2665_p1;
wire   [63:0] zext_ln109_4_fu_2675_p1;
wire   [63:0] zext_ln109_14_fu_2745_p1;
wire   [63:0] zext_ln109_15_fu_2761_p1;
wire   [63:0] zext_ln933_2_fu_2784_p1;
wire   [63:0] zext_ln933_1_fu_2798_p1;
wire   [63:0] zext_ln936_2_fu_2830_p1;
wire   [63:0] zext_ln936_1_fu_2835_p1;
reg   [31:0] tapes_pos_0_0_fu_164;
wire   [31:0] grp_fu_755_p2;
wire   [31:0] grp_fu_762_p2;
wire   [31:0] and_ln66_6_fu_1934_p2;
wire   [3:0] shl_ln66_11_fu_1944_p2;
wire   [31:0] or_ln66_9_fu_2565_p2;
wire   [31:0] grp_fu_822_p2;
reg   [4:0] grp_fu_810_p0;
reg   [4:0] grp_fu_810_p1;
reg   [4:0] grp_fu_814_p0;
reg   [4:0] grp_fu_814_p1;
reg   [4:0] grp_fu_818_p0;
reg   [4:0] grp_fu_818_p1;
wire   [9:0] tmp_s_fu_834_p3;
wire   [3:0] xor_ln902_fu_875_p2;
wire   [2:0] xor_ln109_7_fu_908_p2;
wire  signed [3:0] sext_ln109_1_fu_914_p1;
wire   [3:0] state_0_sum1_fu_940_p3;
wire   [3:0] select_ln109_1_fu_994_p3;
wire   [3:0] zext_ln109_10_fu_1001_p1;
wire   [3:0] add_ln109_2_fu_1005_p2;
wire   [3:0] add_ln109_3_fu_1011_p2;
wire   [2:0] add_ln109_4_fu_1022_p2;
wire   [2:0] add_ln109_5_fu_1027_p2;
wire   [2:0] trunc_ln797_fu_1053_p1;
wire   [2:0] sub_ln54_fu_1075_p2;
wire   [2:0] sub_ln54_1_fu_1085_p2;
wire   [2:0] xor_ln54_fu_1095_p2;
wire   [4:0] cast_offset_fu_1140_p3;
wire   [4:0] or_ln54_fu_1148_p2;
wire   [5:0] zext_ln54_5_fu_1160_p1;
wire   [5:0] zext_ln54_6_fu_1164_p1;
wire   [0:0] icmp_ln54_fu_1154_p2;
wire   [5:0] sub_ln54_2_fu_1178_p2;
wire   [5:0] sub_ln54_3_fu_1190_p2;
reg   [31:0] tmp_33_fu_1168_p4;
wire   [5:0] xor_ln54_2_fu_1184_p2;
wire   [5:0] select_ln54_1_fu_1196_p3;
wire   [5:0] select_ln54_3_fu_1212_p3;
wire   [5:0] sub_ln54_4_fu_1220_p2;
wire   [31:0] select_ln54_2_fu_1204_p3;
wire   [31:0] zext_ln54_7_fu_1226_p1;
wire   [31:0] zext_ln54_11_fu_1230_p1;
wire   [31:0] lshr_ln54_6_fu_1234_p2;
wire   [31:0] lshr_ln54_7_fu_1240_p2;
wire   [31:0] and_ln54_fu_1246_p2;
wire   [7:0] trunc_ln54_fu_1252_p1;
wire   [7:0] lshr_ln54_fu_1256_p2;
wire   [0:0] a_0_fu_1261_p1;
wire   [7:0] zext_ln54_8_fu_1265_p1;
wire   [4:0] cast_offset1_fu_1283_p3;
wire   [4:0] or_ln54_1_fu_1291_p2;
wire   [5:0] zext_ln54_12_fu_1303_p1;
wire   [5:0] zext_ln54_13_fu_1307_p1;
wire   [0:0] icmp_ln54_1_fu_1297_p2;
wire   [5:0] sub_ln54_5_fu_1321_p2;
wire   [5:0] sub_ln54_6_fu_1333_p2;
reg   [31:0] tmp_35_fu_1311_p4;
wire   [5:0] xor_ln54_3_fu_1327_p2;
wire   [5:0] select_ln54_4_fu_1339_p3;
wire   [5:0] select_ln54_6_fu_1355_p3;
wire   [5:0] sub_ln54_7_fu_1363_p2;
wire   [31:0] select_ln54_5_fu_1347_p3;
wire   [31:0] zext_ln54_14_fu_1369_p1;
wire   [31:0] zext_ln54_15_fu_1373_p1;
wire   [31:0] lshr_ln54_8_fu_1377_p2;
wire   [31:0] lshr_ln54_9_fu_1383_p2;
wire   [31:0] and_ln54_1_fu_1389_p2;
wire   [7:0] trunc_ln54_3_fu_1395_p1;
wire   [7:0] lshr_ln54_4_fu_1399_p2;
wire   [0:0] b_0_fu_1404_p1;
wire   [7:0] zext_ln54_9_fu_1408_p1;
wire   [4:0] cast_offset2_fu_1426_p3;
wire   [4:0] or_ln54_2_fu_1434_p2;
wire   [5:0] zext_ln54_16_fu_1446_p1;
wire   [5:0] zext_ln54_17_fu_1450_p1;
wire   [0:0] icmp_ln54_2_fu_1440_p2;
wire   [5:0] sub_ln54_8_fu_1464_p2;
wire   [5:0] sub_ln54_9_fu_1476_p2;
reg   [31:0] tmp_37_fu_1454_p4;
wire   [5:0] xor_ln54_4_fu_1470_p2;
wire   [5:0] select_ln54_7_fu_1482_p3;
wire   [5:0] select_ln54_9_fu_1498_p3;
wire   [5:0] sub_ln54_10_fu_1506_p2;
wire   [31:0] select_ln54_8_fu_1490_p3;
wire   [31:0] zext_ln54_18_fu_1512_p1;
wire   [31:0] zext_ln54_19_fu_1516_p1;
wire   [31:0] lshr_ln54_10_fu_1520_p2;
wire   [31:0] lshr_ln54_11_fu_1526_p2;
wire   [31:0] and_ln54_2_fu_1532_p2;
wire   [7:0] trunc_ln54_5_fu_1538_p1;
wire   [7:0] lshr_ln54_5_fu_1542_p2;
wire   [0:0] c_0_fu_1547_p1;
wire   [7:0] zext_ln54_10_fu_1551_p1;
wire   [7:0] shl_ln66_fu_1569_p2;
wire   [7:0] shl_ln66_4_fu_1580_p2;
wire   [7:0] shl_ln66_5_fu_1591_p2;
wire   [0:0] trunc_ln818_fu_1614_p1;
wire   [7:0] select_ln818_1_fu_1626_p3;
wire   [7:0] select_ln818_fu_1618_p3;
wire   [7:0] xor_ln818_fu_1632_p2;
wire   [7:0] select_ln819_fu_1652_p3;
wire   [7:0] select_ln819_1_fu_1660_p3;
wire   [7:0] xor_ln819_1_fu_1672_p2;
wire   [7:0] select_ln820_fu_1683_p3;
wire   [7:0] select_ln820_1_fu_1691_p3;
wire   [5:0] zext_ln66_fu_1729_p1;
wire   [5:0] zext_ln66_3_fu_1733_p1;
wire   [0:0] grp_fu_810_p2;
wire   [5:0] sub_ln66_fu_1747_p2;
wire   [5:0] sub_ln66_1_fu_1759_p2;
reg   [31:0] tmp_39_fu_1737_p4;
wire   [5:0] xor_ln66_6_fu_1753_p2;
wire   [5:0] select_ln66_1_fu_1765_p3;
wire   [5:0] select_ln66_3_fu_1781_p3;
wire   [5:0] sub_ln66_2_fu_1789_p2;
wire   [31:0] select_ln66_2_fu_1773_p3;
wire   [31:0] zext_ln66_4_fu_1795_p1;
wire   [31:0] zext_ln66_5_fu_1799_p1;
wire   [31:0] lshr_ln66_fu_1803_p2;
wire   [31:0] lshr_ln66_1_fu_1809_p2;
wire   [31:0] and_ln66_4_fu_1815_p2;
wire   [7:0] trunc_ln66_fu_1821_p1;
wire   [7:0] and_ln66_fu_1825_p2;
wire   [5:0] zext_ln66_6_fu_1835_p1;
wire   [5:0] zext_ln66_7_fu_1838_p1;
wire   [5:0] xor_ln66_7_fu_1844_p2;
wire   [5:0] select_ln66_4_fu_1850_p3;
wire   [5:0] select_ln66_6_fu_1866_p3;
wire   [5:0] select_ln66_5_fu_1858_p3;
wire   [5:0] xor_ln66_8_fu_1874_p2;
wire   [31:0] zext_ln66_8_fu_1841_p1;
wire   [31:0] zext_ln66_9_fu_1880_p1;
wire   [31:0] shl_ln66_9_fu_1892_p2;
reg   [31:0] tmp_40_fu_1898_p4;
wire   [31:0] zext_ln66_10_fu_1884_p1;
wire   [31:0] zext_ln66_11_fu_1888_p1;
wire   [31:0] shl_ln66_10_fu_1916_p2;
wire   [31:0] lshr_ln66_2_fu_1922_p2;
wire   [31:0] select_ln66_7_fu_1908_p3;
wire   [31:0] and_ln66_5_fu_1928_p2;
wire   [3:0] zext_ln66_12_fu_1941_p1;
wire   [5:0] zext_ln66_13_fu_1955_p1;
wire   [0:0] icmp_ln66_2_fu_1951_p2;
wire   [5:0] zext_ln66_14_fu_1958_p1;
wire   [5:0] xor_ln66_9_fu_1964_p2;
wire   [5:0] select_ln66_8_fu_1970_p3;
wire   [5:0] select_ln66_10_fu_1986_p3;
wire   [5:0] select_ln66_9_fu_1978_p3;
wire   [5:0] xor_ln66_10_fu_1994_p2;
wire   [31:0] zext_ln66_15_fu_1961_p1;
wire   [31:0] zext_ln66_16_fu_2000_p1;
wire   [31:0] shl_ln66_12_fu_2012_p2;
reg   [31:0] tmp_41_fu_2018_p4;
wire   [31:0] zext_ln66_17_fu_2004_p1;
wire   [31:0] zext_ln66_18_fu_2008_p1;
wire   [31:0] shl_ln66_13_fu_2036_p2;
wire   [31:0] lshr_ln66_3_fu_2042_p2;
wire   [31:0] and_ln66_7_fu_2048_p2;
wire   [31:0] xor_ln66_11_fu_2054_p2;
wire   [31:0] select_ln66_11_fu_2028_p3;
wire   [31:0] and_ln66_8_fu_2060_p2;
wire   [31:0] and_ln66_9_fu_2065_p2;
wire   [5:0] zext_ln66_19_fu_2092_p1;
wire   [5:0] zext_ln66_20_fu_2096_p1;
wire   [0:0] grp_fu_814_p2;
wire   [5:0] sub_ln66_3_fu_2110_p2;
wire   [5:0] sub_ln66_4_fu_2122_p2;
reg   [31:0] tmp_43_fu_2100_p4;
wire   [5:0] xor_ln66_12_fu_2116_p2;
wire   [5:0] select_ln66_12_fu_2128_p3;
wire   [5:0] select_ln66_14_fu_2144_p3;
wire   [31:0] select_ln66_13_fu_2136_p3;
wire   [31:0] zext_ln66_21_fu_2158_p1;
wire   [31:0] zext_ln66_22_fu_2168_p1;
wire   [31:0] lshr_ln66_5_fu_2171_p2;
wire   [31:0] and_ln66_10_fu_2177_p2;
wire   [7:0] trunc_ln66_1_fu_2182_p1;
wire   [7:0] and_ln66_2_fu_2186_p2;
wire   [5:0] zext_ln66_23_fu_2196_p1;
wire   [5:0] zext_ln66_24_fu_2199_p1;
wire   [5:0] xor_ln66_13_fu_2205_p2;
wire   [5:0] select_ln66_15_fu_2211_p3;
wire   [5:0] select_ln66_17_fu_2227_p3;
wire   [5:0] select_ln66_16_fu_2219_p3;
wire   [5:0] xor_ln66_14_fu_2235_p2;
wire   [31:0] zext_ln66_25_fu_2202_p1;
wire   [31:0] zext_ln66_26_fu_2241_p1;
wire   [31:0] shl_ln66_14_fu_2253_p2;
reg   [31:0] tmp_44_fu_2259_p4;
wire   [31:0] zext_ln66_27_fu_2245_p1;
wire   [31:0] zext_ln66_28_fu_2249_p1;
wire   [31:0] shl_ln66_15_fu_2277_p2;
wire   [31:0] lshr_ln66_6_fu_2283_p2;
wire   [31:0] and_ln66_11_fu_2289_p2;
wire   [31:0] xor_ln66_15_fu_2295_p2;
wire   [31:0] select_ln66_18_fu_2269_p3;
wire   [31:0] and_ln66_12_fu_2301_p2;
wire   [31:0] and_ln66_13_fu_2306_p2;
wire   [5:0] zext_ln66_29_fu_2334_p1;
wire   [5:0] zext_ln66_30_fu_2338_p1;
wire   [0:0] grp_fu_818_p2;
wire   [5:0] sub_ln66_6_fu_2352_p2;
wire   [5:0] sub_ln66_7_fu_2364_p2;
reg   [31:0] tmp_46_fu_2342_p4;
wire   [5:0] xor_ln66_16_fu_2358_p2;
wire   [5:0] select_ln66_19_fu_2370_p3;
wire   [5:0] select_ln66_21_fu_2386_p3;
wire   [31:0] select_ln66_20_fu_2378_p3;
wire   [31:0] zext_ln66_31_fu_2400_p1;
wire   [31:0] zext_ln66_32_fu_2414_p1;
wire   [31:0] lshr_ln66_8_fu_2417_p2;
wire   [31:0] and_ln66_14_fu_2423_p2;
wire   [7:0] xor_ln820_1_fu_2410_p2;
wire   [7:0] trunc_ln66_2_fu_2428_p1;
wire   [7:0] and_ln66_3_fu_2437_p2;
wire   [7:0] shl_ln66_8_fu_2432_p2;
wire   [7:0] or_ln66_3_fu_2442_p2;
wire   [5:0] zext_ln66_33_fu_2448_p1;
wire   [5:0] zext_ln66_34_fu_2451_p1;
wire   [5:0] xor_ln66_17_fu_2458_p2;
wire   [5:0] select_ln66_22_fu_2464_p3;
wire   [5:0] select_ln66_24_fu_2480_p3;
wire   [5:0] select_ln66_23_fu_2472_p3;
wire   [5:0] xor_ln66_18_fu_2488_p2;
wire   [31:0] zext_ln66_35_fu_2454_p1;
wire   [31:0] zext_ln66_36_fu_2494_p1;
wire   [31:0] shl_ln66_16_fu_2506_p2;
reg   [31:0] tmp_47_fu_2512_p4;
wire   [31:0] zext_ln66_37_fu_2498_p1;
wire   [31:0] zext_ln66_38_fu_2502_p1;
wire   [31:0] shl_ln66_17_fu_2530_p2;
wire   [31:0] lshr_ln66_9_fu_2536_p2;
wire   [31:0] and_ln66_15_fu_2542_p2;
wire   [31:0] xor_ln66_19_fu_2548_p2;
wire   [31:0] select_ln66_25_fu_2522_p3;
wire   [31:0] and_ln66_16_fu_2554_p2;
wire   [31:0] and_ln66_17_fu_2559_p2;
wire   [6:0] shl_ln5_fu_2572_p3;
wire   [6:0] shl_ln4_fu_2586_p3;
wire   [2:0] xor_ln109_3_fu_2616_p2;
wire  signed [3:0] sext_ln109_fu_2622_p1;
wire   [6:0] zext_ln109_5_fu_2612_p1;
wire   [6:0] add_ln109_1_fu_2631_p2;
wire   [3:0] or_ln_fu_2657_p3;
wire   [6:0] zext_ln109_fu_2653_p1;
wire   [6:0] add_ln109_fu_2670_p2;
wire   [3:0] select_ln109_3_fu_2722_p3;
wire   [3:0] zext_ln109_13_fu_2729_p1;
wire   [3:0] add_ln109_6_fu_2733_p2;
wire   [3:0] add_ln109_7_fu_2739_p2;
wire   [2:0] add_ln109_8_fu_2750_p2;
wire   [2:0] add_ln109_9_fu_2755_p2;
wire   [4:0] add_ln933_1_fu_2778_p2;
wire   [10:0] zext_ln933_fu_2789_p1;
wire   [10:0] add_ln933_fu_2793_p2;
wire   [10:0] zext_ln936_fu_2815_p1;
wire   [4:0] add_ln936_1_fu_2824_p2;
reg   [42:0] ap_NS_fsm;
reg    ap_condition_215;
reg    ap_condition_452;

// power-on initialization
initial begin
#0 ap_CS_fsm = 43'd1;
#0 grp_matrix_mul_fu_692_ap_start_reg = 1'b0;
#0 grp_matrix_mul_1_fu_709_ap_start_reg = 1'b0;
#0 grp_mpc_AND_verify_2_fu_721_ap_start_reg = 1'b0;
end

mpc_LowMC_verify_ibs #(
    .DataWidth( 32 ),
    .AddressRange( 80 ),
    .AddressWidth( 7 ))
temp_matrix3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(temp_matrix3_address0),
    .ce0(temp_matrix3_ce0),
    .q0(temp_matrix3_q0)
);

matrix_mul grp_matrix_mul_fu_692(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_matrix_mul_fu_692_ap_start),
    .ap_done(grp_matrix_mul_fu_692_ap_done),
    .ap_idle(grp_matrix_mul_fu_692_ap_idle),
    .ap_ready(grp_matrix_mul_fu_692_ap_ready),
    .output_r_address0(grp_matrix_mul_fu_692_output_r_address0),
    .output_r_ce0(grp_matrix_mul_fu_692_output_r_ce0),
    .output_r_we0(grp_matrix_mul_fu_692_output_r_we0),
    .output_r_d0(grp_matrix_mul_fu_692_output_r_d0),
    .output_offset(grp_matrix_mul_fu_692_output_offset),
    .state_address0(grp_matrix_mul_fu_692_state_address0),
    .state_ce0(grp_matrix_mul_fu_692_state_ce0),
    .state_q0(grp_matrix_mul_fu_692_state_q0),
    .state_offset(view1_inputShare_offset),
    .matrix_offset(grp_matrix_mul_fu_692_matrix_offset)
);

matrix_mul_1 grp_matrix_mul_1_fu_709(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_matrix_mul_1_fu_709_ap_start),
    .ap_done(grp_matrix_mul_1_fu_709_ap_done),
    .ap_idle(grp_matrix_mul_1_fu_709_ap_idle),
    .ap_ready(grp_matrix_mul_1_fu_709_ap_ready),
    .output_r_address0(grp_matrix_mul_1_fu_709_output_r_address0),
    .output_r_ce0(grp_matrix_mul_1_fu_709_output_r_ce0),
    .output_r_we0(grp_matrix_mul_1_fu_709_output_r_we0),
    .output_r_d0(grp_matrix_mul_1_fu_709_output_r_d0),
    .output_r_q0(tmp_q0),
    .state_offset(grp_matrix_mul_1_fu_709_state_offset),
    .matrix_offset(add_ln919_reg_3009)
);

mpc_AND_verify_2 grp_mpc_AND_verify_2_fu_721(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_mpc_AND_verify_2_fu_721_ap_start),
    .ap_done(grp_mpc_AND_verify_2_fu_721_ap_done),
    .ap_idle(grp_mpc_AND_verify_2_fu_721_ap_idle),
    .ap_ready(grp_mpc_AND_verify_2_fu_721_ap_ready),
    .in1_0_read(grp_mpc_AND_verify_2_fu_721_in1_0_read),
    .in1_1_read(grp_mpc_AND_verify_2_fu_721_in1_1_read),
    .in2_0_read(grp_mpc_AND_verify_2_fu_721_in2_0_read),
    .in2_1_read(grp_mpc_AND_verify_2_fu_721_in2_1_read),
    .rand_0_tape_address0(grp_mpc_AND_verify_2_fu_721_rand_0_tape_address0),
    .rand_0_tape_ce0(grp_mpc_AND_verify_2_fu_721_rand_0_tape_ce0),
    .rand_0_tape_q0(tapes_0_tape_q0),
    .rand_0_tape_address1(grp_mpc_AND_verify_2_fu_721_rand_0_tape_address1),
    .rand_0_tape_ce1(grp_mpc_AND_verify_2_fu_721_rand_0_tape_ce1),
    .rand_0_tape_q1(tapes_0_tape_q1),
    .rand_0_pos_read(grp_mpc_AND_verify_2_fu_721_rand_0_pos_read),
    .view1_communicatedBi_address0(grp_mpc_AND_verify_2_fu_721_view1_communicatedBi_address0),
    .view1_communicatedBi_ce0(grp_mpc_AND_verify_2_fu_721_view1_communicatedBi_ce0),
    .view1_communicatedBi_we0(grp_mpc_AND_verify_2_fu_721_view1_communicatedBi_we0),
    .view1_communicatedBi_d0(grp_mpc_AND_verify_2_fu_721_view1_communicatedBi_d0),
    .view1_communicatedBi_q0(view1_communicatedBi_q0),
    .view1_communicatedBits_offset(view1_inputShare_offset),
    .view2_communicatedBi_address0(grp_mpc_AND_verify_2_fu_721_view2_communicatedBi_address0),
    .view2_communicatedBi_ce0(grp_mpc_AND_verify_2_fu_721_view2_communicatedBi_ce0),
    .view2_communicatedBi_q0(view2_communicatedBi_q0),
    .view2_communicatedBits_offset(view1_inputShare_offset),
    .ap_return_0(grp_mpc_AND_verify_2_fu_721_ap_return_0),
    .ap_return_1(grp_mpc_AND_verify_2_fu_721_ap_return_1),
    .ap_return_2(grp_mpc_AND_verify_2_fu_721_ap_return_2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_matrix_mul_1_fu_709_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state32) | ((1'b1 == ap_CS_fsm_state17) & (icmp_ln797_fu_1057_p2 == 1'd0)))) begin
            grp_matrix_mul_1_fu_709_ap_start_reg <= 1'b1;
        end else if ((grp_matrix_mul_1_fu_709_ap_ready == 1'b1)) begin
            grp_matrix_mul_1_fu_709_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_matrix_mul_fu_692_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state8) | ((1'b1 == ap_CS_fsm_state13) & (icmp_ln913_fu_1038_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state4) & ((((icmp_ln108_1_fu_923_p2 == 1'd1) & (icmp_ln266_reg_2874 == 1'd1)) | ((icmp_ln108_3_fu_891_p2 == 1'd1) & (icmp_ln266_reg_2874 == 1'd0))) | ((icmp_ln269_reg_2878 == 1'd0) & (icmp_ln266_reg_2874 == 1'd0)))))) begin
            grp_matrix_mul_fu_692_ap_start_reg <= 1'b1;
        end else if ((grp_matrix_mul_fu_692_ap_ready == 1'b1)) begin
            grp_matrix_mul_fu_692_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_mpc_AND_verify_2_fu_721_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21) | ((1'b1 == ap_CS_fsm_state18) & (icmp_ln803_fu_1111_p2 == 1'd1)))) begin
            grp_mpc_AND_verify_2_fu_721_ap_start_reg <= 1'b1;
        end else if ((grp_mpc_AND_verify_2_fu_721_ap_ready == 1'b1)) begin
            grp_mpc_AND_verify_2_fu_721_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        a_0_1_i_reg_591 <= a_1_2_fu_1276_p3;
    end else if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln797_fu_1057_p2 == 1'd1))) begin
        a_0_1_i_reg_591 <= a_0_01_i_reg_507;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        a_1_1_i_reg_579 <= a_1_1_fu_1269_p3;
    end else if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln797_fu_1057_p2 == 1'd1))) begin
        a_1_1_i_reg_579 <= a_1_02_i_reg_495;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        b_0_1_i_reg_567 <= b_1_2_fu_1419_p3;
    end else if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln797_fu_1057_p2 == 1'd1))) begin
        b_0_1_i_reg_567 <= b_0_03_i_reg_483;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        b_1_1_i_reg_555 <= b_1_1_fu_1412_p3;
    end else if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln797_fu_1057_p2 == 1'd1))) begin
        b_1_1_i_reg_555 <= b_1_04_i_reg_471;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) & (icmp_ln817_fu_1602_p2 == 1'd1))) begin
        bitNumber_assign_3_i_reg_519 <= add_ln797_fu_1703_p2;
    end else if (((grp_matrix_mul_fu_692_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
        bitNumber_assign_3_i_reg_519 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        c_0_1_i_reg_543 <= c_1_2_fu_1562_p3;
    end else if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln797_fu_1057_p2 == 1'd1))) begin
        c_0_1_i_reg_543 <= c_0_05_i_reg_459;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        c_1_1_i_reg_531 <= c_1_1_fu_1555_p3;
    end else if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln797_fu_1057_p2 == 1'd1))) begin
        c_1_1_i_reg_531 <= c_1_06_i_reg_447;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state38) & (icmp_ln108_5_fu_2710_p2 == 1'd1))) begin
        i_0_i14_reg_647 <= i_16_reg_3309;
    end else if (((1'b1 == ap_CS_fsm_state34) & ((((icmp_ln108_fu_2641_p2 == 1'd1) & (icmp_ln266_reg_2874 == 1'd1)) | ((icmp_ln108_2_fu_2600_p2 == 1'd1) & (icmp_ln266_reg_2874 == 1'd0))) | ((icmp_ln925_reg_2943 == 1'd0) & (icmp_ln266_reg_2874 == 1'd0))))) begin
        i_0_i14_reg_647 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        i_0_i1_reg_625 <= i_15_reg_3271;
    end else if (((grp_matrix_mul_1_fu_709_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state33) & (icmp_ln925_reg_2943 == 1'd1) & (icmp_ln266_reg_2874 == 1'd0))) begin
        i_0_i1_reg_625 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln108_4_fu_982_p2 == 1'd1))) begin
        i_0_i2_reg_413 <= i_13_reg_2921;
    end else if (((grp_matrix_mul_fu_692_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        i_0_i2_reg_413 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (grp_fu_750_p2 == 1'd1) & (icmp_ln901_fu_863_p2 == 1'd1) & (icmp_ln266_fu_886_p2 == 1'd0))) begin
        i_0_i8_i_reg_391 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        i_0_i8_i_reg_391 <= i_12_reg_2885;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        i_0_i_i24_reg_658 <= i_17_reg_3332;
    end else if (((1'b1 == ap_CS_fsm_state37) & (icmp_ln252_1_fu_2680_p2 == 1'd0))) begin
        i_0_i_i24_reg_658 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        i_0_i_i4_reg_424 <= i_14_reg_2950;
    end else if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln252_fu_953_p2 == 1'd0))) begin
        i_0_i_i4_reg_424 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln901_fu_863_p2 == 1'd1) & (icmp_ln266_fu_886_p2 == 1'd1))) begin
        i_0_i_i_reg_402 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        i_0_i_i_reg_402 <= i_6_reg_2903;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        i_0_i_reg_636 <= i_reg_3290;
    end else if (((grp_matrix_mul_1_fu_709_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state33) & (icmp_ln266_reg_2874 == 1'd1))) begin
        i_0_i_reg_636 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        j_0_i_reg_603 <= j_reg_3017;
    end else if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln797_fu_1057_p2 == 1'd1))) begin
        j_0_i_reg_603 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        j_1_i_reg_614 <= j_4_reg_3120;
    end else if (((1'b1 == ap_CS_fsm_state24) & (grp_mpc_AND_verify_2_fu_721_ap_done == 1'b1))) begin
        j_1_i_reg_614 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln896_fu_846_p2 == 1'd0))) begin
        loop_0_reg_369 <= loop_fu_852_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        loop_0_reg_369 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln896_fu_846_p2 == 1'd1))) begin
        loop_1_reg_380 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln901_fu_863_p2 == 1'd0))) begin
        loop_1_reg_380 <= loop_29_fu_869_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln913_fu_1038_p2 == 1'd1))) begin
        loop_2_reg_669 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        loop_2_reg_669 <= loop_30_reg_3350;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state40) & (icmp_ln932_fu_2766_p2 == 1'd1))) begin
        loop_3_reg_681 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        loop_3_reg_681 <= loop_31_reg_3363;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state37) & (icmp_ln252_1_fu_2680_p2 == 1'd1))) begin
        r_0_reg_435 <= r_fu_2704_p2;
    end else if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln252_fu_953_p2 == 1'd1))) begin
        r_0_reg_435 <= 5'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) & (icmp_ln817_fu_1602_p2 == 1'd1))) begin
        tapes_pos_0_0_fu_164 <= reg_829;
    end else if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln252_fu_953_p2 == 1'd1))) begin
        tapes_pos_0_0_fu_164 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) & (icmp_ln817_fu_1602_p2 == 1'd1))) begin
        a_0_01_i_reg_507 <= a_0_1_i_reg_591;
        a_1_02_i_reg_495 <= a_1_1_i_reg_579;
        b_0_03_i_reg_483 <= b_0_1_i_reg_567;
        b_1_04_i_reg_471 <= b_1_1_i_reg_555;
        c_0_05_i_reg_459 <= c_0_1_i_reg_543;
        c_1_06_i_reg_447 <= c_1_1_i_reg_531;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (grp_mpc_AND_verify_2_fu_721_ap_done == 1'b1))) begin
        ab_0_reg_3072 <= grp_mpc_AND_verify_2_fu_721_ap_return_1;
        ab_1_reg_3077 <= grp_mpc_AND_verify_2_fu_721_ap_return_2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln797_fu_1057_p2 == 1'd1))) begin
        add_ln804_reg_2978 <= add_ln804_fu_1063_p2;
        add_ln805_reg_2983 <= add_ln805_fu_1069_p2;
        zext_ln54_3_reg_2995[2 : 0] <= zext_ln54_3_fu_1091_p1[2 : 0];
        zext_ln54_4_reg_3002[2 : 0] <= zext_ln54_4_fu_1101_p1[2 : 0];
        zext_ln54_reg_2988[2 : 0] <= zext_ln54_fu_1081_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln797_fu_1057_p2 == 1'd0))) begin
        add_ln919_reg_3009[13 : 9] <= add_ln919_fu_1105_p2[13 : 9];
    end
end

always @ (posedge ap_clk) begin
    if (((grp_matrix_mul_1_fu_709_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state33) & (icmp_ln266_reg_2874 == 1'd1))) begin
        add_ln923_reg_3263[6 : 2] <= add_ln923_fu_2594_p2[6 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((grp_matrix_mul_1_fu_709_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state33) & (icmp_ln925_reg_2943 == 1'd1) & (icmp_ln266_reg_2874 == 1'd0))) begin
        add_ln926_reg_3258[6 : 2] <= add_ln926_fu_2580_p2[6 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state42) & (icmp_ln935_fu_2803_p2 == 1'd0))) begin
        add_ln936_reg_3368 <= add_ln936_fu_2819_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) & (grp_mpc_AND_verify_2_fu_721_ap_done == 1'b1))) begin
        bc_0_reg_3082 <= grp_mpc_AND_verify_2_fu_721_ap_return_1;
        bc_1_reg_3087 <= grp_mpc_AND_verify_2_fu_721_ap_return_2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state24) & (grp_mpc_AND_verify_2_fu_721_ap_done == 1'b1))) begin
        ca_0_reg_3092 <= grp_mpc_AND_verify_2_fu_721_ap_return_1;
        ca_1_reg_3097 <= grp_mpc_AND_verify_2_fu_721_ap_return_2;
        xor_ln66_4_reg_3107 <= xor_ln66_4_fu_1585_p2;
        xor_ln66_5_reg_3112 <= xor_ln66_5_fu_1596_p2;
        xor_ln66_reg_3102 <= xor_ln66_fu_1574_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        cast_offset3_reg_3172[4 : 3] <= cast_offset3_fu_1714_p3[4 : 3];
        ldvalue424_reg_3180 <= tmp_q1;
        or_ln66_4_reg_3185[4 : 3] <= or_ln66_4_fu_1722_p2[4 : 3];
        or_ln66_reg_3193 <= or_ln66_fu_1830_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        cast_offset4_reg_3204[4 : 3] <= cast_offset4_fu_2077_p3[4 : 3];
        lshr_ln66_4_reg_3221 <= lshr_ln66_4_fu_2162_p2;
        or_ln66_5_reg_3199 <= or_ln66_5_fu_2071_p2;
        or_ln66_6_reg_3210[4 : 3] <= or_ln66_6_fu_2085_p2[4 : 3];
        sub_ln66_5_reg_3216[5 : 1] <= sub_ln66_5_fu_2152_p2[5 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        cast_offset5_reg_3236[4 : 3] <= cast_offset5_fu_2319_p3[4 : 3];
        lshr_ln66_7_reg_3253 <= lshr_ln66_7_fu_2404_p2;
        or_ln66_7_reg_3231 <= or_ln66_7_fu_2312_p2;
        or_ln66_8_reg_3242[4 : 3] <= or_ln66_8_fu_2327_p2[4 : 3];
        sub_ln66_8_reg_3248[5 : 1] <= sub_ln66_8_fu_2394_p2[5 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln269_reg_2878 == 1'd1) & (icmp_ln266_reg_2874 == 1'd0))) begin
        i_12_reg_2885 <= i_12_fu_897_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        i_13_reg_2921 <= i_13_fu_959_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        i_14_reg_2950 <= i_14_fu_988_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state34) & (icmp_ln925_reg_2943 == 1'd1) & (icmp_ln266_reg_2874 == 1'd0))) begin
        i_15_reg_3271 <= i_15_fu_2606_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        i_16_reg_3309 <= i_16_fu_2686_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        i_17_reg_3332 <= i_17_fu_2716_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln266_reg_2874 == 1'd1))) begin
        i_6_reg_2903 <= i_6_fu_929_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state34) & (icmp_ln266_reg_2874 == 1'd1))) begin
        i_reg_3290 <= i_fu_2647_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln901_fu_863_p2 == 1'd1))) begin
        icmp_ln266_reg_2874 <= icmp_ln266_fu_886_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln901_fu_863_p2 == 1'd1) & (icmp_ln266_fu_886_p2 == 1'd0))) begin
        icmp_ln269_reg_2878 <= grp_fu_750_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln252_fu_953_p2 == 1'd1))) begin
        icmp_ln925_reg_2943 <= grp_fu_750_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        j_4_reg_3120 <= j_4_fu_1608_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        j_reg_3017 <= j_fu_1117_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        loop_30_reg_3350 <= loop_30_fu_2772_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        loop_31_reg_3363 <= loop_31_fu_2809_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        or_ln66_2_reg_3226 <= or_ln66_2_fu_2191_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state24) & (grp_mpc_AND_verify_2_fu_721_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state22) & (grp_mpc_AND_verify_2_fu_721_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state20) & (grp_mpc_AND_verify_2_fu_721_ap_done == 1'b1)))) begin
        reg_829 <= grp_mpc_AND_verify_2_fu_721_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state37) & (icmp_ln252_1_fu_2680_p2 == 1'd0))) begin
        select_ln109_2_reg_3319[2] <= select_ln109_2_fu_2696_p3[2];
        trunc_ln253_1_reg_3314 <= trunc_ln253_1_fu_2692_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln252_fu_953_p2 == 1'd0))) begin
        select_ln109_reg_2931[2] <= select_ln109_fu_969_p3[2];
        trunc_ln253_reg_2926 <= trunc_ln253_fu_965_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) & (icmp_ln817_fu_1602_p2 == 1'd0))) begin
        shl_ln66_6_reg_3137 <= shl_ln66_6_fu_1647_p2;
        shl_ln66_7_reg_3152 <= shl_ln66_7_fu_1678_p2;
        tmp_38_reg_3125 <= {{add_ln804_reg_2978[4:3]}};
        tmp_42_reg_3147 <= {{add_ln805_reg_2983[4:3]}};
        tmp_45_reg_3162 <= {{bitNumber_assign_3_i_reg_519[4:3]}};
        tmp_addr_11_reg_3131[2] <= select_ln66_fu_1638_p3[2];
        xor_ln819_reg_3142 <= xor_ln819_fu_1666_p2;
        xor_ln820_reg_3157 <= xor_ln820_fu_1697_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln913_fu_1038_p2 == 1'd0))) begin
        shl_ln_reg_2969[13 : 9] <= shl_ln_fu_1044_p3[13 : 9];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state38) & (icmp_ln108_5_fu_2710_p2 == 1'd0))) begin
        tmp_addr_12_reg_3337[3 : 0] <= zext_ln109_14_fu_2745_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state34) & (icmp_ln108_fu_2641_p2 == 1'd0) & (icmp_ln266_reg_2874 == 1'd1))) begin
        tmp_addr_2_reg_3295[2 : 0] <= zext_ln109_3_fu_2665_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state34) & (icmp_ln108_2_fu_2600_p2 == 1'd0) & (icmp_ln925_reg_2943 == 1'd1) & (icmp_ln266_reg_2874 == 1'd0))) begin
        tmp_addr_3_reg_3276[3 : 0] <= zext_ln109_6_fu_2626_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln108_1_fu_923_p2 == 1'd0) & (icmp_ln266_reg_2874 == 1'd1))) begin
        tmp_addr_4_reg_2908[2 : 0] <= zext_ln109_8_fu_948_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln108_3_fu_891_p2 == 1'd0) & (icmp_ln269_reg_2878 == 1'd1) & (icmp_ln266_reg_2874 == 1'd0))) begin
        tmp_addr_5_reg_2890[3 : 0] <= zext_ln109_9_fu_918_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln108_4_fu_982_p2 == 1'd0))) begin
        tmp_addr_6_reg_2955[3 : 0] <= zext_ln109_11_fu_1017_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (icmp_ln803_fu_1111_p2 == 1'd0))) begin
        trunc_ln804_reg_3022 <= trunc_ln804_fu_1123_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        zext_ln933_1_cast_reg_2852[9 : 2] <= zext_ln933_1_cast_fu_842_p1[9 : 2];
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state42) & (icmp_ln935_fu_2803_p2 == 1'd1)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state42) & (icmp_ln935_fu_2803_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_810_p0 = cast_offset3_reg_3172;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_810_p0 = cast_offset3_fu_1714_p3;
    end else begin
        grp_fu_810_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_810_p1 = or_ln66_4_reg_3185;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_810_p1 = or_ln66_4_fu_1722_p2;
    end else begin
        grp_fu_810_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_814_p0 = cast_offset4_reg_3204;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_814_p0 = cast_offset4_fu_2077_p3;
    end else begin
        grp_fu_814_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_814_p1 = or_ln66_6_reg_3210;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_814_p1 = or_ln66_6_fu_2085_p2;
    end else begin
        grp_fu_814_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_fu_818_p0 = cast_offset5_reg_3236;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_818_p0 = cast_offset5_fu_2319_p3;
    end else begin
        grp_fu_818_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_fu_818_p1 = or_ln66_8_reg_3242;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_818_p1 = or_ln66_8_fu_2327_p2;
    end else begin
        grp_fu_818_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        grp_matrix_mul_1_fu_709_state_offset = 5'd12;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_matrix_mul_1_fu_709_state_offset = 5'd8;
    end else begin
        grp_matrix_mul_1_fu_709_state_offset = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_matrix_mul_fu_692_matrix_offset = shl_ln_reg_2969;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_matrix_mul_fu_692_matrix_offset = 14'd0;
    end else begin
        grp_matrix_mul_fu_692_matrix_offset = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_matrix_mul_fu_692_output_offset = 5'd4;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state7))) begin
        grp_matrix_mul_fu_692_output_offset = 5'd0;
    end else begin
        grp_matrix_mul_fu_692_output_offset = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_matrix_mul_fu_692_state_q0 = view2_inputShare_q0;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state7))) begin
        grp_matrix_mul_fu_692_state_q0 = view1_inputShare_q0;
    end else begin
        grp_matrix_mul_fu_692_state_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_mpc_AND_verify_2_fu_721_in1_0_read = c_0_1_i_reg_543;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_mpc_AND_verify_2_fu_721_in1_0_read = b_0_1_i_reg_567;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_mpc_AND_verify_2_fu_721_in1_0_read = a_0_1_i_reg_591;
    end else begin
        grp_mpc_AND_verify_2_fu_721_in1_0_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_mpc_AND_verify_2_fu_721_in1_1_read = c_1_1_i_reg_531;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_mpc_AND_verify_2_fu_721_in1_1_read = b_1_1_i_reg_555;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_mpc_AND_verify_2_fu_721_in1_1_read = a_1_1_i_reg_579;
    end else begin
        grp_mpc_AND_verify_2_fu_721_in1_1_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_mpc_AND_verify_2_fu_721_in2_0_read = a_0_1_i_reg_591;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_mpc_AND_verify_2_fu_721_in2_0_read = c_0_1_i_reg_543;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_mpc_AND_verify_2_fu_721_in2_0_read = b_0_1_i_reg_567;
    end else begin
        grp_mpc_AND_verify_2_fu_721_in2_0_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_mpc_AND_verify_2_fu_721_in2_1_read = a_1_1_i_reg_579;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_mpc_AND_verify_2_fu_721_in2_1_read = c_1_1_i_reg_531;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_mpc_AND_verify_2_fu_721_in2_1_read = b_1_1_i_reg_555;
    end else begin
        grp_mpc_AND_verify_2_fu_721_in2_1_read = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state22))) begin
        grp_mpc_AND_verify_2_fu_721_rand_0_pos_read = reg_829;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_mpc_AND_verify_2_fu_721_rand_0_pos_read = tapes_pos_0_0_fu_164;
    end else begin
        grp_mpc_AND_verify_2_fu_721_rand_0_pos_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        if (((icmp_ln108_1_fu_923_p2 == 1'd0) & (icmp_ln266_reg_2874 == 1'd1))) begin
            plaintext_address0 = zext_ln109_1_fu_935_p1;
        end else if ((1'b1 == ap_condition_215)) begin
            plaintext_address0 = zext_ln109_2_fu_903_p1;
        end else begin
            plaintext_address0 = 'bx;
        end
    end else begin
        plaintext_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state4) & (icmp_ln108_1_fu_923_p2 == 1'd0) & (icmp_ln266_reg_2874 == 1'd1)) | ((1'b1 == ap_CS_fsm_state4) & (icmp_ln108_3_fu_891_p2 == 1'd0) & (icmp_ln269_reg_2878 == 1'd1) & (icmp_ln266_reg_2874 == 1'd0)))) begin
        plaintext_ce0 = 1'b1;
    end else begin
        plaintext_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20))) begin
        tapes_0_tape_ce0 = grp_mpc_AND_verify_2_fu_721_rand_0_tape_ce0;
    end else begin
        tapes_0_tape_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20))) begin
        tapes_0_tape_ce1 = grp_mpc_AND_verify_2_fu_721_rand_0_tape_ce1;
    end else begin
        tapes_0_tape_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        if (((icmp_ln108_fu_2641_p2 == 1'd0) & (icmp_ln266_reg_2874 == 1'd1))) begin
            temp_matrix3_address0 = zext_ln109_4_fu_2675_p1;
        end else if ((1'b1 == ap_condition_452)) begin
            temp_matrix3_address0 = zext_ln109_7_fu_2636_p1;
        end else begin
            temp_matrix3_address0 = 'bx;
        end
    end else begin
        temp_matrix3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state34) & (icmp_ln108_fu_2641_p2 == 1'd0) & (icmp_ln266_reg_2874 == 1'd1)) | ((1'b1 == ap_CS_fsm_state34) & (icmp_ln108_2_fu_2600_p2 == 1'd0) & (icmp_ln925_reg_2943 == 1'd1) & (icmp_ln266_reg_2874 == 1'd0)))) begin
        temp_matrix3_ce0 = 1'b1;
    end else begin
        temp_matrix3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        tmp_address0 = zext_ln936_2_fu_2830_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        tmp_address0 = tmp_addr_12_reg_3337;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        tmp_address0 = zext_ln109_14_fu_2745_p1;
    end else if (((1'b1 == ap_CS_fsm_state34) & (icmp_ln108_fu_2641_p2 == 1'd0) & (icmp_ln266_reg_2874 == 1'd1))) begin
        tmp_address0 = zext_ln109_3_fu_2665_p1;
    end else if (((1'b1 == ap_CS_fsm_state34) & (icmp_ln108_2_fu_2600_p2 == 1'd0) & (icmp_ln925_reg_2943 == 1'd1) & (icmp_ln266_reg_2874 == 1'd0))) begin
        tmp_address0 = zext_ln109_6_fu_2626_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        tmp_address0 = zext_ln109_11_fu_1017_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        tmp_address0 = tmp_addr_4_reg_2908;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_address0 = tmp_addr_5_reg_2890;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln108_1_fu_923_p2 == 1'd0) & (icmp_ln266_reg_2874 == 1'd1))) begin
        tmp_address0 = zext_ln109_8_fu_948_p1;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln108_3_fu_891_p2 == 1'd0) & (icmp_ln269_reg_2878 == 1'd1) & (icmp_ln266_reg_2874 == 1'd0))) begin
        tmp_address0 = zext_ln109_9_fu_918_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_address0 = zext_ln902_fu_881_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_address0 = zext_ln897_fu_858_p1;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state33))) begin
        tmp_address0 = grp_matrix_mul_1_fu_709_output_r_address0;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state9))) begin
        tmp_address0 = grp_matrix_mul_fu_692_output_r_address0;
    end else begin
        tmp_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        tmp_address1 = zext_ln933_2_fu_2784_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        tmp_address1 = zext_ln109_15_fu_2761_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        tmp_address1 = tmp_addr_2_reg_3295;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        tmp_address1 = tmp_addr_3_reg_3276;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state27))) begin
        tmp_address1 = tmp_addr_11_reg_3131;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        tmp_address1 = select_ln66_fu_1638_p3;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        tmp_address1 = select_ln54_fu_1127_p3;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_address1 = tmp_addr_6_reg_2955;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        tmp_address1 = zext_ln109_12_fu_1033_p1;
    end else begin
        tmp_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state34) & (icmp_ln108_fu_2641_p2 == 1'd0) & (icmp_ln266_reg_2874 == 1'd1)) | ((1'b1 == ap_CS_fsm_state34) & (icmp_ln108_2_fu_2600_p2 == 1'd0) & (icmp_ln925_reg_2943 == 1'd1) & (icmp_ln266_reg_2874 == 1'd0)) | ((1'b1 == ap_CS_fsm_state4) & (icmp_ln108_1_fu_923_p2 == 1'd0) & (icmp_ln266_reg_2874 == 1'd1)) | ((1'b1 == ap_CS_fsm_state4) & (icmp_ln108_3_fu_891_p2 == 1'd0) & (icmp_ln269_reg_2878 == 1'd1) & (icmp_ln266_reg_2874 == 1'd0)))) begin
        tmp_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state33))) begin
        tmp_ce0 = grp_matrix_mul_1_fu_709_output_r_ce0;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state9))) begin
        tmp_ce0 = grp_matrix_mul_fu_692_output_r_ce0;
    end else begin
        tmp_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state11))) begin
        tmp_ce1 = 1'b1;
    end else begin
        tmp_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        tmp_d0 = grp_fu_762_p2;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        tmp_d0 = grp_fu_755_p2;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        tmp_d0 = 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state33))) begin
        tmp_d0 = grp_matrix_mul_1_fu_709_output_r_d0;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state9))) begin
        tmp_d0 = grp_matrix_mul_fu_692_output_r_d0;
    end else begin
        tmp_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35))) begin
        tmp_d1 = grp_fu_822_p2;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        tmp_d1 = or_ln66_9_fu_2565_p2;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        tmp_d1 = or_ln66_7_fu_2312_p2;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        tmp_d1 = and_ln66_6_fu_1934_p2;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_d1 = grp_fu_762_p2;
    end else begin
        tmp_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | ((1'b1 == ap_CS_fsm_state3) & (icmp_ln901_fu_863_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln896_fu_846_p2 == 1'd0)))) begin
        tmp_we0 = 4'd15;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state33))) begin
        tmp_we0 = grp_matrix_mul_1_fu_709_output_r_we0;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state9))) begin
        tmp_we0 = grp_matrix_mul_fu_692_output_r_we0;
    end else begin
        tmp_we0 = 4'd0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        tmp_we1 = shl_ln66_11_fu_1944_p2;
    end else if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state29))) begin
        tmp_we1 = 4'd15;
    end else begin
        tmp_we1 = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20))) begin
        view1_communicatedBi_ce0 = grp_mpc_AND_verify_2_fu_721_view1_communicatedBi_ce0;
    end else begin
        view1_communicatedBi_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20))) begin
        view1_communicatedBi_we0 = grp_mpc_AND_verify_2_fu_721_view1_communicatedBi_we0;
    end else begin
        view1_communicatedBi_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state7))) begin
        view1_inputShare_ce0 = grp_matrix_mul_fu_692_state_ce0;
    end else begin
        view1_inputShare_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        view1_outputShare_ce0 = 1'b1;
    end else begin
        view1_outputShare_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        view1_outputShare_we0 = 1'b1;
    end else begin
        view1_outputShare_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20))) begin
        view2_communicatedBi_ce0 = grp_mpc_AND_verify_2_fu_721_view2_communicatedBi_ce0;
    end else begin
        view2_communicatedBi_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state9))) begin
        view2_inputShare_ce0 = grp_matrix_mul_fu_692_state_ce0;
    end else begin
        view2_inputShare_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        view2_outputShare_ce0 = 1'b1;
    end else begin
        view2_outputShare_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        view2_outputShare_we0 = 1'b1;
    end else begin
        view2_outputShare_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln896_fu_846_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln901_fu_863_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln108_1_fu_923_p2 == 1'd0) & (icmp_ln266_reg_2874 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else if (((1'b1 == ap_CS_fsm_state4) & ((((icmp_ln108_1_fu_923_p2 == 1'd1) & (icmp_ln266_reg_2874 == 1'd1)) | ((icmp_ln108_3_fu_891_p2 == 1'd1) & (icmp_ln266_reg_2874 == 1'd0))) | ((icmp_ln269_reg_2878 == 1'd0) & (icmp_ln266_reg_2874 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state7 : begin
            if (((grp_matrix_mul_fu_692_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((grp_matrix_mul_fu_692_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln252_fu_953_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln108_4_fu_982_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln913_fu_1038_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((grp_matrix_mul_fu_692_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((grp_matrix_mul_fu_692_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln797_fu_1057_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((1'b1 == ap_CS_fsm_state18) & (icmp_ln803_fu_1111_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state20 : begin
            if (((1'b1 == ap_CS_fsm_state20) & (grp_mpc_AND_verify_2_fu_721_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            if (((1'b1 == ap_CS_fsm_state22) & (grp_mpc_AND_verify_2_fu_721_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            if (((1'b1 == ap_CS_fsm_state24) & (grp_mpc_AND_verify_2_fu_721_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state25 : begin
            if (((1'b1 == ap_CS_fsm_state25) & (icmp_ln817_fu_1602_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state31 : begin
            if (((grp_matrix_mul_1_fu_709_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            if (((grp_matrix_mul_1_fu_709_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state33))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state34 : begin
            if (((1'b1 == ap_CS_fsm_state34) & ((((icmp_ln108_fu_2641_p2 == 1'd1) & (icmp_ln266_reg_2874 == 1'd1)) | ((icmp_ln108_2_fu_2600_p2 == 1'd1) & (icmp_ln266_reg_2874 == 1'd0))) | ((icmp_ln925_reg_2943 == 1'd0) & (icmp_ln266_reg_2874 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else if (((1'b1 == ap_CS_fsm_state34) & (icmp_ln108_fu_2641_p2 == 1'd0) & (icmp_ln266_reg_2874 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state37 : begin
            if (((1'b1 == ap_CS_fsm_state37) & (icmp_ln252_1_fu_2680_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state38 : begin
            if (((1'b1 == ap_CS_fsm_state38) & (icmp_ln108_5_fu_2710_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state40 : begin
            if (((1'b1 == ap_CS_fsm_state40) & (icmp_ln932_fu_2766_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state42 : begin
            if (((1'b1 == ap_CS_fsm_state42) & (icmp_ln935_fu_2803_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_0_fu_1261_p1 = lshr_ln54_fu_1256_p2[0:0];

assign a_1_1_fu_1269_p3 = ((trunc_ln804_reg_3022[0:0] === 1'b1) ? zext_ln54_8_fu_1265_p1 : a_1_1_i_reg_579);

assign a_1_2_fu_1276_p3 = ((trunc_ln804_reg_3022[0:0] === 1'b1) ? a_0_1_i_reg_591 : zext_ln54_8_fu_1265_p1);

assign add_ln109_1_fu_2631_p2 = (zext_ln109_5_fu_2612_p1 + add_ln926_reg_3258);

assign add_ln109_2_fu_1005_p2 = (select_ln109_1_fu_994_p3 + zext_ln109_10_fu_1001_p1);

assign add_ln109_3_fu_1011_p2 = (add_ln109_2_fu_1005_p2 + 4'd5);

assign add_ln109_4_fu_1022_p2 = (select_ln109_reg_2931 + i_0_i_i4_reg_424);

assign add_ln109_5_fu_1027_p2 = ($signed(add_ln109_4_fu_1022_p2) + $signed(3'd5));

assign add_ln109_6_fu_2733_p2 = (select_ln109_3_fu_2722_p3 + zext_ln109_13_fu_2729_p1);

assign add_ln109_7_fu_2739_p2 = (add_ln109_6_fu_2733_p2 + 4'd5);

assign add_ln109_8_fu_2750_p2 = (select_ln109_2_reg_3319 + i_0_i_i24_reg_658);

assign add_ln109_9_fu_2755_p2 = ($signed(add_ln109_8_fu_2750_p2) + $signed(3'd5));

assign add_ln109_fu_2670_p2 = (zext_ln109_fu_2653_p1 + add_ln923_reg_3263);

assign add_ln797_fu_1703_p2 = (bitNumber_assign_3_i_reg_519 + 5'd3);

assign add_ln804_fu_1063_p2 = (bitNumber_assign_3_i_reg_519 + 5'd2);

assign add_ln805_fu_1069_p2 = (bitNumber_assign_3_i_reg_519 + 5'd1);

assign add_ln919_fu_1105_p2 = ($signed(shl_ln_reg_2969) + $signed(14'd15872));

assign add_ln923_fu_2594_p2 = ($signed(shl_ln4_fu_2586_p3) + $signed(7'd124));

assign add_ln926_fu_2580_p2 = ($signed(shl_ln5_fu_2572_p3) + $signed(7'd124));

assign add_ln933_1_fu_2778_p2 = (loop_2_reg_669 + 5'd8);

assign add_ln933_fu_2793_p2 = (zext_ln933_1_cast_reg_2852 + zext_ln933_fu_2789_p1);

assign add_ln936_1_fu_2824_p2 = (loop_3_reg_681 + 5'd12);

assign add_ln936_fu_2819_p2 = (zext_ln933_1_cast_reg_2852 + zext_ln936_fu_2815_p1);

assign and_ln54_1_fu_1389_p2 = (lshr_ln54_9_fu_1383_p2 & lshr_ln54_8_fu_1377_p2);

assign and_ln54_2_fu_1532_p2 = (lshr_ln54_11_fu_1526_p2 & lshr_ln54_10_fu_1520_p2);

assign and_ln54_fu_1246_p2 = (lshr_ln54_7_fu_1240_p2 & lshr_ln54_6_fu_1234_p2);

assign and_ln66_10_fu_2177_p2 = (lshr_ln66_5_fu_2171_p2 & lshr_ln66_4_reg_3221);

assign and_ln66_11_fu_2289_p2 = (shl_ln66_15_fu_2277_p2 & lshr_ln66_6_fu_2283_p2);

assign and_ln66_12_fu_2301_p2 = (xor_ln66_15_fu_2295_p2 & or_ln66_5_reg_3199);

assign and_ln66_13_fu_2306_p2 = (select_ln66_18_fu_2269_p3 & and_ln66_11_fu_2289_p2);

assign and_ln66_14_fu_2423_p2 = (lshr_ln66_8_fu_2417_p2 & lshr_ln66_7_reg_3253);

assign and_ln66_15_fu_2542_p2 = (shl_ln66_17_fu_2530_p2 & lshr_ln66_9_fu_2536_p2);

assign and_ln66_16_fu_2554_p2 = (xor_ln66_19_fu_2548_p2 & or_ln66_7_reg_3231);

assign and_ln66_17_fu_2559_p2 = (select_ln66_25_fu_2522_p3 & and_ln66_15_fu_2542_p2);

assign and_ln66_2_fu_2186_p2 = (xor_ln66_4_reg_3107 & trunc_ln66_1_fu_2182_p1);

assign and_ln66_3_fu_2437_p2 = (xor_ln66_5_reg_3112 & trunc_ln66_2_fu_2428_p1);

assign and_ln66_4_fu_1815_p2 = (lshr_ln66_fu_1803_p2 & lshr_ln66_1_fu_1809_p2);

assign and_ln66_5_fu_1928_p2 = (shl_ln66_10_fu_1916_p2 & lshr_ln66_2_fu_1922_p2);

assign and_ln66_6_fu_1934_p2 = (select_ln66_7_fu_1908_p3 & and_ln66_5_fu_1928_p2);

assign and_ln66_7_fu_2048_p2 = (shl_ln66_13_fu_2036_p2 & lshr_ln66_3_fu_2042_p2);

assign and_ln66_8_fu_2060_p2 = (xor_ln66_11_fu_2054_p2 & ldvalue424_reg_3180);

assign and_ln66_9_fu_2065_p2 = (select_ln66_11_fu_2028_p3 & and_ln66_7_fu_2048_p2);

assign and_ln66_fu_1825_p2 = (xor_ln66_reg_3102 & trunc_ln66_fu_1821_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_condition_215 = ((icmp_ln108_3_fu_891_p2 == 1'd0) & (icmp_ln269_reg_2878 == 1'd1) & (icmp_ln266_reg_2874 == 1'd0));
end

always @ (*) begin
    ap_condition_452 = ((icmp_ln108_2_fu_2600_p2 == 1'd0) & (icmp_ln925_reg_2943 == 1'd1) & (icmp_ln266_reg_2874 == 1'd0));
end

assign b_0_fu_1404_p1 = lshr_ln54_4_fu_1399_p2[0:0];

assign b_1_1_fu_1412_p3 = ((trunc_ln804_reg_3022[0:0] === 1'b1) ? zext_ln54_9_fu_1408_p1 : b_1_1_i_reg_555);

assign b_1_2_fu_1419_p3 = ((trunc_ln804_reg_3022[0:0] === 1'b1) ? b_0_1_i_reg_567 : zext_ln54_9_fu_1408_p1);

assign c_0_fu_1547_p1 = lshr_ln54_5_fu_1542_p2[0:0];

assign c_1_1_fu_1555_p3 = ((trunc_ln804_reg_3022[0:0] === 1'b1) ? zext_ln54_10_fu_1551_p1 : c_1_1_i_reg_531);

assign c_1_2_fu_1562_p3 = ((trunc_ln804_reg_3022[0:0] === 1'b1) ? c_0_1_i_reg_543 : zext_ln54_10_fu_1551_p1);

assign cast_offset1_fu_1283_p3 = {{grp_fu_779_p4}, {3'd0}};

assign cast_offset2_fu_1426_p3 = {{grp_fu_788_p4}, {3'd0}};

assign cast_offset3_fu_1714_p3 = {{tmp_38_reg_3125}, {3'd0}};

assign cast_offset4_fu_2077_p3 = {{tmp_42_reg_3147}, {3'd0}};

assign cast_offset5_fu_2319_p3 = {{tmp_45_reg_3162}, {3'd0}};

assign cast_offset_fu_1140_p3 = {{grp_fu_770_p4}, {3'd0}};

assign grp_fu_750_p2 = ((challenge == 2'd2) ? 1'b1 : 1'b0);

assign grp_fu_755_p2 = (tmp_q0 ^ plaintext_q0);

assign grp_fu_762_p2 = (tmp_q1 ^ tmp_q0);

assign grp_fu_770_p4 = {{add_ln804_reg_2978[4:3]}};

assign grp_fu_779_p4 = {{add_ln805_reg_2983[4:3]}};

assign grp_fu_788_p4 = {{bitNumber_assign_3_i_reg_519[4:3]}};

assign grp_fu_810_p2 = ((grp_fu_810_p0 > grp_fu_810_p1) ? 1'b1 : 1'b0);

assign grp_fu_814_p2 = ((grp_fu_814_p0 > grp_fu_814_p1) ? 1'b1 : 1'b0);

assign grp_fu_818_p2 = ((grp_fu_818_p0 > grp_fu_818_p1) ? 1'b1 : 1'b0);

assign grp_fu_822_p2 = (tmp_q0 ^ temp_matrix3_q0);

assign grp_matrix_mul_1_fu_709_ap_start = grp_matrix_mul_1_fu_709_ap_start_reg;

assign grp_matrix_mul_fu_692_ap_start = grp_matrix_mul_fu_692_ap_start_reg;

assign grp_mpc_AND_verify_2_fu_721_ap_start = grp_mpc_AND_verify_2_fu_721_ap_start_reg;

assign i_12_fu_897_p2 = (i_0_i8_i_reg_391 + 3'd1);

assign i_13_fu_959_p2 = (i_0_i2_reg_413 + 2'd1);

assign i_14_fu_988_p2 = (i_0_i_i4_reg_424 + 3'd1);

assign i_15_fu_2606_p2 = (i_0_i1_reg_625 + 3'd1);

assign i_16_fu_2686_p2 = (i_0_i14_reg_647 + 2'd1);

assign i_17_fu_2716_p2 = (i_0_i_i24_reg_658 + 3'd1);

assign i_6_fu_929_p2 = (i_0_i_i_reg_402 + 3'd1);

assign i_fu_2647_p2 = (i_0_i_reg_636 + 3'd1);

assign icmp_ln108_1_fu_923_p2 = ((i_0_i_i_reg_402 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln108_2_fu_2600_p2 = ((i_0_i1_reg_625 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln108_3_fu_891_p2 = ((i_0_i8_i_reg_391 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln108_4_fu_982_p2 = ((i_0_i_i4_reg_424 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln108_5_fu_2710_p2 = ((i_0_i_i24_reg_658 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln108_fu_2641_p2 = ((i_0_i_reg_636 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln252_1_fu_2680_p2 = ((i_0_i14_reg_647 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln252_fu_953_p2 = ((i_0_i2_reg_413 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln266_fu_886_p2 = ((challenge == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln54_1_fu_1297_p2 = ((cast_offset1_fu_1283_p3 > or_ln54_1_fu_1291_p2) ? 1'b1 : 1'b0);

assign icmp_ln54_2_fu_1440_p2 = ((cast_offset2_fu_1426_p3 > or_ln54_2_fu_1434_p2) ? 1'b1 : 1'b0);

assign icmp_ln54_fu_1154_p2 = ((cast_offset_fu_1140_p3 > or_ln54_fu_1148_p2) ? 1'b1 : 1'b0);

assign icmp_ln66_2_fu_1951_p2 = ((cast_offset3_reg_3172 > or_ln66_4_reg_3185) ? 1'b1 : 1'b0);

assign icmp_ln797_fu_1057_p2 = ((bitNumber_assign_3_i_reg_519 < 5'd30) ? 1'b1 : 1'b0);

assign icmp_ln803_fu_1111_p2 = ((j_0_i_reg_603 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln817_fu_1602_p2 = ((j_1_i_reg_614 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln896_fu_846_p2 = ((loop_0_reg_369 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln901_fu_863_p2 = ((loop_1_reg_380 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln913_fu_1038_p2 = ((r_0_reg_435 == 5'd21) ? 1'b1 : 1'b0);

assign icmp_ln932_fu_2766_p2 = ((loop_2_reg_669 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln935_fu_2803_p2 = ((loop_3_reg_681 == 5'd16) ? 1'b1 : 1'b0);

assign j_4_fu_1608_p2 = (j_1_i_reg_614 + 2'd1);

assign j_fu_1117_p2 = (j_0_i_reg_603 + 2'd1);

assign loop_29_fu_869_p2 = (loop_1_reg_380 + 4'd1);

assign loop_30_fu_2772_p2 = (loop_2_reg_669 + 5'd1);

assign loop_31_fu_2809_p2 = (loop_3_reg_681 + 5'd1);

assign loop_fu_852_p2 = (loop_0_reg_369 + 4'd1);

assign lshr_ln54_10_fu_1520_p2 = select_ln54_8_fu_1490_p3 >> zext_ln54_18_fu_1512_p1;

assign lshr_ln54_11_fu_1526_p2 = 32'd4294967295 >> zext_ln54_19_fu_1516_p1;

assign lshr_ln54_4_fu_1399_p2 = trunc_ln54_3_fu_1395_p1 >> zext_ln54_3_reg_2995;

assign lshr_ln54_5_fu_1542_p2 = trunc_ln54_5_fu_1538_p1 >> zext_ln54_4_reg_3002;

assign lshr_ln54_6_fu_1234_p2 = select_ln54_2_fu_1204_p3 >> zext_ln54_7_fu_1226_p1;

assign lshr_ln54_7_fu_1240_p2 = 32'd4294967295 >> zext_ln54_11_fu_1230_p1;

assign lshr_ln54_8_fu_1377_p2 = select_ln54_5_fu_1347_p3 >> zext_ln54_14_fu_1369_p1;

assign lshr_ln54_9_fu_1383_p2 = 32'd4294967295 >> zext_ln54_15_fu_1373_p1;

assign lshr_ln54_fu_1256_p2 = trunc_ln54_fu_1252_p1 >> zext_ln54_reg_2988;

assign lshr_ln66_1_fu_1809_p2 = 32'd4294967295 >> zext_ln66_5_fu_1799_p1;

assign lshr_ln66_2_fu_1922_p2 = 32'd4294967295 >> zext_ln66_11_fu_1888_p1;

assign lshr_ln66_3_fu_2042_p2 = 32'd4294967295 >> zext_ln66_18_fu_2008_p1;

assign lshr_ln66_4_fu_2162_p2 = select_ln66_13_fu_2136_p3 >> zext_ln66_21_fu_2158_p1;

assign lshr_ln66_5_fu_2171_p2 = 32'd4294967295 >> zext_ln66_22_fu_2168_p1;

assign lshr_ln66_6_fu_2283_p2 = 32'd4294967295 >> zext_ln66_28_fu_2249_p1;

assign lshr_ln66_7_fu_2404_p2 = select_ln66_20_fu_2378_p3 >> zext_ln66_31_fu_2400_p1;

assign lshr_ln66_8_fu_2417_p2 = 32'd4294967295 >> zext_ln66_32_fu_2414_p1;

assign lshr_ln66_9_fu_2536_p2 = 32'd4294967295 >> zext_ln66_38_fu_2502_p1;

assign lshr_ln66_fu_1803_p2 = select_ln66_2_fu_1773_p3 >> zext_ln66_4_fu_1795_p1;

assign or_ln54_1_fu_1291_p2 = (cast_offset1_fu_1283_p3 | 5'd7);

assign or_ln54_2_fu_1434_p2 = (cast_offset2_fu_1426_p3 | 5'd7);

assign or_ln54_fu_1148_p2 = (cast_offset_fu_1140_p3 | 5'd7);

assign or_ln66_2_fu_2191_p2 = (shl_ln66_7_reg_3152 | and_ln66_2_fu_2186_p2);

assign or_ln66_3_fu_2442_p2 = (shl_ln66_8_fu_2432_p2 | and_ln66_3_fu_2437_p2);

assign or_ln66_4_fu_1722_p2 = (cast_offset3_fu_1714_p3 | 5'd7);

assign or_ln66_5_fu_2071_p2 = (and_ln66_9_fu_2065_p2 | and_ln66_8_fu_2060_p2);

assign or_ln66_6_fu_2085_p2 = (cast_offset4_fu_2077_p3 | 5'd7);

assign or_ln66_7_fu_2312_p2 = (and_ln66_13_fu_2306_p2 | and_ln66_12_fu_2301_p2);

assign or_ln66_8_fu_2327_p2 = (cast_offset5_fu_2319_p3 | 5'd7);

assign or_ln66_9_fu_2565_p2 = (and_ln66_17_fu_2559_p2 | and_ln66_16_fu_2554_p2);

assign or_ln66_fu_1830_p2 = (shl_ln66_6_reg_3137 | and_ln66_fu_1825_p2);

assign or_ln_fu_2657_p3 = {{1'd1}, {i_0_i_reg_636}};

assign r_fu_2704_p2 = (r_0_reg_435 + 5'd1);

assign select_ln109_1_fu_994_p3 = ((trunc_ln253_reg_2926[0:0] === 1'b1) ? 4'd7 : 4'd3);

assign select_ln109_2_fu_2696_p3 = ((trunc_ln253_1_fu_2692_p1[0:0] === 1'b1) ? 3'd7 : 3'd3);

assign select_ln109_3_fu_2722_p3 = ((trunc_ln253_1_reg_3314[0:0] === 1'b1) ? 4'd7 : 4'd3);

assign select_ln109_fu_969_p3 = ((trunc_ln253_fu_965_p1[0:0] === 1'b1) ? 3'd7 : 3'd3);

assign select_ln54_1_fu_1196_p3 = ((icmp_ln54_fu_1154_p2[0:0] === 1'b1) ? sub_ln54_2_fu_1178_p2 : sub_ln54_3_fu_1190_p2);

assign select_ln54_2_fu_1204_p3 = ((icmp_ln54_fu_1154_p2[0:0] === 1'b1) ? tmp_33_fu_1168_p4 : tmp_q1);

assign select_ln54_3_fu_1212_p3 = ((icmp_ln54_fu_1154_p2[0:0] === 1'b1) ? xor_ln54_2_fu_1184_p2 : zext_ln54_5_fu_1160_p1);

assign select_ln54_4_fu_1339_p3 = ((icmp_ln54_1_fu_1297_p2[0:0] === 1'b1) ? sub_ln54_5_fu_1321_p2 : sub_ln54_6_fu_1333_p2);

assign select_ln54_5_fu_1347_p3 = ((icmp_ln54_1_fu_1297_p2[0:0] === 1'b1) ? tmp_35_fu_1311_p4 : tmp_q1);

assign select_ln54_6_fu_1355_p3 = ((icmp_ln54_1_fu_1297_p2[0:0] === 1'b1) ? xor_ln54_3_fu_1327_p2 : zext_ln54_12_fu_1303_p1);

assign select_ln54_7_fu_1482_p3 = ((icmp_ln54_2_fu_1440_p2[0:0] === 1'b1) ? sub_ln54_8_fu_1464_p2 : sub_ln54_9_fu_1476_p2);

assign select_ln54_8_fu_1490_p3 = ((icmp_ln54_2_fu_1440_p2[0:0] === 1'b1) ? tmp_37_fu_1454_p4 : tmp_q1);

assign select_ln54_9_fu_1498_p3 = ((icmp_ln54_2_fu_1440_p2[0:0] === 1'b1) ? xor_ln54_4_fu_1470_p2 : zext_ln54_16_fu_1446_p1);

assign select_ln54_fu_1127_p3 = ((trunc_ln804_fu_1123_p1[0:0] === 1'b1) ? 64'd12 : 64'd8);

assign select_ln66_10_fu_1986_p3 = ((icmp_ln66_2_fu_1951_p2[0:0] === 1'b1) ? xor_ln66_9_fu_1964_p2 : zext_ln66_13_fu_1955_p1);

assign select_ln66_11_fu_2028_p3 = ((icmp_ln66_2_fu_1951_p2[0:0] === 1'b1) ? tmp_41_fu_2018_p4 : shl_ln66_12_fu_2012_p2);

assign select_ln66_12_fu_2128_p3 = ((grp_fu_814_p2[0:0] === 1'b1) ? sub_ln66_3_fu_2110_p2 : sub_ln66_4_fu_2122_p2);

assign select_ln66_13_fu_2136_p3 = ((grp_fu_814_p2[0:0] === 1'b1) ? tmp_43_fu_2100_p4 : or_ln66_5_fu_2071_p2);

assign select_ln66_14_fu_2144_p3 = ((grp_fu_814_p2[0:0] === 1'b1) ? xor_ln66_12_fu_2116_p2 : zext_ln66_19_fu_2092_p1);

assign select_ln66_15_fu_2211_p3 = ((grp_fu_814_p2[0:0] === 1'b1) ? zext_ln66_23_fu_2196_p1 : zext_ln66_24_fu_2199_p1);

assign select_ln66_16_fu_2219_p3 = ((grp_fu_814_p2[0:0] === 1'b1) ? zext_ln66_24_fu_2199_p1 : zext_ln66_23_fu_2196_p1);

assign select_ln66_17_fu_2227_p3 = ((grp_fu_814_p2[0:0] === 1'b1) ? xor_ln66_13_fu_2205_p2 : zext_ln66_23_fu_2196_p1);

assign select_ln66_18_fu_2269_p3 = ((grp_fu_814_p2[0:0] === 1'b1) ? tmp_44_fu_2259_p4 : shl_ln66_14_fu_2253_p2);

assign select_ln66_19_fu_2370_p3 = ((grp_fu_818_p2[0:0] === 1'b1) ? sub_ln66_6_fu_2352_p2 : sub_ln66_7_fu_2364_p2);

assign select_ln66_1_fu_1765_p3 = ((grp_fu_810_p2[0:0] === 1'b1) ? sub_ln66_fu_1747_p2 : sub_ln66_1_fu_1759_p2);

assign select_ln66_20_fu_2378_p3 = ((grp_fu_818_p2[0:0] === 1'b1) ? tmp_46_fu_2342_p4 : or_ln66_7_fu_2312_p2);

assign select_ln66_21_fu_2386_p3 = ((grp_fu_818_p2[0:0] === 1'b1) ? xor_ln66_16_fu_2358_p2 : zext_ln66_29_fu_2334_p1);

assign select_ln66_22_fu_2464_p3 = ((grp_fu_818_p2[0:0] === 1'b1) ? zext_ln66_33_fu_2448_p1 : zext_ln66_34_fu_2451_p1);

assign select_ln66_23_fu_2472_p3 = ((grp_fu_818_p2[0:0] === 1'b1) ? zext_ln66_34_fu_2451_p1 : zext_ln66_33_fu_2448_p1);

assign select_ln66_24_fu_2480_p3 = ((grp_fu_818_p2[0:0] === 1'b1) ? xor_ln66_17_fu_2458_p2 : zext_ln66_33_fu_2448_p1);

assign select_ln66_25_fu_2522_p3 = ((grp_fu_818_p2[0:0] === 1'b1) ? tmp_47_fu_2512_p4 : shl_ln66_16_fu_2506_p2);

assign select_ln66_2_fu_1773_p3 = ((grp_fu_810_p2[0:0] === 1'b1) ? tmp_39_fu_1737_p4 : tmp_q1);

assign select_ln66_3_fu_1781_p3 = ((grp_fu_810_p2[0:0] === 1'b1) ? xor_ln66_6_fu_1753_p2 : zext_ln66_fu_1729_p1);

assign select_ln66_4_fu_1850_p3 = ((grp_fu_810_p2[0:0] === 1'b1) ? zext_ln66_6_fu_1835_p1 : zext_ln66_7_fu_1838_p1);

assign select_ln66_5_fu_1858_p3 = ((grp_fu_810_p2[0:0] === 1'b1) ? zext_ln66_7_fu_1838_p1 : zext_ln66_6_fu_1835_p1);

assign select_ln66_6_fu_1866_p3 = ((grp_fu_810_p2[0:0] === 1'b1) ? xor_ln66_7_fu_1844_p2 : zext_ln66_6_fu_1835_p1);

assign select_ln66_7_fu_1908_p3 = ((grp_fu_810_p2[0:0] === 1'b1) ? tmp_40_fu_1898_p4 : shl_ln66_9_fu_1892_p2);

assign select_ln66_8_fu_1970_p3 = ((icmp_ln66_2_fu_1951_p2[0:0] === 1'b1) ? zext_ln66_13_fu_1955_p1 : zext_ln66_14_fu_1958_p1);

assign select_ln66_9_fu_1978_p3 = ((icmp_ln66_2_fu_1951_p2[0:0] === 1'b1) ? zext_ln66_14_fu_1958_p1 : zext_ln66_13_fu_1955_p1);

assign select_ln66_fu_1638_p3 = ((trunc_ln818_fu_1614_p1[0:0] === 1'b1) ? 64'd12 : 64'd8);

assign select_ln818_1_fu_1626_p3 = ((trunc_ln818_fu_1614_p1[0:0] === 1'b1) ? bc_1_reg_3087 : bc_0_reg_3082);

assign select_ln818_fu_1618_p3 = ((trunc_ln818_fu_1614_p1[0:0] === 1'b1) ? a_1_1_i_reg_579 : a_0_1_i_reg_591);

assign select_ln819_1_fu_1660_p3 = ((trunc_ln818_fu_1614_p1[0:0] === 1'b1) ? ca_1_reg_3097 : ca_0_reg_3092);

assign select_ln819_fu_1652_p3 = ((trunc_ln818_fu_1614_p1[0:0] === 1'b1) ? b_1_1_i_reg_555 : b_0_1_i_reg_567);

assign select_ln820_1_fu_1691_p3 = ((trunc_ln818_fu_1614_p1[0:0] === 1'b1) ? ab_1_reg_3077 : ab_0_reg_3072);

assign select_ln820_fu_1683_p3 = ((trunc_ln818_fu_1614_p1[0:0] === 1'b1) ? c_1_1_i_reg_531 : c_0_1_i_reg_543);

assign sext_ln109_1_fu_914_p1 = $signed(xor_ln109_7_fu_908_p2);

assign sext_ln109_fu_2622_p1 = $signed(xor_ln109_3_fu_2616_p2);

assign shl_ln4_fu_2586_p3 = {{r_0_reg_435}, {2'd0}};

assign shl_ln5_fu_2572_p3 = {{r_0_reg_435}, {2'd0}};

assign shl_ln66_10_fu_1916_p2 = 32'd4294967295 << zext_ln66_10_fu_1884_p1;

assign shl_ln66_11_fu_1944_p2 = 4'd1 << zext_ln66_12_fu_1941_p1;

assign shl_ln66_12_fu_2012_p2 = zext_ln66_15_fu_1961_p1 << zext_ln66_16_fu_2000_p1;

assign shl_ln66_13_fu_2036_p2 = 32'd4294967295 << zext_ln66_17_fu_2004_p1;

assign shl_ln66_14_fu_2253_p2 = zext_ln66_25_fu_2202_p1 << zext_ln66_26_fu_2241_p1;

assign shl_ln66_15_fu_2277_p2 = 32'd4294967295 << zext_ln66_27_fu_2245_p1;

assign shl_ln66_16_fu_2506_p2 = zext_ln66_35_fu_2454_p1 << zext_ln66_36_fu_2494_p1;

assign shl_ln66_17_fu_2530_p2 = 32'd4294967295 << zext_ln66_37_fu_2498_p1;

assign shl_ln66_4_fu_1580_p2 = 8'd1 << zext_ln54_3_reg_2995;

assign shl_ln66_5_fu_1591_p2 = 8'd1 << zext_ln54_4_reg_3002;

assign shl_ln66_6_fu_1647_p2 = xor_ln818_fu_1632_p2 << zext_ln54_reg_2988;

assign shl_ln66_7_fu_1678_p2 = xor_ln819_1_fu_1672_p2 << zext_ln54_3_reg_2995;

assign shl_ln66_8_fu_2432_p2 = xor_ln820_1_fu_2410_p2 << zext_ln54_4_reg_3002;

assign shl_ln66_9_fu_1892_p2 = zext_ln66_8_fu_1841_p1 << zext_ln66_9_fu_1880_p1;

assign shl_ln66_fu_1569_p2 = 8'd1 << zext_ln54_reg_2988;

assign shl_ln_fu_1044_p3 = {{r_0_reg_435}, {9'd0}};

assign state_0_sum1_fu_940_p3 = {{1'd1}, {i_0_i_i_reg_402}};

assign sub_ln54_10_fu_1506_p2 = (6'd31 - select_ln54_7_fu_1482_p3);

assign sub_ln54_1_fu_1085_p2 = ($signed(3'd6) - $signed(trunc_ln797_fu_1053_p1));

assign sub_ln54_2_fu_1178_p2 = (zext_ln54_5_fu_1160_p1 - zext_ln54_6_fu_1164_p1);

assign sub_ln54_3_fu_1190_p2 = (zext_ln54_6_fu_1164_p1 - zext_ln54_5_fu_1160_p1);

assign sub_ln54_4_fu_1220_p2 = (6'd31 - select_ln54_1_fu_1196_p3);

assign sub_ln54_5_fu_1321_p2 = (zext_ln54_12_fu_1303_p1 - zext_ln54_13_fu_1307_p1);

assign sub_ln54_6_fu_1333_p2 = (zext_ln54_13_fu_1307_p1 - zext_ln54_12_fu_1303_p1);

assign sub_ln54_7_fu_1363_p2 = (6'd31 - select_ln54_4_fu_1339_p3);

assign sub_ln54_8_fu_1464_p2 = (zext_ln54_16_fu_1446_p1 - zext_ln54_17_fu_1450_p1);

assign sub_ln54_9_fu_1476_p2 = (zext_ln54_17_fu_1450_p1 - zext_ln54_16_fu_1446_p1);

assign sub_ln54_fu_1075_p2 = ($signed(3'd5) - $signed(trunc_ln797_fu_1053_p1));

assign sub_ln66_1_fu_1759_p2 = (zext_ln66_3_fu_1733_p1 - zext_ln66_fu_1729_p1);

assign sub_ln66_2_fu_1789_p2 = (6'd31 - select_ln66_1_fu_1765_p3);

assign sub_ln66_3_fu_2110_p2 = (zext_ln66_19_fu_2092_p1 - zext_ln66_20_fu_2096_p1);

assign sub_ln66_4_fu_2122_p2 = (zext_ln66_20_fu_2096_p1 - zext_ln66_19_fu_2092_p1);

assign sub_ln66_5_fu_2152_p2 = (6'd31 - select_ln66_12_fu_2128_p3);

assign sub_ln66_6_fu_2352_p2 = (zext_ln66_29_fu_2334_p1 - zext_ln66_30_fu_2338_p1);

assign sub_ln66_7_fu_2364_p2 = (zext_ln66_30_fu_2338_p1 - zext_ln66_29_fu_2334_p1);

assign sub_ln66_8_fu_2394_p2 = (6'd31 - select_ln66_19_fu_2370_p3);

assign sub_ln66_fu_1747_p2 = (zext_ln66_fu_1729_p1 - zext_ln66_3_fu_1733_p1);

assign tapes_0_tape_address0 = grp_mpc_AND_verify_2_fu_721_rand_0_tape_address0;

assign tapes_0_tape_address1 = grp_mpc_AND_verify_2_fu_721_rand_0_tape_address1;

integer ap_tvar_int_0;

always @ (tmp_q1) begin
    for (ap_tvar_int_0 = 32 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 31 - 0) begin
            tmp_33_fu_1168_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_33_fu_1168_p4[ap_tvar_int_0] = tmp_q1[31 - ap_tvar_int_0];
        end
    end
end

integer ap_tvar_int_1;

always @ (tmp_q1) begin
    for (ap_tvar_int_1 = 32 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 31 - 0) begin
            tmp_35_fu_1311_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            tmp_35_fu_1311_p4[ap_tvar_int_1] = tmp_q1[31 - ap_tvar_int_1];
        end
    end
end

integer ap_tvar_int_2;

always @ (tmp_q1) begin
    for (ap_tvar_int_2 = 32 - 1; ap_tvar_int_2 >= 0; ap_tvar_int_2 = ap_tvar_int_2 - 1) begin
        if (ap_tvar_int_2 > 31 - 0) begin
            tmp_37_fu_1454_p4[ap_tvar_int_2] = 1'b0;
        end else begin
            tmp_37_fu_1454_p4[ap_tvar_int_2] = tmp_q1[31 - ap_tvar_int_2];
        end
    end
end

integer ap_tvar_int_3;

always @ (tmp_q1) begin
    for (ap_tvar_int_3 = 32 - 1; ap_tvar_int_3 >= 0; ap_tvar_int_3 = ap_tvar_int_3 - 1) begin
        if (ap_tvar_int_3 > 31 - 0) begin
            tmp_39_fu_1737_p4[ap_tvar_int_3] = 1'b0;
        end else begin
            tmp_39_fu_1737_p4[ap_tvar_int_3] = tmp_q1[31 - ap_tvar_int_3];
        end
    end
end

integer ap_tvar_int_4;

always @ (shl_ln66_9_fu_1892_p2) begin
    for (ap_tvar_int_4 = 32 - 1; ap_tvar_int_4 >= 0; ap_tvar_int_4 = ap_tvar_int_4 - 1) begin
        if (ap_tvar_int_4 > 31 - 0) begin
            tmp_40_fu_1898_p4[ap_tvar_int_4] = 1'b0;
        end else begin
            tmp_40_fu_1898_p4[ap_tvar_int_4] = shl_ln66_9_fu_1892_p2[31 - ap_tvar_int_4];
        end
    end
end

integer ap_tvar_int_5;

always @ (shl_ln66_12_fu_2012_p2) begin
    for (ap_tvar_int_5 = 32 - 1; ap_tvar_int_5 >= 0; ap_tvar_int_5 = ap_tvar_int_5 - 1) begin
        if (ap_tvar_int_5 > 31 - 0) begin
            tmp_41_fu_2018_p4[ap_tvar_int_5] = 1'b0;
        end else begin
            tmp_41_fu_2018_p4[ap_tvar_int_5] = shl_ln66_12_fu_2012_p2[31 - ap_tvar_int_5];
        end
    end
end

integer ap_tvar_int_6;

always @ (or_ln66_5_fu_2071_p2) begin
    for (ap_tvar_int_6 = 32 - 1; ap_tvar_int_6 >= 0; ap_tvar_int_6 = ap_tvar_int_6 - 1) begin
        if (ap_tvar_int_6 > 31 - 0) begin
            tmp_43_fu_2100_p4[ap_tvar_int_6] = 1'b0;
        end else begin
            tmp_43_fu_2100_p4[ap_tvar_int_6] = or_ln66_5_fu_2071_p2[31 - ap_tvar_int_6];
        end
    end
end

integer ap_tvar_int_7;

always @ (shl_ln66_14_fu_2253_p2) begin
    for (ap_tvar_int_7 = 32 - 1; ap_tvar_int_7 >= 0; ap_tvar_int_7 = ap_tvar_int_7 - 1) begin
        if (ap_tvar_int_7 > 31 - 0) begin
            tmp_44_fu_2259_p4[ap_tvar_int_7] = 1'b0;
        end else begin
            tmp_44_fu_2259_p4[ap_tvar_int_7] = shl_ln66_14_fu_2253_p2[31 - ap_tvar_int_7];
        end
    end
end

integer ap_tvar_int_8;

always @ (or_ln66_7_fu_2312_p2) begin
    for (ap_tvar_int_8 = 32 - 1; ap_tvar_int_8 >= 0; ap_tvar_int_8 = ap_tvar_int_8 - 1) begin
        if (ap_tvar_int_8 > 31 - 0) begin
            tmp_46_fu_2342_p4[ap_tvar_int_8] = 1'b0;
        end else begin
            tmp_46_fu_2342_p4[ap_tvar_int_8] = or_ln66_7_fu_2312_p2[31 - ap_tvar_int_8];
        end
    end
end

integer ap_tvar_int_9;

always @ (shl_ln66_16_fu_2506_p2) begin
    for (ap_tvar_int_9 = 32 - 1; ap_tvar_int_9 >= 0; ap_tvar_int_9 = ap_tvar_int_9 - 1) begin
        if (ap_tvar_int_9 > 31 - 0) begin
            tmp_47_fu_2512_p4[ap_tvar_int_9] = 1'b0;
        end else begin
            tmp_47_fu_2512_p4[ap_tvar_int_9] = shl_ln66_16_fu_2506_p2[31 - ap_tvar_int_9];
        end
    end
end

assign tmp_s_fu_834_p3 = {{view1_inputShare_offset}, {2'd0}};

assign trunc_ln253_1_fu_2692_p1 = i_0_i14_reg_647[0:0];

assign trunc_ln253_fu_965_p1 = i_0_i2_reg_413[0:0];

assign trunc_ln54_3_fu_1395_p1 = and_ln54_1_fu_1389_p2[7:0];

assign trunc_ln54_5_fu_1538_p1 = and_ln54_2_fu_1532_p2[7:0];

assign trunc_ln54_fu_1252_p1 = and_ln54_fu_1246_p2[7:0];

assign trunc_ln66_1_fu_2182_p1 = and_ln66_10_fu_2177_p2[7:0];

assign trunc_ln66_2_fu_2428_p1 = and_ln66_14_fu_2423_p2[7:0];

assign trunc_ln66_fu_1821_p1 = and_ln66_4_fu_1815_p2[7:0];

assign trunc_ln797_fu_1053_p1 = bitNumber_assign_3_i_reg_519[2:0];

assign trunc_ln804_fu_1123_p1 = j_0_i_reg_603[0:0];

assign trunc_ln818_fu_1614_p1 = j_1_i_reg_614[0:0];

assign view1_communicatedBi_address0 = grp_mpc_AND_verify_2_fu_721_view1_communicatedBi_address0;

assign view1_communicatedBi_d0 = grp_mpc_AND_verify_2_fu_721_view1_communicatedBi_d0;

assign view1_inputShare_address0 = grp_matrix_mul_fu_692_state_address0;

assign view1_outputShare_address0 = zext_ln933_1_fu_2798_p1;

assign view1_outputShare_d0 = tmp_q1;

assign view2_communicatedBi_address0 = grp_mpc_AND_verify_2_fu_721_view2_communicatedBi_address0;

assign view2_inputShare_address0 = grp_matrix_mul_fu_692_state_address0;

assign view2_outputShare_address0 = zext_ln936_1_fu_2835_p1;

assign view2_outputShare_d0 = tmp_q0;

assign xor_ln109_3_fu_2616_p2 = (i_0_i1_reg_625 ^ 3'd4);

assign xor_ln109_7_fu_908_p2 = (i_0_i8_i_reg_391 ^ 3'd4);

assign xor_ln54_2_fu_1184_p2 = (zext_ln54_5_fu_1160_p1 ^ 6'd31);

assign xor_ln54_3_fu_1327_p2 = (zext_ln54_12_fu_1303_p1 ^ 6'd31);

assign xor_ln54_4_fu_1470_p2 = (zext_ln54_16_fu_1446_p1 ^ 6'd31);

assign xor_ln54_fu_1095_p2 = (trunc_ln797_fu_1053_p1 ^ 3'd7);

assign xor_ln66_10_fu_1994_p2 = (select_ln66_8_fu_1970_p3 ^ 6'd31);

assign xor_ln66_11_fu_2054_p2 = (32'd4294967295 ^ and_ln66_7_fu_2048_p2);

assign xor_ln66_12_fu_2116_p2 = (zext_ln66_19_fu_2092_p1 ^ 6'd31);

assign xor_ln66_13_fu_2205_p2 = (zext_ln66_23_fu_2196_p1 ^ 6'd31);

assign xor_ln66_14_fu_2235_p2 = (select_ln66_15_fu_2211_p3 ^ 6'd31);

assign xor_ln66_15_fu_2295_p2 = (32'd4294967295 ^ and_ln66_11_fu_2289_p2);

assign xor_ln66_16_fu_2358_p2 = (zext_ln66_29_fu_2334_p1 ^ 6'd31);

assign xor_ln66_17_fu_2458_p2 = (zext_ln66_33_fu_2448_p1 ^ 6'd31);

assign xor_ln66_18_fu_2488_p2 = (select_ln66_22_fu_2464_p3 ^ 6'd31);

assign xor_ln66_19_fu_2548_p2 = (32'd4294967295 ^ and_ln66_15_fu_2542_p2);

assign xor_ln66_4_fu_1585_p2 = (shl_ln66_4_fu_1580_p2 ^ 8'd255);

assign xor_ln66_5_fu_1596_p2 = (shl_ln66_5_fu_1591_p2 ^ 8'd255);

assign xor_ln66_6_fu_1753_p2 = (zext_ln66_fu_1729_p1 ^ 6'd31);

assign xor_ln66_7_fu_1844_p2 = (zext_ln66_6_fu_1835_p1 ^ 6'd31);

assign xor_ln66_8_fu_1874_p2 = (select_ln66_4_fu_1850_p3 ^ 6'd31);

assign xor_ln66_9_fu_1964_p2 = (zext_ln66_13_fu_1955_p1 ^ 6'd31);

assign xor_ln66_fu_1574_p2 = (shl_ln66_fu_1569_p2 ^ 8'd255);

assign xor_ln818_fu_1632_p2 = (select_ln818_fu_1618_p3 ^ select_ln818_1_fu_1626_p3);

assign xor_ln819_1_fu_1672_p2 = (xor_ln819_fu_1666_p2 ^ select_ln819_1_fu_1660_p3);

assign xor_ln819_fu_1666_p2 = (select_ln819_fu_1652_p3 ^ select_ln818_fu_1618_p3);

assign xor_ln820_1_fu_2410_p2 = (xor_ln820_reg_3157 ^ xor_ln819_reg_3142);

assign xor_ln820_fu_1697_p2 = (select_ln820_fu_1683_p3 ^ select_ln820_1_fu_1691_p3);

assign xor_ln902_fu_875_p2 = (loop_1_reg_380 ^ 4'd8);

assign zext_ln109_10_fu_1001_p1 = i_0_i_i4_reg_424;

assign zext_ln109_11_fu_1017_p1 = add_ln109_3_fu_1011_p2;

assign zext_ln109_12_fu_1033_p1 = add_ln109_5_fu_1027_p2;

assign zext_ln109_13_fu_2729_p1 = i_0_i_i24_reg_658;

assign zext_ln109_14_fu_2745_p1 = add_ln109_7_fu_2739_p2;

assign zext_ln109_15_fu_2761_p1 = add_ln109_9_fu_2755_p2;

assign zext_ln109_1_fu_935_p1 = i_0_i_i_reg_402;

assign zext_ln109_2_fu_903_p1 = i_0_i8_i_reg_391;

assign zext_ln109_3_fu_2665_p1 = or_ln_fu_2657_p3;

assign zext_ln109_4_fu_2675_p1 = add_ln109_fu_2670_p2;

assign zext_ln109_5_fu_2612_p1 = i_0_i1_reg_625;

assign zext_ln109_6_fu_2626_p1 = $unsigned(sext_ln109_fu_2622_p1);

assign zext_ln109_7_fu_2636_p1 = add_ln109_1_fu_2631_p2;

assign zext_ln109_8_fu_948_p1 = state_0_sum1_fu_940_p3;

assign zext_ln109_9_fu_918_p1 = $unsigned(sext_ln109_1_fu_914_p1);

assign zext_ln109_fu_2653_p1 = i_0_i_reg_636;

assign zext_ln54_10_fu_1551_p1 = c_0_fu_1547_p1;

assign zext_ln54_11_fu_1230_p1 = sub_ln54_4_fu_1220_p2;

assign zext_ln54_12_fu_1303_p1 = cast_offset1_fu_1283_p3;

assign zext_ln54_13_fu_1307_p1 = or_ln54_1_fu_1291_p2;

assign zext_ln54_14_fu_1369_p1 = select_ln54_6_fu_1355_p3;

assign zext_ln54_15_fu_1373_p1 = sub_ln54_7_fu_1363_p2;

assign zext_ln54_16_fu_1446_p1 = cast_offset2_fu_1426_p3;

assign zext_ln54_17_fu_1450_p1 = or_ln54_2_fu_1434_p2;

assign zext_ln54_18_fu_1512_p1 = select_ln54_9_fu_1498_p3;

assign zext_ln54_19_fu_1516_p1 = sub_ln54_10_fu_1506_p2;

assign zext_ln54_3_fu_1091_p1 = sub_ln54_1_fu_1085_p2;

assign zext_ln54_4_fu_1101_p1 = xor_ln54_fu_1095_p2;

assign zext_ln54_5_fu_1160_p1 = cast_offset_fu_1140_p3;

assign zext_ln54_6_fu_1164_p1 = or_ln54_fu_1148_p2;

assign zext_ln54_7_fu_1226_p1 = select_ln54_3_fu_1212_p3;

assign zext_ln54_8_fu_1265_p1 = a_0_fu_1261_p1;

assign zext_ln54_9_fu_1408_p1 = b_0_fu_1404_p1;

assign zext_ln54_fu_1081_p1 = sub_ln54_fu_1075_p2;

assign zext_ln66_10_fu_1884_p1 = select_ln66_5_fu_1858_p3;

assign zext_ln66_11_fu_1888_p1 = xor_ln66_8_fu_1874_p2;

assign zext_ln66_12_fu_1941_p1 = tmp_38_reg_3125;

assign zext_ln66_13_fu_1955_p1 = cast_offset3_reg_3172;

assign zext_ln66_14_fu_1958_p1 = or_ln66_4_reg_3185;

assign zext_ln66_15_fu_1961_p1 = or_ln66_reg_3193;

assign zext_ln66_16_fu_2000_p1 = select_ln66_10_fu_1986_p3;

assign zext_ln66_17_fu_2004_p1 = select_ln66_9_fu_1978_p3;

assign zext_ln66_18_fu_2008_p1 = xor_ln66_10_fu_1994_p2;

assign zext_ln66_19_fu_2092_p1 = cast_offset4_fu_2077_p3;

assign zext_ln66_20_fu_2096_p1 = or_ln66_6_fu_2085_p2;

assign zext_ln66_21_fu_2158_p1 = select_ln66_14_fu_2144_p3;

assign zext_ln66_22_fu_2168_p1 = sub_ln66_5_reg_3216;

assign zext_ln66_23_fu_2196_p1 = cast_offset4_reg_3204;

assign zext_ln66_24_fu_2199_p1 = or_ln66_6_reg_3210;

assign zext_ln66_25_fu_2202_p1 = or_ln66_2_reg_3226;

assign zext_ln66_26_fu_2241_p1 = select_ln66_17_fu_2227_p3;

assign zext_ln66_27_fu_2245_p1 = select_ln66_16_fu_2219_p3;

assign zext_ln66_28_fu_2249_p1 = xor_ln66_14_fu_2235_p2;

assign zext_ln66_29_fu_2334_p1 = cast_offset5_fu_2319_p3;

assign zext_ln66_30_fu_2338_p1 = or_ln66_8_fu_2327_p2;

assign zext_ln66_31_fu_2400_p1 = select_ln66_21_fu_2386_p3;

assign zext_ln66_32_fu_2414_p1 = sub_ln66_8_reg_3248;

assign zext_ln66_33_fu_2448_p1 = cast_offset5_reg_3236;

assign zext_ln66_34_fu_2451_p1 = or_ln66_8_reg_3242;

assign zext_ln66_35_fu_2454_p1 = or_ln66_3_fu_2442_p2;

assign zext_ln66_36_fu_2494_p1 = select_ln66_24_fu_2480_p3;

assign zext_ln66_37_fu_2498_p1 = select_ln66_23_fu_2472_p3;

assign zext_ln66_38_fu_2502_p1 = xor_ln66_18_fu_2488_p2;

assign zext_ln66_3_fu_1733_p1 = or_ln66_4_fu_1722_p2;

assign zext_ln66_4_fu_1795_p1 = select_ln66_3_fu_1781_p3;

assign zext_ln66_5_fu_1799_p1 = sub_ln66_2_fu_1789_p2;

assign zext_ln66_6_fu_1835_p1 = cast_offset3_reg_3172;

assign zext_ln66_7_fu_1838_p1 = or_ln66_4_reg_3185;

assign zext_ln66_8_fu_1841_p1 = or_ln66_reg_3193;

assign zext_ln66_9_fu_1880_p1 = select_ln66_6_fu_1866_p3;

assign zext_ln66_fu_1729_p1 = cast_offset3_fu_1714_p3;

assign zext_ln897_fu_858_p1 = loop_0_reg_369;

assign zext_ln902_fu_881_p1 = xor_ln902_fu_875_p2;

assign zext_ln933_1_cast_fu_842_p1 = tmp_s_fu_834_p3;

assign zext_ln933_1_fu_2798_p1 = add_ln933_fu_2793_p2;

assign zext_ln933_2_fu_2784_p1 = add_ln933_1_fu_2778_p2;

assign zext_ln933_fu_2789_p1 = loop_2_reg_669;

assign zext_ln936_1_fu_2835_p1 = add_ln936_reg_3368;

assign zext_ln936_2_fu_2830_p1 = add_ln936_1_fu_2824_p2;

assign zext_ln936_fu_2815_p1 = loop_3_reg_681;

always @ (posedge ap_clk) begin
    zext_ln933_1_cast_reg_2852[1:0] <= 2'b00;
    zext_ln933_1_cast_reg_2852[10] <= 1'b0;
    tmp_addr_5_reg_2890[4] <= 1'b0;
    tmp_addr_4_reg_2908[4:3] <= 2'b01;
    select_ln109_reg_2931[1:0] <= 2'b11;
    tmp_addr_6_reg_2955[4] <= 1'b0;
    shl_ln_reg_2969[8:0] <= 9'b000000000;
    zext_ln54_reg_2988[7:3] <= 5'b00000;
    zext_ln54_3_reg_2995[7:3] <= 5'b00000;
    zext_ln54_4_reg_3002[7:3] <= 5'b00000;
    add_ln919_reg_3009[8:0] <= 9'b000000000;
    tmp_addr_11_reg_3131[1:0] <= 2'b00;
    tmp_addr_11_reg_3131[4:3] <= 2'b01;
    cast_offset3_reg_3172[2:0] <= 3'b000;
    or_ln66_4_reg_3185[2:0] <= 3'b111;
    cast_offset4_reg_3204[2:0] <= 3'b000;
    or_ln66_6_reg_3210[2:0] <= 3'b111;
    sub_ln66_5_reg_3216[0] <= 1'b0;
    cast_offset5_reg_3236[2:0] <= 3'b000;
    or_ln66_8_reg_3242[2:0] <= 3'b111;
    sub_ln66_8_reg_3248[0] <= 1'b0;
    add_ln926_reg_3258[1:0] <= 2'b00;
    add_ln923_reg_3263[1:0] <= 2'b00;
    tmp_addr_3_reg_3276[4] <= 1'b0;
    tmp_addr_2_reg_3295[4:3] <= 2'b01;
    select_ln109_2_reg_3319[1:0] <= 2'b11;
    tmp_addr_12_reg_3337[4] <= 1'b0;
end

endmodule //mpc_LowMC_verify_2
