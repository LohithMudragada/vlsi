// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "KeccakP1600_Permute_s.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic KeccakP1600_Permute_s::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic KeccakP1600_Permute_s::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<18> KeccakP1600_Permute_s::ap_ST_fsm_state1 = "1";
const sc_lv<18> KeccakP1600_Permute_s::ap_ST_fsm_state2 = "10";
const sc_lv<18> KeccakP1600_Permute_s::ap_ST_fsm_state3 = "100";
const sc_lv<18> KeccakP1600_Permute_s::ap_ST_fsm_state4 = "1000";
const sc_lv<18> KeccakP1600_Permute_s::ap_ST_fsm_state5 = "10000";
const sc_lv<18> KeccakP1600_Permute_s::ap_ST_fsm_state6 = "100000";
const sc_lv<18> KeccakP1600_Permute_s::ap_ST_fsm_state7 = "1000000";
const sc_lv<18> KeccakP1600_Permute_s::ap_ST_fsm_state8 = "10000000";
const sc_lv<18> KeccakP1600_Permute_s::ap_ST_fsm_state9 = "100000000";
const sc_lv<18> KeccakP1600_Permute_s::ap_ST_fsm_state10 = "1000000000";
const sc_lv<18> KeccakP1600_Permute_s::ap_ST_fsm_state11 = "10000000000";
const sc_lv<18> KeccakP1600_Permute_s::ap_ST_fsm_state12 = "100000000000";
const sc_lv<18> KeccakP1600_Permute_s::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<18> KeccakP1600_Permute_s::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<18> KeccakP1600_Permute_s::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<18> KeccakP1600_Permute_s::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<18> KeccakP1600_Permute_s::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<18> KeccakP1600_Permute_s::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<32> KeccakP1600_Permute_s::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> KeccakP1600_Permute_s::ap_const_lv32_1 = "1";
const sc_lv<1> KeccakP1600_Permute_s::ap_const_lv1_0 = "0";
const sc_lv<1> KeccakP1600_Permute_s::ap_const_lv1_1 = "1";
const sc_lv<32> KeccakP1600_Permute_s::ap_const_lv32_2 = "10";
const sc_lv<32> KeccakP1600_Permute_s::ap_const_lv32_4 = "100";
const sc_lv<32> KeccakP1600_Permute_s::ap_const_lv32_6 = "110";
const sc_lv<32> KeccakP1600_Permute_s::ap_const_lv32_7 = "111";
const sc_lv<32> KeccakP1600_Permute_s::ap_const_lv32_8 = "1000";
const sc_lv<32> KeccakP1600_Permute_s::ap_const_lv32_D = "1101";
const sc_lv<32> KeccakP1600_Permute_s::ap_const_lv32_F = "1111";
const sc_lv<32> KeccakP1600_Permute_s::ap_const_lv32_10 = "10000";
const sc_lv<32> KeccakP1600_Permute_s::ap_const_lv32_11 = "10001";
const sc_lv<5> KeccakP1600_Permute_s::ap_const_lv5_0 = "00000";
const sc_lv<4> KeccakP1600_Permute_s::ap_const_lv4_0 = "0000";
const sc_lv<32> KeccakP1600_Permute_s::ap_const_lv32_3 = "11";
const sc_lv<32> KeccakP1600_Permute_s::ap_const_lv32_E = "1110";
const sc_lv<3> KeccakP1600_Permute_s::ap_const_lv3_0 = "000";
const sc_lv<32> KeccakP1600_Permute_s::ap_const_lv32_5 = "101";
const sc_lv<32> KeccakP1600_Permute_s::ap_const_lv32_9 = "1001";
const sc_lv<32> KeccakP1600_Permute_s::ap_const_lv32_B = "1011";
const sc_lv<32> KeccakP1600_Permute_s::ap_const_lv32_C = "1100";
const sc_lv<32> KeccakP1600_Permute_s::ap_const_lv32_A = "1010";
const sc_lv<64> KeccakP1600_Permute_s::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<5> KeccakP1600_Permute_s::ap_const_lv5_19 = "11001";
const sc_lv<5> KeccakP1600_Permute_s::ap_const_lv5_1 = "1";
const sc_lv<4> KeccakP1600_Permute_s::ap_const_lv4_8 = "1000";
const sc_lv<4> KeccakP1600_Permute_s::ap_const_lv4_1 = "1";
const sc_lv<5> KeccakP1600_Permute_s::ap_const_lv5_18 = "11000";
const sc_lv<3> KeccakP1600_Permute_s::ap_const_lv3_5 = "101";
const sc_lv<3> KeccakP1600_Permute_s::ap_const_lv3_1 = "1";
const sc_lv<2> KeccakP1600_Permute_s::ap_const_lv2_0 = "00";
const sc_lv<7> KeccakP1600_Permute_s::ap_const_lv7_40 = "1000000";
const bool KeccakP1600_Permute_s::ap_const_boolean_1 = true;

KeccakP1600_Permute_s::KeccakP1600_Permute_s(sc_module_name name) : sc_module(name), mVcdFile(0) {
    KeccakRhoOffsets_U = new KeccakP1600_Permucud("KeccakRhoOffsets_U");
    KeccakRhoOffsets_U->clk(ap_clk);
    KeccakRhoOffsets_U->reset(ap_rst);
    KeccakRhoOffsets_U->address0(KeccakRhoOffsets_address0);
    KeccakRhoOffsets_U->ce0(KeccakRhoOffsets_ce0);
    KeccakRhoOffsets_U->q0(KeccakRhoOffsets_q0);
    KeccakRoundConstants_U = new KeccakP1600_PermudEe("KeccakRoundConstants_U");
    KeccakRoundConstants_U->clk(ap_clk);
    KeccakRoundConstants_U->reset(ap_rst);
    KeccakRoundConstants_U->address0(KeccakRoundConstants_address0);
    KeccakRoundConstants_U->ce0(KeccakRoundConstants_ce0);
    KeccakRoundConstants_U->q0(KeccakRoundConstants_q0);
    stateAsWords_U = new KeccakP1600_PermueOg("stateAsWords_U");
    stateAsWords_U->clk(ap_clk);
    stateAsWords_U->reset(ap_rst);
    stateAsWords_U->address0(stateAsWords_address0);
    stateAsWords_U->ce0(stateAsWords_ce0);
    stateAsWords_U->we0(stateAsWords_we0);
    stateAsWords_U->d0(stateAsWords_d0);
    stateAsWords_U->q0(stateAsWords_q0);
    stateAsWords_U->address1(stateAsWords_address1);
    stateAsWords_U->ce1(stateAsWords_ce1);
    stateAsWords_U->we1(stateAsWords_we1);
    stateAsWords_U->d1(stateAsWords_d1);
    stateAsWords_U->q1(stateAsWords_q1);
    grp_theta_fu_235 = new theta("grp_theta_fu_235");
    grp_theta_fu_235->ap_clk(ap_clk);
    grp_theta_fu_235->ap_rst(ap_rst);
    grp_theta_fu_235->ap_start(grp_theta_fu_235_ap_start);
    grp_theta_fu_235->ap_done(grp_theta_fu_235_ap_done);
    grp_theta_fu_235->ap_idle(grp_theta_fu_235_ap_idle);
    grp_theta_fu_235->ap_ready(grp_theta_fu_235_ap_ready);
    grp_theta_fu_235->A_address0(grp_theta_fu_235_A_address0);
    grp_theta_fu_235->A_ce0(grp_theta_fu_235_A_ce0);
    grp_theta_fu_235->A_we0(grp_theta_fu_235_A_we0);
    grp_theta_fu_235->A_d0(grp_theta_fu_235_A_d0);
    grp_theta_fu_235->A_q0(stateAsWords_q0);
    grp_chi_fu_240 = new chi("grp_chi_fu_240");
    grp_chi_fu_240->ap_clk(ap_clk);
    grp_chi_fu_240->ap_rst(ap_rst);
    grp_chi_fu_240->ap_start(grp_chi_fu_240_ap_start);
    grp_chi_fu_240->ap_done(grp_chi_fu_240_ap_done);
    grp_chi_fu_240->ap_idle(grp_chi_fu_240_ap_idle);
    grp_chi_fu_240->ap_ready(grp_chi_fu_240_ap_ready);
    grp_chi_fu_240->A_address0(grp_chi_fu_240_A_address0);
    grp_chi_fu_240->A_ce0(grp_chi_fu_240_A_ce0);
    grp_chi_fu_240->A_q0(stateAsWords_q0);
    grp_chi_fu_240->A_address1(grp_chi_fu_240_A_address1);
    grp_chi_fu_240->A_ce1(grp_chi_fu_240_A_ce1);
    grp_chi_fu_240->A_we1(grp_chi_fu_240_A_we1);
    grp_chi_fu_240->A_d1(grp_chi_fu_240_A_d1);
    grp_chi_fu_240->A_q1(stateAsWords_q1);
    grp_pi_fu_245 = new pi("grp_pi_fu_245");
    grp_pi_fu_245->ap_clk(ap_clk);
    grp_pi_fu_245->ap_rst(ap_rst);
    grp_pi_fu_245->ap_start(grp_pi_fu_245_ap_start);
    grp_pi_fu_245->ap_done(grp_pi_fu_245_ap_done);
    grp_pi_fu_245->ap_idle(grp_pi_fu_245_ap_idle);
    grp_pi_fu_245->ap_ready(grp_pi_fu_245_ap_ready);
    grp_pi_fu_245->A_address0(grp_pi_fu_245_A_address0);
    grp_pi_fu_245->A_ce0(grp_pi_fu_245_A_ce0);
    grp_pi_fu_245->A_we0(grp_pi_fu_245_A_we0);
    grp_pi_fu_245->A_d0(grp_pi_fu_245_A_d0);
    grp_pi_fu_245->A_q0(stateAsWords_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_KeccakRhoOffsets_address0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( zext_ln353_3_fu_401_p1 );

    SC_METHOD(thread_KeccakRhoOffsets_ce0);
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_KeccakRoundConstants_address0);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( zext_ln382_fu_456_p1 );

    SC_METHOD(thread_KeccakRoundConstants_ce0);
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_add_ln272_fu_291_p2);
    sensitive << ( shl_ln_reg_558 );
    sensitive << ( zext_ln271_fu_275_p1 );

    SC_METHOD(thread_add_ln282_fu_535_p2);
    sensitive << ( shl_ln6_reg_649 );
    sensitive << ( zext_ln281_fu_493_p1 );

    SC_METHOD(thread_add_ln353_1_fu_395_p2);
    sensitive << ( shl_ln7_fu_378_p3 );
    sensitive << ( zext_ln353_2_fu_391_p1 );

    SC_METHOD(thread_add_ln353_fu_386_p2);
    sensitive << ( zext_ln353_reg_598 );
    sensitive << ( zext_ln353_1_fu_374_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( icmp_ln280_fu_468_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( icmp_ln280_fu_468_p2 );

    SC_METHOD(thread_grp_chi_fu_240_ap_start);
    sensitive << ( grp_chi_fu_240_ap_start_reg );

    SC_METHOD(thread_grp_pi_fu_245_ap_start);
    sensitive << ( grp_pi_fu_245_ap_start_reg );

    SC_METHOD(thread_grp_theta_fu_235_ap_start);
    sensitive << ( grp_theta_fu_235_ap_start_reg );

    SC_METHOD(thread_i_37_fu_256_p2);
    sensitive << ( i_0_i_reg_155 );

    SC_METHOD(thread_i_38_fu_340_p2);
    sensitive << ( indexRound_assign_reg_178 );

    SC_METHOD(thread_i_fu_474_p2);
    sensitive << ( i_0_i3_reg_212 );

    SC_METHOD(thread_icmp_ln269_fu_250_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_i_reg_155 );

    SC_METHOD(thread_icmp_ln271_fu_279_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_0_i_reg_166 );

    SC_METHOD(thread_icmp_ln280_fu_468_p2);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( i_0_i3_reg_212 );

    SC_METHOD(thread_icmp_ln281_fu_497_p2);
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( j_0_i5_reg_224 );

    SC_METHOD(thread_icmp_ln293_fu_334_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( indexRound_assign_reg_178 );

    SC_METHOD(thread_icmp_ln352_1_fu_362_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( y_0_i_reg_201 );

    SC_METHOD(thread_icmp_ln352_fu_346_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( x_0_i_reg_190 );

    SC_METHOD(thread_icmp_ln353_fu_407_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln352_1_fu_362_p2 );
    sensitive << ( add_ln353_1_fu_395_p2 );

    SC_METHOD(thread_j_19_fu_503_p2);
    sensitive << ( j_0_i5_reg_224 );

    SC_METHOD(thread_j_fu_285_p2);
    sensitive << ( j_0_i_reg_166 );

    SC_METHOD(thread_lshr_ln282_fu_525_p2);
    sensitive << ( stateAsWords_load_1_reg_654 );
    sensitive << ( zext_ln282_1_fu_521_p1 );

    SC_METHOD(thread_lshr_ln353_fu_437_p2);
    sensitive << ( stateAsWords_q1 );
    sensitive << ( zext_ln353_6_fu_433_p1 );

    SC_METHOD(thread_or_ln272_fu_327_p2);
    sensitive << ( stateAsWords_q0 );
    sensitive << ( shl_ln272_fu_321_p2 );

    SC_METHOD(thread_select_ln353_fu_449_p3);
    sensitive << ( icmp_ln353_reg_616 );
    sensitive << ( stateAsWords_q0 );
    sensitive << ( xor_ln353_fu_443_p2 );

    SC_METHOD(thread_shl_ln272_1_fu_309_p3);
    sensitive << ( trunc_ln272_fu_305_p1 );

    SC_METHOD(thread_shl_ln272_fu_321_p2);
    sensitive << ( zext_ln272_1_fu_301_p1 );
    sensitive << ( zext_ln272_2_fu_317_p1 );

    SC_METHOD(thread_shl_ln282_1_fu_513_p3);
    sensitive << ( trunc_ln282_fu_509_p1 );

    SC_METHOD(thread_shl_ln353_fu_421_p2);
    sensitive << ( stateAsWords_q1 );
    sensitive << ( zext_ln353_5_fu_417_p1 );

    SC_METHOD(thread_shl_ln6_fu_485_p3);
    sensitive << ( i_0_i3_reg_212 );

    SC_METHOD(thread_shl_ln7_fu_378_p3);
    sensitive << ( y_0_i_reg_201 );

    SC_METHOD(thread_shl_ln_fu_267_p3);
    sensitive << ( i_0_i_reg_155 );

    SC_METHOD(thread_stateAsWords_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( stateAsWords_addr_1_reg_553 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( grp_theta_fu_235_A_address0 );
    sensitive << ( grp_chi_fu_240_A_address0 );
    sensitive << ( grp_pi_fu_245_A_address0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( zext_ln270_fu_262_p1 );
    sensitive << ( zext_ln282_fu_480_p1 );

    SC_METHOD(thread_stateAsWords_address1);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( stateAsWords_addr_3_reg_621 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( grp_chi_fu_240_A_address1 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( zext_ln353_3_fu_401_p1 );

    SC_METHOD(thread_stateAsWords_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( grp_theta_fu_235_A_ce0 );
    sensitive << ( grp_chi_fu_240_A_ce0 );
    sensitive << ( grp_pi_fu_245_A_ce0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_stateAsWords_ce1);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( grp_chi_fu_240_A_ce1 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_stateAsWords_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_theta_fu_235_A_d0 );
    sensitive << ( grp_pi_fu_245_A_d0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( or_ln272_fu_327_p2 );

    SC_METHOD(thread_stateAsWords_d1);
    sensitive << ( select_ln353_reg_626 );
    sensitive << ( grp_chi_fu_240_A_d1 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( xor_ln382_fu_461_p2 );

    SC_METHOD(thread_stateAsWords_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln269_fu_250_p2 );
    sensitive << ( grp_theta_fu_235_A_we0 );
    sensitive << ( grp_pi_fu_245_A_we0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_stateAsWords_we1);
    sensitive << ( grp_chi_fu_240_A_we1 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_state_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( zext_ln272_fu_296_p1 );
    sensitive << ( zext_ln282_2_fu_540_p1 );

    SC_METHOD(thread_state_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_state_d0);
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( lshr_ln282_fu_525_p2 );

    SC_METHOD(thread_state_we0);
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( icmp_ln281_fu_497_p2 );

    SC_METHOD(thread_sub_ln353_fu_427_p2);
    sensitive << ( zext_ln353_4_fu_413_p1 );

    SC_METHOD(thread_trunc_ln272_fu_305_p1);
    sensitive << ( j_0_i_reg_166 );

    SC_METHOD(thread_trunc_ln282_fu_509_p1);
    sensitive << ( j_0_i5_reg_224 );

    SC_METHOD(thread_x_fu_352_p2);
    sensitive << ( x_0_i_reg_190 );

    SC_METHOD(thread_xor_ln353_fu_443_p2);
    sensitive << ( lshr_ln353_fu_437_p2 );
    sensitive << ( shl_ln353_fu_421_p2 );

    SC_METHOD(thread_xor_ln382_fu_461_p2);
    sensitive << ( KeccakRoundConstants_q0 );
    sensitive << ( stateAsWords_q1 );

    SC_METHOD(thread_y_fu_368_p2);
    sensitive << ( y_0_i_reg_201 );

    SC_METHOD(thread_zext_ln270_fu_262_p1);
    sensitive << ( i_0_i_reg_155 );

    SC_METHOD(thread_zext_ln271_fu_275_p1);
    sensitive << ( j_0_i_reg_166 );

    SC_METHOD(thread_zext_ln272_1_fu_301_p1);
    sensitive << ( state_q0 );

    SC_METHOD(thread_zext_ln272_2_fu_317_p1);
    sensitive << ( shl_ln272_1_fu_309_p3 );

    SC_METHOD(thread_zext_ln272_fu_296_p1);
    sensitive << ( add_ln272_fu_291_p2 );

    SC_METHOD(thread_zext_ln281_fu_493_p1);
    sensitive << ( j_0_i5_reg_224 );

    SC_METHOD(thread_zext_ln282_1_fu_521_p1);
    sensitive << ( shl_ln282_1_fu_513_p3 );

    SC_METHOD(thread_zext_ln282_2_fu_540_p1);
    sensitive << ( add_ln282_fu_535_p2 );

    SC_METHOD(thread_zext_ln282_fu_480_p1);
    sensitive << ( i_0_i3_reg_212 );

    SC_METHOD(thread_zext_ln353_1_fu_374_p1);
    sensitive << ( y_0_i_reg_201 );

    SC_METHOD(thread_zext_ln353_2_fu_391_p1);
    sensitive << ( add_ln353_fu_386_p2 );

    SC_METHOD(thread_zext_ln353_3_fu_401_p1);
    sensitive << ( add_ln353_1_fu_395_p2 );

    SC_METHOD(thread_zext_ln353_4_fu_413_p1);
    sensitive << ( KeccakRhoOffsets_q0 );

    SC_METHOD(thread_zext_ln353_5_fu_417_p1);
    sensitive << ( KeccakRhoOffsets_q0 );

    SC_METHOD(thread_zext_ln353_6_fu_433_p1);
    sensitive << ( sub_ln353_fu_427_p2 );

    SC_METHOD(thread_zext_ln353_fu_358_p1);
    sensitive << ( x_0_i_reg_190 );

    SC_METHOD(thread_zext_ln382_fu_456_p1);
    sensitive << ( indexRound_assign_reg_178 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln269_fu_250_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln271_fu_279_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_ln352_fu_346_p2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln352_1_fu_362_p2 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( icmp_ln280_fu_468_p2 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( grp_theta_fu_235_ap_done );
    sensitive << ( grp_chi_fu_240_ap_done );
    sensitive << ( grp_pi_fu_245_ap_done );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln281_fu_497_p2 );
    sensitive << ( icmp_ln293_fu_334_p2 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state11 );

    ap_CS_fsm = "000000000000000001";
    grp_theta_fu_235_ap_start_reg = SC_LOGIC_0;
    grp_chi_fu_240_ap_start_reg = SC_LOGIC_0;
    grp_pi_fu_245_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "KeccakP1600_Permute_s_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, state_address0, "(port)state_address0");
    sc_trace(mVcdFile, state_ce0, "(port)state_ce0");
    sc_trace(mVcdFile, state_we0, "(port)state_we0");
    sc_trace(mVcdFile, state_d0, "(port)state_d0");
    sc_trace(mVcdFile, state_q0, "(port)state_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, KeccakRhoOffsets_address0, "KeccakRhoOffsets_address0");
    sc_trace(mVcdFile, KeccakRhoOffsets_ce0, "KeccakRhoOffsets_ce0");
    sc_trace(mVcdFile, KeccakRhoOffsets_q0, "KeccakRhoOffsets_q0");
    sc_trace(mVcdFile, KeccakRoundConstants_address0, "KeccakRoundConstants_address0");
    sc_trace(mVcdFile, KeccakRoundConstants_ce0, "KeccakRoundConstants_ce0");
    sc_trace(mVcdFile, KeccakRoundConstants_q0, "KeccakRoundConstants_q0");
    sc_trace(mVcdFile, i_37_fu_256_p2, "i_37_fu_256_p2");
    sc_trace(mVcdFile, i_37_reg_548, "i_37_reg_548");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, stateAsWords_addr_1_reg_553, "stateAsWords_addr_1_reg_553");
    sc_trace(mVcdFile, icmp_ln269_fu_250_p2, "icmp_ln269_fu_250_p2");
    sc_trace(mVcdFile, shl_ln_fu_267_p3, "shl_ln_fu_267_p3");
    sc_trace(mVcdFile, shl_ln_reg_558, "shl_ln_reg_558");
    sc_trace(mVcdFile, j_fu_285_p2, "j_fu_285_p2");
    sc_trace(mVcdFile, j_reg_572, "j_reg_572");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, icmp_ln271_fu_279_p2, "icmp_ln271_fu_279_p2");
    sc_trace(mVcdFile, i_38_fu_340_p2, "i_38_fu_340_p2");
    sc_trace(mVcdFile, i_38_reg_585, "i_38_reg_585");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, x_fu_352_p2, "x_fu_352_p2");
    sc_trace(mVcdFile, x_reg_593, "x_reg_593");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, zext_ln353_fu_358_p1, "zext_ln353_fu_358_p1");
    sc_trace(mVcdFile, zext_ln353_reg_598, "zext_ln353_reg_598");
    sc_trace(mVcdFile, icmp_ln352_fu_346_p2, "icmp_ln352_fu_346_p2");
    sc_trace(mVcdFile, y_fu_368_p2, "y_fu_368_p2");
    sc_trace(mVcdFile, y_reg_606, "y_reg_606");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, icmp_ln352_1_fu_362_p2, "icmp_ln352_1_fu_362_p2");
    sc_trace(mVcdFile, icmp_ln353_fu_407_p2, "icmp_ln353_fu_407_p2");
    sc_trace(mVcdFile, icmp_ln353_reg_616, "icmp_ln353_reg_616");
    sc_trace(mVcdFile, stateAsWords_addr_3_reg_621, "stateAsWords_addr_3_reg_621");
    sc_trace(mVcdFile, select_ln353_fu_449_p3, "select_ln353_fu_449_p3");
    sc_trace(mVcdFile, select_ln353_reg_626, "select_ln353_reg_626");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, i_fu_474_p2, "i_fu_474_p2");
    sc_trace(mVcdFile, i_reg_639, "i_reg_639");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, icmp_ln280_fu_468_p2, "icmp_ln280_fu_468_p2");
    sc_trace(mVcdFile, shl_ln6_fu_485_p3, "shl_ln6_fu_485_p3");
    sc_trace(mVcdFile, shl_ln6_reg_649, "shl_ln6_reg_649");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, stateAsWords_q0, "stateAsWords_q0");
    sc_trace(mVcdFile, stateAsWords_load_1_reg_654, "stateAsWords_load_1_reg_654");
    sc_trace(mVcdFile, j_19_fu_503_p2, "j_19_fu_503_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, stateAsWords_address0, "stateAsWords_address0");
    sc_trace(mVcdFile, stateAsWords_ce0, "stateAsWords_ce0");
    sc_trace(mVcdFile, stateAsWords_we0, "stateAsWords_we0");
    sc_trace(mVcdFile, stateAsWords_d0, "stateAsWords_d0");
    sc_trace(mVcdFile, stateAsWords_address1, "stateAsWords_address1");
    sc_trace(mVcdFile, stateAsWords_ce1, "stateAsWords_ce1");
    sc_trace(mVcdFile, stateAsWords_we1, "stateAsWords_we1");
    sc_trace(mVcdFile, stateAsWords_d1, "stateAsWords_d1");
    sc_trace(mVcdFile, stateAsWords_q1, "stateAsWords_q1");
    sc_trace(mVcdFile, grp_theta_fu_235_ap_start, "grp_theta_fu_235_ap_start");
    sc_trace(mVcdFile, grp_theta_fu_235_ap_done, "grp_theta_fu_235_ap_done");
    sc_trace(mVcdFile, grp_theta_fu_235_ap_idle, "grp_theta_fu_235_ap_idle");
    sc_trace(mVcdFile, grp_theta_fu_235_ap_ready, "grp_theta_fu_235_ap_ready");
    sc_trace(mVcdFile, grp_theta_fu_235_A_address0, "grp_theta_fu_235_A_address0");
    sc_trace(mVcdFile, grp_theta_fu_235_A_ce0, "grp_theta_fu_235_A_ce0");
    sc_trace(mVcdFile, grp_theta_fu_235_A_we0, "grp_theta_fu_235_A_we0");
    sc_trace(mVcdFile, grp_theta_fu_235_A_d0, "grp_theta_fu_235_A_d0");
    sc_trace(mVcdFile, grp_chi_fu_240_ap_start, "grp_chi_fu_240_ap_start");
    sc_trace(mVcdFile, grp_chi_fu_240_ap_done, "grp_chi_fu_240_ap_done");
    sc_trace(mVcdFile, grp_chi_fu_240_ap_idle, "grp_chi_fu_240_ap_idle");
    sc_trace(mVcdFile, grp_chi_fu_240_ap_ready, "grp_chi_fu_240_ap_ready");
    sc_trace(mVcdFile, grp_chi_fu_240_A_address0, "grp_chi_fu_240_A_address0");
    sc_trace(mVcdFile, grp_chi_fu_240_A_ce0, "grp_chi_fu_240_A_ce0");
    sc_trace(mVcdFile, grp_chi_fu_240_A_address1, "grp_chi_fu_240_A_address1");
    sc_trace(mVcdFile, grp_chi_fu_240_A_ce1, "grp_chi_fu_240_A_ce1");
    sc_trace(mVcdFile, grp_chi_fu_240_A_we1, "grp_chi_fu_240_A_we1");
    sc_trace(mVcdFile, grp_chi_fu_240_A_d1, "grp_chi_fu_240_A_d1");
    sc_trace(mVcdFile, grp_pi_fu_245_ap_start, "grp_pi_fu_245_ap_start");
    sc_trace(mVcdFile, grp_pi_fu_245_ap_done, "grp_pi_fu_245_ap_done");
    sc_trace(mVcdFile, grp_pi_fu_245_ap_idle, "grp_pi_fu_245_ap_idle");
    sc_trace(mVcdFile, grp_pi_fu_245_ap_ready, "grp_pi_fu_245_ap_ready");
    sc_trace(mVcdFile, grp_pi_fu_245_A_address0, "grp_pi_fu_245_A_address0");
    sc_trace(mVcdFile, grp_pi_fu_245_A_ce0, "grp_pi_fu_245_A_ce0");
    sc_trace(mVcdFile, grp_pi_fu_245_A_we0, "grp_pi_fu_245_A_we0");
    sc_trace(mVcdFile, grp_pi_fu_245_A_d0, "grp_pi_fu_245_A_d0");
    sc_trace(mVcdFile, i_0_i_reg_155, "i_0_i_reg_155");
    sc_trace(mVcdFile, j_0_i_reg_166, "j_0_i_reg_166");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, indexRound_assign_reg_178, "indexRound_assign_reg_178");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, x_0_i_reg_190, "x_0_i_reg_190");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, y_0_i_reg_201, "y_0_i_reg_201");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, i_0_i3_reg_212, "i_0_i3_reg_212");
    sc_trace(mVcdFile, icmp_ln281_fu_497_p2, "icmp_ln281_fu_497_p2");
    sc_trace(mVcdFile, icmp_ln293_fu_334_p2, "icmp_ln293_fu_334_p2");
    sc_trace(mVcdFile, j_0_i5_reg_224, "j_0_i5_reg_224");
    sc_trace(mVcdFile, grp_theta_fu_235_ap_start_reg, "grp_theta_fu_235_ap_start_reg");
    sc_trace(mVcdFile, grp_chi_fu_240_ap_start_reg, "grp_chi_fu_240_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, grp_pi_fu_245_ap_start_reg, "grp_pi_fu_245_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, zext_ln270_fu_262_p1, "zext_ln270_fu_262_p1");
    sc_trace(mVcdFile, zext_ln272_fu_296_p1, "zext_ln272_fu_296_p1");
    sc_trace(mVcdFile, zext_ln353_3_fu_401_p1, "zext_ln353_3_fu_401_p1");
    sc_trace(mVcdFile, zext_ln382_fu_456_p1, "zext_ln382_fu_456_p1");
    sc_trace(mVcdFile, zext_ln282_fu_480_p1, "zext_ln282_fu_480_p1");
    sc_trace(mVcdFile, zext_ln282_2_fu_540_p1, "zext_ln282_2_fu_540_p1");
    sc_trace(mVcdFile, or_ln272_fu_327_p2, "or_ln272_fu_327_p2");
    sc_trace(mVcdFile, xor_ln382_fu_461_p2, "xor_ln382_fu_461_p2");
    sc_trace(mVcdFile, zext_ln271_fu_275_p1, "zext_ln271_fu_275_p1");
    sc_trace(mVcdFile, add_ln272_fu_291_p2, "add_ln272_fu_291_p2");
    sc_trace(mVcdFile, trunc_ln272_fu_305_p1, "trunc_ln272_fu_305_p1");
    sc_trace(mVcdFile, shl_ln272_1_fu_309_p3, "shl_ln272_1_fu_309_p3");
    sc_trace(mVcdFile, zext_ln272_1_fu_301_p1, "zext_ln272_1_fu_301_p1");
    sc_trace(mVcdFile, zext_ln272_2_fu_317_p1, "zext_ln272_2_fu_317_p1");
    sc_trace(mVcdFile, shl_ln272_fu_321_p2, "shl_ln272_fu_321_p2");
    sc_trace(mVcdFile, zext_ln353_1_fu_374_p1, "zext_ln353_1_fu_374_p1");
    sc_trace(mVcdFile, add_ln353_fu_386_p2, "add_ln353_fu_386_p2");
    sc_trace(mVcdFile, shl_ln7_fu_378_p3, "shl_ln7_fu_378_p3");
    sc_trace(mVcdFile, zext_ln353_2_fu_391_p1, "zext_ln353_2_fu_391_p1");
    sc_trace(mVcdFile, add_ln353_1_fu_395_p2, "add_ln353_1_fu_395_p2");
    sc_trace(mVcdFile, zext_ln353_5_fu_417_p1, "zext_ln353_5_fu_417_p1");
    sc_trace(mVcdFile, zext_ln353_4_fu_413_p1, "zext_ln353_4_fu_413_p1");
    sc_trace(mVcdFile, sub_ln353_fu_427_p2, "sub_ln353_fu_427_p2");
    sc_trace(mVcdFile, zext_ln353_6_fu_433_p1, "zext_ln353_6_fu_433_p1");
    sc_trace(mVcdFile, lshr_ln353_fu_437_p2, "lshr_ln353_fu_437_p2");
    sc_trace(mVcdFile, shl_ln353_fu_421_p2, "shl_ln353_fu_421_p2");
    sc_trace(mVcdFile, xor_ln353_fu_443_p2, "xor_ln353_fu_443_p2");
    sc_trace(mVcdFile, trunc_ln282_fu_509_p1, "trunc_ln282_fu_509_p1");
    sc_trace(mVcdFile, shl_ln282_1_fu_513_p3, "shl_ln282_1_fu_513_p3");
    sc_trace(mVcdFile, zext_ln282_1_fu_521_p1, "zext_ln282_1_fu_521_p1");
    sc_trace(mVcdFile, lshr_ln282_fu_525_p2, "lshr_ln282_fu_525_p2");
    sc_trace(mVcdFile, zext_ln281_fu_493_p1, "zext_ln281_fu_493_p1");
    sc_trace(mVcdFile, add_ln282_fu_535_p2, "add_ln282_fu_535_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

KeccakP1600_Permute_s::~KeccakP1600_Permute_s() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete KeccakRhoOffsets_U;
    delete KeccakRoundConstants_U;
    delete stateAsWords_U;
    delete grp_theta_fu_235;
    delete grp_chi_fu_240;
    delete grp_pi_fu_245;
}

void KeccakP1600_Permute_s::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_chi_fu_240_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
            grp_chi_fu_240_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_chi_fu_240_ap_ready.read())) {
            grp_chi_fu_240_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_pi_fu_245_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln352_fu_346_p2.read()))) {
            grp_pi_fu_245_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_pi_fu_245_ap_ready.read())) {
            grp_pi_fu_245_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_theta_fu_235_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln293_fu_334_p2.read()))) {
            grp_theta_fu_235_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_theta_fu_235_ap_ready.read())) {
            grp_theta_fu_235_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln293_fu_334_p2.read()))) {
        i_0_i3_reg_212 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln281_fu_497_p2.read()))) {
        i_0_i3_reg_212 = i_reg_639.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln271_fu_279_p2.read()))) {
        i_0_i_reg_155 = i_37_reg_548.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_i_reg_155 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln269_fu_250_p2.read(), ap_const_lv1_1))) {
        indexRound_assign_reg_178 = ap_const_lv5_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        indexRound_assign_reg_178 = i_38_reg_585.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        j_0_i5_reg_224 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln281_fu_497_p2.read()))) {
        j_0_i5_reg_224 = j_19_fu_503_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        j_0_i_reg_166 = j_reg_572.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln269_fu_250_p2.read(), ap_const_lv1_0))) {
        j_0_i_reg_166 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln352_1_fu_362_p2.read()))) {
        x_0_i_reg_190 = x_reg_593.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(grp_theta_fu_235_ap_done.read(), ap_const_logic_1))) {
        x_0_i_reg_190 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln352_fu_346_p2.read()))) {
        y_0_i_reg_201 = ap_const_lv3_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        y_0_i_reg_201 = y_reg_606.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_37_reg_548 = i_37_fu_256_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        i_38_reg_585 = i_38_fu_340_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        i_reg_639 = i_fu_474_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln352_1_fu_362_p2.read()))) {
        icmp_ln353_reg_616 = icmp_ln353_fu_407_p2.read();
        stateAsWords_addr_3_reg_621 =  (sc_lv<5>) (zext_ln353_3_fu_401_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_reg_572 = j_fu_285_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        select_ln353_reg_626 = select_ln353_fu_449_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        shl_ln6_reg_649 = shl_ln6_fu_485_p3.read();
        stateAsWords_load_1_reg_654 = stateAsWords_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln269_fu_250_p2.read(), ap_const_lv1_0))) {
        shl_ln_reg_558 = shl_ln_fu_267_p3.read();
        stateAsWords_addr_1_reg_553 =  (sc_lv<5>) (zext_ln270_fu_262_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        x_reg_593 = x_fu_352_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        y_reg_606 = y_fu_368_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln352_fu_346_p2.read()))) {
        zext_ln353_reg_598 = zext_ln353_fu_358_p1.read();
    }
}

void KeccakP1600_Permute_s::thread_KeccakRhoOffsets_address0() {
    KeccakRhoOffsets_address0 =  (sc_lv<5>) (zext_ln353_3_fu_401_p1.read());
}

void KeccakP1600_Permute_s::thread_KeccakRhoOffsets_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        KeccakRhoOffsets_ce0 = ap_const_logic_1;
    } else {
        KeccakRhoOffsets_ce0 = ap_const_logic_0;
    }
}

void KeccakP1600_Permute_s::thread_KeccakRoundConstants_address0() {
    KeccakRoundConstants_address0 =  (sc_lv<5>) (zext_ln382_fu_456_p1.read());
}

void KeccakP1600_Permute_s::thread_KeccakRoundConstants_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        KeccakRoundConstants_ce0 = ap_const_logic_1;
    } else {
        KeccakRoundConstants_ce0 = ap_const_logic_0;
    }
}

void KeccakP1600_Permute_s::thread_add_ln272_fu_291_p2() {
    add_ln272_fu_291_p2 = (!shl_ln_reg_558.read().is_01() || !zext_ln271_fu_275_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(shl_ln_reg_558.read()) + sc_biguint<8>(zext_ln271_fu_275_p1.read()));
}

void KeccakP1600_Permute_s::thread_add_ln282_fu_535_p2() {
    add_ln282_fu_535_p2 = (!shl_ln6_reg_649.read().is_01() || !zext_ln281_fu_493_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(shl_ln6_reg_649.read()) + sc_biguint<8>(zext_ln281_fu_493_p1.read()));
}

void KeccakP1600_Permute_s::thread_add_ln353_1_fu_395_p2() {
    add_ln353_1_fu_395_p2 = (!shl_ln7_fu_378_p3.read().is_01() || !zext_ln353_2_fu_391_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(shl_ln7_fu_378_p3.read()) + sc_biguint<5>(zext_ln353_2_fu_391_p1.read()));
}

void KeccakP1600_Permute_s::thread_add_ln353_fu_386_p2() {
    add_ln353_fu_386_p2 = (!zext_ln353_reg_598.read().is_01() || !zext_ln353_1_fu_374_p1.read().is_01())? sc_lv<4>(): (sc_biguint<4>(zext_ln353_reg_598.read()) + sc_biguint<4>(zext_ln353_1_fu_374_p1.read()));
}

void KeccakP1600_Permute_s::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void KeccakP1600_Permute_s::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void KeccakP1600_Permute_s::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void KeccakP1600_Permute_s::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void KeccakP1600_Permute_s::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void KeccakP1600_Permute_s::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void KeccakP1600_Permute_s::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void KeccakP1600_Permute_s::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void KeccakP1600_Permute_s::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void KeccakP1600_Permute_s::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void KeccakP1600_Permute_s::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void KeccakP1600_Permute_s::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void KeccakP1600_Permute_s::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void KeccakP1600_Permute_s::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void KeccakP1600_Permute_s::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void KeccakP1600_Permute_s::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void KeccakP1600_Permute_s::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void KeccakP1600_Permute_s::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void KeccakP1600_Permute_s::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln280_fu_468_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void KeccakP1600_Permute_s::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void KeccakP1600_Permute_s::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln280_fu_468_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void KeccakP1600_Permute_s::thread_grp_chi_fu_240_ap_start() {
    grp_chi_fu_240_ap_start = grp_chi_fu_240_ap_start_reg.read();
}

void KeccakP1600_Permute_s::thread_grp_pi_fu_245_ap_start() {
    grp_pi_fu_245_ap_start = grp_pi_fu_245_ap_start_reg.read();
}

void KeccakP1600_Permute_s::thread_grp_theta_fu_235_ap_start() {
    grp_theta_fu_235_ap_start = grp_theta_fu_235_ap_start_reg.read();
}

void KeccakP1600_Permute_s::thread_i_37_fu_256_p2() {
    i_37_fu_256_p2 = (!i_0_i_reg_155.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_0_i_reg_155.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void KeccakP1600_Permute_s::thread_i_38_fu_340_p2() {
    i_38_fu_340_p2 = (!indexRound_assign_reg_178.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(indexRound_assign_reg_178.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void KeccakP1600_Permute_s::thread_i_fu_474_p2() {
    i_fu_474_p2 = (!i_0_i3_reg_212.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_0_i3_reg_212.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void KeccakP1600_Permute_s::thread_icmp_ln269_fu_250_p2() {
    icmp_ln269_fu_250_p2 = (!i_0_i_reg_155.read().is_01() || !ap_const_lv5_19.is_01())? sc_lv<1>(): sc_lv<1>(i_0_i_reg_155.read() == ap_const_lv5_19);
}

void KeccakP1600_Permute_s::thread_icmp_ln271_fu_279_p2() {
    icmp_ln271_fu_279_p2 = (!j_0_i_reg_166.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(j_0_i_reg_166.read() == ap_const_lv4_8);
}

void KeccakP1600_Permute_s::thread_icmp_ln280_fu_468_p2() {
    icmp_ln280_fu_468_p2 = (!i_0_i3_reg_212.read().is_01() || !ap_const_lv5_19.is_01())? sc_lv<1>(): sc_lv<1>(i_0_i3_reg_212.read() == ap_const_lv5_19);
}

void KeccakP1600_Permute_s::thread_icmp_ln281_fu_497_p2() {
    icmp_ln281_fu_497_p2 = (!j_0_i5_reg_224.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(j_0_i5_reg_224.read() == ap_const_lv4_8);
}

void KeccakP1600_Permute_s::thread_icmp_ln293_fu_334_p2() {
    icmp_ln293_fu_334_p2 = (!indexRound_assign_reg_178.read().is_01() || !ap_const_lv5_18.is_01())? sc_lv<1>(): sc_lv<1>(indexRound_assign_reg_178.read() == ap_const_lv5_18);
}

void KeccakP1600_Permute_s::thread_icmp_ln352_1_fu_362_p2() {
    icmp_ln352_1_fu_362_p2 = (!y_0_i_reg_201.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(y_0_i_reg_201.read() == ap_const_lv3_5);
}

void KeccakP1600_Permute_s::thread_icmp_ln352_fu_346_p2() {
    icmp_ln352_fu_346_p2 = (!x_0_i_reg_190.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(x_0_i_reg_190.read() == ap_const_lv3_5);
}

void KeccakP1600_Permute_s::thread_icmp_ln353_fu_407_p2() {
    icmp_ln353_fu_407_p2 = (!add_ln353_1_fu_395_p2.read().is_01() || !ap_const_lv5_0.is_01())? sc_lv<1>(): sc_lv<1>(add_ln353_1_fu_395_p2.read() == ap_const_lv5_0);
}

void KeccakP1600_Permute_s::thread_j_19_fu_503_p2() {
    j_19_fu_503_p2 = (!j_0_i5_reg_224.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j_0_i5_reg_224.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void KeccakP1600_Permute_s::thread_j_fu_285_p2() {
    j_fu_285_p2 = (!j_0_i_reg_166.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j_0_i_reg_166.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void KeccakP1600_Permute_s::thread_lshr_ln282_fu_525_p2() {
    lshr_ln282_fu_525_p2 = (!zext_ln282_1_fu_521_p1.read().is_01())? sc_lv<64>(): stateAsWords_load_1_reg_654.read() >> (unsigned short)zext_ln282_1_fu_521_p1.read().to_uint();
}

void KeccakP1600_Permute_s::thread_lshr_ln353_fu_437_p2() {
    lshr_ln353_fu_437_p2 = (!zext_ln353_6_fu_433_p1.read().is_01())? sc_lv<64>(): stateAsWords_q1.read() >> (unsigned short)zext_ln353_6_fu_433_p1.read().to_uint();
}

void KeccakP1600_Permute_s::thread_or_ln272_fu_327_p2() {
    or_ln272_fu_327_p2 = (stateAsWords_q0.read() | shl_ln272_fu_321_p2.read());
}

void KeccakP1600_Permute_s::thread_select_ln353_fu_449_p3() {
    select_ln353_fu_449_p3 = (!icmp_ln353_reg_616.read()[0].is_01())? sc_lv<64>(): ((icmp_ln353_reg_616.read()[0].to_bool())? stateAsWords_q0.read(): xor_ln353_fu_443_p2.read());
}

void KeccakP1600_Permute_s::thread_shl_ln272_1_fu_309_p3() {
    shl_ln272_1_fu_309_p3 = esl_concat<3,3>(trunc_ln272_fu_305_p1.read(), ap_const_lv3_0);
}

void KeccakP1600_Permute_s::thread_shl_ln272_fu_321_p2() {
    shl_ln272_fu_321_p2 = (!zext_ln272_2_fu_317_p1.read().is_01())? sc_lv<64>(): zext_ln272_1_fu_301_p1.read() << (unsigned short)zext_ln272_2_fu_317_p1.read().to_uint();
}

void KeccakP1600_Permute_s::thread_shl_ln282_1_fu_513_p3() {
    shl_ln282_1_fu_513_p3 = esl_concat<3,3>(trunc_ln282_fu_509_p1.read(), ap_const_lv3_0);
}

void KeccakP1600_Permute_s::thread_shl_ln353_fu_421_p2() {
    shl_ln353_fu_421_p2 = (!zext_ln353_5_fu_417_p1.read().is_01())? sc_lv<64>(): stateAsWords_q1.read() << (unsigned short)zext_ln353_5_fu_417_p1.read().to_uint();
}

void KeccakP1600_Permute_s::thread_shl_ln6_fu_485_p3() {
    shl_ln6_fu_485_p3 = esl_concat<5,3>(i_0_i3_reg_212.read(), ap_const_lv3_0);
}

void KeccakP1600_Permute_s::thread_shl_ln7_fu_378_p3() {
    shl_ln7_fu_378_p3 = esl_concat<3,2>(y_0_i_reg_201.read(), ap_const_lv2_0);
}

void KeccakP1600_Permute_s::thread_shl_ln_fu_267_p3() {
    shl_ln_fu_267_p3 = esl_concat<5,3>(i_0_i_reg_155.read(), ap_const_lv3_0);
}

void KeccakP1600_Permute_s::thread_stateAsWords_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        stateAsWords_address0 =  (sc_lv<5>) (zext_ln282_fu_480_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        stateAsWords_address0 =  (sc_lv<5>) (ap_const_lv64_0);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        stateAsWords_address0 = stateAsWords_addr_1_reg_553.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        stateAsWords_address0 =  (sc_lv<5>) (zext_ln270_fu_262_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        stateAsWords_address0 = grp_pi_fu_245_A_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        stateAsWords_address0 = grp_chi_fu_240_A_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        stateAsWords_address0 = grp_theta_fu_235_A_address0.read();
    } else {
        stateAsWords_address0 = "XXXXX";
    }
}

void KeccakP1600_Permute_s::thread_stateAsWords_address1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
        stateAsWords_address1 =  (sc_lv<5>) (ap_const_lv64_0);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        stateAsWords_address1 = stateAsWords_addr_3_reg_621.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        stateAsWords_address1 =  (sc_lv<5>) (zext_ln353_3_fu_401_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        stateAsWords_address1 = grp_chi_fu_240_A_address1.read();
    } else {
        stateAsWords_address1 = "XXXXX";
    }
}

void KeccakP1600_Permute_s::thread_stateAsWords_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        stateAsWords_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        stateAsWords_ce0 = grp_pi_fu_245_A_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        stateAsWords_ce0 = grp_chi_fu_240_A_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        stateAsWords_ce0 = grp_theta_fu_235_A_ce0.read();
    } else {
        stateAsWords_ce0 = ap_const_logic_0;
    }
}

void KeccakP1600_Permute_s::thread_stateAsWords_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        stateAsWords_ce1 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        stateAsWords_ce1 = grp_chi_fu_240_A_ce1.read();
    } else {
        stateAsWords_ce1 = ap_const_logic_0;
    }
}

void KeccakP1600_Permute_s::thread_stateAsWords_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        stateAsWords_d0 = or_ln272_fu_327_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        stateAsWords_d0 = ap_const_lv64_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        stateAsWords_d0 = grp_pi_fu_245_A_d0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        stateAsWords_d0 = grp_theta_fu_235_A_d0.read();
    } else {
        stateAsWords_d0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void KeccakP1600_Permute_s::thread_stateAsWords_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        stateAsWords_d1 = xor_ln382_fu_461_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        stateAsWords_d1 = select_ln353_reg_626.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        stateAsWords_d1 = grp_chi_fu_240_A_d1.read();
    } else {
        stateAsWords_d1 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void KeccakP1600_Permute_s::thread_stateAsWords_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln269_fu_250_p2.read(), ap_const_lv1_0)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        stateAsWords_we0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        stateAsWords_we0 = grp_pi_fu_245_A_we0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        stateAsWords_we0 = grp_theta_fu_235_A_we0.read();
    } else {
        stateAsWords_we0 = ap_const_logic_0;
    }
}

void KeccakP1600_Permute_s::thread_stateAsWords_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        stateAsWords_we1 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        stateAsWords_we1 = grp_chi_fu_240_A_we1.read();
    } else {
        stateAsWords_we1 = ap_const_logic_0;
    }
}

void KeccakP1600_Permute_s::thread_state_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        state_address0 =  (sc_lv<8>) (zext_ln282_2_fu_540_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        state_address0 =  (sc_lv<8>) (zext_ln272_fu_296_p1.read());
    } else {
        state_address0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void KeccakP1600_Permute_s::thread_state_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        state_ce0 = ap_const_logic_1;
    } else {
        state_ce0 = ap_const_logic_0;
    }
}

void KeccakP1600_Permute_s::thread_state_d0() {
    state_d0 = lshr_ln282_fu_525_p2.read().range(8-1, 0);
}

void KeccakP1600_Permute_s::thread_state_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln281_fu_497_p2.read()))) {
        state_we0 = ap_const_logic_1;
    } else {
        state_we0 = ap_const_logic_0;
    }
}

void KeccakP1600_Permute_s::thread_sub_ln353_fu_427_p2() {
    sub_ln353_fu_427_p2 = (!ap_const_lv7_40.is_01() || !zext_ln353_4_fu_413_p1.read().is_01())? sc_lv<7>(): (sc_bigint<7>(ap_const_lv7_40) - sc_biguint<7>(zext_ln353_4_fu_413_p1.read()));
}

void KeccakP1600_Permute_s::thread_trunc_ln272_fu_305_p1() {
    trunc_ln272_fu_305_p1 = j_0_i_reg_166.read().range(3-1, 0);
}

void KeccakP1600_Permute_s::thread_trunc_ln282_fu_509_p1() {
    trunc_ln282_fu_509_p1 = j_0_i5_reg_224.read().range(3-1, 0);
}

void KeccakP1600_Permute_s::thread_x_fu_352_p2() {
    x_fu_352_p2 = (!x_0_i_reg_190.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(x_0_i_reg_190.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void KeccakP1600_Permute_s::thread_xor_ln353_fu_443_p2() {
    xor_ln353_fu_443_p2 = (lshr_ln353_fu_437_p2.read() ^ shl_ln353_fu_421_p2.read());
}

void KeccakP1600_Permute_s::thread_xor_ln382_fu_461_p2() {
    xor_ln382_fu_461_p2 = (stateAsWords_q1.read() ^ KeccakRoundConstants_q0.read());
}

void KeccakP1600_Permute_s::thread_y_fu_368_p2() {
    y_fu_368_p2 = (!y_0_i_reg_201.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(y_0_i_reg_201.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void KeccakP1600_Permute_s::thread_zext_ln270_fu_262_p1() {
    zext_ln270_fu_262_p1 = esl_zext<64,5>(i_0_i_reg_155.read());
}

void KeccakP1600_Permute_s::thread_zext_ln271_fu_275_p1() {
    zext_ln271_fu_275_p1 = esl_zext<8,4>(j_0_i_reg_166.read());
}

void KeccakP1600_Permute_s::thread_zext_ln272_1_fu_301_p1() {
    zext_ln272_1_fu_301_p1 = esl_zext<64,8>(state_q0.read());
}

void KeccakP1600_Permute_s::thread_zext_ln272_2_fu_317_p1() {
    zext_ln272_2_fu_317_p1 = esl_zext<64,6>(shl_ln272_1_fu_309_p3.read());
}

void KeccakP1600_Permute_s::thread_zext_ln272_fu_296_p1() {
    zext_ln272_fu_296_p1 = esl_zext<64,8>(add_ln272_fu_291_p2.read());
}

void KeccakP1600_Permute_s::thread_zext_ln281_fu_493_p1() {
    zext_ln281_fu_493_p1 = esl_zext<8,4>(j_0_i5_reg_224.read());
}

void KeccakP1600_Permute_s::thread_zext_ln282_1_fu_521_p1() {
    zext_ln282_1_fu_521_p1 = esl_zext<64,6>(shl_ln282_1_fu_513_p3.read());
}

void KeccakP1600_Permute_s::thread_zext_ln282_2_fu_540_p1() {
    zext_ln282_2_fu_540_p1 = esl_zext<64,8>(add_ln282_fu_535_p2.read());
}

void KeccakP1600_Permute_s::thread_zext_ln282_fu_480_p1() {
    zext_ln282_fu_480_p1 = esl_zext<64,5>(i_0_i3_reg_212.read());
}

void KeccakP1600_Permute_s::thread_zext_ln353_1_fu_374_p1() {
    zext_ln353_1_fu_374_p1 = esl_zext<4,3>(y_0_i_reg_201.read());
}

void KeccakP1600_Permute_s::thread_zext_ln353_2_fu_391_p1() {
    zext_ln353_2_fu_391_p1 = esl_zext<5,4>(add_ln353_fu_386_p2.read());
}

void KeccakP1600_Permute_s::thread_zext_ln353_3_fu_401_p1() {
    zext_ln353_3_fu_401_p1 = esl_zext<64,5>(add_ln353_1_fu_395_p2.read());
}

void KeccakP1600_Permute_s::thread_zext_ln353_4_fu_413_p1() {
    zext_ln353_4_fu_413_p1 = esl_zext<7,6>(KeccakRhoOffsets_q0.read());
}

void KeccakP1600_Permute_s::thread_zext_ln353_5_fu_417_p1() {
    zext_ln353_5_fu_417_p1 = esl_zext<64,6>(KeccakRhoOffsets_q0.read());
}

void KeccakP1600_Permute_s::thread_zext_ln353_6_fu_433_p1() {
    zext_ln353_6_fu_433_p1 = esl_zext<64,7>(sub_ln353_fu_427_p2.read());
}

void KeccakP1600_Permute_s::thread_zext_ln353_fu_358_p1() {
    zext_ln353_fu_358_p1 = esl_zext<4,3>(x_0_i_reg_190.read());
}

void KeccakP1600_Permute_s::thread_zext_ln382_fu_456_p1() {
    zext_ln382_fu_456_p1 = esl_zext<64,5>(indexRound_assign_reg_178.read());
}

void KeccakP1600_Permute_s::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln269_fu_250_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln271_fu_279_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln293_fu_334_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(grp_theta_fu_235_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln352_fu_346_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln352_1_fu_362_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(grp_pi_fu_245_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(grp_chi_fu_240_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else {
                ap_NS_fsm = ap_ST_fsm_state13;
            }
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 32768 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln280_fu_468_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state17;
            }
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln281_fu_497_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_state18;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<18>) ("XXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

