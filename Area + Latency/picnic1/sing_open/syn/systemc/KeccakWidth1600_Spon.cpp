// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "KeccakWidth1600_Spon.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic KeccakWidth1600_Spon::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic KeccakWidth1600_Spon::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<16> KeccakWidth1600_Spon::ap_ST_fsm_state1 = "1";
const sc_lv<16> KeccakWidth1600_Spon::ap_ST_fsm_state2 = "10";
const sc_lv<16> KeccakWidth1600_Spon::ap_ST_fsm_state3 = "100";
const sc_lv<16> KeccakWidth1600_Spon::ap_ST_fsm_state4 = "1000";
const sc_lv<16> KeccakWidth1600_Spon::ap_ST_fsm_state5 = "10000";
const sc_lv<16> KeccakWidth1600_Spon::ap_ST_fsm_state6 = "100000";
const sc_lv<16> KeccakWidth1600_Spon::ap_ST_fsm_state7 = "1000000";
const sc_lv<16> KeccakWidth1600_Spon::ap_ST_fsm_state8 = "10000000";
const sc_lv<16> KeccakWidth1600_Spon::ap_ST_fsm_state9 = "100000000";
const sc_lv<16> KeccakWidth1600_Spon::ap_ST_fsm_state10 = "1000000000";
const sc_lv<16> KeccakWidth1600_Spon::ap_ST_fsm_state11 = "10000000000";
const sc_lv<16> KeccakWidth1600_Spon::ap_ST_fsm_state12 = "100000000000";
const sc_lv<16> KeccakWidth1600_Spon::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<16> KeccakWidth1600_Spon::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<16> KeccakWidth1600_Spon::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<16> KeccakWidth1600_Spon::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<32> KeccakWidth1600_Spon::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> KeccakWidth1600_Spon::ap_const_lv1_1 = "1";
const sc_lv<32> KeccakWidth1600_Spon::ap_const_lv32_2 = "10";
const sc_lv<32> KeccakWidth1600_Spon::ap_const_lv32_5 = "101";
const bool KeccakWidth1600_Spon::ap_const_boolean_0 = false;
const sc_lv<32> KeccakWidth1600_Spon::ap_const_lv32_6 = "110";
const sc_lv<1> KeccakWidth1600_Spon::ap_const_lv1_0 = "0";
const sc_lv<32> KeccakWidth1600_Spon::ap_const_lv32_9 = "1001";
const sc_lv<32> KeccakWidth1600_Spon::ap_const_lv32_B = "1011";
const sc_lv<32> KeccakWidth1600_Spon::ap_const_lv32_C = "1100";
const sc_lv<32> KeccakWidth1600_Spon::ap_const_lv32_D = "1101";
const sc_lv<32> KeccakWidth1600_Spon::ap_const_lv32_F = "1111";
const sc_lv<64> KeccakWidth1600_Spon::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> KeccakWidth1600_Spon::ap_const_lv32_A = "1010";
const sc_lv<8> KeccakWidth1600_Spon::ap_const_lv8_0 = "00000000";
const sc_lv<32> KeccakWidth1600_Spon::ap_const_lv32_8 = "1000";
const sc_lv<32> KeccakWidth1600_Spon::ap_const_lv32_E = "1110";
const sc_lv<32> KeccakWidth1600_Spon::ap_const_lv32_A8 = "10101000";
const sc_lv<32> KeccakWidth1600_Spon::ap_const_lv32_7 = "111";
const sc_lv<32> KeccakWidth1600_Spon::ap_const_lv32_4 = "100";
const sc_lv<64> KeccakWidth1600_Spon::ap_const_lv64_A7 = "10100111";
const sc_lv<34> KeccakWidth1600_Spon::ap_const_lv34_0 = "0000000000000000000000000000000000";
const sc_lv<32> KeccakWidth1600_Spon::ap_const_lv32_1 = "1";
const sc_lv<32> KeccakWidth1600_Spon::ap_const_lv32_3 = "11";
const sc_lv<10> KeccakWidth1600_Spon::ap_const_lv10_A6 = "10100110";
const sc_lv<10> KeccakWidth1600_Spon::ap_const_lv10_0 = "0000000000";
const sc_lv<8> KeccakWidth1600_Spon::ap_const_lv8_1 = "1";
const sc_lv<8> KeccakWidth1600_Spon::ap_const_lv8_80 = "10000000";
const sc_lv<30> KeccakWidth1600_Spon::ap_const_lv30_A8 = "10101000";
const sc_lv<64> KeccakWidth1600_Spon::ap_const_lv64_A8 = "10101000";
const sc_lv<8> KeccakWidth1600_Spon::ap_const_lv8_A8 = "10101000";
const sc_lv<64> KeccakWidth1600_Spon::ap_const_lv64_FFFFFFFFFFFFFF58 = "1111111111111111111111111111111111111111111111111111111101011000";
const bool KeccakWidth1600_Spon::ap_const_boolean_1 = true;

KeccakWidth1600_Spon::KeccakWidth1600_Spon(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_KeccakP1600_Permute_s_fu_258 = new KeccakP1600_Permute_s("grp_KeccakP1600_Permute_s_fu_258");
    grp_KeccakP1600_Permute_s_fu_258->ap_clk(ap_clk);
    grp_KeccakP1600_Permute_s_fu_258->ap_rst(ap_rst);
    grp_KeccakP1600_Permute_s_fu_258->ap_start(grp_KeccakP1600_Permute_s_fu_258_ap_start);
    grp_KeccakP1600_Permute_s_fu_258->ap_done(grp_KeccakP1600_Permute_s_fu_258_ap_done);
    grp_KeccakP1600_Permute_s_fu_258->ap_idle(grp_KeccakP1600_Permute_s_fu_258_ap_idle);
    grp_KeccakP1600_Permute_s_fu_258->ap_ready(grp_KeccakP1600_Permute_s_fu_258_ap_ready);
    grp_KeccakP1600_Permute_s_fu_258->state_address0(grp_KeccakP1600_Permute_s_fu_258_state_address0);
    grp_KeccakP1600_Permute_s_fu_258->state_ce0(grp_KeccakP1600_Permute_s_fu_258_state_ce0);
    grp_KeccakP1600_Permute_s_fu_258->state_we0(grp_KeccakP1600_Permute_s_fu_258_state_we0);
    grp_KeccakP1600_Permute_s_fu_258->state_d0(grp_KeccakP1600_Permute_s_fu_258_state_d0);
    grp_KeccakP1600_Permute_s_fu_258->state_q0(instance_state_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln303_fu_338_p2);
    sensitive << ( trunc_ln303_fu_334_p1 );

    SC_METHOD(thread_add_ln310_fu_432_p2);
    sensitive << ( curData_1_rec_reg_188 );

    SC_METHOD(thread_add_ln321_fu_456_p2);
    sensitive << ( partialBlock_reg_665 );
    sensitive << ( offset_assign_1_reg_211 );

    SC_METHOD(thread_add_ln329_fu_551_p2);
    sensitive << ( curData_0_idx_reg_166 );
    sensitive << ( curData_1_rec_pn_reg_248 );

    SC_METHOD(thread_add_ln330_fu_538_p2);
    sensitive << ( partialBlock_18_reg_671 );
    sensitive << ( offset_assign_1_reg_211 );

    SC_METHOD(thread_add_ln394_10_fu_533_p2);
    sensitive << ( select_ln394_reg_575 );
    sensitive << ( zext_ln394_14_fu_529_p1 );

    SC_METHOD(thread_add_ln394_11_fu_427_p2);
    sensitive << ( select_ln394_reg_575 );
    sensitive << ( zext_ln394_16_fu_423_p1 );

    SC_METHOD(thread_add_ln394_1_fu_523_p2);
    sensitive << ( trunc_ln394_fu_515_p1 );
    sensitive << ( trunc_ln302_fu_519_p1 );

    SC_METHOD(thread_add_ln394_2_fu_417_p2);
    sensitive << ( trunc_ln302_4_fu_413_p1 );
    sensitive << ( add_ln394_3_fu_407_p2 );

    SC_METHOD(thread_add_ln394_3_fu_407_p2);
    sensitive << ( zext_ln394_15_fu_399_p1 );
    sensitive << ( trunc_ln304_fu_403_p1 );

    SC_METHOD(thread_add_ln394_fu_504_p2);
    sensitive << ( offset_assign_1_reg_211 );
    sensitive << ( loop_0_i1_reg_224 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state12_on_subcall_done);
    sensitive << ( grp_KeccakP1600_Permute_s_fu_258_ap_done );
    sensitive << ( icmp_ln303_reg_622 );

    SC_METHOD(thread_ap_block_state6_on_subcall_done);
    sensitive << ( icmp_ln297_reg_581 );
    sensitive << ( grp_KeccakP1600_Permute_s_fu_258_ap_done );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_ln302_fu_323_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_phi_mux_instance_byteIOIndex_phi_fu_147_p4);
    sensitive << ( icmp_ln297_reg_581 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( instance_byteIOIndex_reg_144 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_ln302_fu_323_p2 );

    SC_METHOD(thread_dataByteLen_cast_fu_268_p1);
    sensitive << ( dataByteLen );

    SC_METHOD(thread_data_0_address0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( sext_ln394_1_fu_444_p1 );
    sensitive << ( sext_ln394_fu_547_p1 );

    SC_METHOD(thread_data_0_ce0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_data_0_d0);
    sensitive << ( instance_state_q0 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_data_0_we0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_grp_KeccakP1600_Permute_s_fu_258_ap_start);
    sensitive << ( grp_KeccakP1600_Permute_s_fu_258_ap_start_reg );

    SC_METHOD(thread_i_fu_488_p2);
    sensitive << ( i_36_load_reg_613 );
    sensitive << ( zext_ln323_4_fu_484_p1 );

    SC_METHOD(thread_icmp_ln297_fu_284_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( instance_squeezing_read );

    SC_METHOD(thread_icmp_ln302_fu_323_p2);
    sensitive << ( zext_ln394_13_reg_569 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( i_36_fu_56 );

    SC_METHOD(thread_icmp_ln303_1_fu_344_p2);
    sensitive << ( zext_ln303_reg_603 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_ln303_fu_328_p2 );
    sensitive << ( icmp_ln302_fu_323_p2 );
    sensitive << ( add_ln303_fu_338_p2 );

    SC_METHOD(thread_icmp_ln303_fu_328_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_ln302_fu_323_p2 );
    sensitive << ( instance_byteIOIndex_1_reg_155 );

    SC_METHOD(thread_icmp_ln304_fu_358_p2);
    sensitive << ( j_0_reg_178 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_icmp_ln321_fu_461_p2);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( add_ln321_fu_456_p2 );

    SC_METHOD(thread_icmp_ln393_1_fu_382_p2);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( loop_0_i_reg_200 );

    SC_METHOD(thread_icmp_ln393_fu_493_p2);
    sensitive << ( partialBlock_18_reg_671 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( loop_0_i1_reg_224 );

    SC_METHOD(thread_instance_state_addr_1_reg_590);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_instance_state_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln297_reg_581 );
    sensitive << ( instance_state_addr_reg_585 );
    sensitive << ( instance_state_addr_1_reg_590 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln303_reg_622 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( grp_KeccakP1600_Permute_s_fu_258_state_address0 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( zext_ln149_fu_290_p1 );
    sensitive << ( zext_ln394_1_fu_394_p1 );
    sensitive << ( zext_ln394_fu_510_p1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_instance_state_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln297_reg_581 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln303_reg_622 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( grp_KeccakP1600_Permute_s_fu_258_state_ce0 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_instance_state_d0);
    sensitive << ( icmp_ln297_reg_581 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln303_reg_622 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( grp_KeccakP1600_Permute_s_fu_258_state_d0 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( xor_ln149_fu_295_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( xor_ln149_1_fu_302_p2 );

    SC_METHOD(thread_instance_state_we0);
    sensitive << ( icmp_ln297_reg_581 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln303_reg_622 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( grp_KeccakP1600_Permute_s_fu_258_state_we0 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_j_18_fu_438_p2);
    sensitive << ( j_0_reg_178 );

    SC_METHOD(thread_j_fu_349_p2);
    sensitive << ( zext_ln394_13_reg_569 );
    sensitive << ( i_36_fu_56 );

    SC_METHOD(thread_loop_53_fu_388_p2);
    sensitive << ( loop_0_i_reg_200 );

    SC_METHOD(thread_loop_fu_498_p2);
    sensitive << ( loop_0_i1_reg_224 );

    SC_METHOD(thread_partialBlock_17_fu_467_p2);
    sensitive << ( offset_assign_1_reg_211 );

    SC_METHOD(thread_partialBlock_18_fu_473_p3);
    sensitive << ( partialBlock_reg_665 );
    sensitive << ( icmp_ln321_fu_461_p2 );
    sensitive << ( partialBlock_17_fu_467_p2 );

    SC_METHOD(thread_partialBlock_fu_451_p2);
    sensitive << ( zext_ln320_reg_608 );
    sensitive << ( trunc_ln320_fu_448_p1 );

    SC_METHOD(thread_select_ln394_fu_276_p3);
    sensitive << ( data_offset1 );

    SC_METHOD(thread_sext_ln304_fu_354_p1);
    sensitive << ( j_fu_349_p2 );

    SC_METHOD(thread_sext_ln394_1_fu_444_p1);
    sensitive << ( add_ln394_11_reg_650 );

    SC_METHOD(thread_sext_ln394_fu_547_p1);
    sensitive << ( add_ln394_10_reg_700 );

    SC_METHOD(thread_sub_ln312_fu_371_p2);
    sensitive << ( zext_ln312_fu_364_p1 );
    sensitive << ( trunc_ln312_fu_367_p1 );

    SC_METHOD(thread_trunc_ln302_4_fu_413_p1);
    sensitive << ( curData_0_idx_reg_166 );

    SC_METHOD(thread_trunc_ln302_fu_519_p1);
    sensitive << ( curData_0_idx_reg_166 );

    SC_METHOD(thread_trunc_ln303_fu_334_p1);
    sensitive << ( i_36_fu_56 );

    SC_METHOD(thread_trunc_ln304_fu_403_p1);
    sensitive << ( curData_1_rec_reg_188 );

    SC_METHOD(thread_trunc_ln312_fu_367_p1);
    sensitive << ( j_0_reg_178 );

    SC_METHOD(thread_trunc_ln320_fu_448_p1);
    sensitive << ( i_36_load_reg_613 );

    SC_METHOD(thread_trunc_ln394_fu_515_p1);
    sensitive << ( loop_0_i1_reg_224 );

    SC_METHOD(thread_xor_ln149_1_fu_302_p2);
    sensitive << ( instance_state_q0 );

    SC_METHOD(thread_xor_ln149_fu_295_p2);
    sensitive << ( instance_state_q0 );

    SC_METHOD(thread_zext_ln149_fu_290_p1);
    sensitive << ( instance_byteIOIndex_read );

    SC_METHOD(thread_zext_ln303_fu_309_p1);
    sensitive << ( dataByteLen_cast_reg_562 );

    SC_METHOD(thread_zext_ln312_fu_364_p1);
    sensitive << ( dataByteLen_cast_reg_562 );

    SC_METHOD(thread_zext_ln320_fu_312_p1);
    sensitive << ( dataByteLen_cast_reg_562 );

    SC_METHOD(thread_zext_ln323_4_fu_484_p1);
    sensitive << ( partialBlock_18_fu_473_p3 );

    SC_METHOD(thread_zext_ln323_fu_480_p1);
    sensitive << ( partialBlock_18_fu_473_p3 );

    SC_METHOD(thread_zext_ln394_13_fu_272_p1);
    sensitive << ( dataByteLen_cast_fu_268_p1 );

    SC_METHOD(thread_zext_ln394_14_fu_529_p1);
    sensitive << ( add_ln394_1_fu_523_p2 );

    SC_METHOD(thread_zext_ln394_15_fu_399_p1);
    sensitive << ( loop_0_i_reg_200 );

    SC_METHOD(thread_zext_ln394_16_fu_423_p1);
    sensitive << ( add_ln394_2_fu_417_p2 );

    SC_METHOD(thread_zext_ln394_1_fu_394_p1);
    sensitive << ( loop_0_i_reg_200 );

    SC_METHOD(thread_zext_ln394_fu_510_p1);
    sensitive << ( add_ln394_fu_504_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln297_fu_284_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( grp_KeccakP1600_Permute_s_fu_258_ap_done );
    sensitive << ( ap_block_state6_on_subcall_done );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_ln303_fu_328_p2 );
    sensitive << ( icmp_ln302_fu_323_p2 );
    sensitive << ( icmp_ln303_1_fu_344_p2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_ln393_1_fu_382_p2 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_block_state12_on_subcall_done );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( icmp_ln393_fu_493_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln304_fu_358_p2 );

    ap_CS_fsm = "0000000000000001";
    grp_KeccakP1600_Permute_s_fu_258_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "KeccakWidth1600_Spon_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, instance_state_address0, "(port)instance_state_address0");
    sc_trace(mVcdFile, instance_state_ce0, "(port)instance_state_ce0");
    sc_trace(mVcdFile, instance_state_we0, "(port)instance_state_we0");
    sc_trace(mVcdFile, instance_state_d0, "(port)instance_state_d0");
    sc_trace(mVcdFile, instance_state_q0, "(port)instance_state_q0");
    sc_trace(mVcdFile, instance_byteIOIndex_read, "(port)instance_byteIOIndex_read");
    sc_trace(mVcdFile, instance_squeezing_read, "(port)instance_squeezing_read");
    sc_trace(mVcdFile, data_0_address0, "(port)data_0_address0");
    sc_trace(mVcdFile, data_0_ce0, "(port)data_0_ce0");
    sc_trace(mVcdFile, data_0_we0, "(port)data_0_we0");
    sc_trace(mVcdFile, data_0_d0, "(port)data_0_d0");
    sc_trace(mVcdFile, data_offset1, "(port)data_offset1");
    sc_trace(mVcdFile, dataByteLen, "(port)dataByteLen");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, dataByteLen_cast_fu_268_p1, "dataByteLen_cast_fu_268_p1");
    sc_trace(mVcdFile, dataByteLen_cast_reg_562, "dataByteLen_cast_reg_562");
    sc_trace(mVcdFile, zext_ln394_13_fu_272_p1, "zext_ln394_13_fu_272_p1");
    sc_trace(mVcdFile, zext_ln394_13_reg_569, "zext_ln394_13_reg_569");
    sc_trace(mVcdFile, select_ln394_fu_276_p3, "select_ln394_fu_276_p3");
    sc_trace(mVcdFile, select_ln394_reg_575, "select_ln394_reg_575");
    sc_trace(mVcdFile, icmp_ln297_fu_284_p2, "icmp_ln297_fu_284_p2");
    sc_trace(mVcdFile, icmp_ln297_reg_581, "icmp_ln297_reg_581");
    sc_trace(mVcdFile, instance_state_addr_reg_585, "instance_state_addr_reg_585");
    sc_trace(mVcdFile, instance_state_addr_1_reg_590, "instance_state_addr_1_reg_590");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, zext_ln303_fu_309_p1, "zext_ln303_fu_309_p1");
    sc_trace(mVcdFile, zext_ln303_reg_603, "zext_ln303_reg_603");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, grp_KeccakP1600_Permute_s_fu_258_ap_ready, "grp_KeccakP1600_Permute_s_fu_258_ap_ready");
    sc_trace(mVcdFile, grp_KeccakP1600_Permute_s_fu_258_ap_done, "grp_KeccakP1600_Permute_s_fu_258_ap_done");
    sc_trace(mVcdFile, ap_block_state6_on_subcall_done, "ap_block_state6_on_subcall_done");
    sc_trace(mVcdFile, zext_ln320_fu_312_p1, "zext_ln320_fu_312_p1");
    sc_trace(mVcdFile, zext_ln320_reg_608, "zext_ln320_reg_608");
    sc_trace(mVcdFile, i_36_load_reg_613, "i_36_load_reg_613");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, icmp_ln303_fu_328_p2, "icmp_ln303_fu_328_p2");
    sc_trace(mVcdFile, icmp_ln303_reg_622, "icmp_ln303_reg_622");
    sc_trace(mVcdFile, icmp_ln302_fu_323_p2, "icmp_ln302_fu_323_p2");
    sc_trace(mVcdFile, sext_ln304_fu_354_p1, "sext_ln304_fu_354_p1");
    sc_trace(mVcdFile, icmp_ln303_1_fu_344_p2, "icmp_ln303_1_fu_344_p2");
    sc_trace(mVcdFile, loop_53_fu_388_p2, "loop_53_fu_388_p2");
    sc_trace(mVcdFile, loop_53_reg_640, "loop_53_reg_640");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, icmp_ln393_1_fu_382_p2, "icmp_ln393_1_fu_382_p2");
    sc_trace(mVcdFile, add_ln394_11_fu_427_p2, "add_ln394_11_fu_427_p2");
    sc_trace(mVcdFile, add_ln394_11_reg_650, "add_ln394_11_reg_650");
    sc_trace(mVcdFile, add_ln310_fu_432_p2, "add_ln310_fu_432_p2");
    sc_trace(mVcdFile, j_18_fu_438_p2, "j_18_fu_438_p2");
    sc_trace(mVcdFile, partialBlock_fu_451_p2, "partialBlock_fu_451_p2");
    sc_trace(mVcdFile, partialBlock_reg_665, "partialBlock_reg_665");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_block_state12_on_subcall_done, "ap_block_state12_on_subcall_done");
    sc_trace(mVcdFile, partialBlock_18_fu_473_p3, "partialBlock_18_fu_473_p3");
    sc_trace(mVcdFile, partialBlock_18_reg_671, "partialBlock_18_reg_671");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, zext_ln323_fu_480_p1, "zext_ln323_fu_480_p1");
    sc_trace(mVcdFile, zext_ln323_reg_677, "zext_ln323_reg_677");
    sc_trace(mVcdFile, i_fu_488_p2, "i_fu_488_p2");
    sc_trace(mVcdFile, i_reg_682, "i_reg_682");
    sc_trace(mVcdFile, loop_fu_498_p2, "loop_fu_498_p2");
    sc_trace(mVcdFile, loop_reg_690, "loop_reg_690");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, icmp_ln393_fu_493_p2, "icmp_ln393_fu_493_p2");
    sc_trace(mVcdFile, add_ln394_10_fu_533_p2, "add_ln394_10_fu_533_p2");
    sc_trace(mVcdFile, add_ln394_10_reg_700, "add_ln394_10_reg_700");
    sc_trace(mVcdFile, add_ln330_fu_538_p2, "add_ln330_fu_538_p2");
    sc_trace(mVcdFile, add_ln329_fu_551_p2, "add_ln329_fu_551_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, grp_KeccakP1600_Permute_s_fu_258_ap_start, "grp_KeccakP1600_Permute_s_fu_258_ap_start");
    sc_trace(mVcdFile, grp_KeccakP1600_Permute_s_fu_258_ap_idle, "grp_KeccakP1600_Permute_s_fu_258_ap_idle");
    sc_trace(mVcdFile, grp_KeccakP1600_Permute_s_fu_258_state_address0, "grp_KeccakP1600_Permute_s_fu_258_state_address0");
    sc_trace(mVcdFile, grp_KeccakP1600_Permute_s_fu_258_state_ce0, "grp_KeccakP1600_Permute_s_fu_258_state_ce0");
    sc_trace(mVcdFile, grp_KeccakP1600_Permute_s_fu_258_state_we0, "grp_KeccakP1600_Permute_s_fu_258_state_we0");
    sc_trace(mVcdFile, grp_KeccakP1600_Permute_s_fu_258_state_d0, "grp_KeccakP1600_Permute_s_fu_258_state_d0");
    sc_trace(mVcdFile, ap_phi_mux_instance_byteIOIndex_phi_fu_147_p4, "ap_phi_mux_instance_byteIOIndex_phi_fu_147_p4");
    sc_trace(mVcdFile, instance_byteIOIndex_reg_144, "instance_byteIOIndex_reg_144");
    sc_trace(mVcdFile, instance_byteIOIndex_1_reg_155, "instance_byteIOIndex_1_reg_155");
    sc_trace(mVcdFile, curData_0_idx_reg_166, "curData_0_idx_reg_166");
    sc_trace(mVcdFile, j_0_reg_178, "j_0_reg_178");
    sc_trace(mVcdFile, curData_1_rec_reg_188, "curData_1_rec_reg_188");
    sc_trace(mVcdFile, loop_0_i_reg_200, "loop_0_i_reg_200");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, offset_assign_1_reg_211, "offset_assign_1_reg_211");
    sc_trace(mVcdFile, loop_0_i1_reg_224, "loop_0_i1_reg_224");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, instance_byteIOIndex_3_reg_235, "instance_byteIOIndex_3_reg_235");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, icmp_ln304_fu_358_p2, "icmp_ln304_fu_358_p2");
    sc_trace(mVcdFile, curData_1_rec_pn_reg_248, "curData_1_rec_pn_reg_248");
    sc_trace(mVcdFile, grp_KeccakP1600_Permute_s_fu_258_ap_start_reg, "grp_KeccakP1600_Permute_s_fu_258_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, zext_ln149_fu_290_p1, "zext_ln149_fu_290_p1");
    sc_trace(mVcdFile, zext_ln394_1_fu_394_p1, "zext_ln394_1_fu_394_p1");
    sc_trace(mVcdFile, sext_ln394_1_fu_444_p1, "sext_ln394_1_fu_444_p1");
    sc_trace(mVcdFile, zext_ln394_fu_510_p1, "zext_ln394_fu_510_p1");
    sc_trace(mVcdFile, sext_ln394_fu_547_p1, "sext_ln394_fu_547_p1");
    sc_trace(mVcdFile, i_36_fu_56, "i_36_fu_56");
    sc_trace(mVcdFile, sub_ln312_fu_371_p2, "sub_ln312_fu_371_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, xor_ln149_fu_295_p2, "xor_ln149_fu_295_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, xor_ln149_1_fu_302_p2, "xor_ln149_1_fu_302_p2");
    sc_trace(mVcdFile, trunc_ln303_fu_334_p1, "trunc_ln303_fu_334_p1");
    sc_trace(mVcdFile, add_ln303_fu_338_p2, "add_ln303_fu_338_p2");
    sc_trace(mVcdFile, j_fu_349_p2, "j_fu_349_p2");
    sc_trace(mVcdFile, zext_ln312_fu_364_p1, "zext_ln312_fu_364_p1");
    sc_trace(mVcdFile, trunc_ln312_fu_367_p1, "trunc_ln312_fu_367_p1");
    sc_trace(mVcdFile, zext_ln394_15_fu_399_p1, "zext_ln394_15_fu_399_p1");
    sc_trace(mVcdFile, trunc_ln304_fu_403_p1, "trunc_ln304_fu_403_p1");
    sc_trace(mVcdFile, trunc_ln302_4_fu_413_p1, "trunc_ln302_4_fu_413_p1");
    sc_trace(mVcdFile, add_ln394_3_fu_407_p2, "add_ln394_3_fu_407_p2");
    sc_trace(mVcdFile, add_ln394_2_fu_417_p2, "add_ln394_2_fu_417_p2");
    sc_trace(mVcdFile, zext_ln394_16_fu_423_p1, "zext_ln394_16_fu_423_p1");
    sc_trace(mVcdFile, trunc_ln320_fu_448_p1, "trunc_ln320_fu_448_p1");
    sc_trace(mVcdFile, add_ln321_fu_456_p2, "add_ln321_fu_456_p2");
    sc_trace(mVcdFile, icmp_ln321_fu_461_p2, "icmp_ln321_fu_461_p2");
    sc_trace(mVcdFile, partialBlock_17_fu_467_p2, "partialBlock_17_fu_467_p2");
    sc_trace(mVcdFile, zext_ln323_4_fu_484_p1, "zext_ln323_4_fu_484_p1");
    sc_trace(mVcdFile, add_ln394_fu_504_p2, "add_ln394_fu_504_p2");
    sc_trace(mVcdFile, trunc_ln394_fu_515_p1, "trunc_ln394_fu_515_p1");
    sc_trace(mVcdFile, trunc_ln302_fu_519_p1, "trunc_ln302_fu_519_p1");
    sc_trace(mVcdFile, add_ln394_1_fu_523_p2, "add_ln394_1_fu_523_p2");
    sc_trace(mVcdFile, zext_ln394_14_fu_529_p1, "zext_ln394_14_fu_529_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

KeccakWidth1600_Spon::~KeccakWidth1600_Spon() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete grp_KeccakP1600_Permute_s_fu_258;
}

void KeccakWidth1600_Spon::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        curData_0_idx_reg_166 = add_ln329_fu_551_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(ap_block_state6_on_subcall_done.read(), ap_const_boolean_0))) {
        curData_0_idx_reg_166 = ap_const_lv64_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln304_fu_358_p2.read()))) {
        curData_1_rec_pn_reg_248 = curData_1_rec_reg_188.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln393_fu_493_p2.read()))) {
        curData_1_rec_pn_reg_248 = zext_ln323_reg_677.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln393_1_fu_382_p2.read()))) {
        curData_1_rec_reg_188 = add_ln310_fu_432_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln302_fu_323_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln303_fu_328_p2.read()) && 
                esl_seteq<1,1,1>(icmp_ln303_1_fu_344_p2.read(), ap_const_lv1_0))) {
        curData_1_rec_reg_188 = ap_const_lv64_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_KeccakP1600_Permute_s_fu_258_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
              esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln302_fu_323_p2.read()) && 
              esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln303_fu_328_p2.read()) && 
              esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln303_1_fu_344_p2.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
              esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln304_fu_358_p2.read())))) {
            grp_KeccakP1600_Permute_s_fu_258_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_KeccakP1600_Permute_s_fu_258_ap_ready.read())) {
            grp_KeccakP1600_Permute_s_fu_258_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln393_fu_493_p2.read()))) {
        i_36_fu_56 = i_reg_682.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln304_fu_358_p2.read()))) {
        i_36_fu_56 = sub_ln312_fu_371_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(ap_block_state6_on_subcall_done.read(), ap_const_boolean_0))) {
        i_36_fu_56 = ap_const_lv34_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        instance_byteIOIndex_1_reg_155 = instance_byteIOIndex_3_reg_235.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(ap_block_state6_on_subcall_done.read(), ap_const_boolean_0))) {
        instance_byteIOIndex_1_reg_155 = ap_phi_mux_instance_byteIOIndex_phi_fu_147_p4.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln304_fu_358_p2.read()))) {
        instance_byteIOIndex_3_reg_235 = ap_const_lv32_A8;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln393_fu_493_p2.read()))) {
        instance_byteIOIndex_3_reg_235 = add_ln330_fu_538_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(icmp_ln297_fu_284_p2.read(), ap_const_lv1_0))) {
        instance_byteIOIndex_reg_144 = instance_byteIOIndex_read.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(icmp_ln297_reg_581.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_block_state6_on_subcall_done.read(), ap_const_boolean_0))) {
        instance_byteIOIndex_reg_144 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln393_1_fu_382_p2.read()))) {
        j_0_reg_178 = j_18_fu_438_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln302_fu_323_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln303_fu_328_p2.read()) && 
                esl_seteq<1,1,1>(icmp_ln303_1_fu_344_p2.read(), ap_const_lv1_0))) {
        j_0_reg_178 = sext_ln304_fu_354_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        loop_0_i1_reg_224 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        loop_0_i1_reg_224 = loop_reg_690.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(grp_KeccakP1600_Permute_s_fu_258_ap_done.read(), ap_const_logic_1))) {
        loop_0_i_reg_200 = ap_const_lv8_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        loop_0_i_reg_200 = loop_53_reg_640.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln302_fu_323_p2.read()) && 
         esl_seteq<1,1,1>(icmp_ln303_fu_328_p2.read(), ap_const_lv1_0))) {
        offset_assign_1_reg_211 = instance_byteIOIndex_1_reg_155.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln303_reg_622.read()) && 
                esl_seteq<1,1,1>(ap_block_state12_on_subcall_done.read(), ap_const_boolean_0))) {
        offset_assign_1_reg_211 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln393_fu_493_p2.read()))) {
        add_ln394_10_reg_700 = add_ln394_10_fu_533_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln393_1_fu_382_p2.read()))) {
        add_ln394_11_reg_650 = add_ln394_11_fu_427_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        dataByteLen_cast_reg_562 = dataByteLen_cast_fu_268_p1.read();
        icmp_ln297_reg_581 = icmp_ln297_fu_284_p2.read();
        select_ln394_reg_575 = select_ln394_fu_276_p3.read();
        zext_ln394_13_reg_569 = zext_ln394_13_fu_272_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        i_36_load_reg_613 = i_36_fu_56.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        i_reg_682 = i_fu_488_p2.read();
        partialBlock_18_reg_671 = partialBlock_18_fu_473_p3.read();
        zext_ln323_reg_677 = zext_ln323_fu_480_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln302_fu_323_p2.read()))) {
        icmp_ln303_reg_622 = icmp_ln303_fu_328_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(icmp_ln297_fu_284_p2.read(), ap_const_lv1_1))) {
        instance_state_addr_reg_585 =  (sc_lv<8>) (zext_ln149_fu_290_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        loop_53_reg_640 = loop_53_fu_388_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        loop_reg_690 = loop_fu_498_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(ap_block_state12_on_subcall_done.read(), ap_const_boolean_0))) {
        partialBlock_reg_665 = partialBlock_fu_451_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_block_state6_on_subcall_done.read(), ap_const_boolean_0))) {
        zext_ln303_reg_603 = zext_ln303_fu_309_p1.read();
        zext_ln320_reg_608 = zext_ln320_fu_312_p1.read();
    }
}

void KeccakWidth1600_Spon::thread_add_ln303_fu_338_p2() {
    add_ln303_fu_338_p2 = (!ap_const_lv30_A8.is_01() || !trunc_ln303_fu_334_p1.read().is_01())? sc_lv<30>(): (sc_biguint<30>(ap_const_lv30_A8) + sc_biguint<30>(trunc_ln303_fu_334_p1.read()));
}

void KeccakWidth1600_Spon::thread_add_ln310_fu_432_p2() {
    add_ln310_fu_432_p2 = (!curData_1_rec_reg_188.read().is_01() || !ap_const_lv64_A8.is_01())? sc_lv<64>(): (sc_biguint<64>(curData_1_rec_reg_188.read()) + sc_biguint<64>(ap_const_lv64_A8));
}

void KeccakWidth1600_Spon::thread_add_ln321_fu_456_p2() {
    add_ln321_fu_456_p2 = (!offset_assign_1_reg_211.read().is_01() || !partialBlock_reg_665.read().is_01())? sc_lv<32>(): (sc_biguint<32>(offset_assign_1_reg_211.read()) + sc_biguint<32>(partialBlock_reg_665.read()));
}

void KeccakWidth1600_Spon::thread_add_ln329_fu_551_p2() {
    add_ln329_fu_551_p2 = (!curData_1_rec_pn_reg_248.read().is_01() || !curData_0_idx_reg_166.read().is_01())? sc_lv<64>(): (sc_biguint<64>(curData_1_rec_pn_reg_248.read()) + sc_biguint<64>(curData_0_idx_reg_166.read()));
}

void KeccakWidth1600_Spon::thread_add_ln330_fu_538_p2() {
    add_ln330_fu_538_p2 = (!offset_assign_1_reg_211.read().is_01() || !partialBlock_18_reg_671.read().is_01())? sc_lv<32>(): (sc_biguint<32>(offset_assign_1_reg_211.read()) + sc_biguint<32>(partialBlock_18_reg_671.read()));
}

void KeccakWidth1600_Spon::thread_add_ln394_10_fu_533_p2() {
    add_ln394_10_fu_533_p2 = (!select_ln394_reg_575.read().is_01() || !zext_ln394_14_fu_529_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(select_ln394_reg_575.read()) + sc_biguint<10>(zext_ln394_14_fu_529_p1.read()));
}

void KeccakWidth1600_Spon::thread_add_ln394_11_fu_427_p2() {
    add_ln394_11_fu_427_p2 = (!select_ln394_reg_575.read().is_01() || !zext_ln394_16_fu_423_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(select_ln394_reg_575.read()) + sc_biguint<10>(zext_ln394_16_fu_423_p1.read()));
}

void KeccakWidth1600_Spon::thread_add_ln394_1_fu_523_p2() {
    add_ln394_1_fu_523_p2 = (!trunc_ln394_fu_515_p1.read().is_01() || !trunc_ln302_fu_519_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(trunc_ln394_fu_515_p1.read()) + sc_biguint<9>(trunc_ln302_fu_519_p1.read()));
}

void KeccakWidth1600_Spon::thread_add_ln394_2_fu_417_p2() {
    add_ln394_2_fu_417_p2 = (!trunc_ln302_4_fu_413_p1.read().is_01() || !add_ln394_3_fu_407_p2.read().is_01())? sc_lv<9>(): (sc_biguint<9>(trunc_ln302_4_fu_413_p1.read()) + sc_biguint<9>(add_ln394_3_fu_407_p2.read()));
}

void KeccakWidth1600_Spon::thread_add_ln394_3_fu_407_p2() {
    add_ln394_3_fu_407_p2 = (!zext_ln394_15_fu_399_p1.read().is_01() || !trunc_ln304_fu_403_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(zext_ln394_15_fu_399_p1.read()) + sc_biguint<9>(trunc_ln304_fu_403_p1.read()));
}

void KeccakWidth1600_Spon::thread_add_ln394_fu_504_p2() {
    add_ln394_fu_504_p2 = (!offset_assign_1_reg_211.read().is_01() || !loop_0_i1_reg_224.read().is_01())? sc_lv<32>(): (sc_biguint<32>(offset_assign_1_reg_211.read()) + sc_biguint<32>(loop_0_i1_reg_224.read()));
}

void KeccakWidth1600_Spon::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void KeccakWidth1600_Spon::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void KeccakWidth1600_Spon::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void KeccakWidth1600_Spon::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void KeccakWidth1600_Spon::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void KeccakWidth1600_Spon::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void KeccakWidth1600_Spon::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void KeccakWidth1600_Spon::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void KeccakWidth1600_Spon::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void KeccakWidth1600_Spon::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void KeccakWidth1600_Spon::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void KeccakWidth1600_Spon::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void KeccakWidth1600_Spon::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void KeccakWidth1600_Spon::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void KeccakWidth1600_Spon::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void KeccakWidth1600_Spon::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void KeccakWidth1600_Spon::thread_ap_block_state12_on_subcall_done() {
    ap_block_state12_on_subcall_done = (esl_seteq<1,1,1>(ap_const_logic_0, grp_KeccakP1600_Permute_s_fu_258_ap_done.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln303_reg_622.read()));
}

void KeccakWidth1600_Spon::thread_ap_block_state6_on_subcall_done() {
    ap_block_state6_on_subcall_done = (esl_seteq<1,1,1>(ap_const_logic_0, grp_KeccakP1600_Permute_s_fu_258_ap_done.read()) && esl_seteq<1,1,1>(icmp_ln297_reg_581.read(), ap_const_lv1_1));
}

void KeccakWidth1600_Spon::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
          esl_seteq<1,1,1>(icmp_ln302_fu_323_p2.read(), ap_const_lv1_0)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void KeccakWidth1600_Spon::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void KeccakWidth1600_Spon::thread_ap_phi_mux_instance_byteIOIndex_phi_fu_147_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(icmp_ln297_reg_581.read(), ap_const_lv1_1))) {
        ap_phi_mux_instance_byteIOIndex_phi_fu_147_p4 = ap_const_lv32_0;
    } else {
        ap_phi_mux_instance_byteIOIndex_phi_fu_147_p4 = instance_byteIOIndex_reg_144.read();
    }
}

void KeccakWidth1600_Spon::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(icmp_ln302_fu_323_p2.read(), ap_const_lv1_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void KeccakWidth1600_Spon::thread_dataByteLen_cast_fu_268_p1() {
    dataByteLen_cast_fu_268_p1 = esl_sext<9,8>(dataByteLen.read());
}

void KeccakWidth1600_Spon::thread_data_0_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        data_0_address0 =  (sc_lv<9>) (sext_ln394_fu_547_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        data_0_address0 =  (sc_lv<9>) (sext_ln394_1_fu_444_p1.read());
    } else {
        data_0_address0 = "XXXXXXXXX";
    }
}

void KeccakWidth1600_Spon::thread_data_0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
        data_0_ce0 = ap_const_logic_1;
    } else {
        data_0_ce0 = ap_const_logic_0;
    }
}

void KeccakWidth1600_Spon::thread_data_0_d0() {
    data_0_d0 = instance_state_q0.read();
}

void KeccakWidth1600_Spon::thread_data_0_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
        data_0_we0 = ap_const_logic_1;
    } else {
        data_0_we0 = ap_const_logic_0;
    }
}

void KeccakWidth1600_Spon::thread_grp_KeccakP1600_Permute_s_fu_258_ap_start() {
    grp_KeccakP1600_Permute_s_fu_258_ap_start = grp_KeccakP1600_Permute_s_fu_258_ap_start_reg.read();
}

void KeccakWidth1600_Spon::thread_i_fu_488_p2() {
    i_fu_488_p2 = (!i_36_load_reg_613.read().is_01() || !zext_ln323_4_fu_484_p1.read().is_01())? sc_lv<34>(): (sc_biguint<34>(i_36_load_reg_613.read()) + sc_biguint<34>(zext_ln323_4_fu_484_p1.read()));
}

void KeccakWidth1600_Spon::thread_icmp_ln297_fu_284_p2() {
    icmp_ln297_fu_284_p2 = (!instance_squeezing_read.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): sc_lv<1>(instance_squeezing_read.read() == ap_const_lv32_0);
}

void KeccakWidth1600_Spon::thread_icmp_ln302_fu_323_p2() {
    icmp_ln302_fu_323_p2 = (!i_36_fu_56.read().is_01() || !zext_ln394_13_reg_569.read().is_01())? sc_lv<1>(): (sc_biguint<34>(i_36_fu_56.read()) < sc_biguint<34>(zext_ln394_13_reg_569.read()));
}

void KeccakWidth1600_Spon::thread_icmp_ln303_1_fu_344_p2() {
    icmp_ln303_1_fu_344_p2 = (!add_ln303_fu_338_p2.read().is_01() || !zext_ln303_reg_603.read().is_01())? sc_lv<1>(): (sc_biguint<30>(add_ln303_fu_338_p2.read()) > sc_biguint<30>(zext_ln303_reg_603.read()));
}

void KeccakWidth1600_Spon::thread_icmp_ln303_fu_328_p2() {
    icmp_ln303_fu_328_p2 = (!instance_byteIOIndex_1_reg_155.read().is_01() || !ap_const_lv32_A8.is_01())? sc_lv<1>(): sc_lv<1>(instance_byteIOIndex_1_reg_155.read() == ap_const_lv32_A8);
}

void KeccakWidth1600_Spon::thread_icmp_ln304_fu_358_p2() {
    icmp_ln304_fu_358_p2 = (!j_0_reg_178.read().is_01() || !ap_const_lv64_A8.is_01())? sc_lv<1>(): (sc_biguint<64>(j_0_reg_178.read()) < sc_biguint<64>(ap_const_lv64_A8));
}

void KeccakWidth1600_Spon::thread_icmp_ln321_fu_461_p2() {
    icmp_ln321_fu_461_p2 = (!add_ln321_fu_456_p2.read().is_01() || !ap_const_lv32_A8.is_01())? sc_lv<1>(): (sc_biguint<32>(add_ln321_fu_456_p2.read()) > sc_biguint<32>(ap_const_lv32_A8));
}

void KeccakWidth1600_Spon::thread_icmp_ln393_1_fu_382_p2() {
    icmp_ln393_1_fu_382_p2 = (!loop_0_i_reg_200.read().is_01() || !ap_const_lv8_A8.is_01())? sc_lv<1>(): sc_lv<1>(loop_0_i_reg_200.read() == ap_const_lv8_A8);
}

void KeccakWidth1600_Spon::thread_icmp_ln393_fu_493_p2() {
    icmp_ln393_fu_493_p2 = (!loop_0_i1_reg_224.read().is_01() || !partialBlock_18_reg_671.read().is_01())? sc_lv<1>(): sc_lv<1>(loop_0_i1_reg_224.read() == partialBlock_18_reg_671.read());
}

void KeccakWidth1600_Spon::thread_instance_state_addr_1_reg_590() {
    instance_state_addr_1_reg_590 =  (sc_lv<8>) (ap_const_lv64_A7);
}

void KeccakWidth1600_Spon::thread_instance_state_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        instance_state_address0 =  (sc_lv<8>) (zext_ln394_fu_510_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        instance_state_address0 =  (sc_lv<8>) (zext_ln394_1_fu_394_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        instance_state_address0 = instance_state_addr_1_reg_590.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        instance_state_address0 =  (sc_lv<8>) (ap_const_lv64_A7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        instance_state_address0 = instance_state_addr_reg_585.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        instance_state_address0 =  (sc_lv<8>) (zext_ln149_fu_290_p1.read());
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                 esl_seteq<1,1,1>(icmp_ln297_reg_581.read(), ap_const_lv1_1)) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln303_reg_622.read())))) {
        instance_state_address0 = grp_KeccakP1600_Permute_s_fu_258_state_address0.read();
    } else {
        instance_state_address0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void KeccakWidth1600_Spon::thread_instance_state_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        instance_state_ce0 = ap_const_logic_1;
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                 esl_seteq<1,1,1>(icmp_ln297_reg_581.read(), ap_const_lv1_1)) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln303_reg_622.read())))) {
        instance_state_ce0 = grp_KeccakP1600_Permute_s_fu_258_state_ce0.read();
    } else {
        instance_state_ce0 = ap_const_logic_0;
    }
}

void KeccakWidth1600_Spon::thread_instance_state_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        instance_state_d0 = xor_ln149_1_fu_302_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        instance_state_d0 = xor_ln149_fu_295_p2.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                 esl_seteq<1,1,1>(icmp_ln297_reg_581.read(), ap_const_lv1_1)) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln303_reg_622.read())))) {
        instance_state_d0 = grp_KeccakP1600_Permute_s_fu_258_state_d0.read();
    } else {
        instance_state_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void KeccakWidth1600_Spon::thread_instance_state_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        instance_state_we0 = ap_const_logic_1;
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                 esl_seteq<1,1,1>(icmp_ln297_reg_581.read(), ap_const_lv1_1)) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln303_reg_622.read())))) {
        instance_state_we0 = grp_KeccakP1600_Permute_s_fu_258_state_we0.read();
    } else {
        instance_state_we0 = ap_const_logic_0;
    }
}

void KeccakWidth1600_Spon::thread_j_18_fu_438_p2() {
    j_18_fu_438_p2 = (!j_0_reg_178.read().is_01() || !ap_const_lv64_FFFFFFFFFFFFFF58.is_01())? sc_lv<64>(): (sc_biguint<64>(j_0_reg_178.read()) + sc_bigint<64>(ap_const_lv64_FFFFFFFFFFFFFF58));
}

void KeccakWidth1600_Spon::thread_j_fu_349_p2() {
    j_fu_349_p2 = (!zext_ln394_13_reg_569.read().is_01() || !i_36_fu_56.read().is_01())? sc_lv<34>(): (sc_biguint<34>(zext_ln394_13_reg_569.read()) - sc_biguint<34>(i_36_fu_56.read()));
}

void KeccakWidth1600_Spon::thread_loop_53_fu_388_p2() {
    loop_53_fu_388_p2 = (!loop_0_i_reg_200.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(loop_0_i_reg_200.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void KeccakWidth1600_Spon::thread_loop_fu_498_p2() {
    loop_fu_498_p2 = (!loop_0_i1_reg_224.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(loop_0_i1_reg_224.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void KeccakWidth1600_Spon::thread_partialBlock_17_fu_467_p2() {
    partialBlock_17_fu_467_p2 = (!ap_const_lv32_A8.is_01() || !offset_assign_1_reg_211.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_A8) - sc_biguint<32>(offset_assign_1_reg_211.read()));
}

void KeccakWidth1600_Spon::thread_partialBlock_18_fu_473_p3() {
    partialBlock_18_fu_473_p3 = (!icmp_ln321_fu_461_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln321_fu_461_p2.read()[0].to_bool())? partialBlock_17_fu_467_p2.read(): partialBlock_reg_665.read());
}

void KeccakWidth1600_Spon::thread_partialBlock_fu_451_p2() {
    partialBlock_fu_451_p2 = (!zext_ln320_reg_608.read().is_01() || !trunc_ln320_fu_448_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(zext_ln320_reg_608.read()) - sc_biguint<32>(trunc_ln320_fu_448_p1.read()));
}

void KeccakWidth1600_Spon::thread_select_ln394_fu_276_p3() {
    select_ln394_fu_276_p3 = (!data_offset1.read()[0].is_01())? sc_lv<10>(): ((data_offset1.read()[0].to_bool())? ap_const_lv10_A6: ap_const_lv10_0);
}

void KeccakWidth1600_Spon::thread_sext_ln304_fu_354_p1() {
    sext_ln304_fu_354_p1 = esl_sext<64,34>(j_fu_349_p2.read());
}

void KeccakWidth1600_Spon::thread_sext_ln394_1_fu_444_p1() {
    sext_ln394_1_fu_444_p1 = esl_sext<64,10>(add_ln394_11_reg_650.read());
}

void KeccakWidth1600_Spon::thread_sext_ln394_fu_547_p1() {
    sext_ln394_fu_547_p1 = esl_sext<64,10>(add_ln394_10_reg_700.read());
}

void KeccakWidth1600_Spon::thread_sub_ln312_fu_371_p2() {
    sub_ln312_fu_371_p2 = (!zext_ln312_fu_364_p1.read().is_01() || !trunc_ln312_fu_367_p1.read().is_01())? sc_lv<34>(): (sc_biguint<34>(zext_ln312_fu_364_p1.read()) - sc_biguint<34>(trunc_ln312_fu_367_p1.read()));
}

void KeccakWidth1600_Spon::thread_trunc_ln302_4_fu_413_p1() {
    trunc_ln302_4_fu_413_p1 = curData_0_idx_reg_166.read().range(9-1, 0);
}

void KeccakWidth1600_Spon::thread_trunc_ln302_fu_519_p1() {
    trunc_ln302_fu_519_p1 = curData_0_idx_reg_166.read().range(9-1, 0);
}

void KeccakWidth1600_Spon::thread_trunc_ln303_fu_334_p1() {
    trunc_ln303_fu_334_p1 = i_36_fu_56.read().range(30-1, 0);
}

void KeccakWidth1600_Spon::thread_trunc_ln304_fu_403_p1() {
    trunc_ln304_fu_403_p1 = curData_1_rec_reg_188.read().range(9-1, 0);
}

void KeccakWidth1600_Spon::thread_trunc_ln312_fu_367_p1() {
    trunc_ln312_fu_367_p1 = j_0_reg_178.read().range(34-1, 0);
}

void KeccakWidth1600_Spon::thread_trunc_ln320_fu_448_p1() {
    trunc_ln320_fu_448_p1 = i_36_load_reg_613.read().range(32-1, 0);
}

void KeccakWidth1600_Spon::thread_trunc_ln394_fu_515_p1() {
    trunc_ln394_fu_515_p1 = loop_0_i1_reg_224.read().range(9-1, 0);
}

void KeccakWidth1600_Spon::thread_xor_ln149_1_fu_302_p2() {
    xor_ln149_1_fu_302_p2 = (instance_state_q0.read() ^ ap_const_lv8_80);
}

void KeccakWidth1600_Spon::thread_xor_ln149_fu_295_p2() {
    xor_ln149_fu_295_p2 = (instance_state_q0.read() ^ ap_const_lv8_1);
}

void KeccakWidth1600_Spon::thread_zext_ln149_fu_290_p1() {
    zext_ln149_fu_290_p1 = esl_zext<64,32>(instance_byteIOIndex_read.read());
}

void KeccakWidth1600_Spon::thread_zext_ln303_fu_309_p1() {
    zext_ln303_fu_309_p1 = esl_zext<30,9>(dataByteLen_cast_reg_562.read());
}

void KeccakWidth1600_Spon::thread_zext_ln312_fu_364_p1() {
    zext_ln312_fu_364_p1 = esl_zext<34,9>(dataByteLen_cast_reg_562.read());
}

void KeccakWidth1600_Spon::thread_zext_ln320_fu_312_p1() {
    zext_ln320_fu_312_p1 = esl_zext<32,9>(dataByteLen_cast_reg_562.read());
}

void KeccakWidth1600_Spon::thread_zext_ln323_4_fu_484_p1() {
    zext_ln323_4_fu_484_p1 = esl_zext<34,32>(partialBlock_18_fu_473_p3.read());
}

void KeccakWidth1600_Spon::thread_zext_ln323_fu_480_p1() {
    zext_ln323_fu_480_p1 = esl_zext<64,32>(partialBlock_18_fu_473_p3.read());
}

void KeccakWidth1600_Spon::thread_zext_ln394_13_fu_272_p1() {
    zext_ln394_13_fu_272_p1 = esl_zext<34,9>(dataByteLen_cast_fu_268_p1.read());
}

void KeccakWidth1600_Spon::thread_zext_ln394_14_fu_529_p1() {
    zext_ln394_14_fu_529_p1 = esl_zext<10,9>(add_ln394_1_fu_523_p2.read());
}

void KeccakWidth1600_Spon::thread_zext_ln394_15_fu_399_p1() {
    zext_ln394_15_fu_399_p1 = esl_zext<9,8>(loop_0_i_reg_200.read());
}

void KeccakWidth1600_Spon::thread_zext_ln394_16_fu_423_p1() {
    zext_ln394_16_fu_423_p1 = esl_zext<10,9>(add_ln394_2_fu_417_p2.read());
}

void KeccakWidth1600_Spon::thread_zext_ln394_1_fu_394_p1() {
    zext_ln394_1_fu_394_p1 = esl_zext<64,8>(loop_0_i_reg_200.read());
}

void KeccakWidth1600_Spon::thread_zext_ln394_fu_510_p1() {
    zext_ln394_fu_510_p1 = esl_zext<64,32>(add_ln394_fu_504_p2.read());
}

void KeccakWidth1600_Spon::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(icmp_ln297_fu_284_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(icmp_ln297_fu_284_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_block_state6_on_subcall_done.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(icmp_ln302_fu_323_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln302_fu_323_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln303_fu_328_p2.read()) && esl_seteq<1,1,1>(icmp_ln303_1_fu_344_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln304_fu_358_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(grp_KeccakP1600_Permute_s_fu_258_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln393_1_fu_382_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 2048 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(ap_block_state12_on_subcall_done.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln393_fu_493_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_state15;
            }
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
            break;
    }
}

}

