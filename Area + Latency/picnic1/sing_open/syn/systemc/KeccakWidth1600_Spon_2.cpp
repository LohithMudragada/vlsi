// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "KeccakWidth1600_Spon_2.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic KeccakWidth1600_Spon_2::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic KeccakWidth1600_Spon_2::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<16> KeccakWidth1600_Spon_2::ap_ST_fsm_state1 = "1";
const sc_lv<16> KeccakWidth1600_Spon_2::ap_ST_fsm_state2 = "10";
const sc_lv<16> KeccakWidth1600_Spon_2::ap_ST_fsm_state3 = "100";
const sc_lv<16> KeccakWidth1600_Spon_2::ap_ST_fsm_state4 = "1000";
const sc_lv<16> KeccakWidth1600_Spon_2::ap_ST_fsm_state5 = "10000";
const sc_lv<16> KeccakWidth1600_Spon_2::ap_ST_fsm_state6 = "100000";
const sc_lv<16> KeccakWidth1600_Spon_2::ap_ST_fsm_state7 = "1000000";
const sc_lv<16> KeccakWidth1600_Spon_2::ap_ST_fsm_state8 = "10000000";
const sc_lv<16> KeccakWidth1600_Spon_2::ap_ST_fsm_state9 = "100000000";
const sc_lv<16> KeccakWidth1600_Spon_2::ap_ST_fsm_state10 = "1000000000";
const sc_lv<16> KeccakWidth1600_Spon_2::ap_ST_fsm_state11 = "10000000000";
const sc_lv<16> KeccakWidth1600_Spon_2::ap_ST_fsm_state12 = "100000000000";
const sc_lv<16> KeccakWidth1600_Spon_2::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<16> KeccakWidth1600_Spon_2::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<16> KeccakWidth1600_Spon_2::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<16> KeccakWidth1600_Spon_2::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<32> KeccakWidth1600_Spon_2::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> KeccakWidth1600_Spon_2::ap_const_lv1_1 = "1";
const sc_lv<32> KeccakWidth1600_Spon_2::ap_const_lv32_2 = "10";
const sc_lv<32> KeccakWidth1600_Spon_2::ap_const_lv32_5 = "101";
const bool KeccakWidth1600_Spon_2::ap_const_boolean_0 = false;
const sc_lv<32> KeccakWidth1600_Spon_2::ap_const_lv32_6 = "110";
const sc_lv<1> KeccakWidth1600_Spon_2::ap_const_lv1_0 = "0";
const sc_lv<32> KeccakWidth1600_Spon_2::ap_const_lv32_9 = "1001";
const sc_lv<32> KeccakWidth1600_Spon_2::ap_const_lv32_B = "1011";
const sc_lv<32> KeccakWidth1600_Spon_2::ap_const_lv32_C = "1100";
const sc_lv<32> KeccakWidth1600_Spon_2::ap_const_lv32_D = "1101";
const sc_lv<32> KeccakWidth1600_Spon_2::ap_const_lv32_F = "1111";
const sc_lv<64> KeccakWidth1600_Spon_2::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> KeccakWidth1600_Spon_2::ap_const_lv32_A = "1010";
const sc_lv<8> KeccakWidth1600_Spon_2::ap_const_lv8_0 = "00000000";
const sc_lv<32> KeccakWidth1600_Spon_2::ap_const_lv32_8 = "1000";
const sc_lv<32> KeccakWidth1600_Spon_2::ap_const_lv32_E = "1110";
const sc_lv<32> KeccakWidth1600_Spon_2::ap_const_lv32_A8 = "10101000";
const sc_lv<32> KeccakWidth1600_Spon_2::ap_const_lv32_7 = "111";
const sc_lv<32> KeccakWidth1600_Spon_2::ap_const_lv32_4 = "100";
const sc_lv<64> KeccakWidth1600_Spon_2::ap_const_lv64_A7 = "10100111";
const sc_lv<34> KeccakWidth1600_Spon_2::ap_const_lv34_0 = "0000000000000000000000000000000000";
const sc_lv<32> KeccakWidth1600_Spon_2::ap_const_lv32_1 = "1";
const sc_lv<32> KeccakWidth1600_Spon_2::ap_const_lv32_3 = "11";
const sc_lv<8> KeccakWidth1600_Spon_2::ap_const_lv8_1 = "1";
const sc_lv<8> KeccakWidth1600_Spon_2::ap_const_lv8_80 = "10000000";
const sc_lv<30> KeccakWidth1600_Spon_2::ap_const_lv30_A8 = "10101000";
const sc_lv<64> KeccakWidth1600_Spon_2::ap_const_lv64_A8 = "10101000";
const sc_lv<8> KeccakWidth1600_Spon_2::ap_const_lv8_A8 = "10101000";
const sc_lv<64> KeccakWidth1600_Spon_2::ap_const_lv64_FFFFFFFFFFFFFF58 = "1111111111111111111111111111111111111111111111111111111101011000";
const bool KeccakWidth1600_Spon_2::ap_const_boolean_1 = true;

KeccakWidth1600_Spon_2::KeccakWidth1600_Spon_2(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_KeccakP1600_Permute_s_fu_245 = new KeccakP1600_Permute_s("grp_KeccakP1600_Permute_s_fu_245");
    grp_KeccakP1600_Permute_s_fu_245->ap_clk(ap_clk);
    grp_KeccakP1600_Permute_s_fu_245->ap_rst(ap_rst);
    grp_KeccakP1600_Permute_s_fu_245->ap_start(grp_KeccakP1600_Permute_s_fu_245_ap_start);
    grp_KeccakP1600_Permute_s_fu_245->ap_done(grp_KeccakP1600_Permute_s_fu_245_ap_done);
    grp_KeccakP1600_Permute_s_fu_245->ap_idle(grp_KeccakP1600_Permute_s_fu_245_ap_idle);
    grp_KeccakP1600_Permute_s_fu_245->ap_ready(grp_KeccakP1600_Permute_s_fu_245_ap_ready);
    grp_KeccakP1600_Permute_s_fu_245->state_address0(grp_KeccakP1600_Permute_s_fu_245_state_address0);
    grp_KeccakP1600_Permute_s_fu_245->state_ce0(grp_KeccakP1600_Permute_s_fu_245_state_ce0);
    grp_KeccakP1600_Permute_s_fu_245->state_we0(grp_KeccakP1600_Permute_s_fu_245_state_we0);
    grp_KeccakP1600_Permute_s_fu_245->state_d0(grp_KeccakP1600_Permute_s_fu_245_state_d0);
    grp_KeccakP1600_Permute_s_fu_245->state_q0(instance_state_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln303_fu_317_p2);
    sensitive << ( trunc_ln303_fu_313_p1 );

    SC_METHOD(thread_add_ln310_fu_378_p2);
    sensitive << ( curData_1_rec_reg_174 );

    SC_METHOD(thread_add_ln321_fu_423_p2);
    sensitive << ( partialBlock_reg_612 );
    sensitive << ( offset_assign_3_reg_198 );

    SC_METHOD(thread_add_ln329_fu_509_p2);
    sensitive << ( curData_0_idx_reg_152 );
    sensitive << ( curData_1_rec_pn_reg_235 );

    SC_METHOD(thread_add_ln330_fu_486_p2);
    sensitive << ( partialBlock_9_reg_618 );
    sensitive << ( offset_assign_3_reg_198 );

    SC_METHOD(thread_add_ln394_4_fu_499_p2);
    sensitive << ( trunc_ln394_reg_647 );
    sensitive << ( trunc_ln302_fu_495_p1 );

    SC_METHOD(thread_add_ln394_5_fu_394_p2);
    sensitive << ( loop_0_i_reg_186 );
    sensitive << ( trunc_ln304_fu_390_p1 );

    SC_METHOD(thread_add_ln394_6_fu_404_p2);
    sensitive << ( add_ln394_5_fu_394_p2 );
    sensitive << ( trunc_ln302_2_fu_400_p1 );

    SC_METHOD(thread_add_ln394_fu_471_p2);
    sensitive << ( offset_assign_3_reg_198 );
    sensitive << ( loop_0_i3_reg_211 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state12_on_subcall_done);
    sensitive << ( grp_KeccakP1600_Permute_s_fu_245_ap_done );
    sensitive << ( icmp_ln303_reg_574 );

    SC_METHOD(thread_ap_block_state6_on_subcall_done);
    sensitive << ( icmp_ln297_reg_533 );
    sensitive << ( grp_KeccakP1600_Permute_s_fu_245_ap_done );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_ln302_fu_302_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_phi_mux_instance_byteIOIndex_phi_fu_133_p4);
    sensitive << ( icmp_ln297_reg_533 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( instance_byteIOIndex_reg_130 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_ln302_fu_302_p2 );

    SC_METHOD(thread_dataByteLen_cast1_ca_fu_259_p1);
    sensitive << ( dataByteLen_cast_fu_255_p1 );

    SC_METHOD(thread_dataByteLen_cast_fu_255_p1);
    sensitive << ( dataByteLen );

    SC_METHOD(thread_data_address0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( zext_ln394_5_fu_410_p1 );
    sensitive << ( zext_ln394_4_fu_504_p1 );

    SC_METHOD(thread_data_ce0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_data_d0);
    sensitive << ( instance_state_q0 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_data_we0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_grp_KeccakP1600_Permute_s_fu_245_ap_start);
    sensitive << ( grp_KeccakP1600_Permute_s_fu_245_ap_start_reg );

    SC_METHOD(thread_i_fu_455_p2);
    sensitive << ( i_29_load_reg_565 );
    sensitive << ( zext_ln323_2_fu_451_p1 );

    SC_METHOD(thread_icmp_ln297_fu_263_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( instance_squeezing_read );

    SC_METHOD(thread_icmp_ln302_fu_302_p2);
    sensitive << ( dataByteLen_cast1_ca_reg_527 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( i_29_fu_48 );

    SC_METHOD(thread_icmp_ln303_1_fu_323_p2);
    sensitive << ( zext_ln303_reg_555 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_ln303_fu_307_p2 );
    sensitive << ( icmp_ln302_fu_302_p2 );
    sensitive << ( add_ln303_fu_317_p2 );

    SC_METHOD(thread_icmp_ln303_fu_307_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_ln302_fu_302_p2 );
    sensitive << ( instance_byteIOIndex_1_reg_141 );

    SC_METHOD(thread_icmp_ln304_fu_337_p2);
    sensitive << ( j_0_reg_164 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_icmp_ln321_fu_428_p2);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( add_ln321_fu_423_p2 );

    SC_METHOD(thread_icmp_ln393_2_fu_361_p2);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( loop_0_i_reg_186 );

    SC_METHOD(thread_icmp_ln393_fu_460_p2);
    sensitive << ( partialBlock_9_reg_618 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( loop_0_i3_reg_211 );

    SC_METHOD(thread_instance_state_addr_7_reg_542);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_instance_state_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln297_reg_533 );
    sensitive << ( instance_state_addr_reg_537 );
    sensitive << ( instance_state_addr_7_reg_542 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln303_reg_574 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( grp_KeccakP1600_Permute_s_fu_245_state_address0 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( zext_ln149_fu_269_p1 );
    sensitive << ( zext_ln394_3_fu_373_p1 );
    sensitive << ( zext_ln394_fu_477_p1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_instance_state_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln297_reg_533 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln303_reg_574 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( grp_KeccakP1600_Permute_s_fu_245_state_ce0 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_instance_state_d0);
    sensitive << ( icmp_ln297_reg_533 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln303_reg_574 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( grp_KeccakP1600_Permute_s_fu_245_state_d0 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( xor_ln149_fu_274_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( xor_ln149_3_fu_281_p2 );

    SC_METHOD(thread_instance_state_we0);
    sensitive << ( icmp_ln297_reg_533 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln303_reg_574 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( grp_KeccakP1600_Permute_s_fu_245_state_we0 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_j_11_fu_384_p2);
    sensitive << ( j_0_reg_164 );

    SC_METHOD(thread_j_fu_328_p2);
    sensitive << ( dataByteLen_cast1_ca_reg_527 );
    sensitive << ( i_29_fu_48 );

    SC_METHOD(thread_loop_46_fu_367_p2);
    sensitive << ( loop_0_i_reg_186 );

    SC_METHOD(thread_loop_fu_465_p2);
    sensitive << ( loop_0_i3_reg_211 );

    SC_METHOD(thread_partialBlock_8_fu_434_p2);
    sensitive << ( offset_assign_3_reg_198 );

    SC_METHOD(thread_partialBlock_9_fu_440_p3);
    sensitive << ( partialBlock_reg_612 );
    sensitive << ( icmp_ln321_fu_428_p2 );
    sensitive << ( partialBlock_8_fu_434_p2 );

    SC_METHOD(thread_partialBlock_fu_418_p2);
    sensitive << ( zext_ln320_reg_560 );
    sensitive << ( trunc_ln320_fu_415_p1 );

    SC_METHOD(thread_sext_ln304_fu_333_p1);
    sensitive << ( j_fu_328_p2 );

    SC_METHOD(thread_sub_ln312_fu_350_p2);
    sensitive << ( zext_ln312_fu_343_p1 );
    sensitive << ( trunc_ln312_fu_346_p1 );

    SC_METHOD(thread_trunc_ln302_2_fu_400_p1);
    sensitive << ( curData_0_idx_reg_152 );

    SC_METHOD(thread_trunc_ln302_fu_495_p1);
    sensitive << ( curData_0_idx_reg_152 );

    SC_METHOD(thread_trunc_ln303_fu_313_p1);
    sensitive << ( i_29_fu_48 );

    SC_METHOD(thread_trunc_ln304_fu_390_p1);
    sensitive << ( curData_1_rec_reg_174 );

    SC_METHOD(thread_trunc_ln312_fu_346_p1);
    sensitive << ( j_0_reg_164 );

    SC_METHOD(thread_trunc_ln320_fu_415_p1);
    sensitive << ( i_29_load_reg_565 );

    SC_METHOD(thread_trunc_ln394_fu_482_p1);
    sensitive << ( loop_0_i3_reg_211 );

    SC_METHOD(thread_xor_ln149_3_fu_281_p2);
    sensitive << ( instance_state_q0 );

    SC_METHOD(thread_xor_ln149_fu_274_p2);
    sensitive << ( instance_state_q0 );

    SC_METHOD(thread_zext_ln149_fu_269_p1);
    sensitive << ( instance_byteIOIndex_read );

    SC_METHOD(thread_zext_ln303_fu_288_p1);
    sensitive << ( dataByteLen_cast_reg_520 );

    SC_METHOD(thread_zext_ln312_fu_343_p1);
    sensitive << ( dataByteLen_cast_reg_520 );

    SC_METHOD(thread_zext_ln320_fu_291_p1);
    sensitive << ( dataByteLen_cast_reg_520 );

    SC_METHOD(thread_zext_ln323_2_fu_451_p1);
    sensitive << ( partialBlock_9_fu_440_p3 );

    SC_METHOD(thread_zext_ln323_fu_447_p1);
    sensitive << ( partialBlock_9_fu_440_p3 );

    SC_METHOD(thread_zext_ln394_3_fu_373_p1);
    sensitive << ( loop_0_i_reg_186 );

    SC_METHOD(thread_zext_ln394_4_fu_504_p1);
    sensitive << ( add_ln394_4_fu_499_p2 );

    SC_METHOD(thread_zext_ln394_5_fu_410_p1);
    sensitive << ( add_ln394_6_fu_404_p2 );

    SC_METHOD(thread_zext_ln394_fu_477_p1);
    sensitive << ( add_ln394_fu_471_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln297_fu_263_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( grp_KeccakP1600_Permute_s_fu_245_ap_done );
    sensitive << ( ap_block_state6_on_subcall_done );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_ln303_fu_307_p2 );
    sensitive << ( icmp_ln302_fu_302_p2 );
    sensitive << ( icmp_ln303_1_fu_323_p2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_ln393_2_fu_361_p2 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_block_state12_on_subcall_done );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( icmp_ln393_fu_460_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln304_fu_337_p2 );

    ap_CS_fsm = "0000000000000001";
    grp_KeccakP1600_Permute_s_fu_245_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "KeccakWidth1600_Spon_2_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, instance_state_address0, "(port)instance_state_address0");
    sc_trace(mVcdFile, instance_state_ce0, "(port)instance_state_ce0");
    sc_trace(mVcdFile, instance_state_we0, "(port)instance_state_we0");
    sc_trace(mVcdFile, instance_state_d0, "(port)instance_state_d0");
    sc_trace(mVcdFile, instance_state_q0, "(port)instance_state_q0");
    sc_trace(mVcdFile, instance_byteIOIndex_read, "(port)instance_byteIOIndex_read");
    sc_trace(mVcdFile, instance_squeezing_read, "(port)instance_squeezing_read");
    sc_trace(mVcdFile, data_address0, "(port)data_address0");
    sc_trace(mVcdFile, data_ce0, "(port)data_ce0");
    sc_trace(mVcdFile, data_we0, "(port)data_we0");
    sc_trace(mVcdFile, data_d0, "(port)data_d0");
    sc_trace(mVcdFile, dataByteLen, "(port)dataByteLen");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, dataByteLen_cast_fu_255_p1, "dataByteLen_cast_fu_255_p1");
    sc_trace(mVcdFile, dataByteLen_cast_reg_520, "dataByteLen_cast_reg_520");
    sc_trace(mVcdFile, dataByteLen_cast1_ca_fu_259_p1, "dataByteLen_cast1_ca_fu_259_p1");
    sc_trace(mVcdFile, dataByteLen_cast1_ca_reg_527, "dataByteLen_cast1_ca_reg_527");
    sc_trace(mVcdFile, icmp_ln297_fu_263_p2, "icmp_ln297_fu_263_p2");
    sc_trace(mVcdFile, icmp_ln297_reg_533, "icmp_ln297_reg_533");
    sc_trace(mVcdFile, instance_state_addr_reg_537, "instance_state_addr_reg_537");
    sc_trace(mVcdFile, instance_state_addr_7_reg_542, "instance_state_addr_7_reg_542");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, zext_ln303_fu_288_p1, "zext_ln303_fu_288_p1");
    sc_trace(mVcdFile, zext_ln303_reg_555, "zext_ln303_reg_555");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, grp_KeccakP1600_Permute_s_fu_245_ap_ready, "grp_KeccakP1600_Permute_s_fu_245_ap_ready");
    sc_trace(mVcdFile, grp_KeccakP1600_Permute_s_fu_245_ap_done, "grp_KeccakP1600_Permute_s_fu_245_ap_done");
    sc_trace(mVcdFile, ap_block_state6_on_subcall_done, "ap_block_state6_on_subcall_done");
    sc_trace(mVcdFile, zext_ln320_fu_291_p1, "zext_ln320_fu_291_p1");
    sc_trace(mVcdFile, zext_ln320_reg_560, "zext_ln320_reg_560");
    sc_trace(mVcdFile, i_29_load_reg_565, "i_29_load_reg_565");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, icmp_ln303_fu_307_p2, "icmp_ln303_fu_307_p2");
    sc_trace(mVcdFile, icmp_ln303_reg_574, "icmp_ln303_reg_574");
    sc_trace(mVcdFile, icmp_ln302_fu_302_p2, "icmp_ln302_fu_302_p2");
    sc_trace(mVcdFile, sext_ln304_fu_333_p1, "sext_ln304_fu_333_p1");
    sc_trace(mVcdFile, icmp_ln303_1_fu_323_p2, "icmp_ln303_1_fu_323_p2");
    sc_trace(mVcdFile, loop_46_fu_367_p2, "loop_46_fu_367_p2");
    sc_trace(mVcdFile, loop_46_reg_592, "loop_46_reg_592");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, icmp_ln393_2_fu_361_p2, "icmp_ln393_2_fu_361_p2");
    sc_trace(mVcdFile, add_ln310_fu_378_p2, "add_ln310_fu_378_p2");
    sc_trace(mVcdFile, j_11_fu_384_p2, "j_11_fu_384_p2");
    sc_trace(mVcdFile, partialBlock_fu_418_p2, "partialBlock_fu_418_p2");
    sc_trace(mVcdFile, partialBlock_reg_612, "partialBlock_reg_612");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_block_state12_on_subcall_done, "ap_block_state12_on_subcall_done");
    sc_trace(mVcdFile, partialBlock_9_fu_440_p3, "partialBlock_9_fu_440_p3");
    sc_trace(mVcdFile, partialBlock_9_reg_618, "partialBlock_9_reg_618");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, zext_ln323_fu_447_p1, "zext_ln323_fu_447_p1");
    sc_trace(mVcdFile, zext_ln323_reg_624, "zext_ln323_reg_624");
    sc_trace(mVcdFile, i_fu_455_p2, "i_fu_455_p2");
    sc_trace(mVcdFile, i_reg_629, "i_reg_629");
    sc_trace(mVcdFile, loop_fu_465_p2, "loop_fu_465_p2");
    sc_trace(mVcdFile, loop_reg_637, "loop_reg_637");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, icmp_ln393_fu_460_p2, "icmp_ln393_fu_460_p2");
    sc_trace(mVcdFile, trunc_ln394_fu_482_p1, "trunc_ln394_fu_482_p1");
    sc_trace(mVcdFile, trunc_ln394_reg_647, "trunc_ln394_reg_647");
    sc_trace(mVcdFile, add_ln330_fu_486_p2, "add_ln330_fu_486_p2");
    sc_trace(mVcdFile, add_ln329_fu_509_p2, "add_ln329_fu_509_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, grp_KeccakP1600_Permute_s_fu_245_ap_start, "grp_KeccakP1600_Permute_s_fu_245_ap_start");
    sc_trace(mVcdFile, grp_KeccakP1600_Permute_s_fu_245_ap_idle, "grp_KeccakP1600_Permute_s_fu_245_ap_idle");
    sc_trace(mVcdFile, grp_KeccakP1600_Permute_s_fu_245_state_address0, "grp_KeccakP1600_Permute_s_fu_245_state_address0");
    sc_trace(mVcdFile, grp_KeccakP1600_Permute_s_fu_245_state_ce0, "grp_KeccakP1600_Permute_s_fu_245_state_ce0");
    sc_trace(mVcdFile, grp_KeccakP1600_Permute_s_fu_245_state_we0, "grp_KeccakP1600_Permute_s_fu_245_state_we0");
    sc_trace(mVcdFile, grp_KeccakP1600_Permute_s_fu_245_state_d0, "grp_KeccakP1600_Permute_s_fu_245_state_d0");
    sc_trace(mVcdFile, ap_phi_mux_instance_byteIOIndex_phi_fu_133_p4, "ap_phi_mux_instance_byteIOIndex_phi_fu_133_p4");
    sc_trace(mVcdFile, instance_byteIOIndex_reg_130, "instance_byteIOIndex_reg_130");
    sc_trace(mVcdFile, instance_byteIOIndex_1_reg_141, "instance_byteIOIndex_1_reg_141");
    sc_trace(mVcdFile, curData_0_idx_reg_152, "curData_0_idx_reg_152");
    sc_trace(mVcdFile, j_0_reg_164, "j_0_reg_164");
    sc_trace(mVcdFile, curData_1_rec_reg_174, "curData_1_rec_reg_174");
    sc_trace(mVcdFile, loop_0_i_reg_186, "loop_0_i_reg_186");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, offset_assign_3_reg_198, "offset_assign_3_reg_198");
    sc_trace(mVcdFile, loop_0_i3_reg_211, "loop_0_i3_reg_211");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, instance_byteIOIndex_3_reg_222, "instance_byteIOIndex_3_reg_222");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, icmp_ln304_fu_337_p2, "icmp_ln304_fu_337_p2");
    sc_trace(mVcdFile, curData_1_rec_pn_reg_235, "curData_1_rec_pn_reg_235");
    sc_trace(mVcdFile, grp_KeccakP1600_Permute_s_fu_245_ap_start_reg, "grp_KeccakP1600_Permute_s_fu_245_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, zext_ln149_fu_269_p1, "zext_ln149_fu_269_p1");
    sc_trace(mVcdFile, zext_ln394_3_fu_373_p1, "zext_ln394_3_fu_373_p1");
    sc_trace(mVcdFile, zext_ln394_5_fu_410_p1, "zext_ln394_5_fu_410_p1");
    sc_trace(mVcdFile, zext_ln394_fu_477_p1, "zext_ln394_fu_477_p1");
    sc_trace(mVcdFile, zext_ln394_4_fu_504_p1, "zext_ln394_4_fu_504_p1");
    sc_trace(mVcdFile, i_29_fu_48, "i_29_fu_48");
    sc_trace(mVcdFile, sub_ln312_fu_350_p2, "sub_ln312_fu_350_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, xor_ln149_fu_274_p2, "xor_ln149_fu_274_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, xor_ln149_3_fu_281_p2, "xor_ln149_3_fu_281_p2");
    sc_trace(mVcdFile, trunc_ln303_fu_313_p1, "trunc_ln303_fu_313_p1");
    sc_trace(mVcdFile, add_ln303_fu_317_p2, "add_ln303_fu_317_p2");
    sc_trace(mVcdFile, j_fu_328_p2, "j_fu_328_p2");
    sc_trace(mVcdFile, zext_ln312_fu_343_p1, "zext_ln312_fu_343_p1");
    sc_trace(mVcdFile, trunc_ln312_fu_346_p1, "trunc_ln312_fu_346_p1");
    sc_trace(mVcdFile, trunc_ln304_fu_390_p1, "trunc_ln304_fu_390_p1");
    sc_trace(mVcdFile, add_ln394_5_fu_394_p2, "add_ln394_5_fu_394_p2");
    sc_trace(mVcdFile, trunc_ln302_2_fu_400_p1, "trunc_ln302_2_fu_400_p1");
    sc_trace(mVcdFile, add_ln394_6_fu_404_p2, "add_ln394_6_fu_404_p2");
    sc_trace(mVcdFile, trunc_ln320_fu_415_p1, "trunc_ln320_fu_415_p1");
    sc_trace(mVcdFile, add_ln321_fu_423_p2, "add_ln321_fu_423_p2");
    sc_trace(mVcdFile, icmp_ln321_fu_428_p2, "icmp_ln321_fu_428_p2");
    sc_trace(mVcdFile, partialBlock_8_fu_434_p2, "partialBlock_8_fu_434_p2");
    sc_trace(mVcdFile, zext_ln323_2_fu_451_p1, "zext_ln323_2_fu_451_p1");
    sc_trace(mVcdFile, add_ln394_fu_471_p2, "add_ln394_fu_471_p2");
    sc_trace(mVcdFile, trunc_ln302_fu_495_p1, "trunc_ln302_fu_495_p1");
    sc_trace(mVcdFile, add_ln394_4_fu_499_p2, "add_ln394_4_fu_499_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

KeccakWidth1600_Spon_2::~KeccakWidth1600_Spon_2() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete grp_KeccakP1600_Permute_s_fu_245;
}

void KeccakWidth1600_Spon_2::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        curData_0_idx_reg_152 = add_ln329_fu_509_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(ap_block_state6_on_subcall_done.read(), ap_const_boolean_0))) {
        curData_0_idx_reg_152 = ap_const_lv64_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln304_fu_337_p2.read()))) {
        curData_1_rec_pn_reg_235 = curData_1_rec_reg_174.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln393_fu_460_p2.read()))) {
        curData_1_rec_pn_reg_235 = zext_ln323_reg_624.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln393_2_fu_361_p2.read()))) {
        curData_1_rec_reg_174 = add_ln310_fu_378_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln302_fu_302_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln303_fu_307_p2.read()) && 
                esl_seteq<1,1,1>(icmp_ln303_1_fu_323_p2.read(), ap_const_lv1_0))) {
        curData_1_rec_reg_174 = ap_const_lv64_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_KeccakP1600_Permute_s_fu_245_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
              esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln302_fu_302_p2.read()) && 
              esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln303_fu_307_p2.read()) && 
              esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln303_1_fu_323_p2.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
              esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln304_fu_337_p2.read())))) {
            grp_KeccakP1600_Permute_s_fu_245_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_KeccakP1600_Permute_s_fu_245_ap_ready.read())) {
            grp_KeccakP1600_Permute_s_fu_245_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln393_fu_460_p2.read()))) {
        i_29_fu_48 = i_reg_629.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln304_fu_337_p2.read()))) {
        i_29_fu_48 = sub_ln312_fu_350_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(ap_block_state6_on_subcall_done.read(), ap_const_boolean_0))) {
        i_29_fu_48 = ap_const_lv34_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        instance_byteIOIndex_1_reg_141 = instance_byteIOIndex_3_reg_222.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(ap_block_state6_on_subcall_done.read(), ap_const_boolean_0))) {
        instance_byteIOIndex_1_reg_141 = ap_phi_mux_instance_byteIOIndex_phi_fu_133_p4.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln304_fu_337_p2.read()))) {
        instance_byteIOIndex_3_reg_222 = ap_const_lv32_A8;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln393_fu_460_p2.read()))) {
        instance_byteIOIndex_3_reg_222 = add_ln330_fu_486_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(icmp_ln297_fu_263_p2.read(), ap_const_lv1_0))) {
        instance_byteIOIndex_reg_130 = instance_byteIOIndex_read.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(icmp_ln297_reg_533.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_block_state6_on_subcall_done.read(), ap_const_boolean_0))) {
        instance_byteIOIndex_reg_130 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln393_2_fu_361_p2.read()))) {
        j_0_reg_164 = j_11_fu_384_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln302_fu_302_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln303_fu_307_p2.read()) && 
                esl_seteq<1,1,1>(icmp_ln303_1_fu_323_p2.read(), ap_const_lv1_0))) {
        j_0_reg_164 = sext_ln304_fu_333_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        loop_0_i3_reg_211 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        loop_0_i3_reg_211 = loop_reg_637.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(grp_KeccakP1600_Permute_s_fu_245_ap_done.read(), ap_const_logic_1))) {
        loop_0_i_reg_186 = ap_const_lv8_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        loop_0_i_reg_186 = loop_46_reg_592.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln302_fu_302_p2.read()) && 
         esl_seteq<1,1,1>(icmp_ln303_fu_307_p2.read(), ap_const_lv1_0))) {
        offset_assign_3_reg_198 = instance_byteIOIndex_1_reg_141.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln303_reg_574.read()) && 
                esl_seteq<1,1,1>(ap_block_state12_on_subcall_done.read(), ap_const_boolean_0))) {
        offset_assign_3_reg_198 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        dataByteLen_cast1_ca_reg_527 = dataByteLen_cast1_ca_fu_259_p1.read();
        dataByteLen_cast_reg_520 = dataByteLen_cast_fu_255_p1.read();
        icmp_ln297_reg_533 = icmp_ln297_fu_263_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        i_29_load_reg_565 = i_29_fu_48.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        i_reg_629 = i_fu_455_p2.read();
        partialBlock_9_reg_618 = partialBlock_9_fu_440_p3.read();
        zext_ln323_reg_624 = zext_ln323_fu_447_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln302_fu_302_p2.read()))) {
        icmp_ln303_reg_574 = icmp_ln303_fu_307_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(icmp_ln297_fu_263_p2.read(), ap_const_lv1_1))) {
        instance_state_addr_reg_537 =  (sc_lv<8>) (zext_ln149_fu_269_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        loop_46_reg_592 = loop_46_fu_367_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        loop_reg_637 = loop_fu_465_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(ap_block_state12_on_subcall_done.read(), ap_const_boolean_0))) {
        partialBlock_reg_612 = partialBlock_fu_418_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln393_fu_460_p2.read()))) {
        trunc_ln394_reg_647 = trunc_ln394_fu_482_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_block_state6_on_subcall_done.read(), ap_const_boolean_0))) {
        zext_ln303_reg_555 = zext_ln303_fu_288_p1.read();
        zext_ln320_reg_560 = zext_ln320_fu_291_p1.read();
    }
}

void KeccakWidth1600_Spon_2::thread_add_ln303_fu_317_p2() {
    add_ln303_fu_317_p2 = (!ap_const_lv30_A8.is_01() || !trunc_ln303_fu_313_p1.read().is_01())? sc_lv<30>(): (sc_biguint<30>(ap_const_lv30_A8) + sc_biguint<30>(trunc_ln303_fu_313_p1.read()));
}

void KeccakWidth1600_Spon_2::thread_add_ln310_fu_378_p2() {
    add_ln310_fu_378_p2 = (!curData_1_rec_reg_174.read().is_01() || !ap_const_lv64_A8.is_01())? sc_lv<64>(): (sc_biguint<64>(curData_1_rec_reg_174.read()) + sc_biguint<64>(ap_const_lv64_A8));
}

void KeccakWidth1600_Spon_2::thread_add_ln321_fu_423_p2() {
    add_ln321_fu_423_p2 = (!offset_assign_3_reg_198.read().is_01() || !partialBlock_reg_612.read().is_01())? sc_lv<32>(): (sc_biguint<32>(offset_assign_3_reg_198.read()) + sc_biguint<32>(partialBlock_reg_612.read()));
}

void KeccakWidth1600_Spon_2::thread_add_ln329_fu_509_p2() {
    add_ln329_fu_509_p2 = (!curData_1_rec_pn_reg_235.read().is_01() || !curData_0_idx_reg_152.read().is_01())? sc_lv<64>(): (sc_biguint<64>(curData_1_rec_pn_reg_235.read()) + sc_biguint<64>(curData_0_idx_reg_152.read()));
}

void KeccakWidth1600_Spon_2::thread_add_ln330_fu_486_p2() {
    add_ln330_fu_486_p2 = (!offset_assign_3_reg_198.read().is_01() || !partialBlock_9_reg_618.read().is_01())? sc_lv<32>(): (sc_biguint<32>(offset_assign_3_reg_198.read()) + sc_biguint<32>(partialBlock_9_reg_618.read()));
}

void KeccakWidth1600_Spon_2::thread_add_ln394_4_fu_499_p2() {
    add_ln394_4_fu_499_p2 = (!trunc_ln302_fu_495_p1.read().is_01() || !trunc_ln394_reg_647.read().is_01())? sc_lv<8>(): (sc_biguint<8>(trunc_ln302_fu_495_p1.read()) + sc_biguint<8>(trunc_ln394_reg_647.read()));
}

void KeccakWidth1600_Spon_2::thread_add_ln394_5_fu_394_p2() {
    add_ln394_5_fu_394_p2 = (!trunc_ln304_fu_390_p1.read().is_01() || !loop_0_i_reg_186.read().is_01())? sc_lv<8>(): (sc_biguint<8>(trunc_ln304_fu_390_p1.read()) + sc_biguint<8>(loop_0_i_reg_186.read()));
}

void KeccakWidth1600_Spon_2::thread_add_ln394_6_fu_404_p2() {
    add_ln394_6_fu_404_p2 = (!add_ln394_5_fu_394_p2.read().is_01() || !trunc_ln302_2_fu_400_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(add_ln394_5_fu_394_p2.read()) + sc_biguint<8>(trunc_ln302_2_fu_400_p1.read()));
}

void KeccakWidth1600_Spon_2::thread_add_ln394_fu_471_p2() {
    add_ln394_fu_471_p2 = (!loop_0_i3_reg_211.read().is_01() || !offset_assign_3_reg_198.read().is_01())? sc_lv<32>(): (sc_biguint<32>(loop_0_i3_reg_211.read()) + sc_biguint<32>(offset_assign_3_reg_198.read()));
}

void KeccakWidth1600_Spon_2::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void KeccakWidth1600_Spon_2::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void KeccakWidth1600_Spon_2::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void KeccakWidth1600_Spon_2::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void KeccakWidth1600_Spon_2::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void KeccakWidth1600_Spon_2::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void KeccakWidth1600_Spon_2::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void KeccakWidth1600_Spon_2::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void KeccakWidth1600_Spon_2::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void KeccakWidth1600_Spon_2::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void KeccakWidth1600_Spon_2::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void KeccakWidth1600_Spon_2::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void KeccakWidth1600_Spon_2::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void KeccakWidth1600_Spon_2::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void KeccakWidth1600_Spon_2::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void KeccakWidth1600_Spon_2::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void KeccakWidth1600_Spon_2::thread_ap_block_state12_on_subcall_done() {
    ap_block_state12_on_subcall_done = (esl_seteq<1,1,1>(ap_const_logic_0, grp_KeccakP1600_Permute_s_fu_245_ap_done.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln303_reg_574.read()));
}

void KeccakWidth1600_Spon_2::thread_ap_block_state6_on_subcall_done() {
    ap_block_state6_on_subcall_done = (esl_seteq<1,1,1>(ap_const_logic_0, grp_KeccakP1600_Permute_s_fu_245_ap_done.read()) && esl_seteq<1,1,1>(icmp_ln297_reg_533.read(), ap_const_lv1_1));
}

void KeccakWidth1600_Spon_2::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
          esl_seteq<1,1,1>(icmp_ln302_fu_302_p2.read(), ap_const_lv1_0)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void KeccakWidth1600_Spon_2::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void KeccakWidth1600_Spon_2::thread_ap_phi_mux_instance_byteIOIndex_phi_fu_133_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(icmp_ln297_reg_533.read(), ap_const_lv1_1))) {
        ap_phi_mux_instance_byteIOIndex_phi_fu_133_p4 = ap_const_lv32_0;
    } else {
        ap_phi_mux_instance_byteIOIndex_phi_fu_133_p4 = instance_byteIOIndex_reg_130.read();
    }
}

void KeccakWidth1600_Spon_2::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(icmp_ln302_fu_302_p2.read(), ap_const_lv1_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void KeccakWidth1600_Spon_2::thread_dataByteLen_cast1_ca_fu_259_p1() {
    dataByteLen_cast1_ca_fu_259_p1 = esl_zext<34,9>(dataByteLen_cast_fu_255_p1.read());
}

void KeccakWidth1600_Spon_2::thread_dataByteLen_cast_fu_255_p1() {
    dataByteLen_cast_fu_255_p1 = esl_sext<9,8>(dataByteLen.read());
}

void KeccakWidth1600_Spon_2::thread_data_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        data_address0 =  (sc_lv<7>) (zext_ln394_4_fu_504_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        data_address0 =  (sc_lv<7>) (zext_ln394_5_fu_410_p1.read());
    } else {
        data_address0 = "XXXXXXX";
    }
}

void KeccakWidth1600_Spon_2::thread_data_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
        data_ce0 = ap_const_logic_1;
    } else {
        data_ce0 = ap_const_logic_0;
    }
}

void KeccakWidth1600_Spon_2::thread_data_d0() {
    data_d0 = instance_state_q0.read();
}

void KeccakWidth1600_Spon_2::thread_data_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
        data_we0 = ap_const_logic_1;
    } else {
        data_we0 = ap_const_logic_0;
    }
}

void KeccakWidth1600_Spon_2::thread_grp_KeccakP1600_Permute_s_fu_245_ap_start() {
    grp_KeccakP1600_Permute_s_fu_245_ap_start = grp_KeccakP1600_Permute_s_fu_245_ap_start_reg.read();
}

void KeccakWidth1600_Spon_2::thread_i_fu_455_p2() {
    i_fu_455_p2 = (!i_29_load_reg_565.read().is_01() || !zext_ln323_2_fu_451_p1.read().is_01())? sc_lv<34>(): (sc_biguint<34>(i_29_load_reg_565.read()) + sc_biguint<34>(zext_ln323_2_fu_451_p1.read()));
}

void KeccakWidth1600_Spon_2::thread_icmp_ln297_fu_263_p2() {
    icmp_ln297_fu_263_p2 = (!instance_squeezing_read.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): sc_lv<1>(instance_squeezing_read.read() == ap_const_lv32_0);
}

void KeccakWidth1600_Spon_2::thread_icmp_ln302_fu_302_p2() {
    icmp_ln302_fu_302_p2 = (!i_29_fu_48.read().is_01() || !dataByteLen_cast1_ca_reg_527.read().is_01())? sc_lv<1>(): (sc_biguint<34>(i_29_fu_48.read()) < sc_biguint<34>(dataByteLen_cast1_ca_reg_527.read()));
}

void KeccakWidth1600_Spon_2::thread_icmp_ln303_1_fu_323_p2() {
    icmp_ln303_1_fu_323_p2 = (!add_ln303_fu_317_p2.read().is_01() || !zext_ln303_reg_555.read().is_01())? sc_lv<1>(): (sc_biguint<30>(add_ln303_fu_317_p2.read()) > sc_biguint<30>(zext_ln303_reg_555.read()));
}

void KeccakWidth1600_Spon_2::thread_icmp_ln303_fu_307_p2() {
    icmp_ln303_fu_307_p2 = (!instance_byteIOIndex_1_reg_141.read().is_01() || !ap_const_lv32_A8.is_01())? sc_lv<1>(): sc_lv<1>(instance_byteIOIndex_1_reg_141.read() == ap_const_lv32_A8);
}

void KeccakWidth1600_Spon_2::thread_icmp_ln304_fu_337_p2() {
    icmp_ln304_fu_337_p2 = (!j_0_reg_164.read().is_01() || !ap_const_lv64_A8.is_01())? sc_lv<1>(): (sc_biguint<64>(j_0_reg_164.read()) < sc_biguint<64>(ap_const_lv64_A8));
}

void KeccakWidth1600_Spon_2::thread_icmp_ln321_fu_428_p2() {
    icmp_ln321_fu_428_p2 = (!add_ln321_fu_423_p2.read().is_01() || !ap_const_lv32_A8.is_01())? sc_lv<1>(): (sc_biguint<32>(add_ln321_fu_423_p2.read()) > sc_biguint<32>(ap_const_lv32_A8));
}

void KeccakWidth1600_Spon_2::thread_icmp_ln393_2_fu_361_p2() {
    icmp_ln393_2_fu_361_p2 = (!loop_0_i_reg_186.read().is_01() || !ap_const_lv8_A8.is_01())? sc_lv<1>(): sc_lv<1>(loop_0_i_reg_186.read() == ap_const_lv8_A8);
}

void KeccakWidth1600_Spon_2::thread_icmp_ln393_fu_460_p2() {
    icmp_ln393_fu_460_p2 = (!loop_0_i3_reg_211.read().is_01() || !partialBlock_9_reg_618.read().is_01())? sc_lv<1>(): sc_lv<1>(loop_0_i3_reg_211.read() == partialBlock_9_reg_618.read());
}

void KeccakWidth1600_Spon_2::thread_instance_state_addr_7_reg_542() {
    instance_state_addr_7_reg_542 =  (sc_lv<8>) (ap_const_lv64_A7);
}

void KeccakWidth1600_Spon_2::thread_instance_state_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        instance_state_address0 =  (sc_lv<8>) (zext_ln394_fu_477_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        instance_state_address0 =  (sc_lv<8>) (zext_ln394_3_fu_373_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        instance_state_address0 = instance_state_addr_7_reg_542.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        instance_state_address0 =  (sc_lv<8>) (ap_const_lv64_A7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        instance_state_address0 = instance_state_addr_reg_537.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        instance_state_address0 =  (sc_lv<8>) (zext_ln149_fu_269_p1.read());
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                 esl_seteq<1,1,1>(icmp_ln297_reg_533.read(), ap_const_lv1_1)) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln303_reg_574.read())))) {
        instance_state_address0 = grp_KeccakP1600_Permute_s_fu_245_state_address0.read();
    } else {
        instance_state_address0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void KeccakWidth1600_Spon_2::thread_instance_state_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        instance_state_ce0 = ap_const_logic_1;
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                 esl_seteq<1,1,1>(icmp_ln297_reg_533.read(), ap_const_lv1_1)) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln303_reg_574.read())))) {
        instance_state_ce0 = grp_KeccakP1600_Permute_s_fu_245_state_ce0.read();
    } else {
        instance_state_ce0 = ap_const_logic_0;
    }
}

void KeccakWidth1600_Spon_2::thread_instance_state_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        instance_state_d0 = xor_ln149_3_fu_281_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        instance_state_d0 = xor_ln149_fu_274_p2.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                 esl_seteq<1,1,1>(icmp_ln297_reg_533.read(), ap_const_lv1_1)) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln303_reg_574.read())))) {
        instance_state_d0 = grp_KeccakP1600_Permute_s_fu_245_state_d0.read();
    } else {
        instance_state_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void KeccakWidth1600_Spon_2::thread_instance_state_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        instance_state_we0 = ap_const_logic_1;
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                 esl_seteq<1,1,1>(icmp_ln297_reg_533.read(), ap_const_lv1_1)) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln303_reg_574.read())))) {
        instance_state_we0 = grp_KeccakP1600_Permute_s_fu_245_state_we0.read();
    } else {
        instance_state_we0 = ap_const_logic_0;
    }
}

void KeccakWidth1600_Spon_2::thread_j_11_fu_384_p2() {
    j_11_fu_384_p2 = (!j_0_reg_164.read().is_01() || !ap_const_lv64_FFFFFFFFFFFFFF58.is_01())? sc_lv<64>(): (sc_biguint<64>(j_0_reg_164.read()) + sc_bigint<64>(ap_const_lv64_FFFFFFFFFFFFFF58));
}

void KeccakWidth1600_Spon_2::thread_j_fu_328_p2() {
    j_fu_328_p2 = (!dataByteLen_cast1_ca_reg_527.read().is_01() || !i_29_fu_48.read().is_01())? sc_lv<34>(): (sc_biguint<34>(dataByteLen_cast1_ca_reg_527.read()) - sc_biguint<34>(i_29_fu_48.read()));
}

void KeccakWidth1600_Spon_2::thread_loop_46_fu_367_p2() {
    loop_46_fu_367_p2 = (!loop_0_i_reg_186.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(loop_0_i_reg_186.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void KeccakWidth1600_Spon_2::thread_loop_fu_465_p2() {
    loop_fu_465_p2 = (!loop_0_i3_reg_211.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(loop_0_i3_reg_211.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void KeccakWidth1600_Spon_2::thread_partialBlock_8_fu_434_p2() {
    partialBlock_8_fu_434_p2 = (!ap_const_lv32_A8.is_01() || !offset_assign_3_reg_198.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_A8) - sc_biguint<32>(offset_assign_3_reg_198.read()));
}

void KeccakWidth1600_Spon_2::thread_partialBlock_9_fu_440_p3() {
    partialBlock_9_fu_440_p3 = (!icmp_ln321_fu_428_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln321_fu_428_p2.read()[0].to_bool())? partialBlock_8_fu_434_p2.read(): partialBlock_reg_612.read());
}

void KeccakWidth1600_Spon_2::thread_partialBlock_fu_418_p2() {
    partialBlock_fu_418_p2 = (!zext_ln320_reg_560.read().is_01() || !trunc_ln320_fu_415_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(zext_ln320_reg_560.read()) - sc_biguint<32>(trunc_ln320_fu_415_p1.read()));
}

void KeccakWidth1600_Spon_2::thread_sext_ln304_fu_333_p1() {
    sext_ln304_fu_333_p1 = esl_sext<64,34>(j_fu_328_p2.read());
}

void KeccakWidth1600_Spon_2::thread_sub_ln312_fu_350_p2() {
    sub_ln312_fu_350_p2 = (!zext_ln312_fu_343_p1.read().is_01() || !trunc_ln312_fu_346_p1.read().is_01())? sc_lv<34>(): (sc_biguint<34>(zext_ln312_fu_343_p1.read()) - sc_biguint<34>(trunc_ln312_fu_346_p1.read()));
}

void KeccakWidth1600_Spon_2::thread_trunc_ln302_2_fu_400_p1() {
    trunc_ln302_2_fu_400_p1 = curData_0_idx_reg_152.read().range(8-1, 0);
}

void KeccakWidth1600_Spon_2::thread_trunc_ln302_fu_495_p1() {
    trunc_ln302_fu_495_p1 = curData_0_idx_reg_152.read().range(8-1, 0);
}

void KeccakWidth1600_Spon_2::thread_trunc_ln303_fu_313_p1() {
    trunc_ln303_fu_313_p1 = i_29_fu_48.read().range(30-1, 0);
}

void KeccakWidth1600_Spon_2::thread_trunc_ln304_fu_390_p1() {
    trunc_ln304_fu_390_p1 = curData_1_rec_reg_174.read().range(8-1, 0);
}

void KeccakWidth1600_Spon_2::thread_trunc_ln312_fu_346_p1() {
    trunc_ln312_fu_346_p1 = j_0_reg_164.read().range(34-1, 0);
}

void KeccakWidth1600_Spon_2::thread_trunc_ln320_fu_415_p1() {
    trunc_ln320_fu_415_p1 = i_29_load_reg_565.read().range(32-1, 0);
}

void KeccakWidth1600_Spon_2::thread_trunc_ln394_fu_482_p1() {
    trunc_ln394_fu_482_p1 = loop_0_i3_reg_211.read().range(8-1, 0);
}

void KeccakWidth1600_Spon_2::thread_xor_ln149_3_fu_281_p2() {
    xor_ln149_3_fu_281_p2 = (instance_state_q0.read() ^ ap_const_lv8_80);
}

void KeccakWidth1600_Spon_2::thread_xor_ln149_fu_274_p2() {
    xor_ln149_fu_274_p2 = (instance_state_q0.read() ^ ap_const_lv8_1);
}

void KeccakWidth1600_Spon_2::thread_zext_ln149_fu_269_p1() {
    zext_ln149_fu_269_p1 = esl_zext<64,32>(instance_byteIOIndex_read.read());
}

void KeccakWidth1600_Spon_2::thread_zext_ln303_fu_288_p1() {
    zext_ln303_fu_288_p1 = esl_zext<30,9>(dataByteLen_cast_reg_520.read());
}

void KeccakWidth1600_Spon_2::thread_zext_ln312_fu_343_p1() {
    zext_ln312_fu_343_p1 = esl_zext<34,9>(dataByteLen_cast_reg_520.read());
}

void KeccakWidth1600_Spon_2::thread_zext_ln320_fu_291_p1() {
    zext_ln320_fu_291_p1 = esl_zext<32,9>(dataByteLen_cast_reg_520.read());
}

void KeccakWidth1600_Spon_2::thread_zext_ln323_2_fu_451_p1() {
    zext_ln323_2_fu_451_p1 = esl_zext<34,32>(partialBlock_9_fu_440_p3.read());
}

void KeccakWidth1600_Spon_2::thread_zext_ln323_fu_447_p1() {
    zext_ln323_fu_447_p1 = esl_zext<64,32>(partialBlock_9_fu_440_p3.read());
}

void KeccakWidth1600_Spon_2::thread_zext_ln394_3_fu_373_p1() {
    zext_ln394_3_fu_373_p1 = esl_zext<64,8>(loop_0_i_reg_186.read());
}

void KeccakWidth1600_Spon_2::thread_zext_ln394_4_fu_504_p1() {
    zext_ln394_4_fu_504_p1 = esl_zext<64,8>(add_ln394_4_fu_499_p2.read());
}

void KeccakWidth1600_Spon_2::thread_zext_ln394_5_fu_410_p1() {
    zext_ln394_5_fu_410_p1 = esl_zext<64,8>(add_ln394_6_fu_404_p2.read());
}

void KeccakWidth1600_Spon_2::thread_zext_ln394_fu_477_p1() {
    zext_ln394_fu_477_p1 = esl_zext<64,32>(add_ln394_fu_471_p2.read());
}

void KeccakWidth1600_Spon_2::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(icmp_ln297_fu_263_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(icmp_ln297_fu_263_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_block_state6_on_subcall_done.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(icmp_ln302_fu_302_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln302_fu_302_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln303_fu_307_p2.read()) && esl_seteq<1,1,1>(icmp_ln303_1_fu_323_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln304_fu_337_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(grp_KeccakP1600_Permute_s_fu_245_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln393_2_fu_361_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 2048 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(ap_block_state12_on_subcall_done.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln393_fu_460_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_state15;
            }
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
            break;
    }
}

}

