

================================================================
== Vivado HLS Report for 'mpc_AND_verify_2'
================================================================
* Date:           Fri May  8 13:15:29 2020

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        picnic1
* Solution:       sing_open
* Product family: artix7
* Target device:  xc7a200t-fbg676-2


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 9.122 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        2|        2| 20.000 ns | 20.000 ns |    2|    2|   none  |
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 1
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 4.52>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%rand_0_pos_read_1 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %rand_0_pos_read)"   --->   Operation 4 'read' 'rand_0_pos_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%lshr_ln = call i29 @_ssdm_op_PartSelect.i29.i32.i32.i32(i32 %rand_0_pos_read_1, i32 3, i32 31)" [picnic_impl.c:54->picnic_impl.c:750]   --->   Operation 5 'partselect' 'lshr_ln' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%zext_ln54 = zext i29 %lshr_ln to i64" [picnic_impl.c:54->picnic_impl.c:750]   --->   Operation 6 'zext' 'zext_ln54' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%zext_ln54_cast1 = call i16 @_ssdm_op_PartSelect.i16.i32.i32.i32(i32 %rand_0_pos_read_1, i32 3, i32 18)" [picnic_impl.c:54->picnic_impl.c:750]   --->   Operation 7 'partselect' 'zext_ln54_cast1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%zext_ln54_cast = call i10 @_ssdm_op_PartSelect.i10.i32.i32.i32(i32 %rand_0_pos_read_1, i32 3, i32 12)" [picnic_impl.c:54->picnic_impl.c:750]   --->   Operation 8 'partselect' 'zext_ln54_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%rand_0_tape_addr = getelementptr [498 x i8]* %rand_0_tape, i64 0, i64 %zext_ln54" [picnic_impl.c:54->picnic_impl.c:750]   --->   Operation 9 'getelementptr' 'rand_0_tape_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (1.74ns)   --->   "%add_ln54 = add i10 166, %zext_ln54_cast" [picnic_impl.c:54->picnic_impl.c:750]   --->   Operation 10 'add' 'add_ln54' <Predicate = true> <Delay = 1.74> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.18> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%sext_ln54 = sext i10 %add_ln54 to i64" [picnic_impl.c:54->picnic_impl.c:750]   --->   Operation 11 'sext' 'sext_ln54' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%rand_0_tape_addr_1 = getelementptr [498 x i8]* %rand_0_tape, i64 0, i64 %sext_ln54" [picnic_impl.c:54->picnic_impl.c:750]   --->   Operation 12 'getelementptr' 'rand_0_tape_addr_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [2/2] (2.77ns)   --->   "%rand_0_tape_load = load i8* %rand_0_tape_addr, align 1" [picnic_impl.c:54->picnic_impl.c:750]   --->   Operation 13 'load' 'rand_0_tape_load' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16425> <RAM>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%trunc_ln54 = trunc i32 %rand_0_pos_read_1 to i3" [picnic_impl.c:54->picnic_impl.c:750]   --->   Operation 14 'trunc' 'trunc_ln54' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [2/2] (2.77ns)   --->   "%rand_0_tape_load_1 = load i8* %rand_0_tape_addr_1, align 1" [picnic_impl.c:54->picnic_impl.c:750]   --->   Operation 15 'load' 'rand_0_tape_load_1' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16425> <RAM>

State 2 <SV = 1> <Delay = 9.12>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%view2_communicatedBi_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %view2_communicatedBits_offset)"   --->   Operation 16 'read' 'view2_communicatedBi_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%view1_communicatedBi_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %view1_communicatedBits_offset)"   --->   Operation 17 'read' 'view1_communicatedBi_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%in2_1_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %in2_1_read)"   --->   Operation 18 'read' 'in2_1_read_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%in2_0_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %in2_0_read)"   --->   Operation 19 'read' 'in2_0_read_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%in1_1_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %in1_1_read)"   --->   Operation 20 'read' 'in1_1_read_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%in1_0_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %in1_0_read)"   --->   Operation 21 'read' 'in1_0_read_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%zext_ln54_20 = zext i8 %view2_communicatedBi_1 to i16" [picnic_impl.c:54->picnic_impl.c:754]   --->   Operation 22 'zext' 'zext_ln54_20' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (2.82ns) (grouped into DSP with root node add_ln54_1)   --->   "%mul_ln54 = mul i16 75, %zext_ln54_20" [picnic_impl.c:54->picnic_impl.c:754]   --->   Operation 23 'mul' 'mul_ln54' <Predicate = true> <Delay = 2.82> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.35> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%zext_ln66 = zext i8 %view1_communicatedBi_1 to i16" [picnic_impl.c:66->picnic_impl.c:753]   --->   Operation 24 'zext' 'zext_ln66' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (2.82ns) (grouped into DSP with root node add_ln66)   --->   "%mul_ln66 = mul i16 75, %zext_ln66" [picnic_impl.c:66->picnic_impl.c:753]   --->   Operation 25 'mul' 'mul_ln66' <Predicate = true> <Delay = 2.82> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.35> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 26 [1/1] (3.53ns) (root node of the DSP)   --->   "%add_ln66 = add i16 %mul_ln66, %zext_ln54_cast1" [picnic_impl.c:66->picnic_impl.c:753]   --->   Operation 26 'add' 'add_ln66' <Predicate = true> <Delay = 3.53> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.35> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%sext_ln66 = sext i16 %add_ln66 to i64" [picnic_impl.c:66->picnic_impl.c:753]   --->   Operation 27 'sext' 'sext_ln66' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%view1_communicatedBi_2 = getelementptr [16425 x i8]* %view1_communicatedBi, i64 0, i64 %sext_ln66" [picnic_impl.c:66->picnic_impl.c:753]   --->   Operation 28 'getelementptr' 'view1_communicatedBi_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (3.53ns) (root node of the DSP)   --->   "%add_ln54_1 = add i16 %mul_ln54, %zext_ln54_cast1" [picnic_impl.c:54->picnic_impl.c:754]   --->   Operation 29 'add' 'add_ln54_1' <Predicate = true> <Delay = 3.53> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.35> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%sext_ln54_1 = sext i16 %add_ln54_1 to i64" [picnic_impl.c:54->picnic_impl.c:754]   --->   Operation 30 'sext' 'sext_ln54_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%view2_communicatedBi_2 = getelementptr [16425 x i8]* %view2_communicatedBi, i64 0, i64 %sext_ln54_1" [picnic_impl.c:54->picnic_impl.c:754]   --->   Operation 31 'getelementptr' 'view2_communicatedBi_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 32 [1/2] (2.77ns)   --->   "%rand_0_tape_load = load i8* %rand_0_tape_addr, align 1" [picnic_impl.c:54->picnic_impl.c:750]   --->   Operation 32 'load' 'rand_0_tape_load' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16425> <RAM>
ST_2 : Operation 33 [1/1] (0.80ns)   --->   "%xor_ln54 = xor i3 %trunc_ln54, -1" [picnic_impl.c:54->picnic_impl.c:750]   --->   Operation 33 'xor' 'xor_ln54' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%zext_ln54_11 = zext i3 %xor_ln54 to i8" [picnic_impl.c:54->picnic_impl.c:750]   --->   Operation 34 'zext' 'zext_ln54_11' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns) (grouped into LUT with out node xor_ln752_2)   --->   "%lshr_ln54 = lshr i8 %rand_0_tape_load, %zext_ln54_11" [picnic_impl.c:54->picnic_impl.c:750]   --->   Operation 35 'lshr' 'lshr_ln54' <Predicate = true> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (0.00ns) (grouped into LUT with out node xor_ln752_2)   --->   "%trunc_ln52 = trunc i8 %lshr_ln54 to i1" [picnic_impl.c:52->picnic_impl.c:750]   --->   Operation 36 'trunc' 'trunc_ln52' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 37 [1/2] (2.77ns)   --->   "%rand_0_tape_load_1 = load i8* %rand_0_tape_addr_1, align 1" [picnic_impl.c:54->picnic_impl.c:750]   --->   Operation 37 'load' 'rand_0_tape_load_1' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16425> <RAM>
ST_2 : Operation 38 [1/1] (0.00ns) (grouped into LUT with out node xor_ln752_2)   --->   "%lshr_ln54_6 = lshr i8 %rand_0_tape_load_1, %zext_ln54_11" [picnic_impl.c:54->picnic_impl.c:750]   --->   Operation 38 'lshr' 'lshr_ln54_6' <Predicate = true> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.00ns) (grouped into LUT with out node xor_ln752_2)   --->   "%trunc_ln752 = trunc i8 %lshr_ln54_6 to i1" [picnic_impl.c:752]   --->   Operation 39 'trunc' 'trunc_ln752' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.00ns) (grouped into LUT with out node xor_ln752_3)   --->   "%and_ln752 = and i8 %in2_1_read_1, %in1_0_read_1" [picnic_impl.c:752]   --->   Operation 40 'and' 'and_ln752' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.00ns) (grouped into LUT with out node xor_ln752_3)   --->   "%and_ln752_1 = and i8 %in2_0_read_1, %in1_1_read_1" [picnic_impl.c:752]   --->   Operation 41 'and' 'and_ln752_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.00ns) (grouped into LUT with out node xor_ln752_2)   --->   "%and_ln752_2 = and i8 %in2_0_read_1, %in1_0_read_1" [picnic_impl.c:752]   --->   Operation 42 'and' 'and_ln752_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.00ns) (grouped into LUT with out node xor_ln752_2)   --->   "%xor_ln752 = xor i1 %trunc_ln752, %trunc_ln52" [picnic_impl.c:752]   --->   Operation 43 'xor' 'xor_ln752' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (0.00ns) (grouped into LUT with out node xor_ln752_2)   --->   "%zext_ln752 = zext i1 %xor_ln752 to i8" [picnic_impl.c:752]   --->   Operation 44 'zext' 'zext_ln752' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (0.00ns) (grouped into LUT with out node xor_ln752_3)   --->   "%xor_ln752_1 = xor i8 %and_ln752, %and_ln752_1" [picnic_impl.c:752]   --->   Operation 45 'xor' 'xor_ln752_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (2.42ns) (out node of the LUT)   --->   "%xor_ln752_2 = xor i8 %zext_ln752, %and_ln752_2" [picnic_impl.c:752]   --->   Operation 46 'xor' 'xor_ln752_2' <Predicate = true> <Delay = 2.42> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (0.80ns) (out node of the LUT)   --->   "%xor_ln752_3 = xor i8 %xor_ln752_2, %xor_ln752_1" [picnic_impl.c:752]   --->   Operation 47 'xor' 'xor_ln752_3' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 48 [2/2] (2.77ns)   --->   "%view1_communicatedBi_3 = load i8* %view1_communicatedBi_2, align 1" [picnic_impl.c:66->picnic_impl.c:753]   --->   Operation 48 'load' 'view1_communicatedBi_3' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16425> <RAM>
ST_2 : Operation 49 [2/2] (2.77ns)   --->   "%view2_communicatedBi_3 = load i8* %view2_communicatedBi_2, align 1" [picnic_impl.c:54->picnic_impl.c:754]   --->   Operation 49 'load' 'view2_communicatedBi_3' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16425> <RAM>

State 3 <SV = 2> <Delay = 7.96>
ST_3 : Operation 50 [1/2] (2.77ns)   --->   "%view1_communicatedBi_3 = load i8* %view1_communicatedBi_2, align 1" [picnic_impl.c:66->picnic_impl.c:753]   --->   Operation 50 'load' 'view1_communicatedBi_3' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16425> <RAM>
ST_3 : Operation 51 [1/1] (0.00ns) (grouped into LUT with out node or_ln66)   --->   "%shl_ln66 = shl i8 1, %zext_ln54_11" [picnic_impl.c:66->picnic_impl.c:753]   --->   Operation 51 'shl' 'shl_ln66' <Predicate = true> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 52 [1/1] (0.00ns) (grouped into LUT with out node or_ln66)   --->   "%xor_ln66 = xor i8 %shl_ln66, -1" [picnic_impl.c:66->picnic_impl.c:753]   --->   Operation 52 'xor' 'xor_ln66' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 53 [1/1] (0.00ns) (grouped into LUT with out node or_ln66)   --->   "%shl_ln66_9 = shl i8 %xor_ln752_3, %zext_ln54_11" [picnic_impl.c:66->picnic_impl.c:753]   --->   Operation 53 'shl' 'shl_ln66_9' <Predicate = true> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 54 [1/1] (0.00ns) (grouped into LUT with out node or_ln66)   --->   "%and_ln66 = and i8 %view1_communicatedBi_3, %xor_ln66" [picnic_impl.c:66->picnic_impl.c:753]   --->   Operation 54 'and' 'and_ln66' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 55 [1/1] (2.42ns) (out node of the LUT)   --->   "%or_ln66 = or i8 %and_ln66, %shl_ln66_9" [picnic_impl.c:66->picnic_impl.c:753]   --->   Operation 55 'or' 'or_ln66' <Predicate = true> <Delay = 2.42> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 56 [1/1] (2.77ns)   --->   "store i8 %or_ln66, i8* %view1_communicatedBi_2, align 1" [picnic_impl.c:66->picnic_impl.c:753]   --->   Operation 56 'store' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16425> <RAM>
ST_3 : Operation 57 [1/2] (2.77ns)   --->   "%view2_communicatedBi_3 = load i8* %view2_communicatedBi_2, align 1" [picnic_impl.c:54->picnic_impl.c:754]   --->   Operation 57 'load' 'view2_communicatedBi_3' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16425> <RAM>
ST_3 : Operation 58 [1/1] (2.42ns)   --->   "%lshr_ln54_7 = lshr i8 %view2_communicatedBi_3, %zext_ln54_11" [picnic_impl.c:54->picnic_impl.c:754]   --->   Operation 58 'lshr' 'lshr_ln54_7' <Predicate = true> <Delay = 2.42> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 59 [1/1] (0.00ns)   --->   "%trunc_ln54_7 = trunc i8 %lshr_ln54_7 to i1" [picnic_impl.c:54->picnic_impl.c:754]   --->   Operation 59 'trunc' 'trunc_ln54_7' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 60 [1/1] (0.00ns)   --->   "%zext_ln54_12 = zext i1 %trunc_ln54_7 to i8" [picnic_impl.c:54->picnic_impl.c:754]   --->   Operation 60 'zext' 'zext_ln54_12' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 61 [1/1] (2.18ns)   --->   "%add_ln756 = add i32 1, %rand_0_pos_read_1" [picnic_impl.c:756]   --->   Operation 61 'add' 'add_ln756' <Predicate = true> <Delay = 2.18> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.18> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 62 [1/1] (0.00ns)   --->   "%mrv = insertvalue { i32, i8, i8 } undef, i32 %add_ln756, 0" [picnic_impl.c:757]   --->   Operation 62 'insertvalue' 'mrv' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 63 [1/1] (0.00ns)   --->   "%mrv_1 = insertvalue { i32, i8, i8 } %mrv, i8 %xor_ln752_3, 1" [picnic_impl.c:757]   --->   Operation 63 'insertvalue' 'mrv_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 64 [1/1] (0.00ns)   --->   "%mrv_2 = insertvalue { i32, i8, i8 } %mrv_1, i8 %zext_ln54_12, 2" [picnic_impl.c:757]   --->   Operation 64 'insertvalue' 'mrv_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 65 [1/1] (0.00ns)   --->   "ret { i32, i8, i8 } %mrv_2" [picnic_impl.c:757]   --->   Operation 65 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 4.52ns
The critical path consists of the following:
	wire read on port 'rand_0_pos_read' [13]  (0 ns)
	'add' operation ('add_ln54', picnic_impl.c:54->picnic_impl.c:750) [27]  (1.75 ns)
	'getelementptr' operation ('rand_0_tape_addr_1', picnic_impl.c:54->picnic_impl.c:750) [29]  (0 ns)
	'load' operation ('rand_0_tape_load_1', picnic_impl.c:54->picnic_impl.c:750) on array 'rand_0_tape' [42]  (2.77 ns)

 <State 2>: 9.12ns
The critical path consists of the following:
	wire read on port 'view2_communicatedBits_offset' [11]  (0 ns)
	'mul' operation of DSP[33] ('mul_ln54', picnic_impl.c:54->picnic_impl.c:754) [19]  (2.82 ns)
	'add' operation of DSP[33] ('add_ln54_1', picnic_impl.c:54->picnic_impl.c:754) [33]  (3.53 ns)
	'getelementptr' operation ('view2_communicatedBi_2', picnic_impl.c:54->picnic_impl.c:754) [35]  (0 ns)
	'load' operation ('view2_communicatedBi_3', picnic_impl.c:54->picnic_impl.c:754) on array 'view2_communicatedBi' [60]  (2.77 ns)

 <State 3>: 7.97ns
The critical path consists of the following:
	'load' operation ('view1_communicatedBi_3', picnic_impl.c:66->picnic_impl.c:753) on array 'view1_communicatedBi' [53]  (2.77 ns)
	'and' operation ('and_ln66', picnic_impl.c:66->picnic_impl.c:753) [57]  (0 ns)
	'or' operation ('or_ln66', picnic_impl.c:66->picnic_impl.c:753) [58]  (2.42 ns)
	'store' operation ('store_ln66', picnic_impl.c:66->picnic_impl.c:753) of variable 'or_ln66', picnic_impl.c:66->picnic_impl.c:753 on array 'view1_communicatedBi' [59]  (2.77 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
